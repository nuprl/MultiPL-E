language: php
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ strlen($prefix)) === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ strlen($prefix)) == 0) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ strlen($prefix)) == 0) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0 |>\n<code>\n\
    $array1 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array2 = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$array3 = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$array4 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array5 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array6 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array7 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array8\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array9 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array10 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array11 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array12 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array13 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array14 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array15\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array16 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array17 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array18 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array19 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array20 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array21 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array22\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array23 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array24 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array25 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array26 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array27 = array(\"abc\", \"bcd\", \"cde\"\
    , \"\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsol826cl.php on line 16

    '
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I'm going\
    \ to try this out and see how it goes. I appreciate your help.\n<|/ c |>\n<| c\
    \ |>\nI added a more complete example to my answer.\n<|/ c |>\n<| c |>\nThanks\
    \ again for your help. I appreciate it.\n<|/ c |>\n<| a tags=arrays,php,multidimensional-array\
    \ |>\n<code>\n$array1 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array2\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array3 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array4 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array5 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array6 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array7 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array8 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array9\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array10 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array11 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array12 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array13 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array14 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array15 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array16\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array17 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array18 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array19 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array20 = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array21 = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array22 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array23\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array24 = array\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpsi_l22vw.php on line 12

    '
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. Your code works fine,\
    \ but I wanted to avoid using any loops. I wanted to use only array functions\
    \ like array_filter and array_map.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ uses `array_filter` and `array_map`\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code works fine, but I wanted to avoid using any loops. I wanted to use\
    \ only array functions like array_filter and array_map.\n<|/ c |>\n<| c |>\n:\
    \ I added a version that uses `array_filter` and `array_map`\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result =\
    \ array_filter($array, function($var){\n    return strpos($var, \"a\") === 0;\n\
    });\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$result = array_filter($array, function($var){\n\
    \    return strpos($var, \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$result = array_filter($array, function($var){\n    return strpos($var,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array,\
    \ function($var){\n    return strpos($var, \"a\") === 0;\n});\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$result = array_filter($array, function($var){\n    return strpos($var,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdqnb9_20.php on line 16

    '
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn2_q5egy.php:18\n\
    Stack trace:\n#0 /tmp/tmpn2_q5egy.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpn2_q5egy.php\
    \ on line 18\n"
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($string, $prefix,\
    \ strlen($prefix)) == 0) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ 0) === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n\
    }\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwirkf8hm.php:22\n\
    Stack trace:\n#0 /tmp/tmpwirkf8hm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpwirkf8hm.php\
    \ on line 22\n"
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php,multidimensional-array\
    \ |>\n<code>\n$array = array();\n$array[] = array('name' => 'John', 'age' => 25);\n\
    $array[] = array('name' => 'Jane', 'age' => 30);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('name' => 'Jack', 'age' => 25);\n$array[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n$array[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack', 'age' => 25);\n\
    $array[] = array('name' => 'Jill', 'age' => 25);\n$array[] = array('name' => 'Jack',\
    \ 'age' => 25);\n$array[] = array('name' => 'Jill', 'age' => 25);\n$array[] =\
    \ array('\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmphdh8bymp.php on line 12

    '
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like this solution, however\
    \ I believe it can be improved. For example `filter_by_prefix(array(\"abc\", \"\
    bcd\", \"cde\", \"array\"), \"a\")` returns `array(\"abc\", \"array\")` instead\
    \ of `array(\"abc\", \"bcd\", \"cde\")`. Also it can be improved by using `strpos($string,\
    \ $prefix) === 0` instead of `strpos($string, $prefix) === 1`. And it can be improved\
    \ by using `strlen($prefix) === 1` instead of `strlen($prefix) > 0`.\n<|/ c |>\n\
    <| c |>\nI agree with your comments. I added some improvements. Thanks for your\
    \ feedback.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjf3susev.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4nxl2w7.php:19\n\
    Stack trace:\n#0 /tmp/tmpm4nxl2w7.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpm4nxl2w7.php\
    \ on line 19\n"
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result =\
    \ array_filter($array, function($value) use ($prefix) {\n    return strpos($value,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($prefix) {\n    return\
    \ strpos($value, $prefix) === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix =\
    \ \"a\";\n$result = array_filter($array, function($value) use ($prefix) {\n  \
    \  return strpos($value, $prefix) === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n\
    $prefix = \"a\";\n$result = array_filter($array, function($value) use ($prefix)\
    \ {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$prefix = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($prefix) {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\"\
    , \"cde\", \"array\");\n$prefix = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($prefix) {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"\
    cde\", \"array\");\n$prefix = \"a\";\n$result = array_filter($array, function($value)\
    \ use ($prefix) {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmplkzjaqtf.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nI like your\
    \ solution, however it only works if there is only one level of depth in the array.\
    \ In the example I gave it works, but it won't work if you have an array with\
    \ multiple levels of depth.\n<|/ c |>\n<| c |>\n: I added a solution that works\
    \ for multiple levels of depth.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n$array =\
    \ array(\n    'a' => array(\n        'b' => array(\n            'c' => 'd'\n \
    \       )\n    )\n);\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpr4hxzn1a.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n<?php\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=arrays,php dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n\
    <?php\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\"\
    ;\n$filtered = array_filter($strings, function($string) use ($prefix) {\n    return\
    \ strpos($string, $prefix) === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix\
    \ = \"a\";\n$filtered = array_filter($strings, function($string) use ($prefix)\
    \ {\n    return strpos($string, $prefix) === 0;\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$prefix = \"a\";\n$filtered = array_filter($strings, function($string)\
    \ use ($prefix) {\n    return strpos($string, $prefix) === 0;\n});\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmps_yehqs5.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| c |>\nThanks for your\
    \ answer. Your code works perfectly for me. Just one question: What is the difference\
    \ between `strpos` and `strstr` ?\n<|/ c |>\n<| c |>\n`strpos` searches for the\
    \ first occurrence of a substring in a string. `strstr` searches for the first\
    \ occurrence of a string in a string. `strpos` will return the position of the\
    \ first occurrence while `strstr` will return the whole string that contains the\
    \ substring.\n<|/ c |>\n<| c |>\nThanks for your explanation. Now I understand\
    \ it :)\n<|/ c |>\n<| a tags=php,arrays,string |>\n<code>\n$string = \"Hello World\"\
    ;\n$array = array(\"Hello\", \"World\", \"HelloWorld\");\n\n$result = array_filter($array,\
    \ function($string) use ($string) {\n    return strpos($string, $string) !== false;\n\
    });\n\nprint_r($result);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis works perfectly\
    \ for me. Thanks for your answer\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple, elegant, and works with PHP 5.3+.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Simple, elegant, and works with PHP 5.3+.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Simple, elegant, and works with PHP\
    \ 5.3+.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple, elegant,\
    \ and works with PHP 5.3+.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$string = \"Hello\
    \ World\";\n$array = array(\"Hello\", \"World\", \"HelloWorld\");\n\n$result =\
    \ array_filter($array, function($string) use ($string) {\n    return strpos($string,\
    \ $string) !== false;\n});\n\nprint_r($result);\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| c |>\nThis should be the accepted answer. Simple, elegant, and works\
    \ with PHP 5.3+.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple,\
    \ elegant, and works with PHP 5.3+.\n<|/ c |>\n\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwhww403u.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($s) use ($prefix) {\n    return strpos($s, $prefix) === 0;\n  });\n\
    }\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3zno21z.php:19\n\
    Stack trace:\n#0 /tmp/tmpx3zno21z.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpx3zno21z.php\
    \ on line 19\n"
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThanks for\
    \ your answer. I've tried this and it's working fine. I've also tried the other\
    \ solutions posted here and they work too, but this one is much simpler and easier\
    \ to understand.\n<|/ c |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n\
    $array = array(\n    array(\"a\",\"b\",\"c\"),\n    array(\"d\",\"e\",\"f\"),\n\
    \    array(\"g\",\"h\",\"i\")\n);\n\n$result = array();\nforeach($array as $subArray){\n\
    \    foreach($subArray as $value){\n        if(!in_array($value, $result)){\n\
    \            $result[] = $value;\n        }\n    }\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n$array = array(\n\
    \    array(\"a\",\"b\",\"c\"),\n    array(\"d\",\"e\",\"f\"),\n    array(\"g\"\
    ,\"h\",\"i\")\n);\n\n$result = array();\nforeach($array as $subArray){\n    foreach($subArray\
    \ as $value){\n        if(!in_array($value, $result)){\n            $result[]\
    \ = $value;\n        }\n    }\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array(\n    array(\"a\",\"b\",\"c\"),\n    array(\"d\"\
    ,\"e\",\"f\"),\n    array(\"g\",\"h\",\"i\")\n);\n\n$result = array();\nforeach($array\
    \ as $subArray){\n    foreach($subArray as $value){\n        if(!in_array($value,\
    \ $result)){\n            $result[] = $value;\n        }\n    }\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a |>\n<code>\n$array = array(\n    array(\"a\",\"b\",\"\
    c\"),\n    array(\"d\",\"e\",\"f\"),\n    array(\"g\",\"h\",\"i\")\n);\n\n$result\
    \ = array();\nforeach($array as $subArray){\n    foreach($subArray as $value){\n\
    \        if(!in_array($value, $result)){\n            $result[] = $value;\n\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpznm43wiv.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution, it's very\
    \ clean and easy to understand.\n<|/ c |>\n<| c |>\nI like this solution, it's\
    \ very clean and easy to understand.\n<|/ c |>\n<| c |>\nI like this solution,\
    \ it's very clean and easy to understand.\n<|/ c |>\n<| c |>\nI like this solution,\
    \ it's very clean and easy to understand.\n<|/ c |>\n<| c |>\nI like this solution,\
    \ it's very clean and easy to understand.\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array('abc', 'def', 'ghi');\n$filtered = array_filter($array,\
    \ function($value) {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/\
    \ a dscore=5 |>\n<| c |>\nThis doesn't work if you have a string that starts with\
    \ \"a\" but doesn't end with \"a\".\n<|/ c |>\n<| c |>\nThis doesn't work if you\
    \ have a string that starts with \"a\" but doesn't end with \"a\".\n<|/ c |>\n\
    <| c |>\nThis doesn't work if you have a string that starts with \"a\" but doesn't\
    \ end with \"a\".\n<|/ c |>\n<| c |>\nThis doesn't work if you have a string that\
    \ starts with \"a\" but doesn't end with \"a\".\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work if you have a string that starts with \"a\" but doesn't end with \"a\"\
    .\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array('abc', 'def', 'ghi');\n\
    $filtered = array_filter($array, function($value) {\n    return strpos($value,\
    \ 'a') === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work\
    \ if you have a string that starts with \"a\" but doesn't end with \"a\".\n<|/\
    \ c |>\n<| c |>\nThis doesn't work if you have a string that starts with \"a\"\
    \ but doesn't end with \"a\".\n<|/ c |>\n<| c |>\nThis doesn't work if you have\
    \ a string that starts with \"a\" but doesn't end with \"a\".\n<|/ c |>\n<| c\
    \ |>\nThis doesn't work if you \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpu4w32p5w.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($s) use ($prefix) {\n    return strpos($s, $prefix) === 0;\n  });\n\
    }\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nThanks so\
    \ much for this. I used this and it worked perfectly. Thanks again!\n<|/ c |>\n\
    <| a |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array\
    \ = array_filter($array, function($var) {\n    return strpos($var, 'a') === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays,multidimensional-array dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array =\
    \ array_filter($array, function($var) {\n    return strpos($var, 'a') === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array =\
    \ array_filter($array, function($var) {\n    return strpos($var, 'a') === 0;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$array = array_filter($array, function($var)\
    \ {\n    return strpos($var, 'a') === 0;\n});\n</code>\n<|/ a tags=php,arrays,multidimensional-array\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array = array_filter($array, function($var) {\n    return strpos($var, 'a')\
    \ === 0;\n});\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a\
    \ tags=php,arrays,multidimensional-array |>\n<code>\n$array = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array = array_filter($array, function($var) {\n\
    \    return strpos($var, 'a') === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array =\
    \ array_filter($array, function($var) {\n    return strpos($var, 'a') === 0;\n\
    });\n</code>\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpo1hd78dd.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a |>\n<| c |>\nThanks for your answer. Your code works fine for me.\
    \ However I still don't understand why my code doesn't work. Could you please\
    \ explain why my code doesn't work?\n<|/ c |>\n<| c |>\nYour code doesn't work\
    \ because you were trying to use `$strings` as a function parameter, but you were\
    \ not passing it a parameter. `$strings` was a global variable, and you were trying\
    \ to use it as a function parameter. `$strings` was a global variable, and you\
    \ were trying to use it as a function parameter. `$strings` was a global variable,\
    \ and you were trying to use it as a function parameter. `$strings` was a global\
    \ variable, and you were trying to use it as a function parameter. `$strings`\
    \ was a global variable, and you were trying to use it as a function parameter.\
    \ `$strings` was a global variable, and you were trying to use it as a function\
    \ parameter. `$strings` was a global variable, and you were trying to use it as\
    \ a function parameter. `$strings` was a global variable, and you were trying\
    \ to use it as a function parameter. `$strings` was a global variable, and you\
    \ were trying to use it as a function parameter. `$strings` was a global variable,\
    \ and you were trying to use it as a function parameter. `$strings` was a global\
    \ variable, and you were trying to use it as a function parameter. `$strings`\
    \ was a global variable, and you were trying to use it as a function parameter.\
    \ `$strings` was a global variable, and you were trying to use it as a function\
    \ parameter. `$strings` was a global variable, and you were trying to use it as\
    \ a function parameter. `$strings` was a global variable, and you were trying\
    \ to use it as a function parameter. `$strings` was a global variable, and you\
    \ were trying to use it as a function parameter. `$strings` was a global variable,\
    \ and you were trying to use it as a function parameter. `$strings` was a global\
    \ variable, and you were trying to use it as a function parameter. `$strings`\
    \ was a global variable, and you were trying to use it as a function parameter.\
    \ `$strings` was a global variable, and you were trying to use it as a function\
    \ parameter. `$strings` was a global variable, and you were trying to use it as\
    \ a function parameter. `$strings` was a global variable, and you were trying\
    \ to use it as a function parameter. `$strings` was a global variable, and you\
    \ were trying to use it as a function parameter. `$strings` was a global variable,\
    \ and you were trying to use it as a function parameter. `$strings` was a global\
    \ \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp8oqjurdy.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix =\
    \ \"a\";\n$result = array_filter($array, function($item) use ($prefix) {\n   \
    \ return strpos($item, $prefix) === 0;\n});\n</code>\n<|/ a dscore=5 |>\n<| c\
    \ |>\nThis should be the accepted answer. Works perfectly and it's very easy to\
    \ understand.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly\
    \ and it's very easy to understand.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's very easy to understand.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly and it's very easy to understand.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's\
    \ very easy to understand.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($prefix) {\n    return strpos($item, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays,string |>\n<| c |>\nThis should be the accepted\
    \ answer. Works perfectly and it's very easy to understand.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix =\
    \ \"a\";\n$result = array_filter($array, function($item) use ($prefix) {\n   \
    \ return strpos($item, $prefix) === 0;\n});\n</code>\n<|/ a dscore=5 |>\n<| a\
    \ dscore=5 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n\
    $prefix = \"a\";\n$result = array_filter($array, function($item) use ($prefix)\
    \ {\n    return strpos($item, $prefix) === 0;\n});\n</code>\n<|/ a tags=php,arrays,string\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly and it's very\
    \ \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjca_xwz5.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have a string\
    \ like `'abc def'` as it will only match `'abc'`.\n<|/ c |>\n<| c |>\nI added\
    \ a solution that should work for this case\n<|/ c |>\n<| c |>\nThis doesn't work\
    \ if you have a string like `'abc def'` as it will only match `'abc'`.\n<|/ c\
    \ |>\n<| c |>\nI added a solution that should work for this case\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work if you have a string like `'abc def'` as it will only\
    \ match `'abc'`.\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7nv3rg_i.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so much for this. I really appreciate\
    \ it. I will give it a try and let you know how it goes.\n<|/ c |>\n<| c |>\n\
    I added a more complete example to my answer.\n<|/ c |>\n<| c |>\nThanks so much\
    \ for this. I really appreciate it. I will give it a try and let you know how\
    \ it goes.\n<|/ c |>\n<| c |>\nI added a more complete example to my answer.\n\
    <|/ c |>\n<| c |>\nThanks so much for this. I really appreciate it. I will give\
    \ it a try and let you know how it goes.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    <?php\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\"\
    ;\n$filtered = array_filter($strings, function($string) use ($prefix) {\n    return\
    \ strpos($string, $prefix) === 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<|\
    \ c |>\nThanks so much for this. I really appreciate it. I will give it a try\
    \ and let you know how it goes.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$strings\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered\
    \ = array_filter($strings, function($string) use ($prefix) {\n    return strpos($string,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThanks so\
    \ much for this. I really appreciate it. I will give it a try and let you know\
    \ how it goes.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThanks so much for this. I really\
    \ appreciate it. I will give it a \nfunction candidate(...$args) {\n    return\
    \ filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpbf63_fka.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution. Very clean\
    \ and easy to understand.\n<|/ c |>\n<| c |>\nI like this solution as well. Very\
    \ clean and easy to understand.\n<|/ c |>\n<| c |>\nI like this solution as well.\
    \ Very clean and easy to understand.\n<|/ c |>\n<| c |>\nI like this solution\
    \ as well. Very clean and easy to understand.\n<|/ c |>\n<| c |>\nI like this\
    \ solution as well. Very clean and easy to understand.\n<|/ c |>\n<| a dscore=5\
    \ tags=php,arrays,string |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$prefix = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($prefix) {\n    return strpos($item, $prefix) === 0;\n});\n</code>\n<|/\
    \ a |>\n<| c |>\nThis should be the accepted answer. Simple, clean and easy to\
    \ understand.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Simple,\
    \ clean and easy to understand.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple, clean and easy to understand.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Simple, clean and easy to understand.\n<|/ c |>\n<|\
    \ c |>\nThis should be the accepted answer. Simple, clean and easy to understand.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\",\
    \ \"array\");\n$prefix = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($prefix) {\n    return strpos($item, $prefix) === 0;\n});\n</code>\n<|/\
    \ a tags=php,arrays,string |>\n<| c |>\nThis should be the accepted answer. Simple,\
    \ clean and easy to understand.\n<|/ c |>\n<| c |>\nThis should be the accepted\
    \ answer. Simple, clean and easy to understand.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix =\
    \ \"a\";\n$result = array_filter($\nfunction candidate(...$args) {\n    return\
    \ filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpr9f1c85j.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n$strings = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$strings\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered\
    \ = array_filter($strings, function($string) use ($prefix) {\n    return strpos($string,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n\
    <code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"\
    a\";\n$filtered = array_filter($strings, function($string) use ($prefix) {\n \
    \   return strpos($string, $prefix) === 0;\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=php,arrays |>\n<code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$prefix = \"a\";\n$filtered = array_filter($strings, function($string)\
    \ use ($prefix) {\n    return strpos($string, $prefix) === 0;\n});\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$strings = array(\"abc\",\
    \ \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwcrrnqoj.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=0\
    \ |>\n<code>\n$array = array();\n$array['abc'] = '123';\n$array['def'] = '456';\n\
    $array['ghi'] = '789';\n\n$array['abc'] = '123';\n$array['def'] = '456';\n$array['ghi']\
    \ = '789';\n\n$array['abc'] = '123';\n$array['def'] = '456';\n$array['ghi'] =\
    \ '789';\n\n$array['abc'] = '123';\n$array['def'] = '456';\n$array['ghi'] = '789';\n\
    \n$array['abc'] = '123';\n$array['def'] = '456';\n$array['ghi'] = '789';\n\n$array['abc']\
    \ = '123';\n$array['def'] = '456';\n$array['ghi'] = '789';\n\n$array['abc'] =\
    \ '123';\n$array['def'] = '456';\n$array['ghi'] = '789';\n\n$array['abc'] = '123';\n\
    $array['def'] = '456';\n$array['ghi'] = '789';\n\n$array['abc'] = '123';\n$array['def']\
    \ = '456';\n$array['ghi'] = '789';\n\n$array['abc'] = '123';\n$array['def'] =\
    \ '456';\n$array['ghi'] = '789';\n\n$array['abc'] = '123';\n$array['def'] = '456';\n\
    $array['ghi'] = '789';\n\n$array['abc'] = '123';\n$array['def'] = '456';\n$array['ghi']\
    \ = '789';\n\n$array['abc'] = '123';\n$array['def'] = '456';\n$array['ghi'] =\
    \ '789';\n\n$array['abc'] = '123';\n$array['def'] = '456';\n$array['ghi'] = '789';\n\
    \n$array['abc'] = '123';\n$array['def'] = '456';\n$array['ghi'] = '789';\n\n$array['abc']\
    \ = '123';\n$array['def'] = '456';\n$array['ghi'] = '789';\n\n$array['abc'] =\
    \ '123';\n$array['def'] = '456';\n$array['ghi'] = '789';\n\n$array['abc'] = '123';\n\
    $array['\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpeh8mozcc.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution, but I wonder if there\
    \ is a way to make it more efficient by not looping through the array twice. Maybe\
    \ by using a different kind of loop?\n<|/ c |>\n<| c |>\nI like your solution,\
    \ but I wonder if there is a way to make it more efficient by not looping through\
    \ the array twice. Maybe by using a different kind of loop?\n<|/ c |>\n<| c |>\n\
    : Yes, there is. See my answer.\n<|/ c |>\n<| c |>\n: Yes, there is. See my answer.\n\
    <|/ c |>\n<| c |>\n: Yes, there is. See my answer.\n<|/ c |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$array = array('abc', 'def', 'ghi', 'jkl');\n$string = 'abc';\n\
    $filtered = array_filter($array, function($item) use ($string) {\n    return strpos($item,\
    \ $string) === 0;\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Much more concise and readable than the other answers.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Much more concise and readable\
    \ than the other answers.\n<|/ c |>\n<| c |>\nThis should be the accepted answer.\
    \ Much more concise and readable than the other answers.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Much more concise and readable than the other\
    \ answers.\n<|/ c |>\n<| c |>\nThis should be the accepted answer. Much more concise\
    \ and readable than the other answers.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array\
    \ = array('abc', 'def', 'ghi', 'jkl');\n$string = 'abc';\n$filtered = array_filter($array,\
    \ function($item) use ($string) {\n    return strpos($item, $string) === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays,string |>\n<| c |>\nThis should be the accepted\
    \ answer. Much more concise and readable than the other answers.\n<|/ \nfunction\
    \ candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzjc8wk7p.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution, because it doesn't\
    \ require any additional libraries. However, it does require that you know what\
    \ your prefix is. If you don't know what your prefix is, you might want to consider\
    \ using [array_filter](http://php.net/manual/en/function.array-filter.php) instead,\
    \ which allows you to specify a callback function which can do whatever you want.\n\
    <|/ c |>\n<| c |>\nI like this solution, because it doesn't require any additional\
    \ libraries. However, it does require that you know what your prefix is. If you\
    \ don't know what your prefix is, you might want to consider using [array_filter](http://php.net/manual/en/function.array-filter.php)\
    \ instead, which allows you to specify a callback function which can do whatever\
    \ you want.\n<|/ c |>\n<| c |>\nI like this solution, because it doesn't require\
    \ any additional libraries. However, it does require that you know what your prefix\
    \ is. If you don't know what your prefix is, you might want to consider using\
    \ [array_filter](http://php.net/manual/en/function.array-filter.php) instead,\
    \ which allows you to specify a callback function which can do whatever you want.\n\
    <|/ c |>\n<| c |>\nI like this solution, because it doesn't require any additional\
    \ libraries. However, it does require that you know what your prefix is. If you\
    \ don't know what your prefix is, you might want to consider using [array_filter](http://php.net/manual/en/function.array-filter.php)\
    \ instead, which allows you to specify a callback function which can do whatever\
    \ you want.\n<|/ c |>\n<| c |>\nI like this solution, because it doesn't require\
    \ any additional libraries. However, it does require that you know what your prefix\
    \ is. If you don't know what your prefix is, you might want to consider using\
    \ [array_filter](http://php.net/manual/en/function.array-filter.php) instead,\
    \ which allows you to specify a callback function which can do whatever you want.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpckzhbi6x.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a |>\n<| c |>\nThanks for your answer. I'm looking for a solution\
    \ that doesn't require a custom function.\n<|/ c |>\n<| c |>\n: I added a solution\
    \ without custom function.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array = array_filter($array,\
    \ function($value) {\n    return strpos($value, \"a\") === 0;\n});\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"abc\", \"bcd\",\
    \ \"cde\", \"array\");\n$array = array_filter($array, function($value) {\n   \
    \ return strpos($value, \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array = array_filter($array, function($value) {\n    return strpos($value,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a |>\n<code>\n$array\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array = array_filter($array,\
    \ function($value) {\n    return strpos($value, \"a\") === 0;\n});\n</code>\n\
    <|/ a dscore=1 tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$array = array_filter($array, function($value)\
    \ {\n    return strpos($value, \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$array = array_filter($array, function($value) {\n    return strpos($value,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array = array_filter($array,\
    \ function($value) {\n    return strpos($value, \"a\") === 0;\n});\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 \nfunction candidate(...$args) {\n    return\
    \ filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ \"john\") !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzv1d9jg6.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ strlen($prefix)) == 0) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array1 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"\
    ,\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\"\
    ,\"v\",\"w\",\"x\",\"y\",\"z\");\n$array2 = array(\"a\",\"b\",\"c\",\"d\",\"e\"\
    ,\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\"\
    ,\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array3 = array(\"a\",\"b\"\
    ,\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\"\
    ,\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array4\
    \ = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"\
    l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"\
    y\",\"z\");\n$array5 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"\
    v\",\"w\",\"x\",\"y\",\"z\");\n$array6 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"\
    f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"\
    s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array7 = array(\"a\",\"b\",\"\
    c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"\
    p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array8 = array(\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"\
    n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp508vtfj0.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ strlen($prefix)) == 0) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Unfortunately\
    \ this doesn't work as expected. `filter_by_prefix` returns an empty array when\
    \ given an empty array. `filter_by_prefix(array(), \"a\")` returns an empty array\
    \ as well.\n<|/ c |>\n<| c |>\nYes, I forgot to add `strpos` check. Now it should\
    \ work.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args) {\n\
    \    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\"\
    , \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpdnw7gf85.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\nprint_r($filtered);\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php\
    \ |>\n<code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix\
    \ = \"a\";\n$filtered = array_filter($strings, function($string) use ($prefix)\
    \ {\n    return strpos($string, $prefix) === 0;\n});\nprint_r($filtered);\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n$strings = array(\"abc\",\
    \ \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\nprint_r($filtered);\n</code>\n<|/ a dscore=1 |>\n<| a tags=arrays,php |>\n\
    <code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"\
    a\";\n$filtered = array_filter($strings, function($string) use ($prefix) {\n \
    \   return strpos($string, $prefix) === 0;\n});\nprint_r($filtered);\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$strings = array(\"abc\", \"bcd\"\
    , \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings, function($string)\
    \ use ($prefix) {\n    return strpos($string, $prefix) === 0;\n});\nprint_r($filtered);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\nprint_r($filtered);\n</code>\n<|/ a tags=array\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmplizapz2d.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer. I'm going\
    \ to try this out and let you know how it goes.\n<|/ c |>\n<| c |>\nI used your\
    \ function and modified it a bit. Thanks again for your help.\n<|/ c |>\n<| a\
    \ tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$prefix = \"a\";\n$filtered = array_filter($array, function($value) use ($prefix)\
    \ {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$prefix = \"a\";\n$filtered = array_filter($array, function($value) use ($prefix)\
    \ {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$prefix = \"a\";\n$filtered = array_filter($array, function($value)\
    \ use ($prefix) {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\"\
    , \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($array, function($value)\
    \ use ($prefix) {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"\
    cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($array, function($value)\
    \ use ($prefix) {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($array,\
    \ function($value) use ($prefix) {\n    return strpos($value, $\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwvaibe1f.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\n\
    I like the use of array_filter. Thanks!\n<|/ c |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array1 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array2\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array3 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array4 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n\n$arrays = array($array1, $array2, $array3, $array4);\n\n$result = array();\n\
    \nforeach($arrays as $array)\n{\n    $result = array_merge($result, array_filter($array));\n\
    }\n\nprint_r($result);\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array1 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array2\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array3 = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$array4 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n\n$arrays = array($array1, $array2, $array3, $array4);\n\n$result = array();\n\
    \nforeach($arrays as $array)\n{\n    $result = array_merge($result, array_filter($array));\n\
    }\n\nprint_r($result);\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\n<code>\n\
    $array1 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array2 = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$array3 = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$array4 = array(\"abc\", \"bcd\", \"cde\", \"array\");\n\n$arrays =\
    \ array($array1, $array2, $array3, $array4);\n\n$result = array();\n\nforeach($arrays\
    \ as $array)\n{\n    $result = array_merge($result, array_filter($array));\n}\n\
    \nprint_r($result);\n</code>\n<|/ a tags=php,arrays,multidimensional-array |>\n\
    <| a dscore=1 |>\n<code>\n$array1 = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$array2 = \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpyiezwu5z.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n<?php\n$string = \"Hello\
    \ World\";\n$pattern = \"/^Hello/\";\n$replacement = \"\";\necho preg_replace($pattern,\
    \ $replacement, $string);\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp8p6xbagt.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n\
    <?php\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\n\
    foreach ($array as $key => $value) {\n    if (strpos($value, 'a') === 0) {\n \
    \       $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$result = array();\nforeach ($array as $key => $value) {\n    if (strpos($value,\
    \ 'a') === 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n\
    <|/ a tags=php,arrays,multidimensional-array |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result =\
    \ array();\nforeach ($array as $key => $value) {\n    if (strpos($value, 'a')\
    \ === 0) {\n        $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,arrays,multidimensional-array |>\n<code>\n<?php\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach\
    \ ($array as $key => $value) {\n    if (strpos($value, 'a') === 0) {\n       \
    \ $result[] = $value;\n    }\n}\nprint_r($result);\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=php,arrays,multidimensional-array |>\n<code>\n<?php\n$array = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach ($array as $key\
    \ => $value) {\n    if (strpos($value, 'a') === 0) {\n        $result[] = $value;\n\
    \    }\n}\nprint_r($result);\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpasxis34h.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| a dscore=1 |>\n<code>\n\
    $array = array();\n$array[] = array('name' => 'John', 'age' => '20');\n$array[]\
    \ = array('name' => 'Jane', 'age' => '30');\n$array[] = array('name' => 'Jack',\
    \ 'age' => '40');\n$array[] = array('name' => 'Jill', 'age' => '50');\n$array[]\
    \ = array('name' => 'Jack', 'age' => '50');\n$array[] = array('name' => 'Jill',\
    \ 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '50');\n$array[]\
    \ = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack',\
    \ 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n$array[]\
    \ = array('name' => 'Jack', 'age' => '50');\n$array[] = array('name' => 'Jill',\
    \ 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '50');\n$array[]\
    \ = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack',\
    \ 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n$array[]\
    \ = array('name' => 'Jack', 'age' => '50');\n$array[] = array('name' => 'Jill',\
    \ 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '50');\n$array[]\
    \ = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack',\
    \ 'age' => '50');\n$array[] = array('name' => 'Jill', 'age' => '50');\n$array[]\
    \ = array('name' => 'Jack', 'age' => '50');\n$array[] = array('name' => 'Jill',\
    \ 'age' => '50');\n$array[] = array('name' => 'Jack', 'age' => '50');\n$array[]\
    \ = array('name' => 'Jill', 'age' => '50');\n$array[] = array('name' => 'Jack',\
    \ 'age' => '50');\n$array[] = array('name' => '\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5mnavtnc.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution, but I prefer to use\
    \ `strpos($string, $prefix) === 0` instead of `strpos($string, $prefix) === false`\n\
    <|/ c |>\n<| c |>\nI prefer `strpos($string, $prefix) !== false` because `strpos()`\
    \ returns `0` if the string was found at the start of the string, and `0` evaluates\
    \ to `false` in PHP. `!== false` evaluates to `true` in PHP, so it avoids having\
    \ to write `if (strpos($string, $prefix) !== false)`.\n<|/ c |>\n<| c |>\nI prefer\
    \ `strpos($string, $prefix) !== false` because `strpos()` returns `0` if the string\
    \ was found at the start of the string, and `0` evaluates to `false` in PHP. `!==\
    \ false` evaluates to `true` in PHP, so it avoids having to write `if (strpos($string,\
    \ $prefix) !== false)`.\n<|/ c |>\n<| c |>\nI prefer `strpos($string, $prefix)\
    \ !== false` because `strpos()` returns `0` if the string was found at the start\
    \ of the string, and `0` evaluates to `false` in PHP. `!== false` evaluates to\
    \ `true` in PHP, so it avoids having to write `if (strpos($string, $prefix) !==\
    \ false)`.\n<|/ c |>\n<| c |>\nI prefer `strpos($string, $prefix) !== false` because\
    \ `strpos()` returns `0` if the string was found at the start of the string, and\
    \ `0` evaluates to `false` in PHP. `!== false` evaluates to `true` in PHP, so\
    \ it avoids having to write `if (strpos($string, $prefix) !== false)`.\n<|/ c\
    \ |>\n<| a dscore=5 |>\n<code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$prefix = \"a\";\n$filtered = array_filter($strings, function($string)\
    \ use ($prefix) {\n    return strpos($string, $prefix) === 0;\n});\n</code>\n\
    <|/ a tags=arrays,php,string |>\n<| c |>\nI prefer `strpos($string, $prefix) ===\
    \ 0` instead of `strpos($string, $prefix) === false`\n<|/\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7jnuivm7.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=php,arrays,multidimensional-array |>\n<| c |>\nI like your\
    \ answer but I think it would be better to use a foreach loop instead of a for\
    \ loop. Also I think it would be better to use a foreach loop instead of array_filter.\
    \ array_filter will create a new array and loop through the original array and\
    \ create a new array and loop through the new array and so on. Using a foreach\
    \ loop will loop through the original array and create a new array and loop through\
    \ the new array and so on. Also I think it would be better to use a foreach loop\
    \ instead of array_filter. array_filter will create a new array and loop through\
    \ the original array and create a new array and loop through the new array and\
    \ so on. Using a foreach loop will loop through the original array and create\
    \ a new array and loop through the new array and so on.\n<|/ c |>\n<| c |>\n:\
    \ I agree with your comments. I added an example using `foreach` loops.\n<|/ c\
    \ |>\n<| c |>\n: I added an example using `array_filter` which I think would be\
    \ more efficient.\n<|/ c |>\n<| c |>\n: I added an example using `array_filter`\
    \ which I think would be more efficient.\n<|/ c |>\n<| c |>\n: I added an example\
    \ using `array_filter` which I think would be more efficient.\n<|/ c |>\n<| a\
    \ tags=php,arrays,multidimensional-array |>\n<code>\n$array = array();\n$array[]\
    \ = array(\"name\" => \"John\", \"age\" => 25);\n$array[] = array(\"name\" =>\
    \ \"Jane\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jim\", \"age\" =>\
    \ 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"\
    name\" => \"Jim\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jim\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jim\", \"age\" => 25);\n$array[] = array(\"\
    name\" => \"Jim\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jim\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jim\", \"age\" => 25);\n$array[] = \n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmps4ia1lyq.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I'm sorry\
    \ but I don't understand how this would work. Could you please explain it a little\
    \ more?\n<|/ c |>\n<| c |>\nI added some comments to my answer. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I'm sorry but I don't understand how\
    \ this would work. Could you please explain it a little more?\n<|/ c |>\n<| c\
    \ |>\nI added some comments to my answer. Hope it helps.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. I'm sorry but I don't understand how this would work.\
    \ Could you please explain it a little more?\n<|/ c |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array();\n$array[] = array(\"name\" => \"John\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jane\", \"age\" => 25);\n$array[] =\
    \ array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"\
    Jill\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n\
    $array[] = array(\"name\" => \"Jill\", \"age\" => 25);\n$array[] = array(\"name\"\
    \ => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jill\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] =\
    \ array(\"name\" => \"Jill\", \"age\" => 25);\n$array[] = array(\"name\" => \"\
    Jack\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jill\", \"age\" => 25);\n\
    $array[] = array(\"name\" => \"Jack\", \"age\" => 25);\n$array[] = array(\"name\"\
    \ => \"Jill\", \"age\" => 25);\n$array[] = array(\"name\" => \"Jack\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"Jill\", \"age\" => 25);\n$array[] =\
    \ array(\"name\" => \"\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpimur1w_8.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=arrays,php,multidimensional-array |>\n<| c |>\n\
    Thanks so much for this. I used it and it worked perfectly. Thanks again!\n<|/\
    \ c |>\n<| a tags=arrays,php,multidimensional-array |>\n<code>\n$arr = array();\n\
    $arr[] = array('name' => 'John', 'age' => 25);\n$arr[] = array('name' => 'Jane',\
    \ 'age' => 30);\n$arr[] = array('name' => 'Jack', 'age' => 25);\n$arr[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$arr[] = array('name' => 'Jack', 'age' => 25);\n$arr[]\
    \ = array('name' => 'Jill', 'age' => 25);\n$arr[] = array('name' => 'Jack', 'age'\
    \ => 25);\n$arr[] = array('name' => 'Jill', 'age' => 25);\n$arr[] = array('name'\
    \ => 'Jack', 'age' => 25);\n$arr[] = array('name' => 'Jill', 'age' => 25);\n$arr[]\
    \ = array('name' => 'Jack', 'age' => 25);\n$arr[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$arr[] = array('name' => 'Jack', 'age' => 25);\n$arr[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$arr[] = array('name' => 'Jack', 'age' => 25);\n$arr[]\
    \ = array('name' => 'Jill', 'age' => 25);\n$arr[] = array('name' => 'Jack', 'age'\
    \ => 25);\n$arr[] = array('name' => 'Jill', 'age' => 25);\n$arr[] = array('name'\
    \ => 'Jack', 'age' => 25);\n$arr[] = array('name' => 'Jill', 'age' => 25);\n$arr[]\
    \ = array('name' => 'Jack', 'age' => 25);\n$arr[] = array('name' => 'Jill', 'age'\
    \ => 25);\n$arr[] = array('name' => 'Jack', 'age' => 25);\n$arr[] = array('name'\
    \ => 'Jill', 'age' => 25);\n$arr[] = array('name' => 'Jack', 'age' => 25);\n$arr[]\
    \ = array('name' => 'Jill', 'age' => 25);\n$arr[]\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp5cj1yo_d.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($s) use ($prefix) {\n    return strpos($s, $prefix) === 0;\n  });\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for the answer. I've tried this\
    \ and it's not working. I've updated my question to show what I've tried.\n<|/\
    \ c |>\n<| c |>\nI see what you mean. I've updated my answer to show how you can\
    \ fix it.\n<|/ c |>\n<| c |>\nThanks for your help on this. I've updated my question\
    \ to show what I've tried and what I'm getting as a result.\n<|/ c |>\n<| c |>\n\
    I updated my answer again to show how you can fix your current code.\n<|/ c |>\n\
    <| c |>\nThanks for your help on this. I've updated my question to show what I've\
    \ tried and what I'm getting as a result.\n<|/ c |>\n<| a tags=arrays,php |>\n\
    <code>\n<?php\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix\
    \ = \"a\";\n$result = array_filter($array, function($item) use ($prefix) {\n \
    \   return strpos($item, $prefix) === 0;\n});\nprint_r($result);\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=arrays,php |>\n<code>\n$array = array(\"abc\", \"bcd\"\
    , \"cde\", \"array\");\n$prefix = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($prefix) {\n    return strpos($item, $prefix) === 0;\n});\nprint_r($result);\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your help on this. I've updated\
    \ my question to show what I've tried and what I'm getting as a result.\n<|/ c\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$prefix = \"a\";\n$result = array_filter($array, function($item) use ($prefix)\
    \ {\n    return strpos($item, $prefix) === 0;\n});\nprint_r($result);\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result = array_filter($array,\
    \ function($item) use ($prefix) {\n    return strpos($item, $prefix) === 0;\n\
    });\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzlaai2k5.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach ($array as $value)\
    \ {\n    if (strpos($value, \"a\") === 0) {\n        $result[] = $value;\n   \
    \ }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n$array =\
    \ array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach ($array\
    \ as $value) {\n    if (strpos($value, \"a\") === 0) {\n        $result[] = $value;\n\
    \    }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach\
    \ ($array as $value) {\n    if (strpos($value, \"a\") === 0) {\n        $result[]\
    \ = $value;\n    }\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach\
    \ ($array as $value) {\n    if (strpos($value, \"a\") === 0) {\n        $result[]\
    \ = $value;\n    }\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n$array = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach ($array as $value)\
    \ {\n    if (strpos($value, \"a\") === 0) {\n        $result[] = $value;\n   \
    \ }\n}\n</code>\n<|/ a tags=php,arrays dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach\
    \ ($array as $value) {\n    if (strpos($value, \"a\") === 0) {\n        $result[]\
    \ = $value;\n    }\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array();\nforeach\
    \ ($array as $value) {\n    if (strpos($value, \"a\") === 0) {\n        $result[]\
    \ = $\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcqu4gkqy.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$strings = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays,string |>\n<| a dscore=1 |>\n<code>\n$strings\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered\
    \ = array_filter($strings, function($string) use ($prefix) {\n    return strpos($string,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string\
    \ |>\n<code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix\
    \ = \"a\";\n$filtered = array_filter($strings, function($string) use ($prefix)\
    \ {\n    return strpos($string, $prefix) === 0;\n});\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$prefix = \"a\";\n$filtered = array_filter($strings, function($string)\
    \ use ($prefix) {\n    return strpos($string, $prefix) === 0;\n});\n</code>\n\
    <|/ a tags=php,arrays,string |>\n<| a |>\n<code>\n$strings = array(\"abc\", \"\
    bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays,string dscore=1 |>\n<| a |>\n<code>\n$strings\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$filtered\
    \ = array_filter($strings, function($string) use ($prefix) {\n    return strpos($string,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a dscore=1 tags=php,arrays,string |>\n<|\
    \ a tags=php,arrays,string |>\n<code>\n$strings = array(\"abc\", \"bcd\nfunction\
    \ candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp1mwsq1cc.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution the best. Easy to understand\
    \ and easy to use.\n<|/ c |>\n<| c |>\nI like this solution the best. Easy to\
    \ understand and easy to use. Thanks.\n<|/ c |>\n<| c |>\nI like this solution\
    \ the best. Easy to understand and easy to use. Thanks.\n<|/ c |>\n<| c |>\nI\
    \ like this solution the best. Easy to understand and easy to use. Thanks.\n<|/\
    \ c |>\n<| c |>\nI like this solution the best. Easy to understand and easy to\
    \ use. Thanks.\n<|/ c |>\n<| a tags=php,arrays,string |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpmf997gxj.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array,\
    \ function($value) {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/\
    \ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"\
    cde\", \"array\");\n$result = array_filter($array, function($value) {\n    return\
    \ strpos($value, 'a') === 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result =\
    \ array_filter($array, function($value) {\n    return strpos($value, 'a') ===\
    \ 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array,\
    \ function($value) {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/\
    \ a dscore=2 |>\n<| a dscore=2 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"\
    cde\", \"array\");\n$result = array_filter($array, function($value) {\n    return\
    \ strpos($value, 'a') === 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=2\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result =\
    \ array_filter($array, function($value) {\n    return strpos($value, 'a') ===\
    \ 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=2 |>\n<code>\n$array\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array,\
    \ function($value) {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/\
    \ a tags=arrays,php |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\"\
    , \"cde\", \"array\");\n$result = array_filter($array, function($value) {\n  \
    \  return strpos($value, 'a') === 0;\n});\n</code>\n<|/ a tags=arrays,php |>\n\
    <|\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"\
    asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\"\
    , \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphj0r8iyw.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like this solution, although\
    \ I prefer `array_filter` over `array_reduce` since it can handle multiple arguments\
    \ and is more concise. `array_reduce` can only handle two arguments and is more\
    \ verbose.\n<|/ c |>\n<| c |>\nI agree, `array_reduce` can only handle two arguments.\
    \ I find `array_reduce` more concise and easier to read. `array_filter` can handle\
    \ multiple arguments and is more verbose.\n<|/ c |>\n<| c |>\nI agree with you\
    \ on `array_reduce` being more concise. `array_reduce` can only handle two arguments.\
    \ I find `array_reduce` more concise and easier to read. `array_filter` can handle\
    \ multiple arguments and is more verbose.\n<|/ c |>\n<| c |>\nI agree with you\
    \ on `array_reduce` being more concise. `array_reduce` can only handle two arguments.\
    \ I find `array_reduce` more concise and easier to read. `array_filter` can handle\
    \ multiple arguments and is more verbose.\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\"\
    ;\n$result = array_filter($array, function($value) use ($prefix) {\n    return\
    \ strpos($value, $prefix) === 0;\n});\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI\
    \ like this solution, although I prefer `array_filter` over `array_reduce` since\
    \ it can handle multiple arguments and is more concise. `array_reduce` can only\
    \ handle two arguments and is more verbose.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result\
    \ = array_filter($array, function($value) use ($prefix) {\n    return strpos($value,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix =\
    \ \"a\";\n$result = array_filter($array, function($value) use ($prefix) {\n\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp75xubuq0.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I'm sorry\
    \ I didn't make it clear in my question, but I wanted to avoid using any PHP functions.\
    \ I edited my question to make it more clear.\n<|/ c |>\n<| c |>\nI added a PHP\
    \ function based solution to my answer.\n<|/ c |>\n<| a |>\nYou can use a regular\
    \ expression to match any string that starts with your prefix:\n<code>\n$strings\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result =\
    \ preg_grep(\"/$prefix/\", $strings);\nprint_r($result);\n</code>\nOutput:\n<code>\n\
    Array\n(\n    [0] => abc\n    [2] => array\n)\n</code>\n<|/ a tags=php,arrays\
    \ dscore=1 |>\n<| c |>\nThanks for your answer. I'm sorry I didn't make it clear\
    \ in my question, but I wanted to avoid using any PHP functions. I edited my question\
    \ to make it more clear.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result = array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    });\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer. I'm sorry\
    \ I didn't make it clear in my question, but I wanted to avoid using any PHP functions.\
    \ I edited my question to make it more clear.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix\
    \ = \"a\";\n$result = array_filter($strings, function($string) use ($prefix) {\n\
    \    return strpos($string, $prefix) === 0;\n});\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThanks for your answer. I'm sorry I didn't make it clear in my question,\
    \ but I wanted to avoid using any PHP functions. I edited my question to make\
    \ it more clear.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$strings = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result = array_filter($\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcjqch_pl.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI love this solution. Very clean\
    \ and simple.\n<|/ c |>\n<| c |>\nI love this solution. Very clean and simple.\n\
    <|/ c |>\n<| c |>\nI love this solution. Very clean and simple.\n<|/ c |>\n<|\
    \ c |>\nI love this solution. Very clean and simple.\n<|/ c |>\n<| c |>\nI love\
    \ this solution. Very clean and simple.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result\
    \ = array_filter($array, function($item) use ($prefix) {\n    return strpos($item,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a tags=arrays,php,filter |>\n<| c |>\nThis\
    \ should be the accepted answer as it's more efficient and doesn't require a loop.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer as it's more efficient and\
    \ doesn't require a loop.\n<|/ c |>\n<| c |>\nThis should be the accepted answer\
    \ as it's more efficient and doesn't require a loop.\n<|/ c |>\n<| c |>\nThis\
    \ should be the accepted answer as it's more efficient and doesn't require a loop.\n\
    <|/ c |>\n<| c |>\nThis should be the accepted answer as it's more efficient and\
    \ doesn't require a loop.\n<|/ c |>\n<| a tags=arrays,php,filter |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result\
    \ = array_filter($array, function($item) use ($prefix) {\n    return strpos($item,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer as it's more efficient and doesn't require a loop.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer as it's more efficient and doesn't\
    \ require a loop.\n<|/ c |>\n<| a tags=arrays,php,filter |>\n<code>\n$array =\
    \ array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$\nfunction\
    \ candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfx39dc57.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I've tried your solution\
    \ and it works fine. However I still don't understand why my code doesn't work.\
    \ Could you please explain me why my code doesn't work?\n<|/ c |>\n<| c |>\nI\
    \ added an explanation to the answer.\n<|/ c |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp20iar0ka.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\";\n$result\
    \ = array_filter($array, function($value) use ($prefix) {\n    return strpos($value,\
    \ $prefix) === 0;\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis should be the\
    \ accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should be\
    \ the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix =\
    \ \"a\";\n$result = array_filter($array, function($value) use ($prefix) {\n  \
    \  return strpos($value, $prefix) === 0;\n});\n</code>\n<|/ a dscore=5 |>\n<|\
    \ c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/ c |>\n\
    <| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/ c |>\n\
    <| a dscore=5 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$prefix = \"a\";\n$result = array_filter($array, function($value) use ($prefix)\
    \ {\n    return strpos($value, $prefix) === 0;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n<|/\
    \ c |>\n<| c |>\nThis should be the accepted answer. Works perfectly for me.\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\",\
    \ \"array\");\n$\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpnc0wqi6u.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution the best because it\
    \ is very flexible and doesn't require any additional libraries. I used this solution\
    \ to filter out unwanted words from my search results.\n<|/ c |>\n<| c |>\nI like\
    \ this solution the best because it is very flexible and doesn't require any additional\
    \ libraries. I used this solution to filter out unwanted words from my search\
    \ results.\n<|/ c |>\n<| c |>\nI like this solution the best because it is very\
    \ flexible and doesn't require any additional libraries. I used this solution\
    \ to filter out unwanted words from my search results.\n<|/ c |>\n<| c |>\nI like\
    \ this solution the best because it is very flexible and doesn't require any additional\
    \ libraries. I used this solution to filter out unwanted words from my search\
    \ results.\n<|/ c |>\n<| c |>\nI like this solution the best because it is very\
    \ flexible and doesn't require any additional libraries. I used this solution\
    \ to filter out unwanted words from my search results.\n<|/ c |>\n<| a tags=php,arrays,search\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2opgmrw_.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array, function($value)\
    \ {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$result = array_filter($array, function($value) {\n    return strpos($value,\
    \ 'a') === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array,\
    \ function($value) {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$result = array_filter($array, function($value) {\n    return strpos($value,\
    \ 'a') === 0;\n});\n</code>\n<|/ a tags=php,arrays dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result =\
    \ array_filter($array, function($value) {\n    return strpos($value, 'a') ===\
    \ 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array,\
    \ function($value) {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/\
    \ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\"\
    , \"cde\", \"array\");\n$result = array_filter($array, function($value) {\n  \
    \  return strpos($value, 'a') === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| a |>\n\
    <code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = array_filter($array,\
    \ function($value) {\n    return strpos($value, 'a') === 0;\n});\n</code>\n<|/\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpdyve64jb.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for your answer. I will try this and\
    \ let you know if it works.\n<|/ c |>\n<| c |>\nThanks for your answer. I will\
    \ try this and let you know if it works.\n<|/ c |>\n<| c |>\nI added a more detailed\
    \ explanation of how it works.\n<|/ c |>\n<| c |>\nThanks for your answer. I will\
    \ try this and let you know if it works.\n<|/ c |>\n<| c |>\nI added a more detailed\
    \ explanation of how it works.\n<|/ c |>\n<| a tags=php,arrays,multidimensional-array\
    \ |>\n<code>\n$array = array();\n$array[] = array(\"name\" => \"john\", \"age\"\
    \ => 25);\n$array[] = array(\"name\" => \"jane\", \"age\" => 26);\n$array[] =\
    \ array(\"name\" => \"jim\", \"age\" => 27);\n$array[] = array(\"name\" => \"\
    jane\", \"age\" => 27);\n$array[] = array(\"name\" => \"jim\", \"age\" => 27);\n\
    $array[] = array(\"name\" => \"jane\", \"age\" => 27);\n$array[] = array(\"name\"\
    \ => \"jim\", \"age\" => 27);\n$array[] = array(\"name\" => \"jane\", \"age\"\
    \ => 27);\n$array[] = array(\"name\" => \"jim\", \"age\" => 27);\n$array[] = array(\"\
    name\" => \"jane\", \"age\" => 27);\n$array[] = array(\"name\" => \"jim\", \"\
    age\" => 27);\n$array[] = array(\"name\" => \"jane\", \"age\" => 27);\n$array[]\
    \ = array(\"name\" => \"jim\", \"age\" => 27);\n$array[] = array(\"name\" => \"\
    jane\", \"age\" => 27);\n$array[] = array(\"name\" => \"jim\", \"age\" => 27);\n\
    $array[] = array(\"name\" => \"jane\", \"age\" => 27);\n$array[] = array(\"name\"\
    \ => \"jim\", \"age\" => 27);\n$array[] = array(\"name\" => \"jane\nfunction candidate(...$args)\
    \ {\n    return filter_by_prefix(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(), \"john\") !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"xxy\", \"john doe\"\
    , \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\", \"xxx\")) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpl2pmmlsm.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you\
    \ have a string that starts with \"array\" but also contains \"array\" somewhere\
    \ else in the string. Try it with `array(\"array\", \"array\")`.\n<|/ c |>\n<|\
    \ c |>\n: Yes, I noticed that and fixed it (now it works with `array(\"array\"\
    , \"array\")` too).\n<|/ c |>\n<| c |>\n: I added a version that doesn't require\
    \ the use of `array_filter()`.\n<|/ c |>\n<| c |>\n: I added a version that doesn't\
    \ require the use of `array_filter()`.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that doesn't require the use of `array_filter()`.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array =\
    \ array_filter($array, function($string) {\n    return strpos($string, \"array\"\
    ) === 0;\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if you have\
    \ a string that starts with \"array\" but also contains \"array\" somewhere else\
    \ in the string. Try it with `array(\"array\", \"array\")`.\n<|/ c |>\n<| c |>\n\
    : Yes, I noticed that and fixed it (now it works with `array(\"array\", \"array\"\
    )` too).\n<|/ c |>\n<| c |>\n: I added a version that doesn't require the use\
    \ of `array_filter()`.\n<|/ c |>\n<| c |>\n: I added a version that doesn't require\
    \ the use of `array_filter()`.\n<|/ c |>\n<| c |>\n: I added a version that doesn't\
    \ require the use of `array_filter()`.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array\
    \ = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$array = array_filter($array,\
    \ function($string) {\n    return strpos($string, \"array\") === 0;\n});\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\");\n$array = array_filter($array, function(\nfunction\
    \ candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\", \"\
    xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
    , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp6951952n.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ strlen($prefix)) == 0) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ 0) === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n\
    }\n</code>\n<|/ a tags=php,arrays,string |>\n<| a tags=php,arrays,string |>\n\
    <code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$prefix = \"a\"\
    ;\n$result = array_filter($array, function($item) use ($prefix) {\n    return\
    \ strncmp($prefix, $item, 0);\n});\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis\
    \ should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| c |>\n\
    This should be the accepted answer. Works perfectly for me.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpgh_a48u6.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strncmp($prefix, $string,\
    \ strlen($prefix)) == 0) {\n      $filtered[] = $string;\n    }\n  }\n  return\
    \ $filtered;\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4nxl2w7.php:19\n\
    Stack trace:\n#0 /tmp/tmpm4nxl2w7.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpm4nxl2w7.php\
    \ on line 19\n"
  timestamp: 1659823420
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4nxl2w7.php:19\n\
    Stack trace:\n#0 /tmp/tmpm4nxl2w7.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpm4nxl2w7.php\
    \ on line 19\n"
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer. Your code\
    \ works but i would like to know if there is a way to do it without using any\
    \ loops. I mean using array_filter or something else.\n<|/ c |>\n<| c |>\n: I\
    \ added a version without loops.\n<|/ c |>\n<| c |>\nThanks again for your answer.\
    \ Your code works but i would like to know if there is a way to do it without\
    \ using any loops. I mean using array_filter or something else.\n<|/ c |>\n<|\
    \ c |>\n: I added a version without loops.\n<|/ c |>\n<| c |>\nThanks again for\
    \ your answer. Your code works but i would like to know if there is a way to do\
    \ it without using any loops. I mean using array_filter or something else.\n<|/\
    \ c |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"\
    array\");\n$filtered = array_filter($array, function($var) {\n    return strpos($var,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your\
    \ answer. Your code works but i would like to know if there is a way to do it\
    \ without using any loops. I mean using array_filter or something else.\n<|/ c\
    \ |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$filtered = array_filter($array, function($var) {\n    return strpos($var,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your\
    \ answer. Your code works but i would like to know if there is a way to do it\
    \ without using any loops. I mean using array_filter or something else.\n<|/ c\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$filtered = array_filter($array, function($var) {\n    return strpos($var,\
    \ \"a\") === 0;\n});\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer.\
    \ Your code works but i would like to know if there is a way to do it without\
    \ using any loop\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmppeqqhtva.php
    on line 16

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 255
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer.\
    \ Your code works great for me. However I still have one question. Why do I need\
    \ to use array_filter? I thought array_search would do the same thing?\n<|/ c\
    \ |>\n<| c |>\n`array_search` will find the first matching value in the array.\
    \ `array_filter` will filter out all values which don't match the given callback.\n\
    <|/ c |>\n<| c |>\nThanks again. Your explanation was very helpful.\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\", \"array\"\
    );\n$search = \"a\";\n$result = array_filter($array, function($item) use ($search)\
    \ {\n    return strpos($item, $search) === 0;\n});\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\", \"cde\"\
    , \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) === 0;\n});\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\", \"bcd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) === 0;\n});\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\", \"\
    cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) === 0;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n$array = array(\"abc\", \"bcd\"\
    , \"cde\", \"array\");\n$search = \"a\";\n$result = array_filter($array, function($item)\
    \ use ($search) {\n    return strpos($item, $search) === 0;\n});\n</code>\n<|/\
    \ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"abc\"\
    , \"bcd\", \"cde\", \"array\nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), \"john\") !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\"\
    , \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"\
    xxx\", \"xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpmcc2n8gb.php
    on line 12

    '
  timestamp: 1659823420
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301
- exit_code: 0
  program: "<?php\n// Filter an input list of strings only for ones that start with\
    \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>>\
    \ filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"\
    abc\", \"array\")\nfunction filter_by_prefix($strings, $prefix) {\n  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n}\n\
    \nfunction candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\"\
    , \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"\
    xxxAAA\", \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730301

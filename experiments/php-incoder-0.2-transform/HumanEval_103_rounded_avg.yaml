name: HumanEval_103_rounded_avg
language: php
prompt: "<?php\n// You are given two positive integers n and m, and your task is to\
  \ compute the\n// average of the integers from n through m (including n and m).\
  \ \n// Round the answer to the nearest integer and convert that to binary.\n// If\
  \ n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"\
  0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\
  \n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n"
tests: "function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"\
  0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
  \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
  \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350,\
  \ 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / 2;\n}\n", " \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    $n = (int) $n;\n    $m = (int) $m;\n    if\
    \ ($n <= $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", " \
    \   $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count;\n}\n", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n</code>\n<|/\
    \ a |>\n<| c |>\nThanks for your answer. I am not allowed to use any loops or\
    \ arrays. I only can use basic mathematical operators and basic conditional statements.\n\
    <|/ c |>\n<| c |>\nI added a solution that uses basic mathematical operators and\
    \ conditional statements.\n<|/ c |>\n<| c |>\nThanks for your answer. I am not\
    \ allowed to use any loops or arrays. I only can use basic mathematical operators\
    \ and basic conditional statements.\n<|/ c |>\n<| c |>\nI added a solution that\
    \ uses basic mathematical operators and conditional statements.\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n<?php\n$n = 5;\n$m = 20;\n$sum = 0;\n$count = 0;\n$sum\
    \ = 0;\n$count = 1;\n$sum = $n + $m;\n$count = $n + $m;\n$sum = $sum / $count;\n\
    $sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum =\
    \ $sum * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $sum\
    \ * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n\
    $sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum =\
    \ $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum\
    \ / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n\
    $sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum =\
    \ $sum * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $sum\
    \ * 2;\n$sum = $sum / 2;\n$sum = $sum * 2;\n$sum = $sum / 2;\n$sum = $", "   \
    \ $sum = 0;\n    $n = $n - $m;\n    for($i = $m; $i <= $n; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $n;\n}\n", "    if ($n >= $m) {\n        return\
    \ -1;\n    }\n    $bin = str_pad(decbin($n), 32, '0', STR_PAD_LEFT);\n    $bin\
    \ = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n \
    \   $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = substr($bin, 0, $m);\n    $bin = str_pad($bin, 32, '0', STR_PAD_LEFT);\n\
    \    $bin = ", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count <\
    \ $n ? -1 : ($sum / $count) . bindec(str_pad(decbin($sum), 32, '0', STR_PAD_LEFT));\n\
    }\n", "    if ($n <= $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n\
    }\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n        $count++;\n    }\n    return $sum / $count % 2 ? \"\
    0b\" . base_convert($sum, 10, 2) : -1;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    This doesn't work if n is greater than m. Try it out with n = 4 and m = 5.\n<|/\
    \ c |>\n<| c |>\nIt does work if n is greater than m. Try it out with n = 4 and\
    \ m = 5.\n<|/ c |>\n<| c |>\nIt does work if n is greater than m. Try it out with\
    \ n = 4 and m = 5.\n<|/ c |>\n<| c |>\nIt does work if n is greater than m. Try\
    \ it out with n = 4 and m = 5.\n<|/ c |>\n<| c |>\nIt does work if n is greater\
    \ than m. Try it out with n = 4 and m = 5.\n<|/ c |>\n<| a tags=php |>\n<code>\n\
    <?php", "    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $sum = 0;\n    $count\
    \ = 0;\n    \n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n     \
    \   $count++;\n    }\n    \n    return $sum / $count ? sprintf('0b%0*b', $count,\
    \ $sum / $count) : -1;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \ }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ if($count > 0) {\n        return $sum / $count;\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    if ($n < $m) {\n        return -1;\n    }\n    $sum =\
    \ 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count;\n}\n</code>\n<|/ a tags=php,binary,math\
    \ |>\n<| c |>\nThis doesn't seem to work. `rounded_avg(7, 5)` returns `-1` instead\
    \ of `0b1111`.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution that\
    \ works with negative numbers as well.\n<|/ c |>\n<| c |>\nThis doesn't work for\
    \ negative numbers. `rounded_avg(-7, 5)` returns `-1` instead of `0b1111`.\n<|/\
    \ c |>\n<| c |>\nI edited my answer to include a solution that works with negative\
    \ numbers as well.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `rounded_avg(-7, 5)` returns `-1` instead of `0b1111`.\n<|/ c |>\n<| a |>\n\
    <code>", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n        $count++;\n    }\n    return $sum / $count < $n\
    \ ? -1 : ($sum / $count) . str_repeat(\"0\", $n - $sum % $n);\n}\n</code>\n<|/\
    \ a tags=php,binary,math |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/18770576)\n<|/ c |>\n<| c |>\n\
    I added an explanation to the answer.\n<|/ c |>\n<| c |>\nI added an explanation\
    \ to the answer.\n<|/ c |>\n<| c |>\nI added an explanation to the answer.\n<|/\
    \ c |>\n<| c |>\nI added an explanation to the answer.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count %\
    \ 2 ? \"0b\" . bindec($sum) : -1;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,binary,math\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $count\
    \ = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count < $n ? -1 : ($sum / $count) . str_repeat(\"0\"\
    , $n - $sum % $n);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,binary,math |>\n\
    <code>\n<?php", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n\
    }\n", "    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $sum = 0;\n    $count\
    \ = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count ? $sum / $count : -1;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nI guess you mean `return $sum / $count ? $sum / $count : -1;`\n\
    <|/ c |>\n<| c |>\nYes, I meant that. Thanks for noticing it.\n<|/ c |>\n<| c\
    \ |>\nI guess you mean `return $sum / $count ? $sum / $count : -1;`\n<|/ c |>\n\
    <| c |>\nI guess you mean `return $sum / $count ? $sum / $count : -1;`\n<|/ c\
    \ |>\n<| c |>\nI guess you mean `return $sum / $count ? $sum / $count : -1;`\n\
    <|/ c |>\n<| a tags=php,algorithm |>\n<code>", "    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    if($count > 0) {\n        return $sum\
    \ / $count;\n    }\n    return -1;\n}\n</code>\n<|/ a tags=php,binary,math |>\n\
    <| c |>\nThis doesn't answer the question. OP wants to round the result to the\
    \ nearest integer, not to the nearest binary digit.\n<|/ c |>\n<| c |>\nThe question\
    \ was \"how to round the result to the nearest integer\", not \"how to round the\
    \ result to the nearest binary digit\"\n<|/ c |>\n<| c |>\nThe question was \"\
    how to round the result to the nearest integer\", not \"how to round the result\
    \ to the nearest binary digit\"\n<|/ c |>\n<| c |>\nThe question was \"how to\
    \ round the result to the nearest integer\", not \"how to round the result to\
    \ the nearest binary digit\"\n<|/ c |>\n<| c |>\nThe question was \"how to round\
    \ the result to the nearest integer\", not \"how to round the result to the nearest\
    \ binary digit\"\n<|/ c |>\n<| a tags=php,binary,math |>\n<code>\n<?php", "  \
    \  $sum = 0;\n    $n = $n - $m;\n    for($i = $m; $i <= $n; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $m;\n}\n</code>\n<|/ a tags=php,binary,math\
    \ |>\n<| a tags=php,binary,math |>\n<code>\n<?php", "    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n\
    }\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n\
    }\n", "    $n = (int) $n;\n    $m = (int) $m;\n    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $n = $n - 1;\n\
    \    $m = $m - 1;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / 2;\n}\n", "    if ($n >= $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return sprintf(\"0b%b\", $sum / 2);\n}\n</code>\n<|/ a tags=php,binary,math\
    \ |>\n<| c |>\nThis doesn't work when $n is greater than $m\n<|/ c |>\n<| c |>\n\
    It does, I tested it before posting it.  Try it yourself.\n<|/ c |>\n<| c |>\n\
    I tested it before posting it.  Try it yourself.\n<|/ c |>\n<| c |>\nI tested\
    \ it before posting it.  Try it yourself.\n<|/ c |>\n<| c |>\nI tested it before\
    \ posting it.  Try it yourself.\n<|/ c |>\n<| a tags=php,binary,math |>\n<code>",
  "    $n = $n - 1;\n    $m = $m - 1;\n    if ($n < $m) {\n        return -1;\n  \
    \  }\n    $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n}\n",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    if($count > 1) {\n        $sum = $sum\
    \ / $count;\n    }\n    return $sum;\n}\n</code>\n<|/ a tags=php,binary,math |>\n\
    <| c |>\nI like your solution, but I wonder why you use $sum/$count instead of\
    \ $sum/$count+1?\n<|/ c |>\n<| c |>\nBecause the average of a set of numbers is\
    \ just the sum of the numbers / the numbers in the set. So, if you have 3 numbers,\
    \ you divide by 3, not by 3.\n<|/ c |>\n<| c |>\nI see. But why not just use $sum/$count\
    \ instead of $sum/$count+1?\n<|/ c |>\n<| c |>\nBecause the average of a set of\
    \ numbers is just the sum of the numbers / the numbers in the set. So, if you\
    \ have 3 numbers, you divide by 3, not by 3.\n<|/ c |>\n<| c |>\nI see. But why\
    \ not just use $sum/$count instead of $sum/$count+1?\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    if($count > 0) {\n   \
    \     $avg = round($sum/$count);\n        return sprintf(\"0b%b\", $avg);\n  \
    \  } else {\n        return -1;\n    }\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't\
    \ work for negative numbers. `rounded_avg(-5, 5)` returns `-1` instead of `\"\
    0b1111\"`.\n<|/ c |>\n<| c |>\nI added a check for negative numbers and it works\
    \ now.\n<|/ c |>\n<| a |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n \
    \   for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n \
    \   }\n    return $sum / $count % 2 ? \"0b\" . dechex($sum) : -1;\n}\n</code>\n\
    <|/ a tags=php,binary,math |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ Try `rounded_avg(-10, -5)`.\n<|/ c |>\n<| c |>\nYes, it does. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt doesn't work for negative numbers. Try `rounded_avg(-10,\
    \ -5)`.\n<|/ c |>\n<| c |>\nIt works for negative numbers. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt works for negative numbers. Try it yourself.\n<|/ c |>\n\
    <| a tags=php,binary,math |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n\
    \    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count ? sprintf('0b%b', $sum / $count) : -1;\n}\n</code>\n\
    <|/ a tags=php,binary,math,algorithm |>\n<| c |>\nThis doesn't work when n is\
    \ greater than m\n<|/ c |>\n<| c |>\nI added a test case for that case.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work when n is greater than m\n<|/ c |>\n<| c |>\n\
    I added a test case for that case.\n<|/ c |>\n<| c |>\nThis doesn't work when\
    \ n is greater than m\n<|/ c |>\n<| a tags=php,binary,math,algorithm |>\n<code>\n\
    <?php", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n\
    }\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n        $count++;\n    }\n    return $sum / $count % 2 ? $sum\
    \ / $count : -1;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $n = 5;\n$m = 10;\n$sum = 0;\n$count = 0;\nfor($i = $n; $i <= $m; $i++) {\n  \
    \  $sum += $i;\n    $count++;\n}\n$avg = $sum / $count;\n$bin = decbin($avg);\n\
    $bin = substr($bin,0,1);\necho $bin;", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ if($count > 0) {\n        return sprintf(\"0b%b\", $sum / $count);\n    }\n\
    \    return -1;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try\
    \ it with `rounded_avg(20, 33)`.\n<|/ c |>\n<| c |>\nIt does work. Try it with\
    \ `rounded_avg(20, 33)`. It returns `0b11010`.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for `rounded_avg(20, 33)`. Try it with `rounded_avg(20, 33)`.\n<|/ c |>\n\
    <| c |>\nIt does work for `rounded_avg(20, 33)`. Try it with `rounded_avg(20,\
    \ 33)`.\n<|/ c |>\n<| c |>\nIt doesn't work for `rounded_avg(20, 33)`. Try it\
    \ with `rounded_avg(20, 33)`.\n<|/ c |>\n<| a tags=php,algorithm |>\n<code>",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    $count = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count;\n}\n", "    if ($n < $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ return $sum / $count ? sprintf('0b%b', $sum / $count) : -1;\n}\n</code>\n<|/\
    \ a |>\n<| c |>\nThanks so much! I appreciate your help!\n<|/ c |>\n<| c |>\n\
    You're welcome. Glad I could help. If this answer solved your problem, please\
    \ consider marking it as accepted.\n<|/ c |>\n<| c |>\nI did but it said I had\
    \ to wait 2 minutes before I could accept it.\n<|/ c |>\n<| c |>\nAh, I see. Thanks\
    \ for letting me know. :)\n<|/ c |>\n<| a tags=php,binary,math |>\n<code>\n<?php",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    if($count == 0) {\n        return -1;\n\
    \    }\n    return sprintf('0b%0'.strlen($sum).'b', $sum/$count);\n}\n", "   \
    \ $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    if($count > 0) {\n        return $sum\
    \ / $count;\n    }\n    return -1;\n}\n</code>\n<|/ a |>\n<| c |>\nThis does not\
    \ provide an answer to the question. To critique or request clarification from\
    \ an author, leave a comment below their post. - [From Review](/review/low-quality-posts/11889135)\n\
    <|/ c |>\n<| c |>\nThe question was how to round the average to nearest integer,\
    \ and I provided a solution that does exactly that. How does it not answer the\
    \ question?\n<|/ c |>\n<| c |>\nThe question was how to round the average to nearest\
    \ integer, and I provided a solution that does exactly that. How does it not answer\
    \ the question?\n<|/ c |>\n<| c |>\nThe question was how to round the average\
    \ to nearest integer, and I provided a solution that does exactly that. How does\
    \ it not answer the question?\n<|/ c |>\n<| c |>\nThe question was how to round\
    \ the average to nearest integer, and I provided a solution that does exactly\
    \ that. How does it not answer the question?\n<|/ c |>\n<| a |>\n<code>\n<?php\n\
    $n = $_POST['n'];\n$m = $_POST['m'];\n$sum = 0;\n$count = 0;\nfor($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n    $count++;\n}\nif($count > 0) {\n    return\
    \ $sum / $count;\n}\nreturn -1;", "    $n = $n - 1;\n    $m = $m - 1;\n    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", " \
    \   $n = (int)$n;\n    $m = (int)$m;\n    if ($n < $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $n = $n - 1;\n    $m\
    \ = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / 2;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \ }\n    return $sum / $n;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ return $sum / $count < $n ? -1 : $sum / $count;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/10770747)\n<|/ c |>\n<| c |>\nI believe this\
    \ does answer the question. He wants to round the average to the nearest integer,\
    \ and he has provided a solution that does exactly that.\n<|/ c |>\n<| c |>\n\
    The question was \"How to round the average to the nearest integer?\", not \"\
    How to round the average to the nearest integer?\". Your answer does not do that.\n\
    <|/ c |>\n<| c |>\nThe question was \"How to round the average to the nearest\
    \ integer?\", not \"How to round the average to the nearest integer?\". Your answer\
    \ does not do that.\n<|/ c |>\n<| c |>\nThe question was \"How to round the average\
    \ to the nearest integer?\", not \"How to round the average to the nearest integer?\"\
    . Your answer does not do that.\n<|/ c |>\n<| a |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count < $n ? -1 : (string)($sum\
    \ / $count);\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count % 2 ? \"0b\" . base_convert($sum,\
    \ 10, 2) : -1;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    $n = $n - 1;\n    $m = $m - 1;\n    $sum =\
    \ 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $n;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    if ($n > $m) {\n  \
    \      return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}\n</code>\n<|/ a tags=php,binary\
    \ |>\n<| c |>\nThis doesn't answer the question. OP wants to round the average\
    \ to nearest integer, not just round the average.\n<|/ c |>\n<| c |>\nI thought\
    \ the question was about rounding the average, not rounding the numbers. I edited\
    \ my answer to show how to round the average.\n<|/ c |>\n<| c |>\nThe question\
    \ was about rounding the average, not rounding the numbers. I edited my answer\
    \ to show how to round the average.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \ }\n    return $sum / $n;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n</code>\n<|/\
    \ a tags=php,binary,math |>\n<| c |>\nI like this solution, but I wonder if it\
    \ can be done without using any loops. I guess it would be a recursive function,\
    \ but I'm not sure how to do that.\n<|/ c |>\n<| c |>\nI added a recursive solution\
    \ to my answer.\n<|/ c |>\n<| a |>\n<code>\n<?php", "    $sum = 0;\n    $count\
    \ = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count;\n}\n", "    $sum = 0;\n    $count = 0;\n   \
    \ for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n   \
    \ }\n    if($count > 0) {\n        $avg = round($sum / $count);\n        return\
    \ bindec($avg);\n    } else {\n        return -1;\n    }\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ if($count > 0) {\n        $avg = round($sum/$count);\n        $bin = base_convert($avg,\
    \ 10, 2);\n        return $bin;\n    } else {\n        return -1;\n    }\n}\n",
  "    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n > $m ? $n : $m;\n   \
    \ $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m\
    \ ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n :\
    \ 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n  \
    \  $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m\
    \ ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n :\
    \ 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n  \
    \  $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m\
    \ ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n :\
    \ 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n  \
    \  $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m\
    \ ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n :\
    \ 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n  \
    \  $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m\
    \ ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n :\
    \ 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n  \
    \  $n = $n ? $n : 0;\n    $m = $m ? $m : 0;\n    $n = $n ? $n : 0;\n    $m = $m\
    \ ? ", "    $sum = 0;\n    $n = $n - $m;\n    for($i = $m; $i <= $n; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $n = (int) $n;\n\
    \    $m = (int) $m;\n    if ($n <= $m) {\n        $sum = $n;\n        $n = $m;\n\
    \        $m = $sum;\n    }\n    $sum = $n + $m;\n    $n = $sum - $n;\n    $m =\
    \ $sum - $m;\n    $binary = str_pad(decbin($n), 8, '0', STR_PAD_LEFT);\n    $binary\
    \ = str_pad(decbin($m), 8, '0', STR_PAD_LEFT);\n    $binary = str_pad($binary,\
    \ 8, '0', STR_PAD_RIGHT);\n    return $binary;\n}\n", "    $sum = 0;\n    $n =\
    \ $n - $m;\n    for($i = $m; $i <= $n; $i++) {\n        $sum += $i;\n    }\n \
    \   return $sum / $n;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return\
    \ $sum / $count;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    if($count >\
    \ 0) {\n        return sprintf(\"0b%b\", $sum / $count);\n    } else {\n     \
    \   return -1;\n    }\n}\n", "    $sum = 0;\n    $n = $n - $m;\n    for($i = $m;\
    \ $i >= $n; $i--) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>\n<?php\n$n = 5;\n$m = 20;\n$sum = 0;\n$count\
    \ = 0;\nfor($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n}\n$average\
    \ = $sum / $count;\n$bin = decbin($average);\n$bin = substr($bin, 0, strlen($bin)-1);\n\
    echo $bin;", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    if($count > 0) {\n   \
    \     $avg = round($sum/$count);\n    } else {\n        $avg = -1;\n    }\n  \
    \  return bin2hex($avg);\n}\n</code>\n<|/ a tags=php,binary,hex,decimal |>\n<|\
    \ c |>\nThis doesn't work for me. `bin2hex` returns `0` for `0` and `1` for `1`.\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 7.1.0 and it works. What PHP version are\
    \ you using?\n<|/ c |>\n<| c |>\nI'm using PHP 7.2.10. Maybe it's my version of\
    \ PHP?\n<|/ c |>\n<| c |>\nYes, it might be a PHP version issue. I've updated\
    \ my answer with a PHP 7 compatible solution.\n<|/ c |>\n<| c |>\nThanks for your\
    \ help. I appreciate it.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "    $n = $n -\
    \ 1;\n    $m = $m - 1;\n    $sum = 0;\n    for($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n    }\n    return $sum / 2;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't work. Try it for n = 5 and m = 10. You'll get `0b1111` instead\
    \ of `0b11010`.\n<|/ c |>\n<| c |>\nI did a mistake in the code. Now it should\
    \ work.\n<|/ c |>\n<| a tags=binary,php,math |>\n<code>\n<?php", "    $sum = 0;\n\
    \    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n  \
    \      $count++;\n    }\n    return $sum / $count < $n ? -1 : sprintf('0b%0*b',\
    \ $count, $sum);\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work for\
    \ negative numbers. `rounded_avg(-5, 5)` returns `-1` instead of `\"0b1111\"`.\n\
    <|/ c |>\n<| c |>\nIt works for negative numbers, because `-1` is less than `-5`.\n\
    <|/ c |>\n<| c |>\nYes, but `-1` is greater than `5`, so `rounded_avg(-5, 5)`\
    \ returns `-1` instead of `\"0b1111\"`.\n<|/ c |>\n<| c |>\nYes, but `-1` is greater\
    \ than `5`, so `rounded_avg(-5, 5)` returns `-1` instead of `\"0b1111\"`.\n<|/\
    \ c |>\n<| c |>\nYes, but `-1` is greater than `5`, so `rounded_avg(-5, 5)` returns\
    \ `-1` instead of `\"0b1111\"`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n<?php", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count < $n ? -1 : ($sum\
    \ / $count) . str_pad(decbin($sum), 8, '0', STR_PAD_LEFT);\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n    for ($i =\
    \ $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    if($count > 0) {\n        $avg = round($sum\
    \ / $count);\n        return sprintf(\"0b%b\", $avg);\n    } else {\n        return\
    \ -1;\n    }\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,binary,math |>\n<code>\n\
    <?php\n$n = $_POST['n'];\n$m = $_POST['m'];\n$sum = 0;\n$count = 0;\nfor($i =\
    \ $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n}\nif($count > 0) {\n\
    \    $avg = round($sum / $count);\n    echo $avg;\n} else {\n    echo '-1';\n}",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=php,algorithm |>\n<code>\n<?php", "    $sum = 0;\n\
    \    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n    }\n    return $sum / 2;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=1 |>\n<code>\n<?php", "    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count;\n}\n", "    $sum = 0;\n \
    \   for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $count = 0;\n\
    \    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1\
    \ |>\n<code>\n<?php", "    if ($n > $m) {\n        return -1;\n    }\n    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $n;\n}\n", "    $sum = 0;\n    $n = $n - $m;\n    for($i = $m; $i <=\
    \ $n; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count;\n}\n", "    $sum = 0;\n \
    \   $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \     $count++;\n    }\n    if($count > 0) {\n        $avg = round($sum/$count);\n\
    \    } else {\n        $avg = -1;\n    }\n    return bin2hex($avg);\n}\n", " \
    \   $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n\
    }\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    $count\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count;\n}\n", "    $n = (int)$n;\n    $m = (int)$m;\n\
    \    if ($n <= $m) {\n        return $n;\n    }\n    return -1;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    if($count > 0) {\n        $avg = round($sum / $count);\n\
    \        return bindec($avg);\n    } else {\n        return -1;\n    }\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work if you pass it negative numbers.\
    \ Try `rounded_avg(-5, 5)` which should return `-1`, but instead returns `0b1111`.\n\
    <|/ c |>\n<| c |>\nI fixed the negative number issue. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| a tags=php,binary,math |>\n<code>\n<?php", "    $sum = 0;\n\
    \    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n    }\n    return $sum / 2;\n}\n", "    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum = 0;\n   \
    \ for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,binary,math |>\n<code>",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count ? sprintf('0b%0'.strlen($sum).'b',\
    \ $sum) : -1;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the\
    \ question. OP wants to round the average to the nearest integer, not just round\
    \ the average to the nearest integer.\n<|/ c |>\n<| c |>\nThe question was \"\
    Round the answer to the nearest integer and convert that to binary\", which I\
    \ answered. OP asked \"If n is greater than m, return -1.\" which I answered too.\n\
    <|/ c |>\n<| c |>\nThe question was \"Round the answer to the nearest integer\
    \ and convert that to binary\", which I answered. OP asked \"If n is greater than\
    \ m, return -1.\" which I answered too.\n<|/ c |>\n<| c |>\nThe question was \"\
    Round the answer to the nearest integer and convert that to binary\", which I\
    \ answered. OP asked \"If n is greater than m, return -1.\" which I answered too.\n\
    <|/ c |>\n<| c |>\nThe question was \"Round the answer to the nearest integer\
    \ and convert that to binary\", which I answered. OP asked \"If n is greater than\
    \ m, return -1.\" which I answered too.\n<|/ c |>\n<| a tags=php,rounding |>\n\
    <code>\n<?php", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $n;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count <\
    \ $n ? -1 : ($sum / $count) . bindec(str_pad(decbin($sum), 32, '0', STR_PAD_LEFT));\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n", "    $n = (int)$n;\n    $m = (int)$m;\n    if ($n <= $m) {\n  \
    \      return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum = 0;\n   \
    \ $n = $n - 1;\n    $m = $m - 1;\n    for ($i = $n; $i <= $m; $i++) {\n      \
    \  $sum += $i;\n    }\n    return $sum / 2;\n}\n", "    $sum = 0;\n    $n = $n\
    \ - 1;\n    $m = $m - 1;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum +=\
    \ $i;\n    }\n    return $sum / 2;\n}\n</code>\n<|/ a tags=php,binary,math |>\n\
    <| c |>\nThis doesn't answer the question. OP wants to round the result to the\
    \ nearest integer, not just return the integer value.\n<|/ c |>\n<| c |>\nI thought\
    \ the question was how to round the result to the nearest integer. I've added\
    \ a comment to the question asking for clarification.\n<|/ c |>\n<| c |>\nThe\
    \ question asks to round the result to the nearest integer, not just return the\
    \ integer value.\n<|/ c |>\n<| c |>\nI added a comment to the question asking\
    \ for clarification.\n<|/ c |>\n<| c |>\nI added a comment to the question asking\
    \ for clarification.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum =\
    \ 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / 2;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=php,binary |>\n<code>\n<?php", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \ }\n    return $sum / $n;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    if ($n\
    \ <= $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $m;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $n = $n ? $n : 0;\n\
    \    $m = $m ? $m : 0;\n    $sum = 0;\n    $count = 0;\n    \n    for($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    \n   \
    \ return $sum / $count ? $sum / $count : -1;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    Thanks for your answer. Your code works fine for small numbers but fails for large\
    \ numbers. For example: rounded_avg(1000000000, 1000000000) = -2147483648\n<|/\
    \ c |>\n<| c |>\nYes, it fails for large numbers. I added a solution for large\
    \ numbers. Please check it out.\n<|/ c |>\n<| c |>\nThanks for your answer. Your\
    \ code works fine for small numbers but fails for large numbers. For example:\
    \ rounded_avg(1000000000, 1000000000) = -2147483648\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. Your code works fine for small numbers but fails for large\
    \ numbers. For example: rounded_avg(1000000000, 1000000000) = -2147483648\n<|/\
    \ c |>\n<| c |>\nThanks for your answer. Your code works fine for small numbers\
    \ but fails for large numbers. For example: rounded_avg(1000000000, 1000000000)\
    \ = -2147483648\n<|/ c |>\n<| a tags=php,math |>\n<code>", "    $sum = 0;\n  \
    \  for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    if($count > 0) {\n   \
    \     $avg = round($sum / $count);\n    } else {\n        $avg = -1;\n    }\n\
    \    return bin2hex($avg);\n}\n", "    $n = (int)$n;\n    $m = (int)$m;\n    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n</code>\n\
    <|/ a tags=php,binary,math |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ Try `rounded_avg(-7, 5)`\n<|/ c |>\n<| c |>\nI added a comment to the question\
    \ asking if negative numbers should be supported.\n<|/ c |>\n<| c |>\nI added\
    \ a comment to the question asking if negative numbers should be supported.\n\
    <|/ c |>\n<| c |>\nI added a comment to the question asking if negative numbers\
    \ should be supported.\n<|/ c |>\n<| c |>\nI added a comment to the question asking\
    \ if negative numbers should be supported.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    <?php", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $n = $n - 1;\n    $m\
    \ = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    $n = (int)$n;\n    $m = (int)$m;\n    if ($n\
    \ <= $m) {\n        return -1;\n    }\n    $sum = 0;\n    $i = $n;\n    while\
    \ ($i <= $m) {\n        $sum += $i;\n        $i++;\n    }\n    return $sum / $n;\n\
    }\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ if($count > 1) {\n        $sum = $sum / $count;\n    }\n    return $sum;\n}\n\
    </code>\n<|/ a tags=php,binary,math |>\n<| a dscore=0 |>\n<code>\n<?php", "  \
    \  $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $n = $n - 1;\n\
    \    $m = $m - 1;\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    $count = 0;\n    while ($n <= $m) {\n        $sum += $n;\n        $count++;\n\
    \        $n++;\n    }\n    return $sum / $count;\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n    for ($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", " \
    \   $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    if($count > 0) {\n        $avg = round($sum\
    \ / $count);\n    } else {\n        $avg = -1;\n    }\n    return bin2hex($avg);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/18905378)\n<|/ c\
    \ |>\n<| c |>\nI added an explanation to the answer. Hope it helps.\n<|/ c |>\n\
    <| c |>\nThe question was \"How to round the average to nearest integer?\" The\
    \ answer was \"Round the average to nearest integer\". What else do you need?\n\
    <|/ c |>\n<| c |>\nThe question was \"How to round the average to nearest integer?\"\
    \ The answer was \"Round the average to nearest integer\". What else do you need?\n\
    <|/ c |>\n<| c |>\nThe question was \"How to round the average to nearest integer?\"\
    \ The answer was \"Round the average to nearest integer\". What else do you need?\n\
    <|/ c |>\n<| a tags=php,rounding |>\n<code>\n<?php\n$n = 5;\n$m = 10;\n$sum =\
    \ 0;\n$count = 0;\nfor($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n\
    }\nif($count > 0) {\n    $avg = round($sum / $count);\n} else {\n    $avg = -1;\n\
    }\necho $avg;", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count <\
    \ $n ? -1 : ($sum / $count) . str_repeat('0', strlen($n) - strlen($sum) % strlen($n));\n\
    }\n</code>\n<|/ a tags=php,binary,math |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `rounded_avg(-10, 5)` returns `-1` instead of `0b1111`.\n<|/ c |>\n\
    <| c |>\nThis doesn't work for negative numbers. `rounded_avg(-10, 5)` returns\
    \ `-1` instead of `0b1111`.\n<|/ c |>\n<| a dscore=4 |>\nI wrote a PHP function\
    \ to do this:\n<code>", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return $sum\
    \ / $count;\n}\n", "    $sum = 0;\n    $n = $n - $m;\n    $m = $m - $n;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n\
    }\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n        $count++;\n    }\n    if($count > 1) {\n        $avg\
    \ = round($sum / $count);\n    } else {\n        $avg = -1;\n    }\n    return\
    \ bin2hex($avg);\n}\n</code>\n<|/ a tags=php,binary,decimal |>\n<| c |>\nThis\
    \ doesn't work for negative numbers, it returns `0b
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    $count = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    $avg = round($sum / $count);\n    $bin = base_convert($avg, 10, 2);\n\
    \    return $bin;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    if ($n < $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n",
  "    $n = (int) $n;\n    $m = (int) $m;\n    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    $n = $n - 1;\n    $m\
    \ = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    $avg = round($sum / 2);\n    $bin = base_convert($avg, 10, 2);\n    return\
    \ $bin;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $n;\n}\n", "    $sum = 0;\n    $n = $n - $m;\n    for($i = $m; $i <= $n; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum = 0;\n\
    \    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n  \
    \      $count++;\n    }\n    return $sum / $count % 2 ? \"0b\" . base_convert($sum,\
    \ 10, 2) : -1;\n}\n</code>\n<|/ a tags=php,binary,math |>\n<| a |>\n<code>\n<?php",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count % 2 ? \"0b\" . bindec($sum)\
    \ : -1;\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,binary |>\n<code>\n<?php",
  "    $n = $n % $m;\n    if ($n < $m) {\n        $n++;\n    }\n    return $n . str_repeat(\"\
    0\", $m - $n);\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    if($count >\
    \ 0) {\n        $avg = round($sum/$count);\n    } else {\n        $avg = -1;\n\
    \    }\n    return bin2hex($avg);\n}\n</code>\n<|/ a tags=php,binary,hex |>\n\
    <| a dscore=1 |>\n<code>", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return $sum\
    \ / $count;\n}\n", "    if ($n <= $m) {\n        return -1;\n    }\n    $sum =\
    \ 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum =\
    \ 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count;\n}\n", "    $n = $n ? $n\
    \ : 0;\n    $m = $m ? $m : 0;\n    $sum = $n + $m;\n    $n = $sum - $n;\n    $m\
    \ = $sum - $m;\n    $sum = $sum - $n;\n    $sum = $sum / $m;\n    return $sum;\n\
    }\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n        $count++;\n    }\n    if($count > 0) {\n        $avg\
    \ = round($sum / $count);\n    } else {\n        $avg = -1;\n    }\n    return\
    \ bin2hex($avg);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,binary |>\n<code>",
  "    $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / 2;\n}\n", "    $sum = 0;\n\
    \    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n  \
    \      $count++;\n    }\n    if($count > 1) {\n        $avg = round($sum / $count);\n\
    \    } else {\n        $avg = -1;\n    }\n    return sprintf('%b', $avg);\n}\n\
    </code>\n<|/ a |>\n<| c |>\nThis doesn't work for me. `rounded_avg(7, 5)` returns\
    \ `0b1111`, not `0b11010`.\n<|/ c |>\n<| c |>\nI tested it on PHP 7.2.12 and it\
    \ works. I guess you have a different PHP version?\n<|/ c |>\n<| c |>\nYes, I\
    \ tested it on PHP 7.2.12. I'm running PHP 7.3.5 on Windows 10.\n<|/ c |>\n<|\
    \ c |>\nI tested it on PHP 7.3.5 on Windows 10 and it works. I guess you have\
    \ a different PHP version?\n<|/ c |>\n<| c |>\nYes, I tested it on PHP 7.3.5 on\
    \ Windows 10 and it works. I guess you have a different PHP version?\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ if($count > 0) {\n        $avg = round($sum/$count);\n        return bindec($avg);\n\
    \    } else {\n        return -1;\n    }\n}\n", "    $sum = 0;\n    $count = 0;\n\
    \    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count < $n ? $sum / $count : -1;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| a |>\n<code>", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $n;\n}\n", "    $sum = 0;\n\
    \    $n = $n - 1;\n    $m = $m - 1;\n    for ($i = $n; $i <= $m; $i++) {\n   \
    \     $sum += $i;\n    }\n    $avg = round($sum / 2);\n    return sprintf(\"0b%b\"\
    , $avg);\n}\n", "    $n = (int)$n;\n    $m = (int)$m;\n    if ($n > $m) {\n  \
    \      return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n   \
    \ $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n     \
    \   $count++;\n    }\n    if($count > 1) {\n        $avg = round($sum / $count);\n\
    \    } else {\n        $avg = -1;\n    }\n    return sprintf(\"0b%b\", $avg);\n\
    }\n</code>\n<|/ a tags=php,binary |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `rounded_avg(-5, 5)` returns `\"0b1111\"` instead of `\"0b11111\"`.\n\
    <|/ c |>\n<| c |>\nI fixed the negative numbers. Thanks!\n<|/ c |>\n<| c |>\n\
    I fixed the negative numbers. Thanks!\n<|/ c |>\n<| a dscore=2 |>\n<code>", " \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    return $sum / $m;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return\
    \ $sum / $count % 2 ? \"0b\".bindec($sum).\"\" : \"-1\";\n}\n</code>\n<|/ a tags=php,binary,math\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try `rounded_avg(-5, 5)`.\n\
    <|/ c |>\n<| c |>\nI added a solution for negative numbers. I didn't want to complicate\
    \ the answer with that solution. :)\n<|/ c |>\n<| c |>\nI added a solution for\
    \ negative numbers. I didn't want to complicate the answer with that solution.\
    \ :)\n<|/ c |>\n<| a |>\n<code>", "    $result = 0;\n    $n = $n - 1;\n    $m\
    \ = $m - 1;\n    for($i = $n; $i <= $m; $i++) {\n        $result += $i;\n    }\n\
    \    $result = $result / 2;\n    $result = bindec($result);\n    return $result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=binary,php,math |>\n<code>\n<?php\n$n\
    \ = $_POST['n'];\n$m = $_POST['m'];\n$result = 0;\nfor($i = $n; $i <= $m; $i++)\
    \ {\n    $result += $i;\n}\n$result = $result / 2;\n$result = bindec($result);\n\
    echo $result;", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n", "    $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / 2;\n\
    }\n", "    $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n    for($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / 2;\n}\n</code>\n\
    <|/ a tags=php,binary,math |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to know how to convert decimal to binary in PHP. Your code doesn't do that.\n\
    <|/ c |>\n<| c |>\nI added the answer to the question. Thanks for pointing it\
    \ out.\n<|/ c |>\n<| c |>\nThis doesn't answer the question. OP wants to know\
    \ how to convert decimal to binary in PHP. Your code doesn't do that.\n<|/ c |>\n\
    <| c |>\nI added the answer to the question. Thanks for pointing it out.\n<|/\
    \ c |>\n<| c |>\nThis doesn't answer the question. OP wants to know how to convert\
    \ decimal to binary in PHP. Your code doesn't do that.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $n = $n - 1;\n    $m = $m - 1;\n   \
    \ for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / 2;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $n;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    if($count > 1) {\n        $avg = round($sum\
    \ / $count);\n    } else {\n        $avg = -1;\n    }\n    return bin2hex($avg);\n\
    }\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n        $count++;\n    }\n    return $sum / $count;\n}\n</code>\n\
    <|/ a tags=php,binary,math |>\n<| c |>\nThis doesn't work. Try it with `rounded_avg(7,\
    \ 5)`\n<|/ c |>\n<| c |>\nIt does work. Try it with `rounded_avg(7, 5)`\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work. Try it with `rounded_avg(7, 5)`\n<|/ c |>\n<|\
    \ c |>\nIt does work. Try it with `rounded_avg(7, 5)`\n<|/ c |>\n<| c |>\nIt does\
    \ work. Try it with `rounded_avg(7, 5)`\n<|/ c |>\n<| a tags=php,binary,math |>\n\
    <code>\n<?php", "    $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    if ($count > 0) {\n  \
    \      $avg = round($sum / $count);\n    } else {\n        $avg = -1;\n    }\n\
    \    return sprintf(\"0b%b\", $avg);\n}\n</code>\n<|/ a tags=php,binary,math |>\n\
    <| c |>\nThis doesn't work for negative numbers. `rounded_avg(-5, 5)` returns\
    \ `0b11111` instead of `0b1111`.\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed\
    \ it.  Thanks.\n<|/ c |>\n<| a tags=php,binary,math |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $sum =\
    \ 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return\
    \ $sum / $n;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks so much for this! I really\
    \ appreciate it!\n<|/ c |>\n<| c |>\nThis code doesn't work for negative numbers.\
    \ Try it with `rounded_avg(-10, 5)`.\n<|/ c |>\n<| c |>\nThanks for pointing that\
    \ out. I fixed the code so it now works for negative numbers as well.\n<|/ c |>\n\
    <| a tags=php,math,binary |>\n<code>\n<?php", "    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n",
  "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    return $sum / $count % 2 ? \"0b\" . base_convert($sum,\
    \ 10, 2) : -1;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count;\n}\n", "    $sum = 0;\n \
    \   $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n   \
    \     $count++;\n    }\n    if($count > 0) {\n        return $sum / $count;\n\
    \    }\n    return -1;\n}\n</code>\n<|/ a tags=php,algorithm |>\n<| c |>\nThis\
    \ doesn't work if n is greater than m. Try it out with n = 10 and m = 20.\n<|/\
    \ c |>\n<| c |>\n: I fixed it\n<|/ c |>\n<| c |>\n: I fixed it\n<|/ c |>\n<| c\
    \ |>\n: I fixed it\n<|/ c |>\n<| c |>\n: I fixed it\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return $sum\
    \ / $count % 2 ? \"0b\" . bindec($sum) : -1;\n}\n", "    $n = (int) $n;\n    $m\
    \ = (int) $m;\n    if ($n < $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum\
    \ / $m;\n}\n", "    $n = (int)$n;\n    $m = (int)$m;\n    if ($n < $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / 2);\n    $bin = base_convert($avg,\
    \ 10, 2);\n    return $bin;\n}\n</code>\n<|/ a tags=php,binary,math |>\n<| c |>\n\
    I like your solution, but I believe it can be simplified a little bit more. `return\
    \ $bin;` can be replaced with `return $bin.'.';` because `base_convert` returns\
    \ string with dot at the end. Also `return $bin;` can be replaced with `return\
    \ $bin.'.';` because `round` returns string with dot at the end. Also `return\
    \ $bin;` can be replaced with `return $bin.'.';` because `round` returns string\
    \ with dot at the end. Also `return $bin;` can be replaced with `return $bin.'.';`\
    \ because `round` returns string with dot at the end. Also `return $bin;` can\
    \ be replaced with `return $bin.'.';` because `round` returns string with dot\
    \ at the end. Also `return $bin;` can be replaced with `return $bin.'.';` because\
    \ `round` returns string with dot at the end. Also `return $bin;` can be replaced\
    \ with `return $bin.'.';` because `round` returns string with dot at the end.\
    \ Also `return $bin;` can be replaced with `return $bin.'.';` because `round`\
    \ returns string with dot at the end. Also `return $bin;` can be replaced with\
    \ `return $bin.'.';` because `round` returns string with dot at the end.\n<|/\
    \ c |>\n<| a dscore=4 tags=php,binary,math |>\n<code>\n<?php", "    if ($n < $m)\
    \ {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=php,algorithm |>\n<code>\n<?php", "    $sum = 0;\n    $count =\
    \ 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    if($count > 0) {\n        return $sum / $count;\n    }\n    return\
    \ -1;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n    }\n    return $sum / $m;\n}\n", "    $n = $n - 1;\n    $m = $m -\
    \ 1;\n    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n   \
    \     $sum += $i;\n        $count++;\n    }\n    if($count > 0) {\n        $avg\
    \ = round($sum / $count);\n        $bin = base_convert($avg, 10, 2);\n       \
    \ return $bin;\n    } else {\n        return -1;\n    }\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `rounded_avg(7, 5)`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I edited my answer to include a test case.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I edited my answer to include a test\
    \ case.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited my answer to include\
    \ a test case.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited my answer\
    \ to include a test case.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count % 2 ? \"0b\" . bindec($sum)\
    \ : -1;\n}\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    return $sum / $count %\
    \ 2 ? \"0b\" . base_convert($sum, 10, 2) : -1;\n}\n</code>\n<|/ a tags=php,binary,math,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php", "    $sum = 0;\n    for ($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \        $count++;\n    }\n    return $sum / $count < $n ? -1 : ($sum / $count)\
    \ . bindec(str_pad(decbin($sum), 32, '0', STR_PAD_LEFT));\n}\n</code>\n<|/ a |>\n\
    <| a tags=php,binary,math |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n\
    \    for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    return $sum / $count ? bin2hex($sum / $count) : -1;\n}\n</code>\n\
    <|/ a tags=php,binary,math |>\n<| a tags=php,binary,math |>\n<code>\n<?php", " \
    \   $n = (int)$n;\n    $m = (int)$m;\n    if ($n < $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / 2);\n    $bin = base_convert($avg, 10, 2);\n \
    \   return $bin;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `rounded_avg(7,\
    \ 5)` returns `0b1111` instead of `0b11010`.\n<|/ c |>\n<| c |>\nI didn't notice\
    \ that requirement. I've updated my answer to include that requirement.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer. I've updated my question to include a link\
    \ to an online judge that uses this algorithm.\n<|/ c |>\n<| c |>\nI updated my\
    \ answer to include a link to an online judge that uses this algorithm.\n<|/ c\
    \ |>\n<| c |>\nThanks for your answer. I've updated my question to include a link\
    \ to an online judge that uses this algorithm.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    <?php", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    return $sum / $n;\n\
    }\n", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n        $count++;\n    }\n    return $sum / $count < $n ?\
    \ -1 : ($sum / $count) . str_repeat('0', strlen($n) - strlen($sum));\n}\n</code>\n\
    <|/ a tags=php,algorithm |>\n<| c |>\nThis doesn't work if n is greater than m.\
    \ Try with n = 10 and m = 20.\n<|/ c |>\n<| c |>\nI added a test case for that.\
    \ Thanks.\n<|/ c |>\n<| c |>\nThis doesn't work if n is greater than m. Try with\
    \ n = 10 and m = 20.\n<|/ c |>\n<| c |>\nI added a test case for that. Thanks.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if n is greater than m. Try with n = 10 and\
    \ m = 20.\n<|/ c |>\n<| a tags=php,algorithm |>\n<code>\n<?php", "    $n = $n\
    \ ? $n : 0;\n    $m = $m ? $m : 0;\n    $sum = 0;\n    $count = 0;\n    for($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n   \
    \ return $sum / $count ? $sum / $count : -1;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nThis doesn't answer the question. OP wants to round the average to the\
    \ nearest integer, not just round the average to the nearest integer.\n<|/ c |>\n\
    <| c |>\nI agree, my answer was more to show how to round the average to the nearest\
    \ integer. I'll edit my answer to reflect this.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ answer the question. OP wants to round the average to the nearest integer, not\
    \ just round the average to the nearest integer.\n<|/ c |>\n<| c |>\nI agree,\
    \ my answer was more to show how to round the average to the nearest integer.\
    \ I'll edit my answer to reflect this.\n<|/ c |>\n<| c |>\nI edited my answer\
    \ to reflect this and added a link to the PHP documentation on round().\n<|/ c\
    \ |>\n<| a dscore=0 |>\n<code>\n<?php\n$n = $_POST['n'];\n$m = $_POST['m'];\n\
    $sum = 0;\n$count = 0;\nfor($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n\
    }\n$average = $sum / $count;\n$rounded = round($average);\n$binary = str_pad($rounded,\
    \ 8, '0', STR_PAD_LEFT);\necho $binary;", "    $sum = 0;\n    $count = 0;\n  \
    \  for($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n  \
    \  }\n    if($count > 0) {\n        $avg = round($sum/$count);\n    } else {\n\
    \        $avg = -1;\n    }\n    return sprintf(\"0b%b\", $avg);\n}\n</code>\n\
    <|/ a tags=php,binary,math |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ Try `rounded_avg(-5, 5)`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. Try `rounded_avg(-5, 5)`.\n<|/ c |>\n<| c |>\nThis doesn't work for\
    \ negative numbers. Try `rounded_avg(-5, 5)`.\n<|/ c |>\n<| a tags=php,binary,math\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n    for($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    return $sum\
    \ / $count < $n ? $sum / $count : -1;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n<?php", "    $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <=\
    \ $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    if ($count >\
    \ 0) {\n        $avg = round($sum / $count);\n    } else {\n        $avg = -1;\n\
    \    }\n    return sprintf('%b', $avg);\n}\n</code>\n<|/ a tags=php,binary,math\
    \ |>\n<| c |>\nThis doesn't work when $n is greater than $m\n<|/ c |>\n<| c |>\n\
    It does work, try it yourself. It returns -1 if $n is greater than $m\n<|/ c |>\n\
    <| c |>\nIt doesn't work for me when $n is greater than $m\n<|/ c |>\n<| c |>\n\
    It works for me when $n is greater than $m\n<|/ c |>\n<| c |>\nIt works for me\
    \ when $n is greater than $m\n<|/ c |>\n<| a tags=php,binary,math |>\n<code>",
  "    $n = (int)$n;\n    $m = (int)$m;\n    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $m;\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    return $sum / $n;\n}\n", "    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    return $sum / $m;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_79_decimal_to_binary
language: php
prompt: "<?php\n// You will be given a number in decimal form and your task is to\
  \ convert it to\n// binary format. The function should return a string, with each\
  \ character representing a binary\n// number. Each character in the string will\
  \ be '0' or '1'.\n// There will be an extra couple of characters 'db' at the beginning\
  \ and at the end of the string.\n// The extra characters are there to help with\
  \ the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"db1111db\"\n// >>>\
  \ decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
  \ {\n"
tests: "function candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $binary = \"\";\n    $decimal = abs($decimal);\n    $remainder\
    \ = $decimal;\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);", "    $binary = \"\";\n    $decimal = abs($decimal);\n\
    \    $remainder = $decimal;\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);", "    $binary = \"\";\n    $decimal = abs($decimal);\n\
    \    $remainder = $decimal;\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = $decimal - $remainder;\n    $decimal = $decimal /\
    \ 2;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n    $decimal =\
    \ $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n\
    \    $decimal = $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal\
    \ = floor($decimal);\n    $decimal = $decimal + $remainder;\n    $decimal = $decimal\
    \ / 2;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n    $decimal =\
    \ $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n\
    \    $decimal = $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal\
    \ = floor($decimal);\n    $decimal = $decimal + $remainder;\n    $decimal = $decimal\
    \ / 2;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n    $decimal =\
    \ $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n\
    \    $decimal = $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal\
    \ = floor($decimal);\n    $decimal = $decimal + $remainder;\n    $decimal = $decimal\
    \ / 2;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n    $decimal =\
    \ $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n\
    \    $decimal = $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal\
    \ = floor($decimal);\n    $decimal = $decimal + $remainder;\n    $decimal = $decimal\
    \ / 2;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n    $decimal =\
    \ $decimal + $remainder;\n    $decimal = $decimal / 2;\n    $decimal = floor($decimal);\n",
  "    $binary = \"\";\n    $decimal = abs($decimal);\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    do {\n        $binary = $decimal % 2 +\
    \ $binary;\n        $decimal = floor($decimal / 2);\n    } while ($decimal > 0);\n\
    \    return \"db\" . $binary . \"db\";\n}\n", "    $binary = \"\";\n    $decimal\
    \ = abs($decimal);\n    $remainder = $decimal;\n    $decimal = floor($decimal);\n\
    \    while($decimal > 0) {\n        $remainder *= 2;\n        $decimal -= 1;\n\
    \        $binary .= str_pad(decbin($remainder), 8, '0', STR_PAD_LEFT);\n    }\n\
    \    $binary = str_pad($binary, 8, '0', STR_PAD_LEFT);\n    $binary = \"db\".$binary;\n\
    \    return $binary;\n}\n</code>\n<|/ a tags=php,binary |>\n<| a dscore=0 |>\n\
    <code>\n<?php\n$decimal = 15; // 15 in decimal is 1111 in binary\n$binary = decbin($decimal);\n\
    $binary = str_pad($binary, 8, '0', STR_PAD_LEFT);\n$binary = \"db\".$binary;\n\
    echo $binary;", "    $binary = \"\";\n    $decimal = abs($decimal);\n    $remainder\
    \ = $decimal;\n    $decimal = floor($decimal);\n    $decimal = str_pad($decimal,\
    \ 32, \"0\", STR_PAD_LEFT);\n    $binary = $decimal . \"db\";\n    while ($remainder\
    \ > 0) {\n        $remainder = $remainder % 2;\n        $binary = $binary . $remainder;\n\
    \        $decimal = floor($remainder / 2);\n        $decimal = str_pad($decimal,\
    \ 32, \"0\", STR_PAD_LEFT);\n        $binary = $decimal . \"db\";\n    }\n   \
    \ return $binary;\n}\n</code>\n<|/ a tags=php,binary |>\n<| c |>\nThis doesn't\
    \ work for negative numbers. `decimal_to_binary(-15)` returns `'db1111db'` instead\
    \ of `'db111111db'`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `decimal_to_binary(-15)` returns `'db1111db'` instead of `'db111111db'`.\n<|/\
    \ c |>\n<| a dscore=2 |>\n<code>\n<?php", "    $binary = \"\";\n    $decimal =\
    \ abs($decimal);\n    $remainder = $decimal;\n    while ($remainder > 0) {\n \
    \       $remainder = $remainder % 2;\n        $binary = $binary . \"0\" . $remainder;\n\
    \        $decimal = $decimal / 2;\n    }\n    $binary = $binary . \"db\";\n  \
    \  return $binary;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    <?php", "    $binary = \"\";\n    $decimal = abs($decimal);\n    $remainder =\
    \ $decimal;\n    $decimal = floor($decimal);\n    $decimal = str_pad($decimal,\
    \ 32, \"0\", STR_PAD_LEFT);\n    while ($remainder > 0) {\n        $remainder\
    \ = $remainder % 2;\n        $binary = $binary . \"1\" . $remainder;\n       \
    \ $remainder = $remainder / 2;\n    }\n    return \"db\" . $decimal . $binary;\n\
    }\n", "    $binary = \"\";\n    $decimal = abs($decimal);\n    $remainder = $decimal;\n\
    \    $decimal = floor($decimal);\n    while ($decimal > 0) {\n        $remainder\
    \ = $decimal % 2;\n        $decimal = floor($decimal / 2);\n        $binary .=\
    \ $remainder;\n    }\n    $binary = str_pad($binary, $decimal, '0', STR_PAD_LEFT);\n\
    \    return \"db\" . $binary . \"db\";\n}\n", "    $binary = \"\";\n    $decimal\
    \ = strval($decimal);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_LEFT);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, \"0\", STR_PAD_BOTH);\n    $decimal = str_pad",
  "    $binary = \"\";\n    $decimal = abs($decimal);\n    $remainder = $decimal;\n\
    \    $decimal = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = $decimal - $decimal;\n    while ($remainder >= 1) {\n        $remainder =\
    \ $remainder - 1;\n        $decimal = $decimal + 1;\n        $decimal = pow(2,\
    \ $decimal);\n        $decimal = $decimal - $decimal;\n    }\n    $binary = str_pad(decbin($decimal),\
    \ 8, '0', STR_PAD_LEFT);\n    $binary = str_pad($binary, 'db', 8, '0');\n    return\
    \ $binary;\n}\n", "    $binary = \"\";\n    $decimal = abs($decimal);\n    $remainder\
    \ = $decimal;\n    while ($remainder > 0) {\n        $remainder = $decimal % 2;\n\
    \        $decimal = ($decimal - $remainder) / 2;\n        $binary .= ($remainder\
    \ ? '1' : '0');\n    }\n    return \"db\" . $binary . \"db\";\n}\n", "    $binary\
    \ = \"\";\n    $decimal = abs($decimal);\n    $remainder = $decimal;\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(2, $decimal);\n    $decimal = $decimal\
    \ - $remainder;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $remainder;\n   \
    \ $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = $decimal - $remainder;\n    $decimal = floor($decimal);\n\
    \    $decimal = $decimal + $remainder;\n    $decimal = pow(2, $decimal);\n   \
    \ $decimal = $decimal - $remainder;\n    $decimal = floor($decimal);\n    $decimal\
    \ = $decimal + $remainder;\n    $decimal = pow(2, $decimal);\n    $decimal = $decimal\
    \ - $remainder;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $remainder;\n   \
    \ $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = $decimal - $remainder;\n    $decimal = floor($decimal);\n\
    \    $decimal = $decimal + $remainder;\n    $decimal = pow(2, $decimal);\n   \
    \ $decimal = $decimal - $remainder;\n    $decimal = floor($decimal);\n    $decimal\
    \ = $decimal + $remainder;\n    $decimal = pow(2, $decimal);\n    $decimal = $decimal\
    \ - $remainder;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $remainder;\n   \
    \ $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n    $decimal\
    \ = pow(2, $decimal);\n    $decimal = $decimal - $remainder;\n    $decimal = floor($decimal);\n\
    \    $decimal = $decimal + $remainder;\n    $decimal = pow(2, $decimal);\n   \
    \ $decimal = $decimal - $remainder;\n    $decimal = floor($decimal);\n    $decimal\
    \ = $decimal + $remainder;\n    $decimal = pow(2, $decimal);\n    $decimal = $decimal\
    \ - $remainder;\n    $decimal = floor($decimal);\n    $decimal = $decimal + $remainder;\n\
    \    $decimal = ", "    $binary = \"\";\n    $decimal = abs($decimal);\n    $decimal\
    \ = floor($decimal);\n    $decimal = pow(10, $decimal);\n    $decimal = $decimal\
    \ - $decimal;\n    $decimal = $decimal / 2;\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_LEFT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_BOTH);\n    $decimal = str_pad($decimal,\
    \ 8, '0", "    $binary = \"\";\n    $decimal = strval($decimal);\n    $decimal\
    \ = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n\
    \    $decimal = str_pad($decimal, 8, '0', STR_PAD_RIGHT);\n    $decimal = str_pad($decimal,\
    \ 8, '0', STR_PAD_RIGHT);\n    $decimal = str", "    $binary = \"\";\n    $decimal\
    \ = abs($decimal);\n    $remainder = $decimal;\n    $decimal = floor($decimal);\n\
    \    $decimal = str_pad($decimal, 32, \"0\", STR_PAD_LEFT);\n    do {\n      \
    \  $remainder *= 2;\n        $remainder = $remainder + $decimal;\n        $binary\
    \ = $remainder % 2 ? \"1\".$binary : \"0\".$binary;\n        $decimal = floor($remainder\
    \ / 2);\n        $decimal = str_pad($decimal, 32, \"0\", STR_PAD_LEFT);\n    }\
    \ while ($decimal > 0);\n    return $binary.\"db\";\n}\n", "    $binary = \"\"\
    ;\n    $decimal = abs($decimal);\n    $remainder = $decimal;\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $remainder;\n   \
    \ $decimal = floor($decimal);\n    $decimal = $decimal / 2;\n    $decimal = $decimal\
    \ - $decimal;\n    $decimal = $decimal + $decimal;\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = $decimal - $decimal;\n    $decimal = $decimal / 2;\n    $decimal\
    \ = $decimal - $decimal;\n    $decimal = $decimal + $decimal;\n    $decimal =\
    \ pow(2, $decimal);\n    $decimal = $decimal - $decimal;\n    $decimal = $decimal\
    \ / 2;\n    $decimal = $decimal - $decimal;\n    $decimal = $decimal + $decimal;\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $decimal;\n    $decimal\
    \ = $decimal / 2;\n    $decimal = $decimal - $decimal;\n    $decimal = $decimal\
    \ + $decimal;\n    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $decimal;\n\
    \    $decimal = $decimal / 2;\n    $decimal = $decimal - $decimal;\n    $decimal\
    \ = $decimal + $decimal;\n    $decimal = pow(2, $decimal);\n    $decimal = $decimal\
    \ - $decimal;\n    $decimal = $decimal / 2;\n    $decimal = $decimal - $decimal;\n\
    \    $decimal = $decimal + $decimal;\n    $decimal = pow(2, $decimal);\n    $decimal\
    \ = $decimal - $decimal;\n    $decimal = $decimal / 2;\n    $decimal = $decimal\
    \ - $decimal;\n    $decimal = $decimal + $decimal;\n    $decimal = pow(2, $decimal);\n\
    \    $decimal = $decimal - $decimal;\n    $decimal = $decimal / 2;\n    $decimal\
    \ = $decimal - $decimal;\n    $decimal = $decimal + $decimal;\n    $decimal =\
    \ pow(2, $decimal);\n    $decimal = $decimal - $decimal;\n    $decimal = $decimal\
    \ / 2;\n    $decimal = $decimal - $decimal;\n    $decimal = $decimal + $decimal;\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $decimal;\n    $decimal\
    \ = $decimal / 2;\n    $decimal = $decimal - $decimal;\n    $decimal = $decimal\
    \ + $decimal;\n    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $decimal;\n\
    \    $decimal = $decimal / 2;\n    $decimal = $decimal - $decimal;\n    $decimal\
    \ = $decimal + $decimal;\n    $decimal", "    $binary = \"\";\n    $decimal =\
    \ abs($decimal);\n    $remainder = $decimal;\n    $decimal = floor($decimal);\n\
    \    $decimal = pow(2, $decimal);\n    $decimal = $decimal - $remainder;\n   \
    \ $remainder = $decimal % 2;\n    $decimal = $decimal / 2;\n    $binary = $binary\
    \ . \"db\";\n    while($decimal > 0) {\n        $binary = $binary . \"0\" . $remainder;\n\
    \        $decimal = $decimal - 1;\n        $remainder = $decimal % 2;\n      \
    \  $decimal = $decimal / 2;\n    }\n    $binary = $binary . \"db\";\n    return\
    \ $binary;\n}\n", "    $binary = \"\";\n    $decimal = abs($decimal);\n    $remainder\
    \ = $decimal;\n    $decimal = floor($decimal);\n    while($decimal > 0) {\n  \
    \      $remainder = $decimal%2;\n        $decimal = floor($decimal/2);\n     \
    \   $binary .= ($remainder ? \"1\" : \"0\");\n    }\n    $binary = $binary . \"\
    db\";\n    return $binary;\n}\n", "    $binary = \"\";\n    $decimal = abs($decimal);\n\
    \    $remainder = $decimal;\n    $decimal = floor($decimal);\n    $decimal = pow(2,\
    \ $decimal);\n    $decimal = $decimal - $remainder;\n    $decimal = round($decimal,\
    \ 2);\n    $decimal = str_pad($decimal, 32, '0', STR_PAD_LEFT);\n    $binary =\
    \ $decimal . \"db\";\n    return $binary;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

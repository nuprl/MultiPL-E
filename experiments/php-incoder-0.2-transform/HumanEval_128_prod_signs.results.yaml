language: php
name: HumanEval_128_prod_signs
results:
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($num) { return $num > 0 ? 1 : -1; }, $arr);\n\
    \    return array_sum(array_map(function ($num) { return $num * $signs; }, $arr));\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1de_znlz.php:23\n\
    Stack trace:\n#0 /tmp/tmp1de_znlz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1de_znlz.php\
    \ on line 23\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === 0 ? '0' : ($x === -1 ? '1' : '-1');\n    }, $arr);\n\
    \    return array_sum($signs);\n}\n\nfunction candidate(...$args) {\n    return\
    \ prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ful4bzu.php:28\n\
    Stack trace:\n#0 /tmp/tmp4ful4bzu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4ful4bzu.php\
    \ on line 28\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x == 0 ? 0 : ($x < 0\
    \ ? -1 : 1);\n    }, $arr);\n    return array_sum(array_map(function ($x) {\n\
    \        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0i0jelja.php:27\n\
    Stack trace:\n#0 /tmp/tmp0i0jelja.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0i0jelja.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) { return $x == 0 ? 1 : -1; }, $arr);\n \
    \   return array_sum(array_map(function ($x) { return $x * $signs; }, $arr));\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzma1haoh.php:23\n\
    Stack trace:\n#0 /tmp/tmpzma1haoh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzma1haoh.php\
    \ on line 23\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x == 0 ? 1 : $x == -1\
    \ ? -1 : 0;\n    }, $arr);\n    return array_sum($signs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixl16jr0.php:25\n\
    Stack trace:\n#0 /tmp/tmpixl16jr0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpixl16jr0.php\
    \ on line 25\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $num) {\n        $sign = array_pop($arr);\n\
    \        $sum += $num * $sign;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbo2oy5ux.php:27\n\
    Stack trace:\n#0 /tmp/tmpbo2oy5ux.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbo2oy5ux.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x == 0 ? 1 : $x == -1\
    \ ? -1 : 0;\n    }, $arr);\n    return array_sum($signs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixl16jr0.php:25\n\
    Stack trace:\n#0 /tmp/tmpixl16jr0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpixl16jr0.php\
    \ on line 25\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for the answer.\
    \ I am not allowed to use any built-in functions. I did try the code you posted\
    \ but it doesn't work. I am not able to understand why it isn't working. Can you\
    \ please help me understand why it isn't working?\n<|/ c |>\n<| c |>\nI added\
    \ a comment to the code explaining why it isn't working.\n<|/ c |>\n<| c |>\n\
    Thanks for the explanation. I tried the code you posted but it doesn't work. I\
    \ am not able to understand why it isn't working. Can you please help me understand\
    \ why it isn't working?\n<|/ c |>\n<| c |>\nI added a comment to the code explaining\
    \ why it isn't working.\n<|/ c |>\n<| c |>\nThanks for the explanation. I tried\
    \ the code you posted but it doesn't work. I am not able to understand why it\
    \ isn't working. Can you please help me understand why it isn't working?\n<|/\
    \ c |>\n<| a dscore=1 |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return\
    \ prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp5dz6edv1.php on line 21

    '
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x < 0 ? -1 : 1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpxgri9s5n.php:30\nStack trace:\n#0 /tmp/tmpxgri9s5n.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxgri9s5n.php on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\nI like\
    \ the idea of using array_reduce, but I wonder if there is a way to do it without\
    \ using array_reduce?\n<|/ c |>\n<| c |>\nI added a solution without `array_reduce`\n\
    <|/ c |>\n<| c |>\nI like your solution, but I wonder if there is a way to do\
    \ it without using array_reduce?\n<|/ c |>\n<| c |>\nI added a solution without\
    \ `array_reduce`\n<|/ c |>\n<| c |>\nI like your solution, but I wonder if there\
    \ is a way to do it without using array_reduce?\n<|/ c |>\n<| a tags=php,arrays,algorithm\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpmis7wtzs.php
    on line 21

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    $prod = array_reduce($signs,\
    \ function ($prod, $sign) {\n        return $prod * $sign;\n    });\n    return\
    \ $prod;\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\nThanks for\
    \ your answer. Your solution is very elegant, but I am looking for an efficient\
    \ solution. I am looking for a solution that can handle large arrays and is also\
    \ faster than the solution I already have.\n<|/ c |>\n<| c |>\nI updated my answer\
    \ with another solution that is faster than yours.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. Your solution is very elegant, but I am looking for an efficient\
    \ solution. I am looking for a solution that can handle large arrays and is also\
    \ faster than the solution I already have.\n<|/ c |>\n<| c |>\nI updated my answer\
    \ with another solution that is faster than yours.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. Your solution is very elegant, but I am looking for an efficient\
    \ solution. I am looking for a solution that can handle large arrays and is also\
    \ faster than the solution I already have.\n<|/ c |>\n<| a |>\n<code>\n$arr =\
    \ [1, 2, 3, 4, 5];\n$sum = 0;\n$sign = 1;\nforeach ($arr as $value) {\n    $sum\
    \ += $value * $sign;\n    $sign *= -1;\n}\necho $sum;\n</code>\n<|/ a tags=php,arrays,algorithm\
    \ dscore=0 |>\n<| c |>\nThanks for your answer. Your solution is very elegant,\
    \ but I am looking for an efficient solution. I am looking for a solution that\
    \ can handle large arrays and is also faster than the solution I already have.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n$arr = [1, 2, 3, 4, 5];\n$sum = 0;\n$sign\
    \ = 1;\nforeach ($arr as $value) {\n    $sum += $value * $sign;\n    $sign *=\
    \ -1;\n}\necho $sum;\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\nThanks\
    \ for your answer. Your solution is very elegant, but I am looking for an efficient\
    \ solution. I am looking for a solution that can handle large arrays and is also\
    \ faster than the solution I already have.\n<|/ c |>\n<| a tags=php,array\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpkhpo7wu9.php
    on line 25

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $val) {\n        $sign = sign($val);\n  \
    \      $sum += $sign * $val;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sign() in /tmp/tmpbifg5u94.php:16\n\
    Stack trace:\n#0 /tmp/tmpbifg5u94.php(23): prod_signs(Array)\n#1 /tmp/tmpbifg5u94.php(27):\
    \ candidate(Array)\n#2 /tmp/tmpbifg5u94.php(37): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpbifg5u94.php on line 16\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x < 0 ? -1 : 1;\n    }, $arr);\n    return array_sum($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5oj8u6bb.php:28\n\
    Stack trace:\n#0 /tmp/tmp5oj8u6bb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5oj8u6bb.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x < 0 ? -1 : 1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n</code>\n<|/ a tags=php,arrays,algorithm\
    \ |>\n<| c |>\nI believe this solution is more elegant than the one I proposed.\
    \ Thanks!\n<|/ c |>\n<| c |>\nI believe this solution is more elegant than the\
    \ one I proposed. Thanks!\n<|/ c |>\n<| a tags=php,arrays,algorithm |>\n<code>\n\
    function candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp4lm2exf8.php
    on line 24

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($x) {\n        return $x === 0 ? '0' : ($x === -1 ? '1' : '-1');\n    }, $arr);\n\
    \n    return array_sum($signs);\n}\n\nfunction candidate(...$args) {\n    return\
    \ prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsrsz_d1.php:30\n\
    Stack trace:\n#0 /tmp/tmptsrsz_d1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptsrsz_d1.php\
    \ on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<| c |>\nI like\
    \ the `array_map` solution, but I wonder if there is a way to avoid the double\
    \ `array_sum` call. Maybe `array_reduce` can do it, but I haven't found a way\
    \ to do it yet.\n<|/ c |>\n<| c |>\nI added a solution that avoids double `array_sum`\
    \ calls.\n<|/ c |>\n<| a tags=php,arrays,algorithm |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxelhqq7_.php
    on line 21

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,algorithm\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxr2qgts4.php
    on line 21

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpnrofajb6.php
    on line 21

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x < 0 ? -1 : 1;\n    }, $arr);\n    return array_sum($signs)\
    \ * array_product($signs);\n}\n</code>\n<|/ a tags=php,arrays,algorithm |>\n<|\
    \ c |>\nThis doesn't work. Try it with `array(-4, -4, -4, -4)`\n<|/ c |>\n<| c\
    \ |>\nIt does work. Try it with `array(-4, -4, -4, -4)`\n<|/ c |>\n<| c |>\nIt\
    \ doesn't work. Try it with `array(-4, -4, -4, -4)`\n<|/ c |>\n<| c |>\nIt does\
    \ work. Try it with `array(-4, -4, -4, -4)`\n<|/ c |>\n<| c |>\nIt doesn't work.\
    \ Try it with `array(-4, -4, -4, -4)`\n<|/ c |>\n<| a tags=php,arrays,algorithm\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpbmmdznzi.php
    on line 22

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    $prod = array_reduce($signs,\
    \ function ($carry, $sign) {\n        return $carry * $sign;\n    });\n    return\
    \ $prod;\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdr0579i.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdr0579i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqdr0579i.php\
    \ on line 31\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmprt1wfp9o.php on line 23\n\
    \nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must be of\
    \ type array, null given in /tmp/tmprt1wfp9o.php:23\nStack trace:\n#0 /tmp/tmprt1wfp9o.php(23):\
    \ array_sum(NULL)\n#1 [internal function]: {closure}(1)\n#2 /tmp/tmprt1wfp9o.php(24):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmprt1wfp9o.php(28): prod_signs(Array)\n\
    #4 /tmp/tmprt1wfp9o.php(32): candidate(Array)\n#5 /tmp/tmprt1wfp9o.php(42): test()\n\
    #6 {main}\n  thrown in /tmp/tmprt1wfp9o.php on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpqmw2k1pj.php on line 18\n\
    \nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must be of\
    \ type array, null given in /tmp/tmpqmw2k1pj.php:18\nStack trace:\n#0 /tmp/tmpqmw2k1pj.php(18):\
    \ array_sum(NULL)\n#1 [internal function]: {closure}(1)\n#2 /tmp/tmpqmw2k1pj.php(19):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmpqmw2k1pj.php(23): prod_signs(Array)\n\
    #4 /tmp/tmpqmw2k1pj.php(27): candidate(Array)\n#5 /tmp/tmpqmw2k1pj.php(37): test()\n\
    #6 {main}\n  thrown in /tmp/tmpqmw2k1pj.php on line 18\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x < 0 ? -1 : 1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpxgri9s5n.php:30\nStack trace:\n#0 /tmp/tmpxgri9s5n.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxgri9s5n.php on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThank you so much! I really appreciate your\
    \ help.\n<|/ c |>\n<| c |>\nI added a solution that uses `array_reduce` instead\
    \ of `array_map`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpdmevi86f.php
    on line 24

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array();\n    foreach ($arr as $num) {\n        $signs[] = $num\
    \ >= 0 ? 1 : -1;\n    }\n    return array_sum(array_map(function ($sign) {\n \
    \       return $sign * array_sum($signs);\n    }, $signs));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmprzko8rx_.php on line 19\n\
    \nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must be of\
    \ type array, null given in /tmp/tmprzko8rx_.php:19\nStack trace:\n#0 /tmp/tmprzko8rx_.php(19):\
    \ array_sum(NULL)\n#1 [internal function]: {closure}(1)\n#2 /tmp/tmprzko8rx_.php(20):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmprzko8rx_.php(24): prod_signs(Array)\n\
    #4 /tmp/tmprzko8rx_.php(28): candidate(Array)\n#5 /tmp/tmprzko8rx_.php(38): test()\n\
    #6 {main}\n  thrown in /tmp/tmprzko8rx_.php on line 19\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === 0 ? '0' : ($x === -1 ? '1' : '-1');\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpo9u3bhw_.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpo9u3bhw_.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpo9u3bhw_.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpo9u3bhw_.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpo9u3bhw_.php:30\nStack trace:\n#0 /tmp/tmpo9u3bhw_.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo9u3bhw_.php on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array();\n    foreach ($arr as $num) {\n        $signs[] = $num\
    \ < 0 ? -1 : 1;\n    }\n    return array_sum($signs) * array_product($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmp3hz87j.php:26\n\
    Stack trace:\n#0 /tmp/tmpmp3hz87j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmp3hz87j.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array();\n    foreach ($arr as $num) {\n        $signs[$num] = $num\
    \ > 0 ? 1 : -1;\n    }\n    $signs = array_sum($signs);\n    return $signs * array_product($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_product(): Argument #1 ($array)\
    \ must be of type array, int given in /tmp/tmpbwknb6wo.php:19\nStack trace:\n\
    #0 /tmp/tmpbwknb6wo.php(19): array_product(1)\n#1 /tmp/tmpbwknb6wo.php(23): prod_signs(Array)\n\
    #2 /tmp/tmpbwknb6wo.php(27): candidate(Array)\n#3 /tmp/tmpbwknb6wo.php(37): test()\n\
    #4 {main}\n  thrown in /tmp/tmpbwknb6wo.php on line 19\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x == 0 ? 1 : $x == -1\
    \ ? -1 : 0;\n    }, $arr);\n    return array_sum($signs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixl16jr0.php:25\n\
    Stack trace:\n#0 /tmp/tmpixl16jr0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpixl16jr0.php\
    \ on line 25\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array();\n    foreach ($arr as $num) {\n        $signs[] = $num\
    \ < 0 ? -1 : 1;\n    }\n    return array_sum(array_map(function ($sign) {\n  \
    \      return $sign * array_sum($signs);\n    }, $signs));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpu79p_1yp.php on line 19\n\
    \nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must be of\
    \ type array, null given in /tmp/tmpu79p_1yp.php:19\nStack trace:\n#0 /tmp/tmpu79p_1yp.php(19):\
    \ array_sum(NULL)\n#1 [internal function]: {closure}(1)\n#2 /tmp/tmpu79p_1yp.php(20):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmpu79p_1yp.php(24): prod_signs(Array)\n\
    #4 /tmp/tmpu79p_1yp.php(28): candidate(Array)\n#5 /tmp/tmpu79p_1yp.php(38): test()\n\
    #6 {main}\n  thrown in /tmp/tmpu79p_1yp.php on line 19\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmp33btnpx9.php on line 23\n\
    \nWarning: Undefined variable $signs in /tmp/tmp33btnpx9.php on line 23\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmp33btnpx9.php on line 23\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmp33btnpx9.php on line 23\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp33btnpx9.php:32\nStack trace:\n#0 /tmp/tmp33btnpx9.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp33btnpx9.php on line 32\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === 1 ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpte07pmv2.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpte07pmv2.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpte07pmv2.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpte07pmv2.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpte07pmv2.php:30\nStack trace:\n#0 /tmp/tmpte07pmv2.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpte07pmv2.php on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x == 0 ? 1 : $x == -1\
    \ ? -1 : 0;\n    }, $arr);\n    return array_sum($signs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpixl16jr0.php:25\n\
    Stack trace:\n#0 /tmp/tmpixl16jr0.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpixl16jr0.php\
    \ on line 25\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nI like your solution, however I believe it can be optimized a little\
    \ more. Instead of multiplying each number by its sign, we can multiply each number\
    \ by its absolute value and then sum them all up. Also, we can use array_sum()\
    \ instead of array_map(). Lastly, we can use array_map() instead of array_reduce().\
    \ I'll post my solution below in a minute.\n<|/ c |>\n<| c |>\nYes, absolutely.\
    \ Thanks for pointing out my mistakes. I fixed them and added a note about optimization.\n\
    <|/ c |>\n<| a tags=php,algorithm |>\nHere's my solution:\n<code>\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpkrd0r4vc.php
    on line 24

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === -0 ? -1 : 1;\n    }, $arr);\n    return array_sum($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_if4fnc.php:28\n\
    Stack trace:\n#0 /tmp/tmpe_if4fnc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe_if4fnc.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmp33btnpx9.php on line 23\n\
    \nWarning: Undefined variable $signs in /tmp/tmp33btnpx9.php on line 23\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmp33btnpx9.php on line 23\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmp33btnpx9.php on line 23\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp33btnpx9.php:32\nStack trace:\n#0 /tmp/tmp33btnpx9.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp33btnpx9.php on line 32\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === -0 ? -1 : 1;\n    }, $arr);\n    return array_sum($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_if4fnc.php:28\n\
    Stack trace:\n#0 /tmp/tmpe_if4fnc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpe_if4fnc.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function($a) { return $a < 0 ? -1 : 1;}, $arr);\n    return\
    \ array_sum(array_map(function($a) { return $a * $signs;}, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpuh6ah4jm.php on line 15\n\
    \nWarning: Undefined variable $signs in /tmp/tmpuh6ah4jm.php on line 15\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpuh6ah4jm.php on line 15\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpuh6ah4jm.php on line 15\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpuh6ah4jm.php:23\nStack trace:\n#0 /tmp/tmpuh6ah4jm.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuh6ah4jm.php on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array();\n    foreach ($arr as $num) {\n        $signs[] = $num\
    \ < 0 ? -1 : 1;\n    }\n    return array_sum($signs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqovrzre.php:26\n\
    Stack trace:\n#0 /tmp/tmpsqovrzre.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsqovrzre.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function($x) {\n        return $x<0 ? -1 : 1;\n    },\
    \ $arr);\n    return array_sum($signs) * array_prod($signs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_prod()\
    \ in /tmp/tmp6mevtpu9.php:17\nStack trace:\n#0 /tmp/tmp6mevtpu9.php(21): prod_signs(Array)\n\
    #1 /tmp/tmp6mevtpu9.php(25): candidate(Array)\n#2 /tmp/tmp6mevtpu9.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6mevtpu9.php on line 17\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    $prod = array_reduce($signs,\
    \ function ($carry, $sign) {\n        return $carry * $sign;\n    });\n    return\
    \ $prod;\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdr0579i.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdr0579i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqdr0579i.php\
    \ on line 31\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($num) { return $num > 0 ? 1 : -1; }, $arr);\n\
    \    return array_sum(array_map(function ($num) { return $num * $signs; }, $arr));\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1de_znlz.php:23\n\
    Stack trace:\n#0 /tmp/tmp1de_znlz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1de_znlz.php\
    \ on line 23\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $val) {\n        $sign = 1;\n        if ($val\
    \ < 0) {\n            $sign = -1;\n            $val = abs($val);\n        }\n\
    \        $sum += $sign * $val;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh3fe7re.php:31\n\
    Stack trace:\n#0 /tmp/tmpwh3fe7re.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwh3fe7re.php\
    \ on line 31\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array();\n    foreach ($arr as $num) {\n        $signs[] = $num\
    \ < 0 ? -1 : 1;\n    }\n    return array_sum($signs) * array_product($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmp3hz87j.php:26\n\
    Stack trace:\n#0 /tmp/tmpmp3hz87j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmp3hz87j.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x < 0 ? -1 : 1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpxgri9s5n.php:30\nStack trace:\n#0 /tmp/tmpxgri9s5n.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxgri9s5n.php on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) { return $x ? 1 : -1; }, $arr);\n    return\
    \ array_sum(array_map(function ($x) { return $x * $x; }, $signs));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfgt96uc.php:23\n\
    Stack trace:\n#0 /tmp/tmpxfgt96uc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxfgt96uc.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizuvkbem.php:28\n\
    Stack trace:\n#0 /tmp/tmpizuvkbem.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpizuvkbem.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $num) {\n        $sign = array_search($num,\
    \ array_reverse($arr));\n        if ($sign !== FALSE) {\n            $sign *=\
    \ -1;\n        }\n        $sum += $sign;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7xnzz5d.php:30\n\
    Stack trace:\n#0 /tmp/tmpf7xnzz5d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpf7xnzz5d.php\
    \ on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n</code>\n\
    <|/ a tags=php,algorithm |>\n<| c |>\nThis doesn't work. Try it with `array(1,\
    \ 2, 2, -4)`.\n<|/ c |>\n<| c |>\nIt works fine for me. `prod_signs(array(1, 2,\
    \ 2, -4))` returns `9`.\n<|/ c |>\n<| c |>\nIt doesn't work for me. Try it with\
    \ `array(1, 2, 2, -4)`.\n<|/ c |>\n<| c |>\nIt works for me too. `prod_signs(array(1,\
    \ 2, 2, -4))` returns `9`.\n<|/ c |>\n<| c |>\nIt works for me too. `prod_signs(array(1,\
    \ 2, 2, -4))` returns `9`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp3agr7t6p.php
    on line 24

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmprt1wfp9o.php on line 23\n\
    \nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must be of\
    \ type array, null given in /tmp/tmprt1wfp9o.php:23\nStack trace:\n#0 /tmp/tmprt1wfp9o.php(23):\
    \ array_sum(NULL)\n#1 [internal function]: {closure}(1)\n#2 /tmp/tmprt1wfp9o.php(24):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmprt1wfp9o.php(28): prod_signs(Array)\n\
    #4 /tmp/tmprt1wfp9o.php(32): candidate(Array)\n#5 /tmp/tmprt1wfp9o.php(42): test()\n\
    #6 {main}\n  thrown in /tmp/tmprt1wfp9o.php on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) { return $x ? 1 : -1; }, $arr);\n    return\
    \ array_sum(array_map(function ($x) { return $x * $x; }, $signs));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfgt96uc.php:23\n\
    Stack trace:\n#0 /tmp/tmpxfgt96uc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxfgt96uc.php\
    \ on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $num) {\n        $sign = array_search($num,\
    \ array_keys($arr));\n        if ($sign !== false) {\n            $sum += $sign;\n\
    \        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdw1ffprb.php:29\n\
    Stack trace:\n#0 /tmp/tmpdw1ffprb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdw1ffprb.php\
    \ on line 29\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmprt1wfp9o.php on line 23\n\
    \nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must be of\
    \ type array, null given in /tmp/tmprt1wfp9o.php:23\nStack trace:\n#0 /tmp/tmprt1wfp9o.php(23):\
    \ array_sum(NULL)\n#1 [internal function]: {closure}(1)\n#2 /tmp/tmprt1wfp9o.php(24):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmprt1wfp9o.php(28): prod_signs(Array)\n\
    #4 /tmp/tmprt1wfp9o.php(32): candidate(Array)\n#5 /tmp/tmprt1wfp9o.php(42): test()\n\
    #6 {main}\n  thrown in /tmp/tmprt1wfp9o.php on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === -0 ? -1 : 1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpcxfqtgxp.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpcxfqtgxp.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpcxfqtgxp.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpcxfqtgxp.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcxfqtgxp.php:30\nStack trace:\n#0 /tmp/tmpcxfqtgxp.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcxfqtgxp.php on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmprt1wfp9o.php on line 23\n\
    \nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must be of\
    \ type array, null given in /tmp/tmprt1wfp9o.php:23\nStack trace:\n#0 /tmp/tmprt1wfp9o.php(23):\
    \ array_sum(NULL)\n#1 [internal function]: {closure}(1)\n#2 /tmp/tmprt1wfp9o.php(24):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmprt1wfp9o.php(28): prod_signs(Array)\n\
    #4 /tmp/tmprt1wfp9o.php(32): candidate(Array)\n#5 /tmp/tmprt1wfp9o.php(42): test()\n\
    #6 {main}\n  thrown in /tmp/tmprt1wfp9o.php on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x < 0 ? -1 : 1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpxgri9s5n.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpxgri9s5n.php:30\nStack trace:\n#0 /tmp/tmpxgri9s5n.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxgri9s5n.php on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizuvkbem.php:28\n\
    Stack trace:\n#0 /tmp/tmpizuvkbem.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpizuvkbem.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $num) {\n        $sign = is_int($num) ? $num\
    \ : $num > 0 ? 1 : -1;\n        $sum += $sign * abs($num);\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmphadopasi.php on line
    16

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function($x) {\n        return $x == 0 ? 0 : ($x < 0 ?\
    \ -1 : 1);\n    }, $arr);\n    return array_sum($signs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0d7oqzsy.php:25\n\
    Stack trace:\n#0 /tmp/tmp0d7oqzsy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0d7oqzsy.php\
    \ on line 25\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x === 0 ? '0' : ($x ===\
    \ -1 ? '-1' : '1');\n    }, $arr);\n    return array_sum(array_map(function ($x)\
    \ {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmp08pwhlx7.php on line 18\n\
    \nWarning: Undefined variable $signs in /tmp/tmp08pwhlx7.php on line 18\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmp08pwhlx7.php on line 18\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmp08pwhlx7.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp08pwhlx7.php:27\nStack trace:\n#0 /tmp/tmp08pwhlx7.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp08pwhlx7.php on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === 0 ? '0' : ($x === -1 ? '1' : '-1');\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpo9u3bhw_.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpo9u3bhw_.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpo9u3bhw_.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpo9u3bhw_.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpo9u3bhw_.php:30\nStack trace:\n#0 /tmp/tmpo9u3bhw_.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo9u3bhw_.php on line 30\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n</code>\n<|/ a |>\n<| a tags=php,algorithm |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmphf31zh9x.php
    on line 21

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($num) {\n        return $num > 0 ? 1 : -1;\n    }, $arr);\n\n    return array_sum(array_map(function\
    \ ($num) {\n        return $num * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmptjks7197.php on line 23\n\
    \nFatal error: Uncaught TypeError: array_sum(): Argument #1 ($array) must be of\
    \ type array, null given in /tmp/tmptjks7197.php:23\nStack trace:\n#0 /tmp/tmptjks7197.php(23):\
    \ array_sum(NULL)\n#1 [internal function]: {closure}(1)\n#2 /tmp/tmptjks7197.php(24):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmptjks7197.php(28): prod_signs(Array)\n\
    #4 /tmp/tmptjks7197.php(32): candidate(Array)\n#5 /tmp/tmptjks7197.php(42): test()\n\
    #6 {main}\n  thrown in /tmp/tmptjks7197.php on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function($a) { return $a < 0 ? -1 : 1;}, $arr);\n    return\
    \ array_sum($signs) * array_product($signs);\n}\n</code>\n<|/ a tags=php,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try it with `array(1, -1, 1, -2)`.\n<|/ c |>\n\
    <| c |>\n: It works fine for me. Try it with `array(1, -1, 1, -2)`.\n<|/ c |>\n\
    <| c |>\n: It works fine for me. Try it with `array(1, -1, 1, -2)`.\n<|/ c |>\n\
    <| c |>\n: It works fine for me. Try it with `array(1, -1, 1, -2)`.\n<|/ c |>\n\
    <| c |>\n: It works fine for me. Try it with `array(1, -1, 1, -2)`.\n<|/ c |>\n\
    <| a tags=php,algorithm |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp3o5nonwq.php
    on line 17

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n\n    $signs = array_map(function\
    \ ($x) {\n        return $x === 0 ? '0' : ($x === -1 ? '1' : '-1');\n    }, $arr);\n\
    \n    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpjql5nea0.php on line 23\n\
    \nWarning: Undefined variable $signs in /tmp/tmpjql5nea0.php on line 23\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpjql5nea0.php on line 23\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpjql5nea0.php on line 23\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpjql5nea0.php:32\nStack trace:\n#0 /tmp/tmpjql5nea0.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjql5nea0.php on line 32\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your solution,\
    \ but I believe it can be done without `array_map` by using a `foreach` loop and\
    \ `array_sum`.\n<|/ c |>\n<| c |>\nI believe it can be done without `array_map`\
    \ by using a `foreach` loop and `array_sum`. But I believe it can be done without\
    \ `array_map` by using a `foreach` loop and `array_sum`. But I believe it can\
    \ be done without `array_map` by using a `foreach` loop and `array_sum`. But I\
    \ believe it can be done without `array_map` by using a `foreach` loop and `array_sum`.\
    \ But I believe it can be done without `array_map` by using a `foreach` loop and\
    \ `array_sum`. But I believe it can be done without `array_map` by using a `foreach`\
    \ loop and `array_sum`. But I believe it can be done without `array_map` by using\
    \ a `foreach` loop and `array_sum`. But I believe it can be done without `array_map`\
    \ by using a `foreach` loop and `array_sum`. But I believe it can be done without\
    \ `array_map` by using a `foreach` loop and `array_sum`. But I believe it can\
    \ be done without `array_map` by using a `foreach` loop and `array_sum`. But I\
    \ believe it can be done without `array_map` by using a `foreach` loop and `array_sum`.\
    \ But I believe it can be done without `array_map` by using a `foreach` loop and\
    \ `array_sum`. But I believe it can be done without `array_map` by using a `foreach`\
    \ loop and `array_sum`. But I believe it can be done without `array_map` by using\
    \ a `foreach` loop and `array_sum`. But I believe it can be done without `array_map`\
    \ by using a `foreach` loop and `array_sum`. But I believe it can be done without\
    \ `array_map` by using a `foreach` loop and `array_sum`. But I believe it can\
    \ be done without `array_map` by using a `foreach` loop and `array_sum`. But I\
    \ believe it can be done without `array_map` by using a `foreach` loop and `array_sum`.\
    \ But I believe it can be done without `array_map` by using a `foreach` loop and\
    \ `array_sum\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp44cgy081.php
    on line 21

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === -0 ? -1 : 1;\n    }, $arr);\n    return array_sum($signs)\
    \ * array_prod($signs);\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_prod()\
    \ in /tmp/tmphvevvq3u.php:20\nStack trace:\n#0 /tmp/tmphvevvq3u.php(24): prod_signs(Array)\n\
    #1 /tmp/tmphvevvq3u.php(28): candidate(Array)\n#2 /tmp/tmphvevvq3u.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmphvevvq3u.php on line 20\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizuvkbem.php:28\n\
    Stack trace:\n#0 /tmp/tmpizuvkbem.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpizuvkbem.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function($a) { return $a<0 ? -1 : +1; }, $arr);\n    return\
    \ array_sum(array_map(function($a) { return $a*$signs; }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmp8t7_of7y.php on line 15\n\
    \nWarning: Undefined variable $signs in /tmp/tmp8t7_of7y.php on line 15\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmp8t7_of7y.php on line 15\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmp8t7_of7y.php on line 15\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8t7_of7y.php:23\nStack trace:\n#0 /tmp/tmp8t7_of7y.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8t7_of7y.php on line 23\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x < 0 ? -1 : 1;\n    }, $arr);\n    return array_sum($signs);\n\
    }\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5oj8u6bb.php:28\n\
    Stack trace:\n#0 /tmp/tmp5oj8u6bb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5oj8u6bb.php\
    \ on line 28\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($num) {\n        return $num > 0 ? 1 : -1;\n\
    \    }, $arr);\n    return array_sum(array_map(function ($num) {\n        return\
    \ $num * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return\
    \ prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpr0qpavcp.php on line 18\n\
    \nWarning: Undefined variable $signs in /tmp/tmpr0qpavcp.php on line 18\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpr0qpavcp.php on line 18\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpr0qpavcp.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpr0qpavcp.php:27\nStack trace:\n#0 /tmp/tmpr0qpavcp.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpr0qpavcp.php on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array();\n    foreach ($arr as $num) {\n        $signs[] = $num\
    \ >= 0 ? 1 : -1;\n    }\n    return array_sum($signs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0au6vige.php:26\n\
    Stack trace:\n#0 /tmp/tmp0au6vige.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0au6vige.php\
    \ on line 26\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $num) {\n        $sign = sign($num);\n  \
    \      $sum += $sign * abs($num);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sign() in /tmp/tmpkj6z_sml.php:16\n\
    Stack trace:\n#0 /tmp/tmpkj6z_sml.php(23): prod_signs(Array)\n#1 /tmp/tmpkj6z_sml.php(27):\
    \ candidate(Array)\n#2 /tmp/tmpkj6z_sml.php(37): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpkj6z_sml.php on line 16\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $val) {\n        $sign = is_int($val) ? $val\
    \ : $val === -0 ? -1 : 1;\n        $sum += $sign * abs($val);\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpcm5v5abe.php on line
    16

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x == 0 ? 1 : $x == -1\
    \ ? -1 : 0;\n    }, $arr);\n    return array_sum(array_map(function ($x) {\n \
    \       return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmppffh9skd.php on line
    15

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    $prod = array_reduce($signs,\
    \ function ($carry, $sign) {\n        return $carry * $sign;\n    });\n    return\
    \ $prod;\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdr0579i.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdr0579i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqdr0579i.php\
    \ on line 31\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $sum = 0;\n    foreach ($arr as $num) {\n        $sign = is_int($num) ? $num\
    \ : $num > 0 ? 1 : -1;\n        $sum += $sign * abs($num);\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmphadopasi.php on line
    16

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1eei5myj.php:30\n\
    Stack trace:\n#0 /tmp/tmp1eei5myj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1eei5myj.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer.\
    \ I tried your solution and it works but it is too slow. My array has about 5000\
    \ elements and it takes about 5 seconds to complete. Do you have any idea how\
    \ to make it faster?\n<|/ c |>\n<| c |>\n: I added a faster solution. Hope it\
    \ helps.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = [1, -4, 2, -4, 3,\
    \ -4, 4, -4, 5];\n\n$sum = 0;\n$sign = 1;\n\nforeach ($array as $value) {\n  \
    \  $sum += $value * $sign;\n    $sign *= -1;\n}\n\necho $sum;\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThanks for your answer. I tried your solution and it works\
    \ but it is too slow. My array has about 5000 elements and it takes about 5 seconds\
    \ to complete. Do you have any idea how to make it faster?\n<|/ c |>\n<| c |>\n\
    : I added a faster solution. Hope it helps.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    $array = [1, -4, 2, -4, 3, -4, 4, -4, 5];\n$sum = 0;\n$sign = 1;\nforeach ($array\
    \ as $value) {\n    $sum += $value * $sign;\n    $sign *= -1;\n}\necho $sum;\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThanks for your answer. I tried your\
    \ solution and it works but it is too slow. My array has about 5000 elements and\
    \ it takes about 5 seconds to complete. Do you have any idea how to make it faster?\n\
    <|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = [1, -4, 2, -4, 3, -4, 4, -4,\
    \ 5];\n$sum = 0;\n$sign = 1;\nforeach ($array as $value) {\n    $sum += $value\
    \ * $sign;\n    $sign *= -1;\n}\necho $sum;\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ tags=php,arrays |>\n<code>\n$array = [1, -4, 2, -4, 3, -4, 4, -4, 5];\n$sum\
    \ = 0;\n$sign = 1;\nforeach ($array \nfunction candidate(...$args) {\n    return\
    \ prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmps1ve4d35.php
    on line 21

    '
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x === -0 ? -1 : 1;\n\
    \    }, $arr);\n    return array_sum(array_map(function ($x) {\n        return\
    \ $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return\
    \ prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmp3kn671mn.php on line 18\n\
    \nWarning: Undefined variable $signs in /tmp/tmp3kn671mn.php on line 18\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmp3kn671mn.php on line 18\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmp3kn671mn.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3kn671mn.php:27\nStack trace:\n#0 /tmp/tmp3kn671mn.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3kn671mn.php on line 27\n"
  timestamp: 1659823662
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * array_sum($signs);\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php\
    \ on line 18\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmpu_3qyshk.php on line 18\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmpu_3qyshk.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_3qyshk.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_3qyshk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu_3qyshk.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * array_sum($signs);\n    }, $arr));\n}\n\nfunction\
    \ candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1,\
    \ 2, -1, -1, 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_sum() expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php\
    \ on line 21\n\nWarning: array_sum() expects parameter 1 to be array, null given\
    \ in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum() expects parameter\
    \ 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line 21\n\nWarning: array_sum()\
    \ expects parameter 1 to be array, null given in /tmp/tmp_0bw_rbo.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0bw_rbo.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0bw_rbo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_0bw_rbo.php\
    \ on line 30\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    $signs = array_map(function ($x) {\n        return $x ? 1 : -1;\n    }, $arr);\n\
    \    return array_sum(array_map(function ($x) {\n        return $x * $signs;\n\
    \    }, $arr));\n}\n\nfunction candidate(...$args) {\n    return prod_signs(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 1)) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1,\
    \ 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplin0vy21.php:27\n\
    Stack trace:\n#0 /tmp/tmplin0vy21.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplin0vy21.php\
    \ on line 27\n"
  timestamp: 1659730586
- exit_code: 255
  program: "<?php\n// You are given an array arr of integers and you need to return\n\
    // sum of magnitudes of integers multiplied by product of all signs\n// of each\
    \ number in the array, represented by 1, -1 or 0.\n// Note: return None for empty\
    \ arr.\n// Example:\n// >>> prod_signs(array(1, 2, 2, -4))\n// 9\n// >>> prod_signs(array(0,\
    \ 1))\n// 0\n// >>> prod_signs(array())\n// null\nfunction prod_signs($arr) {\n\
    \    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function\
    \ ($x) {\n        return $x === -0 ? -1 : 1;\n    }, $arr);\n    return array_sum(array_map(function\
    \ ($x) {\n        return $x * $signs;\n    }, $arr));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prod_signs(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 2, -4)) !== -9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== null) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1, 1)) !== -4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, 1, 1,\
    \ 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $signs in /tmp/tmpcxfqtgxp.php on line 21\n\
    \nWarning: Undefined variable $signs in /tmp/tmpcxfqtgxp.php on line 21\n\nWarning:\
    \ Undefined variable $signs in /tmp/tmpcxfqtgxp.php on line 21\n\nWarning: Undefined\
    \ variable $signs in /tmp/tmpcxfqtgxp.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcxfqtgxp.php:30\nStack trace:\n#0 /tmp/tmpcxfqtgxp.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcxfqtgxp.php on line 30\n"
  timestamp: 1659823662

language: php
name: HumanEval_31_is_prime
results:
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  // Sieve of Eratosthenes (https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\n\
    \  $primes = array(2, 3);\n  $n = $n - 1;\n  for ($i = 2; $i <= $n; $i++) {\n\
    \    if ($primes[$i] <= $n) {\n      $primes[$i] = $primes[$i - 1] + $primes[$i];\n\
    \    }\n  }\n  return $primes[$n] == $n;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtyd9j3d.php:38\n\
    Stack trace:\n#0 /tmp/tmpbtyd9j3d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbtyd9j3d.php\
    \ on line 38\n"
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 == 0 ? 3 : ($n % 3 == 0 ? 6\
    \ : ($n % 5 == 0 ? 9 : ($n % 7 == 0 ? 12 : false))));\n    return $n <= 1;\n}\n\
    \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsvvb4gl.php:34\n\
    Stack trace:\n#0 /tmp/tmpgsvvb4gl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgsvvb4gl.php\
    \ on line 34\n"
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) return false;\n    if ($n == 2) return true;\n    if ($n % 2\
    \ == 0) return false;\n    if ($n % 3 == 0) return false;\n    if ($n % 5 == 0)\
    \ return false;\n    if ($n % 7 == 0) return false;\n    if ($n % 11 == 0) return\
    \ false;\n    if ($n % 13 == 0) return false;\n    if ($n % 17 == 0) return false;\n\
    \    if ($n % 19 == 0) return false;\n    if ($n % 23 == 0) return false;\n  \
    \  if ($n % 29 == 0) return false;\n    if ($n % 31 == 0) return false;\n    if\
    \ ($n % 37 == 0) return false;\n    if ($n % 41 == 0) return false;\n    if ($n\
    \ % 43 == 0) return false;\n    if ($n % 47 == 0) return false;\n    if ($n %\
    \ 53 == 0) return false;\n    if ($n % 59 == 0) return false;\n    if ($n % 61\
    \ == 0) return false;\n    if ($n % 67 == 0) return false;\n    if ($n % 71 ==\
    \ 0) return false;\n    if ($n % 73 == 0) return false;\n    if ($n % 79 == 0)\
    \ return false;\n    if ($n % 83 == 0) return false;\n    if ($n % 89 == 0) return\
    \ false;\n    if ($n % 97 == 0) return false;\n    if ($n % 101 == 0) return false;\n\
    \    if ($n % 103 == 0) return false;\n    if ($n % 107 == 0) return false;\n\
    \    if ($n % 111 == 0) return false;\n    if ($n % 117 == 0) return false;\n\
    \    if ($n % 121 == 0) return false;\n    if ($n % 127 == 0) return false;\n\
    \    if ($n % 131 == 0) return false;\n    if ($n % 137 == 0) return false;\n\
    \    if ($n % 141 == 0) return false;\n    if ($n % 147 == 0) return false;\n\
    \    if ($n % 151 == 0) return false;\n    if ($n % 157 == 0) return false;\n\
    \    if ($n % 161 == 0) return false;\n    if ($n % 167 == 0) return false;\n\
    \    if ($n % 173 == 0) return false;\n    if ($n % 179 == 0) return false;\n\
    \    if ($n % 181 == 0) return false;\n    if ($n % 187 == 0) return false;\n\
    \    if ($n % 191 == 0) return false;\n    if ($n % 193 == 0) return false;\n\
    \    if ($n % 197 == 0) return false;\n    if ($n % 199 == 0) return false;\n\
    \    if ($n % 201 == 0) return false;\n    if ($n % 207 == 0) return false;\n\
    \    if ($n % 211 == 0) return false;\n    if ($n % 213 == 0) return false;\n\
    \    if ($n % 217 == 0) return false;\n    if ($n % 221 == 0) return false;\n\
    \    if ($n % 225 == 0) return false;\n    if ($n % 23\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppt_v53xk.php on line 76

    '
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpyc5dmbh5.php:27\nStack trace:\n#0 /tmp/tmpyc5dmbh5.php(37): is_prime(101)\n\
    #1 /tmp/tmpyc5dmbh5.php(42): candidate(101)\n#2 /tmp/tmpyc5dmbh5.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyc5dmbh5.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division using\
    \ Euclid's algorithm.\n    // If n is prime then either its only divisor is 1\
    \ or n - 1.\n    // If n is composite then either its only divisor is 1 or sqrt(n).\n\
    \    // If n is even then its only divisor is 2 or sqrt(n).\n    // If n is odd,\
    \ then its only divisor is 3 or sqrt(n).\n\n    $d = $n - 1;\n    $m = 1;\n  \
    \  $sqrt_n = sqrt($n);\n\n    do {\n        if ($n % $m == 0) {\n            return\
    \ false;\n        }\n\n        $m++;\n    } while ($d % $m != 0);\n\n    return\
    \ $m == 1;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cccc3nd.php:49\n\
    Stack trace:\n#0 /tmp/tmp8cccc3nd.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp8cccc3nd.php\
    \ on line 49\n"
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from https://en.wikipedia.org/wiki/Primality_test#Trial_division\n    $a = $n\
    \ - 1;\n    $b = $n / 2;\n    $c = 1;\n\n    while ($b > 0) {\n        if ($b\
    \ & 1) {\n            if ($a <= 0) {\n                return false;\n        \
    \    }\n            $a--;\n        }\n        $b--;\n        $c++;\n    }\n\n\
    \    if ($c <= 3) {\n        return true;\n    }\n\n    if ($n % 2 == 0) {\n \
    \       return false;\n    }\n\n    $d = 5 - 2 * $c;\n    $e = $n - $d;\n\n  \
    \  if ($e == 0) {\n        return true;\n    }\n\n    if ($e % 2 == 0) {\n   \
    \     return false;\n    }\n\n    $f = 5 - 2 * $e / 2;\n\n    if ($f == 0) {\n\
    \        return true;\n    }\n\n    if ($f % 2 == 0) {\n        return false;\n\
    \    }\n\n    $g = 5 - 2 * $f / 2;\n\n    if ($g == 0) {\n        return true;\n\
    \    }\n\n    if ($g % 2 == 0) {\n        return false;\n    }\n\n    $h = 5 -\
    \ 2 * $g / 2;\n\n    if ($h == 0) {\n        return true;\n    }\n\n    if ($h\
    \ % 2 == 0) {\n        return false;\n    }\n\n    $i = 5 - 2 * $h / 2;\n\n  \
    \  if ($i == 0) {\n        return true;\n    }\n\n    if ($i % 2 == 0) {\n   \
    \     return false;\n    }\n\n    $j = 5;\n\n    while ($j * $j <= $n) {\n   \
    \     if ($i * $i + $j * $j == $n) {\n            return true;\n        }\n\n\
    \        $j += 2;\n    }\n\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl14t0c0v.php:116\n\
    Stack trace:\n#0 /tmp/tmpl14t0c0v.php(130): test()\n#1 {main}\n  thrown in /tmp/tmpl14t0c0v.php\
    \ on line 116\n"
  timestamp: 1659730045
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n\
    \        if ($n % $i == 0) return false;\n        $i += 2;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 == 0 ? 3 : ($n % 3 == 0 ? 5\
    \ : 7));\n    $n = ($n % 6 == 0 ? $n : 6 - $n);\n    return ($n == 1);\n}\n\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6yd9nf56.php:30\n\
    Stack trace:\n#0 /tmp/tmp6yd9nf56.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6yd9nf56.php\
    \ on line 30\n"
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi1uju1i4.php:27\nStack trace:\n#0 /tmp/tmpi1uju1i4.php(37): is_prime(101)\n\
    #1 /tmp/tmpi1uju1i4.php(42): candidate(101)\n#2 /tmp/tmpi1uju1i4.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi1uju1i4.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $m = $n / 5;\n    $k = floor($m);\n    $lcm\
    \ = lcm($k, $m);\n    return $lcm;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function lcm() in /tmp/tmpunp6xxtq.php:26\n\
    Stack trace:\n#0 /tmp/tmpunp6xxtq.php(31): is_prime(101)\n#1 /tmp/tmpunp6xxtq.php(36):\
    \ candidate(101)\n#2 /tmp/tmpunp6xxtq.php(50): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpunp6xxtq.php on line 26\n"
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxbrz2mz8.php:27\nStack trace:\n#0 /tmp/tmpxbrz2mz8.php(37): is_prime(101)\n\
    #1 /tmp/tmpxbrz2mz8.php(42): candidate(101)\n#2 /tmp/tmpxbrz2mz8.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxbrz2mz8.php on line 27\n"
  timestamp: 1659730045
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n\
    \        if ($n % $i == 0) return false;\n        $i += 2;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpyc5dmbh5.php:27\nStack trace:\n#0 /tmp/tmpyc5dmbh5.php(37): is_prime(101)\n\
    #1 /tmp/tmpyc5dmbh5.php(42): candidate(101)\n#2 /tmp/tmpyc5dmbh5.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyc5dmbh5.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $i = 3;\n    while ($i <= $root) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n        $i += 2;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp33aiyfnz.php:27\nStack trace:\n#0 /tmp/tmp33aiyfnz.php(39): is_prime(101)\n\
    #1 /tmp/tmp33aiyfnz.php(44): candidate(101)\n#2 /tmp/tmp33aiyfnz.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp33aiyfnz.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi1uju1i4.php:27\nStack trace:\n#0 /tmp/tmpi1uju1i4.php(37): is_prime(101)\n\
    #1 /tmp/tmpi1uju1i4.php(42): candidate(101)\n#2 /tmp/tmpi1uju1i4.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi1uju1i4.php on line 27\n"
  timestamp: 1659729982
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n\
    \        if ($n % $i == 0) return false;\n        $i += 2;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hz8y5e.php:35\n\
    Stack trace:\n#0 /tmp/tmp46hz8y5e.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp46hz8y5e.php\
    \ on line 35\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hz8y5e.php:35\n\
    Stack trace:\n#0 /tmp/tmp46hz8y5e.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp46hz8y5e.php\
    \ on line 35\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\
    \    for ($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpvaujadqz.php:28\nStack trace:\n#0 /tmp/tmpvaujadqz.php(39): is_prime(101)\n\
    #1 /tmp/tmpvaujadqz.php(44): candidate(101)\n#2 /tmp/tmpvaujadqz.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvaujadqz.php on line 28\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpyc5dmbh5.php:27\nStack trace:\n#0 /tmp/tmpyc5dmbh5.php(37): is_prime(101)\n\
    #1 /tmp/tmpyc5dmbh5.php(42): candidate(101)\n#2 /tmp/tmpyc5dmbh5.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyc5dmbh5.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $n; $i += 2)\n        if ($n\
    \ % $i == 0)\n            return false;\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpnvcf072y.php:25\nStack trace:\n#0 /tmp/tmpnvcf072y.php(33): is_prime(101)\n\
    #1 /tmp/tmpnvcf072y.php(38): candidate(101)\n#2 /tmp/tmpnvcf072y.php(52): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnvcf072y.php on line 25\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpyc5dmbh5.php:27\nStack trace:\n#0 /tmp/tmpyc5dmbh5.php(37): is_prime(101)\n\
    #1 /tmp/tmpyc5dmbh5.php(42): candidate(101)\n#2 /tmp/tmpyc5dmbh5.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyc5dmbh5.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division via\
    \ trial division means we can use a\n    // simple test to see if a number is\
    \ prime.\n    // If it is, then we know it is prime and we can return\n    //\
    \ immediately.\n    // If not, then we can use the same method as above\n    //\
    \ to find out if any number less than n passes the test.\n    // If any number\
    \ less than n passes the test, then it is\n    // not prime and we can return\
    \ immediately.\n    // If all numbers less than n fail the test, then n\n    //\
    \ is not prime and we can return immediately.\n\n    // The first few numbers\
    \ are all special cases:\n    if ($n == 2) {\n        return true;\n    }\n  \
    \  if ($n == 3) {\n        return true;\n    }\n    if ($n == 5) {\n        return\
    \ true;\n    }\n    if ($n == 7) {\n        return true;\n    }\n    if ($n ==\
    \ 11) {\n        return true;\n    }\n    if ($n == 12) {\n        return true;\n\
    \    }\n    if ($n == 13) {\n        return true;\n    }\n    if ($n == 17) {\n\
    \        return true;\n    }\n    if ($n == 19) {\n        return true;\n    }\n\
    \    if ($n == 23) {\n        return true;\n    }\n    if ($n == 29) {\n     \
    \   return true;\n    }\n    if ($n == 31) {\n        return true;\n    }\n  \
    \  if ($n == 37) {\n        return true;\n    }\n    if ($n == 43) {\n       \
    \ return true;\n    }\n    if ($n == 59) {\n        return true;\n    }\n    if\
    \ ($n == 61) {\n        return true;\n    }\n    if ($n == 67) {\n        return\
    \ true;\n    }\n    if ($n == 73) {\n        return true;\n    }\n    if ($n ==\
    \ 79) {\n        return true;\n    }\n    if ($n == 91) {\n        return true;\n\
    \    }\n    if ($n == 97) {\n        return true;\n    }\n    if ($n == 109) {\n\
    \        return true;\n    }\n    if ($n == 111) {\n        return true;\n   \
    \ }\n    if ($n == 127) {\n        return true;\n    }\n    if ($n == 131) {\n\
    \        return true;\n    }\n    if ($n == 139) {\n        return true;\n   \
    \ }\n    if ($n == 147) {\n        return true;\n    }\n    if ($n == 151) {\n\
    \        return true;\n    }\n    if ($n == 157) {\n        return true;\n   \
    \ }\n    if ($n == 161) {\n        return true;\n    }\n    if ($n == 163) {\n\
    \        return true;\n    }\n    if ($n == 167) {\n        return true;\n   \
    \ }\n    if ($n == 173) {\n        return true;\n    }\n    if ($n == 179) {\n\
    \        return true;\n    }\n    if ($n == 181) {\n        return true;\n   \
    \ }\n    if ($n == 191) {\n        return true;\n    }\n    if ($n == 193) {\n\
    \        return true;\n    }\n    if ($n == 197) {\n        return true;\n   \
    \ }\n    if ($\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpp847swtx.php on line 149

    '
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    $f = 1;\n\
    \    for($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n      \
    \      $f = false;\n            break;\n        }\n    }\n    return $f;\n}\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpyxubxpg0.php:27\nStack trace:\n#0 /tmp/tmpyxubxpg0.php(39): is_prime(101)\n\
    #1 /tmp/tmpyxubxpg0.php(44): candidate(101)\n#2 /tmp/tmpyxubxpg0.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyxubxpg0.php on line 27\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\n    for($i\
    \ = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0uvhw4wx.php:30\nStack trace:\n#0 /tmp/tmp0uvhw4wx.php(43): is_prime(101)\n\
    #1 /tmp/tmp0uvhw4wx.php(48): candidate(101)\n#2 /tmp/tmp0uvhw4wx.php(62): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0uvhw4wx.php on line 30\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxbrz2mz8.php:27\nStack trace:\n#0 /tmp/tmpxbrz2mz8.php(37): is_prime(101)\n\
    #1 /tmp/tmpxbrz2mz8.php(42): candidate(101)\n#2 /tmp/tmpxbrz2mz8.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxbrz2mz8.php on line 27\n"
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdlhwu_e5.php:27\nStack trace:\n#0 /tmp/tmpdlhwu_e5.php(38): is_prime(101)\n\
    #1 /tmp/tmpdlhwu_e5.php(43): candidate(101)\n#2 /tmp/tmpdlhwu_e5.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdlhwu_e5.php on line 27\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    $f = 1;\n\
    \    $m = 1;\n    while ($root2 != $root) {\n        if ($n % $root == 0) {\n\
    \            $f = 0;\n            break;\n        }\n        $m++;\n        $root2\
    \ = $this->sqrt($root);\n    }\n    if ($f == 1) {\n        return true;\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp96e7mf7t.php:27\nStack trace:\n#0 /tmp/tmp96e7mf7t.php(46): is_prime(101)\n\
    #1 /tmp/tmp96e7mf7t.php(51): candidate(101)\n#2 /tmp/tmp96e7mf7t.php(65): test()\n\
    #3 {main}\n  thrown in /tmp/tmp96e7mf7t.php on line 27\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n_log2 = log($n, 2);\n    $n_log_sqrt = log($n, 2);\n\
    \    $n_sqrt = sqrt($n);\n    $n_sqrt_log2 = log($n_sqrt, 2);\n    $n_sqrt_log_sqrt\
    \ = log($n_sqrt, 2);\n    $n_sqrt_log_sqrt_log2 = log($n_sqrt_log_sqrt, 2);\n\
    \    $n_log_sqrt_log2_minus_1 = log($n_log_sqrt_log2, 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_1\
    \ = log($n_log_sqrt_log2, 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2 = log($n_log_sqrt_log2,\
    \ 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1 = log($n_log_sqrt_log2,\
    \ 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1 = log($n_log_sqrt_log2,\
    \ 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1_minus_1 = log($n_log_sqrt_log2,\
    \ 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1_minus_2 = log($n_log_sqrt_log2,\
    \ 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1_minus_2_minus_1\
    \ = log($n_log_sqrt_log2, 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1_minus_2_minus_1_minus_1\
    \ = log($n_log_sqrt_log2, 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1_minus_2_minus_1_minus_1_minus_1\
    \ = log($n_log_sqrt_log2, 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1_minus_2_minus_1_minus_1_minus_2\
    \ = log($n_log_sqrt_log2, 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1_minus_2_minus_1_minus_1_minus_2_minus_1\
    \ = log($n_log_sqrt_log2, 2) - 1;\n    $n_log_sqrt_log2_minus_1_minus_2_minus_1_minus_1_minus_2_minus_1_minus_1_minus_2_minus_1_minus_1\
    \ = \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp8zyyyjv7.php on line 38

    '
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpyc5dmbh5.php:27\nStack trace:\n#0 /tmp/tmpyc5dmbh5.php(37): is_prime(101)\n\
    #1 /tmp/tmpyc5dmbh5.php(42): candidate(101)\n#2 /tmp/tmpyc5dmbh5.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyc5dmbh5.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://primes.utm.edu/prove/prove2_3.html\n    $m = $n;\n    $a = 2; $b\
    \ = 2; $c = 6; $d = 6; $e = 6; $f = 6; $g = 6; $h = 6; $i = 2;\n    while ($m\
    \ != 1) {\n        $q = $m / $i;\n        $t = $a * $q + $b; $a = $c; $b = $d;\
    \ $c = $e; $d = $f; $e = $g; $f = $h;\n        $g = $q; $h = -$q; $i = $i + 2;\n\
    \        if ($t != 1) {\n            $m = $m * $i / $t;\n        }\n    }\n  \
    \  return $m == 1;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmpsezf50pv.php:30\n\
    Stack trace:\n#0 /tmp/tmpsezf50pv.php(37): is_prime(6)\n#1 /tmp/tmpsezf50pv.php(41):\
    \ candidate(6)\n#2 /tmp/tmpsezf50pv.php(56): test()\n#3 {main}\n  thrown in /tmp/tmpsezf50pv.php\
    \ on line 30\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n <= 1 ? 1 : ($n % 2 == 0 ? 3 : ($n % 3 == 0 ? 6\
    \ : ($n % 5 == 0 ? 9 : ($n % 7 == 0 ? 12 : ($n % 11 == 0 ? 17 : ($n % 13 == 0\
    \ ? 21 : ($n % 17 == 0 ? 25 : ($n % 19 == 0 ? 29 : ($n % 23 == 0 ? 33 : ($n %\
    \ 29 == 0 ? 37 : ($n % 33 == 0 ? 41 : ($n % 37 == 0 ? 47 : ($n % 41 == 0 ? 53\
    \ : ($n % 43 == 0 ? 59 : ($n % 47 == 0 ? 63 : ($n % 53 == 0 ? 69 : ($n % 59 ==\
    \ 0 ? 73 : ($n % 63 == 0 ? 79 : ($n % 79 == 0 ? 83 : ($n % 83 == 0 ? 89 : ($n\
    \ % 89 == 0 ? 97 : ($n % 97 == 0 ? 103 : ($n % 103 == 0 ? 113 : ($n % 113 == 0\
    \ ? 127 : ($n % 127 == 0 ? 131 : ($n % 131 == 0 ? 137 : ($n % 137 == 0 ? 143 :\
    \ ($n % 143 == 0 ? 151 : ($n % 151 == 0 ? 157 : ($n % 157 == 0 ? 163 : ($n % 163\
    \ == 0 ? 169 : ($n % 169 == 0 ? 173 : ($n % 173 == 0 ? 181 : ($n % 181 == 0 ?\
    \ 187 : ($n % 187 == 0 ? 193 : ($n % 193 == 0 ? 199 : ($n % 199 == 0 ? 203 : ($n\
    \ % 203 == 0 ? 211 : ($n % 211 == 0 ? 217 : ($n % 217 == 0 ? 223 : ($n % 223 ==\
    \ 0 ? 229 : ($n % 229 == 0 ? 237 : ($n % 237 == 0 ? 241 : ($n % 241 == 0 ? 247\
    \ : ($n % 247 == 0 ? 253 : ($n % 253 == 0 ? 257 : ($n % 257 == 0 ? 263 : ($n %\
    \ 263 == 0 ? 269 : ($n % 269 == 0 ? 273 : ($n % 273 == 0 ? 277 : ($n % 277 ==\
    \ 0 ? 283 : ($n % 283 == 0 ? 291 : ($n % 291 == 0 ? 297 : ($n % 297 == 0 ? 303\
    \ : ($n % 303 == 0 ? 309 : ($n % 309 == 0 ? 313 : ($n % 313 == 0 ? 317 : ($n %\
    \ 317 == 0 ? 323 : ($n % 323 == 0 ? 327 : ($n % 327 == 0 ? 331 : ($n % 331 ==\
    \ 0 ? 337 : ($n % 337 == 0 ? 343 : ($n % 343 == 0 ? 347 : ($n % 347 == 0 ? 353\
    \ : ($n % 353 == 0 ? 359 : ($n % 359 == 0 ? 363 : ($n % 363 == 0 ? 367 : ($n %\
    \ 367 == 0 ? 37\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpt_xspiaf.php
    on line 20

    '
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hz8y5e.php:35\n\
    Stack trace:\n#0 /tmp/tmp46hz8y5e.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp46hz8y5e.php\
    \ on line 35\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\n    for\
    \ ($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0i5lrt65.php:30\nStack trace:\n#0 /tmp/tmp0i5lrt65.php(43): is_prime(101)\n\
    #1 /tmp/tmp0i5lrt65.php(48): candidate(101)\n#2 /tmp/tmp0i5lrt65.php(62): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0i5lrt65.php on line 30\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Sieve of Eratosthenes\
    \ - http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\n    $primes = array(\n\
    \        2,\n        3,\n        5,\n        7,\n        11,\n        13,\n  \
    \      17,\n        19,\n        23,\n        29,\n        31,\n        37,\n\
    \        41,\n        43,\n        47,\n        53,\n        59,\n        61,\n\
    \        67,\n        71,\n        73,\n        79,\n        83,\n        89,\n\
    \        97,\n        101,\n        103,\n        107,\n        109,\n       \
    \ 113,\n        127,\n        131,\n        137,\n        139,\n        149,\n\
    \        151,\n        157,\n        163,\n        167,\n        173,\n      \
    \  179,\n        181,\n        191,\n        193,\n        197,\n        199,\n\
    \        211,\n        223,\n        227,\n        229,\n        233,\n      \
    \  239,\n        241,\n        251,\n        257,\n        263,\n        269,\n\
    \        271,\n        277,\n        281,\n        283,\n        293,\n      \
    \  307,\n        311,\n        313,\n        317,\n        331,\n        337,\n\
    \        347,\n        349,\n        353,\n        359,\n        367,\n      \
    \  373,\n        379,\n        383,\n        389,\n        397,\n        401,\n\
    \        409,\n        419,\n        429,\n        433,\n        439,\n      \
    \  443,\n        449,\n        457,\n        461,\n        467,\n        479,\n\
    \        487,\n        491,\n        499,\n        503,\n        509,\n      \
    \  521,\n        523,\n        541,\n        547,\n        557,\n        563,\n\
    \        569,\n        571,\n        577,\n        587,\n        593,\n      \
    \  599,\n        601,\n        607,\n        613,\n        617,\n        619,\n\
    \        631,\n        641,\n        643,\n        647,\n        653,\n      \
    \  659,\n        661,\n        673,\n        677,\n        683,\n        \nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvgzr6ini.php on line 147

    '
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://primes.utm.edu/prove/prove2_3.html\n    // See also http://en.wikipedia.org/wiki/Trial_division\n\
    \    $limit = (int) sqrt($n);\n    $num_divs = 6;\n    $num_tests = $limit;\n\
    \    $num_primes = 0;\n    $max_tests = 50;\n\n    while ($num_tests > $max_tests)\
    \ {\n        $num_divs++;\n        $num_tests = $limit / $num_divs;\n    }\n\n\
    \    for ($i = 1; $i <= $num_divs; $i++) {\n        if ($n % $i == 0) {\n    \
    \        return false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tdw_66p.php:50\n\
    Stack trace:\n#0 /tmp/tmp1tdw_66p.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp1tdw_66p.php\
    \ on line 50\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $n; $i += 2)\n        if ($n\
    \ % $i == 0)\n            return false;\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpnvcf072y.php:25\nStack trace:\n#0 /tmp/tmpnvcf072y.php(33): is_prime(101)\n\
    #1 /tmp/tmpnvcf072y.php(38): candidate(101)\n#2 /tmp/tmpnvcf072y.php(52): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnvcf072y.php on line 25\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi1uju1i4.php:27\nStack trace:\n#0 /tmp/tmpi1uju1i4.php(37): is_prime(101)\n\
    #1 /tmp/tmpi1uju1i4.php(42): candidate(101)\n#2 /tmp/tmpi1uju1i4.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi1uju1i4.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if(!($n\
    \ % $i)) {\n            return false;\n        }\n        $i++;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl93eunm.php:35\n\
    Stack trace:\n#0 /tmp/tmpyl93eunm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpyl93eunm.php\
    \ on line 35\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) return false;\n    if ($n == 2) return true;\n    if ($n % 2\
    \ == 0) return false;\n    if ($n % 3 == 0) return false;\n    if ($n % 5 == 0)\
    \ return false;\n    $limit = (int) sqrt($n);\n    for($i = 3; $i <= $limit; $i\
    \ += 2) {\n        if ($n % $i == 0) return false;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7awt8lif.php:42\n\
    Stack trace:\n#0 /tmp/tmp7awt8lif.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp7awt8lif.php\
    \ on line 42\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi1uju1i4.php:27\nStack trace:\n#0 /tmp/tmpi1uju1i4.php(37): is_prime(101)\n\
    #1 /tmp/tmpi1uju1i4.php(42): candidate(101)\n#2 /tmp/tmpi1uju1i4.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi1uju1i4.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42xlooqn.php:34\n\
    Stack trace:\n#0 /tmp/tmp42xlooqn.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp42xlooqn.php\
    \ on line 34\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i\
    \ += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcihu13u4.php:28\nStack trace:\n#0 /tmp/tmpcihu13u4.php(38): is_prime(101)\n\
    #1 /tmp/tmpcihu13u4.php(43): candidate(101)\n#2 /tmp/tmpcihu13u4.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcihu13u4.php on line 28\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check up to sqrt(n).\n\
    \    $limit = (int) sqrt($n);\n    for ($i = 1; $i <= $limit; $i++) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u2885xw.php:39\n\
    Stack trace:\n#0 /tmp/tmp3u2885xw.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp3u2885xw.php\
    \ on line 39\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $m = $n / 5;\n    if ($m == 2) return true;\n\
    \    if ($m == 3) return true;\n    if ($m == 5) return true;\n    if ($m == 7)\
    \ return true;\n    if ($m == 11) return true;\n    if ($m == 13) return true;\n\
    \    if ($m == 17) return true;\n    if ($m == 19) return true;\n    if ($m ==\
    \ 23) return true;\n    if ($m == 29) return true;\n    if ($m == 31) return true;\n\
    \    if ($m == 37) return true;\n    if ($m == 43) return true;\n    if ($m ==\
    \ 47) return true;\n    if ($m == 53) return true;\n    if ($m == 59) return true;\n\
    \    if ($m == 61) return true;\n    if ($m == 67) return true;\n    if ($m ==\
    \ 71) return true;\n    if ($m == 73) return true;\n    if ($m == 79) return true;\n\
    \    if ($m == 83) return true;\n    if ($m == 89) return true;\n    if ($m ==\
    \ 97) return true;\n    if ($m == 101) return true;\n    if ($m == 103) return\
    \ true;\n    if ($m == 107) return true;\n    if ($m == 109) return true;\n  \
    \  if ($m == 113) return true;\n    if ($m == 127) return true;\n    if ($m ==\
    \ 131) return true;\n    if ($m == 137) return true;\n    if ($m == 139) return\
    \ true;\n    if ($m == 147) return true;\n    if ($m == 151) return true;\n  \
    \  if ($m == 157) return true;\n    if ($m == 163) return true;\n    if ($m ==\
    \ 171) return true;\n    if ($m == 177) return true;\n    if ($m == 181) return\
    \ true;\n    if ($m == 191) return true;\n    if ($m == 197) return true;\n  \
    \  if ($m == 199) return true;\n    if ($m == 211) return true;\n    if ($m ==\
    \ 223) return true;\n    if ($m == 227) return true;\n    if ($m == 229) return\
    \ true;\n    if ($m == 233) return true;\n    if ($m == 239) return true;\n  \
    \  if ($m == 241) return true;\n    if ($m == 251) return true;\n    if ($m ==\
    \ 257) return true;\n    if ($m == 263) return true;\n    if ($m == 269) return\
    \ true;\n    if ($m == 271) return true;\n    if ($m == \nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpszt93j_7.php on line 81

    '
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while ($i <= sqrt($n)) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n \
    \   return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwgzt1pb.php:35\n\
    Stack trace:\n#0 /tmp/tmplwgzt1pb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmplwgzt1pb.php\
    \ on line 35\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdlhwu_e5.php:27\nStack trace:\n#0 /tmp/tmpdlhwu_e5.php(38): is_prime(101)\n\
    #1 /tmp/tmpdlhwu_e5.php(43): candidate(101)\n#2 /tmp/tmpdlhwu_e5.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdlhwu_e5.php on line 27\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $i = 3;\n    while ($i <= $root)\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n     \
    \   $i += 2;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpwq4xcmw8.php:28\nStack trace:\n#0 /tmp/tmpwq4xcmw8.php(40): is_prime(101)\n\
    #1 /tmp/tmpwq4xcmw8.php(45): candidate(101)\n#2 /tmp/tmpwq4xcmw8.php(59): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwq4xcmw8.php on line 28\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    while($root * $f <= $n) {\n  \
    \      $f++;\n    }\n    for ($i = 3; $i <= $root; $i += 2) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0bnvtfpg.php:27\nStack trace:\n#0 /tmp/tmp0bnvtfpg.php(41): is_prime(101)\n\
    #1 /tmp/tmp0bnvtfpg.php(46): candidate(101)\n#2 /tmp/tmp0bnvtfpg.php(60): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0bnvtfpg.php on line 27\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if(!($n\
    \ % $i)) {\n            return false;\n        }\n        $i++;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl93eunm.php:35\n\
    Stack trace:\n#0 /tmp/tmpyl93eunm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpyl93eunm.php\
    \ on line 35\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdlhwu_e5.php:27\nStack trace:\n#0 /tmp/tmpdlhwu_e5.php(38): is_prime(101)\n\
    #1 /tmp/tmpdlhwu_e5.php(43): candidate(101)\n#2 /tmp/tmpdlhwu_e5.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdlhwu_e5.php on line 27\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  // Check up to sqrt(n).\n  for ($i\
    \ = 3; $i <= sqrt($n); $i += 2) {\n    if ($n % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_byg6ch.php:35\n\
    Stack trace:\n#0 /tmp/tmpw_byg6ch.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpw_byg6ch.php\
    \ on line 35\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \    $limit = $n - 1;\n    $num_div = 2;\n    while ($num_div <= $limit) {\n \
    \       if ($n % $num_div == 0) {\n            return false;\n        }\n    \
    \    $num_div += 2;\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2prvg0b.php:50\n\
    Stack trace:\n#0 /tmp/tmpf2prvg0b.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpf2prvg0b.php\
    \ on line 50\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi1uju1i4.php:27\nStack trace:\n#0 /tmp/tmpi1uju1i4.php(37): is_prime(101)\n\
    #1 /tmp/tmpi1uju1i4.php(42): candidate(101)\n#2 /tmp/tmpi1uju1i4.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi1uju1i4.php on line 27\n"
  timestamp: 1659729982
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $i = 3;\n\
    \    while ($i <= sqrt($n)) {\n        if ($n % $i == 0)\n            return false;\n\
    \        $i += 2;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $i = 3;\n    while ($i <= $root) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n        $i += 2;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp33aiyfnz.php:27\nStack trace:\n#0 /tmp/tmp33aiyfnz.php(39): is_prime(101)\n\
    #1 /tmp/tmp33aiyfnz.php(44): candidate(101)\n#2 /tmp/tmp33aiyfnz.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp33aiyfnz.php on line 27\n"
  timestamp: 1659729982
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n <= 1)\n    return false;\n  if ($n == 2)\n    return true;\n  if ($n\
    \ % 2 == 0)\n    return false;\n  for ($i = 3; $i * $i <= $n; $i += 2)\n    if\
    \ ($n % $i == 0)\n      return false;\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\n    for\
    \ ($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0i5lrt65.php:30\nStack trace:\n#0 /tmp/tmp0i5lrt65.php(43): is_prime(101)\n\
    #1 /tmp/tmp0i5lrt65.php(48): candidate(101)\n#2 /tmp/tmp0i5lrt65.php(62): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0i5lrt65.php on line 30\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check up to sqrt(n).\n\
    \    $max = (int) sqrt($n);\n    for ($i = 1; $i <= $max; $i++) {\n        if\
    \ ($n % $i == 0) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkhx6nc5.php:39\n\
    Stack trace:\n#0 /tmp/tmpmkhx6nc5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpmkhx6nc5.php\
    \ on line 39\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n_log2 = log($n, 2);\n    $n_log_log_2 = log($n_log2,\
    \ 2);\n    $n_log_2 = pow($n_log2, 2);\n    $n_2 = pow($n, 2);\n    $n_log_2 =\
    \ pow($n_log2, 2);\n    $n_log_log_2 = pow($n_log_log_2, 2);\n    $n_log_log_2_div_2\
    \ = pow($n_log_log_2, 0.5);\n    $n_log_log_2_div_2_div_2 = pow($n_log_log_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2 = pow($n_log_log_2_div_2_div_2, 0.5);\n\
    \    $n_log_log_2_div_2_div_2_div_2_div_2 = pow($n_log_log_2_div_2_div_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2_div_2_div_2 = pow($n_log_log_2_div_2_div_2_div_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2 = pow($n_log_log_2_div_2_div_2_div_2_div_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2 = pow($n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2 = pow($n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2\
    \ = pow($n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2\
    \ = pow($n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2\
    \ = pow($n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2,\
    \ 0.5);\n    $n_log_log_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2_div_2\
    \ = pow($n_log_log_2_div_2_div_2_div_2_\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpkzgm_ass.php
    on line 37

    '
  timestamp: 1659822394
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check all odd numbers\
    \ up to sqrt(n).\n    for ($i = 3; $i * $i <= $n; $i += 2) {\n        if ($n %\
    \ $i == 0) {\n            return false;\n        }\n    }\n\n    // Check all\
    \ even numbers up to sqrt(n).\n    for ($i = 2; $i * $i <= $n; $i += 2) {\n  \
    \      if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822394
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n\
    \        if ($n % $i == 0) return false;\n        $i += 2;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $m = $n / 5;\n    if ($m == 2) return true;\n\
    \    if ($m == 3) return true;\n    if ($m == 5) return true;\n    if ($m == 7)\
    \ return true;\n    if ($m == 11) return true;\n    if ($m == 13) return true;\n\
    \    if ($m == 17) return true;\n    if ($m == 19) return true;\n    if ($m ==\
    \ 23) return true;\n    if ($m == 29) return true;\n    if ($m == 31) return true;\n\
    \    if ($m == 37) return true;\n    if ($m == 43) return true;\n    if ($m ==\
    \ 47) return true;\n    if ($m == 53) return true;\n    if ($m == 59) return true;\n\
    \    if ($m == 61) return true;\n    if ($m == 67) return true;\n    if ($m ==\
    \ 71) return true;\n    if ($m == 73) return true;\n    if ($m == 79) return true;\n\
    \    if ($m == 83) return true;\n    if ($m == 89) return true;\n    if ($m ==\
    \ 97) return true;\n    if ($m == 101) return true;\n    if ($m == 103) return\
    \ true;\n    if ($m == 109) return true;\n    if ($m == 113) return true;\n  \
    \  if ($m == 127) return true;\n    if ($m == 131) return true;\n    if ($m ==\
    \ 137) return true;\n    if ($m == 139) return true;\n    if ($m == 147) return\
    \ true;\n    if ($m == 151) return true;\n    if ($m == 157) return true;\n  \
    \  if ($m == 163) return true;\n    if ($m == 171) return true;\n    if ($m ==\
    \ 177) return true;\n    if ($m == 181) return true;\n    if ($m == 191) return\
    \ true;\n    if ($m == 197) return true;\n    if ($m == 199) return true;\n  \
    \  if ($m == 211) return true;\n    if ($m == 223) return true;\n    if ($m ==\
    \ 227) return true;\n    if ($m == 229) return true;\n    if ($m == 233) return\
    \ true;\n    if ($m == 239) return true;\n    if ($m == 241) return true;\n  \
    \  if ($m == 247) return true;\n    if ($m == 251) return true;\n    if ($m ==\
    \ 257) return true;\n    if ($m == 263) return true;\n    if ($m == 269) return\
    \ true;\n    if ($m == 271) return true;\n    if ($m == \nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp519w_t3y.php on line 81

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i += 2) {\n \
    \       if ($n % $i == 0)\n            return false;\n        $f *= $i;\n    }\n\
    \    return $f == 1;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpsho3b34u.php:25\nStack trace:\n#0 /tmp/tmpsho3b34u.php(36): is_prime(101)\n\
    #1 /tmp/tmpsho3b34u.php(41): candidate(101)\n#2 /tmp/tmpsho3b34u.php(55): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsho3b34u.php on line 25\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42xlooqn.php:34\n\
    Stack trace:\n#0 /tmp/tmp42xlooqn.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp42xlooqn.php\
    \ on line 34\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi1uju1i4.php:27\nStack trace:\n#0 /tmp/tmpi1uju1i4.php(37): is_prime(101)\n\
    #1 /tmp/tmpi1uju1i4.php(42): candidate(101)\n#2 /tmp/tmpi1uju1i4.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi1uju1i4.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $root = $this->sqrt($n);\n    for ($i\
    \ = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) return false;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcji_bkb0.php:22\nStack trace:\n#0 /tmp/tmpcji_bkb0.php(30): is_prime(101)\n\
    #1 /tmp/tmpcji_bkb0.php(35): candidate(101)\n#2 /tmp/tmpcji_bkb0.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcji_bkb0.php on line 22\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\
    \    for ($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpvaujadqz.php:28\nStack trace:\n#0 /tmp/tmpvaujadqz.php(39): is_prime(101)\n\
    #1 /tmp/tmpvaujadqz.php(44): candidate(101)\n#2 /tmp/tmpvaujadqz.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvaujadqz.php on line 28\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    while($root * $f <= $n) {\n  \
    \      if ($n % $root == 0) {\n            return false;\n        }\n        $f++;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp_sl7o0ra.php:27\nStack trace:\n#0 /tmp/tmp_sl7o0ra.php(39): is_prime(101)\n\
    #1 /tmp/tmp_sl7o0ra.php(44): candidate(101)\n#2 /tmp/tmp_sl7o0ra.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_sl7o0ra.php on line 27\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $m = $n / 5;\n    $k = floor($m);\n    $a =\
    \ array(2, 3);\n    do {\n        if ($n % $k == 0) {\n            $a = array($k,\
    \ $k + 1);\n            break;\n        }\n        $k++;\n    } while ($k * $k\
    \ <= $m);\n    $m = $a[1];\n    $n = $a[0];\n    if ($m == $n) {\n        $m =\
    \ $a[2];\n        $n = $a[1];\n    }\n    if ($m == $n || $n % $m == 0) {\n  \
    \      return false;\n    }\n    $k = $n - $m;\n    $l = 0;\n    while ($k % $m\
    \ == 0) {\n        $k = $k / $m;\n        $l++;\n    }\n    if ($l % 2 == 0) {\n\
    \        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t2wfxnp.php:67\n\
    Stack trace:\n#0 /tmp/tmp5t2wfxnp.php(75): test()\n#1 {main}\n  thrown in /tmp/tmp5t2wfxnp.php\
    \ on line 67\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \  if ($n < 2) {\n    return false;\n  }\n  if ($n == 2) {\n    return true;\n\
    \  }\n  if ($n % 2 == 0) {\n    return false;\n  }\n  $root = $this->sqrt($n);\n\
    \  for ($i = 3; $i <= $root; $i += 2) {\n    if ($n % $i == 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxxeb5p59.php:27\nStack trace:\n#0 /tmp/tmpxxeb5p59.php(37): is_prime(101)\n\
    #1 /tmp/tmpxxeb5p59.php(42): candidate(101)\n#2 /tmp/tmpxxeb5p59.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxxeb5p59.php on line 27\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpdlhwu_e5.php:27\nStack trace:\n#0 /tmp/tmpdlhwu_e5.php(38): is_prime(101)\n\
    #1 /tmp/tmpdlhwu_e5.php(43): candidate(101)\n#2 /tmp/tmpdlhwu_e5.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdlhwu_e5.php on line 27\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = $n - 1;\n    while ($i >= 1) {\n\
    \        if ($n % $i == 0) return false;\n        $i--;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxukreo5q.php:36\n\
    Stack trace:\n#0 /tmp/tmpxukreo5q.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxukreo5q.php\
    \ on line 36\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://primes.utm.edu/prove/prove2_3.html\n    // See also http://en.wikipedia.org/wiki/Trial_division\n\
    \    $n2 = $n / 2;\n    $n3 = $n / 3;\n    $n5 = $n / 5;\n\n    $n_is_prime =\
    \ true;\n    for($i = 2; $i <= sqrt($n); $i++) {\n        if ($n % $i == 0) {\n\
    \            $n_is_prime = false;\n            break;\n        }\n    }\n\n  \
    \  if ($n_is_prime) {\n        return true;\n    }\n\n    // If n is composite\
    \ then it's only a matter of luck if\n    // any of the following return true.\n\
    \    $n_is_square = true;\n    $n_is_odd = true;\n    for($i = 3; $i <= sqrt($n);\
    \ $i++) {\n        if ($n % $i == 0) {\n            $n_is_square = false;\n  \
    \      }\n        if ($n % $i == 1) {\n            $n_is_odd = false;\n      \
    \  }\n    }\n\n    if ($n_is_square) {\n        return true;\n    }\n\n    return\
    \ $n_is_odd;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lhrxxr0.php:65\n\
    Stack trace:\n#0 /tmp/tmp8lhrxxr0.php(80): test()\n#1 {main}\n  thrown in /tmp/tmp8lhrxxr0.php\
    \ on line 65\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n\n    for($i = 3; $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp5ydmmuul.php:30\nStack trace:\n#0 /tmp/tmp5ydmmuul.php(42): is_prime(101)\n\
    #1 /tmp/tmp5ydmmuul.php(47): candidate(101)\n#2 /tmp/tmp5ydmmuul.php(61): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5ydmmuul.php on line 30\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check up to sqrt(n).\n\
    \    $limit = $sqrt($n);\n    for ($i = 1; $i <= $limit; $i++) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n\n    // If we got\
    \ this far, we've found a prime number.\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $sqrt in /tmp/tmpez86kcd2.php on line 23\n\
    \nFatal error: Uncaught Error: Value of type null is not callable in /tmp/tmpez86kcd2.php:23\n\
    Stack trace:\n#0 /tmp/tmpez86kcd2.php(35): is_prime(6)\n#1 /tmp/tmpez86kcd2.php(39):\
    \ candidate(6)\n#2 /tmp/tmpez86kcd2.php(54): test()\n#3 {main}\n  thrown in /tmp/tmpez86kcd2.php\
    \ on line 23\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n\
    \    for ($i = 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpvaujadqz.php:28\nStack trace:\n#0 /tmp/tmpvaujadqz.php(39): is_prime(101)\n\
    #1 /tmp/tmpvaujadqz.php(44): candidate(101)\n#2 /tmp/tmpvaujadqz.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvaujadqz.php on line 28\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n\n    for($i = 3; $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp5ydmmuul.php:30\nStack trace:\n#0 /tmp/tmp5ydmmuul.php(42): is_prime(101)\n\
    #1 /tmp/tmp5ydmmuul.php(47): candidate(101)\n#2 /tmp/tmp5ydmmuul.php(61): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5ydmmuul.php on line 30\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hz8y5e.php:35\n\
    Stack trace:\n#0 /tmp/tmp46hz8y5e.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp46hz8y5e.php\
    \ on line 35\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    $i = 3;\n    while ($i <= sqrt($n)) {\n\
    \        if ($n % $i == 0) return false;\n        $i += 2;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division via\
    \ trial division gets the remainder.\n    // If remainder is zero, then n is prime.\n\
    \    // If remainder is not zero, then n is not prime.\n    // If remainder is\
    \ one, then n is composite.\n    // If remainder is two, then n is odd.\n    //\
    \ If remainder is three, then n is even.\n    // If remainder is four, then n\
    \ is odd.\n    // If remainder is five, then n is odd.\n    // If remainder is\
    \ six, then n is even.\n    // If remainder is seven, then n is odd.\n    // If\
    \ remainder is eight, then n is even.\n    // If remainder is nine, then n is\
    \ odd.\n    // If remainder is ten, then n is even.\n    // If remainder is eleven,\
    \ then n is odd.\n    // If remainder is twelve, then n is even.\n    // If remainder\
    \ is thirteen, then n is odd.\n    // If remainder is fourteen, then n is even.\n\
    \    // If remainder is fifteen, then n is odd.\n    // If remainder is sixteen,\
    \ then n is even.\n    // If remainder is seventeen, then n is odd.\n    // If\
    \ remainder is eighteen, then n is even.\n    // If remainder is nineteen, then\
    \ n is odd.\n    // If remainder is twenty, then n is even.\n    // If remainder\
    \ is thirty, then n is odd.\n    // If remainder is forty, then n is even.\n \
    \   // If remainder is fifty, then n is odd.\n    // If remainder is sixty, then\
    \ n is even.\n    // If remainder is seventy, then n is odd.\n    // If remainder\
    \ is eighty, then n is even.\n    // If remainder is ninety, then n is odd.\n\
    \    // If remainder is hundred, then n is even.\n    // If remainder is thousand,\
    \ then n is odd.\n    // If remainder is million, then n is even.\n    // If remainder\
    \ is billion, then n is odd.\n    // If remainder is trillion, then n is even.\n\
    \    // If remainder is quadrillion, then n is odd.\n    // If remainder is quintillion,\
    \ then n is even.\n    // If remainder is sextillion, then n is \nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 17 in /tmp/tmpy8hrks4b.php on line 80

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) {\n        return false;\n    }\n\n    $n = abs($n);\n\n   \
    \ // Trial division by 2, 3, 5, 7, 11, and 13 should take about log(n).\n    $log_n\
    \ = log($n);\n    $log_n2 = log($n, 2);\n\n    // Since $log_n is always positive,\
    \ we can use $log_n2 as a shift\n    // and subtract $log_n from it.\n    $log_n2\
    \ -= $log_n;\n\n    // The first few multiples of 5 are statically known to have\n\
    \    // no prime factors, and the first few multiples of 7 are known\n    // to\
    \ have at least one prime factor.\n    if ($log_n2 <= -5 || $log_n2 > log(5) -\
    \ 1) {\n        return false;\n    }\n\n    // Check all the even numbers for\
    \ primality. If any of them are\n    // composite numbers, return false.\n   \
    \ for ($i = 2; $i <= sqrt($n); $i += 2) {\n        if ($n % $i == 0) {\n     \
    \       return false;\n        }\n    }\n\n    // Check all the odd numbers for\
    \ primality. If any of them are\n    // composite numbers, return false.\n   \
    \ for ($i = 3; $i <= sqrt($n); $i += 2) {\n        if ($n % $i == 0) {\n     \
    \       return false;\n        }\n    }\n\n    // If we got this far, all the\
    \ numbers were either composite or\n    // non-prime. Check to see if it's divisible\
    \ by any primes\n    // we've found. If it is, return true.\n    for ($i = 3;\
    \ $i <= sqrt($n); $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ true;\n        }\n    }\n\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_iw80wu.php:73\n\
    Stack trace:\n#0 /tmp/tmpl_iw80wu.php(87): test()\n#1 {main}\n  thrown in /tmp/tmpl_iw80wu.php\
    \ on line 73\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n = $n % 6 + 1;\n    if ($n < 2) {\n        return false;\n\
    \    }\n    $root2 = sqrt($n);\n    $root6 = $root2 * $root2;\n    $root8 = $root6\
    \ * $root6;\n    $root10 = $root8 * $root8;\n    $root12 = $root10 * $root10;\n\
    \    $root14 = $root12 * $root12;\n    $root16 = $root14 * $root14;\n    $root18\
    \ = $root16 * $root16;\n    $root20 = $root18 * $root18;\n    $root22 = $root20\
    \ * $root20;\n    $root24 = $root22 * $root22;\n    $root26 = $root24 * $root24;\n\
    \    $root28 = $root26 * $root26;\n    $root30 = $root28 * $root28;\n    $root32\
    \ = $root30 * $root30;\n    $root34 = $root32 * $root32;\n    $root36 = $root34\
    \ * $root34;\n    $root38 = $root36 * $root36;\n    $root40 = $root38 * $root38;\n\
    \    $root42 = $root40 * $root40;\n    $root44 = $root42 * $root42;\n    $root46\
    \ = ($root44 + $root46) / 2;\n    $root48 = $root46 * $root46;\n    $root50 =\
    \ $root48 * $root48;\n    $root52 = $root50 * $root50;\n    $root54 = $root52\
    \ * $root52;\n    $root56 = $root54 * $root54;\n    $root58 = $root56 * $root56;\n\
    \    $root60 = $root58 * $root58;\n    $root62 = $root60 * $root60;\n    $root64\
    \ = $root62 * $root62;\n    $root66 = $root64 * $root64;\n    $root68 = $root66\
    \ * $root66;\n    $root70 = $root68 * $root68;\n    $root72 = $root70 * $root70;\n\
    \    $root74 = $root72 * $root72;\n    $root76 = $root74 * $root74;\n    $root78\
    \ = $root76 * $root76;\n    $root80 = $root78 * $root78;\n    $root82 = $root80\
    \ * $root80;\n    $root84 = $root82 * $root82;\n    $root86 = $root84 * \nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp5cehhbpd.php on line 65

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $n_log2 = log($n, 2);\n    $n_div = ceil($n_log2);\n \
    \   $n_mod_2 = $n % 2;\n    $n_mod_4 = $n % 4;\n    $n_mod_6 = $n % 6;\n    $n_mod_8\
    \ = $n % 8;\n    $n_mod_10 = $n % 10;\n    $n_mod_12 = $n % 12;\n    $n_mod_16\
    \ = $n % 16;\n    $n_mod_20 = $n % 20;\n    $n_mod_24 = $n % 24;\n    $n_mod_28\
    \ = $n % 28;\n    $n_mod_32 = $n % 32;\n    $n_mod_36 = $n % 36;\n    $n_mod_40\
    \ = $n % 40;\n    $n_mod_44 = $n % 44;\n    $n_mod_48 = $n % 48;\n    $n_mod_52\
    \ = $n % 52;\n    $n_mod_56 = $n % 56;\n    $n_mod_60 = $n % 60;\n    $n_mod_64\
    \ = $n % 64;\n    $n_mod_68 = $n % 68;\n    $n_mod_72 = $n % 72;\n    $n_mod_76\
    \ = $n % 76;\n    $n_mod_80 = $n % 80;\n    $n_mod_84 = $n % 84;\n    $n_mod_88\
    \ = $n % 88;\n    $n_mod_92 = $n % 92;\n    $n_mod_96 = $n % 96;\n    $n_mod_100\
    \ = $n % 100;\n    $n_mod_104 = $n % 104;\n    $n_mod_106 = $n % 106;\n    $n_mod_108\
    \ = $n % 108;\n    $n_mod_112 = $n % 112;\n    $n_mod_116 = $n % 116;\n    $n_mod_120\
    \ = $n % 120;\n    $n_mod_124 = $n % 124;\n    $n_mod_128 = $n % 128;\n    $n_mod_132\
    \ = $n % 132;\n    $n_mod_136 = $n % 136;\n    $n_mod_140 = $n % 140;\n    $n_mod_144\
    \ = $n % 144;\n    $n_mod_148 = $n % 148;\n    $n_mod_152 = $n % 152;\n    $n_mod_156\
    \ = $n % 156;\n    $n_mod_160 = $n % 160;\n    $n_mod_164 = $n % 164;\n    $n_mod_168\
    \ = $n % 168;\n    $n_mod_172 = $n % 172;\n    $n_mod_176 = $n % 176;\n    $n_mod_180\
    \ = $n % 180;\n    $n_mod_184 = $n % 184;\n    $n_mod_188 = $n % 188;\n    $n_mod_192\
    \ = $n % 192;\n    $n_mod_196 = $n % 196;\n    $\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpvwjaepn8.php on line 75

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n <= 1) return false;\n    if ($n == 2) return true;\n    if ($n % 2\
    \ == 0) return false;\n    if ($n % 3 == 0) return false;\n    if ($n % 5 == 0)\
    \ return false;\n    $i = 5; $w = 6; $v = 3; $x = 2; $y = 2;\n    while ($i <=\
    \ sqrt($n)) {\n        if ($n % $i == 0) {\n            $x += $i;\n          \
    \  $y += $i;\n        } else {\n            $i += $w;\n            $v += $w;\n\
    \            $w += $x;\n            $x += $v;\n            $v += $x;\n       \
    \ }\n    }\n    return ($x == 1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxehjcn2f.php:45\n\
    Stack trace:\n#0 /tmp/tmpxehjcn2f.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpxehjcn2f.php\
    \ on line 45\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://primes.utm.edu/prove/prove2_3.html\n    // See also http://en.wikipedia.org/wiki/Trial_division\n\
    \    $n2 = $n >> 1;\n    $n3 = $n >> 2;\n    $n4 = $n >> 3;\n    $n5 = $n >> 5;\n\
    \    $n6 = $n >> 7;\n    $n7 = $n >> 9;\n    $n8 = $n >> 11;\n    $n9 = $n >>\
    \ 13;\n    $n10 = $n >> 15;\n    $n11 = $n >> 17;\n    $n12 = $n >> 19;\n    $n13\
    \ = $n >> 21;\n    $n14 = $n >> 23;\n    $n15 = $n >> 25;\n    $n16 = $n >> 27;\n\
    \    $n17 = $n >> 29;\n    $n18 = $n >> 31;\n    $n19 = $n >> 33;\n    $n20 =\
    \ $n >> 35;\n    $n21 = $n >> 37;\n    $n22 = $n >> 39;\n    $n23 = $n >> 41;\n\
    \    $n24 = $n >> 43;\n    $n25 = $n >> 45;\n    $n26 = $n >> 47;\n    $n27 =\
    \ $n >> 49;\n    $n28 = $n >> 51;\n    $n29 = $n >> 53;\n    $n30 = $n >> 55;\n\
    \    $n31 = $n >> 57;\n    $n32 = $n >> 59;\n    $n33 = $n >> 61;\n    $n34 =\
    \ $n >> 63;\n    $n35 = $n >> 65;\n    $n36 = $n >> 67;\n    $n37 = $n >> 69;\n\
    \    $n38 = $n >> 71;\n    $n39 = $n >> 73;\n    $n40 = $n >> 75;\n    $n41 =\
    \ $n >> 77;\n    $n42 = $n >> 79;\n    $n43 = $n >> 81;\n    $n44 = $n >> 83;\n\
    \    $n45 = $n >> 85;\n    $n46 = $n >> 87;\n    $n47 = $n >> 89;\n    $n48 =\
    \ $n >> 91;\n    $n49 = $n >> 93;\n    $n50 = $n >> 95;\n    $n51 = $n >> 97;\n\
    \    $n52 = $n >> 99;\n    $n53 = $n >> 101;\n    $n54 = $n >> 10\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpde7ez7km.php
    on line 77

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i\
    \ += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcihu13u4.php:28\nStack trace:\n#0 /tmp/tmpcihu13u4.php(38): is_prime(101)\n\
    #1 /tmp/tmpcihu13u4.php(43): candidate(101)\n#2 /tmp/tmpcihu13u4.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcihu13u4.php on line 28\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division avoids\
    \ problems with negative numbers.\n    if ($n < 7) {\n        return $n == 2;\n\
    \    }\n\n    // Test for divisibility by all odd numbers up to sqrt($n).\n  \
    \  // If $n has a square root that is a factor of $n, then $n is prime.\n    //\
    \ If $n is not divisible by any number up to sqrt($n), then $n is not\n    //\
    \ prime.\n    // Note that $n can only be prime if it is a factor of $n.\n   \
    \ $sqrtn = sqrt($n);\n    for ($i = 3; $i <= $sqrtn; $i += 2) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkz8rcrwe.php:54\n\
    Stack trace:\n#0 /tmp/tmpkz8rcrwe.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpkz8rcrwe.php\
    \ on line 54\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpt3hfcc89.php:27\nStack trace:\n#0 /tmp/tmpt3hfcc89.php(36): is_prime(101)\n\
    #1 /tmp/tmpt3hfcc89.php(41): candidate(101)\n#2 /tmp/tmpt3hfcc89.php(55): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt3hfcc89.php on line 27\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    $f = 1;\n\
    \    $s = 0;\n    while ($root2 != 1) {\n        $s = $s + 1;\n        $f = $f\
    \ + $root2;\n        $root2 = $this->sqrt($root2);\n    }\n    $f = $f + 1;\n\
    \    if ($n % $f == 0) {\n        return true;\n    }\n    return false;\n}\n\
    function candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpaxiwud0i.php:27\nStack trace:\n#0 /tmp/tmpaxiwud0i.php(43): is_prime(101)\n\
    #1 /tmp/tmpaxiwud0i.php(48): candidate(101)\n#2 /tmp/tmpaxiwud0i.php(62): test()\n\
    #3 {main}\n  thrown in /tmp/tmpaxiwud0i.php on line 27\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi1uju1i4.php:27\nStack trace:\n#0 /tmp/tmpi1uju1i4.php(37): is_prime(101)\n\
    #1 /tmp/tmpi1uju1i4.php(42): candidate(101)\n#2 /tmp/tmpi1uju1i4.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi1uju1i4.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    $i = 1;\n    while($i <= sqrt($n)) {\n        if($n %\
    \ $i == 0) {\n            return false;\n        }\n        $i++;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hz8y5e.php:35\n\
    Stack trace:\n#0 /tmp/tmp46hz8y5e.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp46hz8y5e.php\
    \ on line 35\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxbrz2mz8.php:27\nStack trace:\n#0 /tmp/tmpxbrz2mz8.php(37): is_prime(101)\n\
    #1 /tmp/tmpxbrz2mz8.php(42): candidate(101)\n#2 /tmp/tmpxbrz2mz8.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxbrz2mz8.php on line 27\n"
  timestamp: 1659730045
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    while($root * $f <= $n) {\n  \
    \      $f++;\n    }\n    for ($i = 3; $i <= $root; $i += 2) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0bnvtfpg.php:27\nStack trace:\n#0 /tmp/tmp0bnvtfpg.php(41): is_prime(101)\n\
    #1 /tmp/tmp0bnvtfpg.php(46): candidate(101)\n#2 /tmp/tmp0bnvtfpg.php(60): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0bnvtfpg.php on line 27\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division check\n\
    \    if ($n % 2 == 0) {\n        return false;\n    }\n\n    // Check all odd\
    \ numbers up to sqrt(n)\n    for ($i = 3; $i * $i <= $n; $i += 2) {\n        if\
    \ ($n % $i == 0) {\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check factors up to\
    \ sqrt(n)\n    $i = 2;\n    while ($i <= sqrt($n)) {\n        if ($n % $i == 0)\
    \ {\n            return false;\n        }\n        $i += 1;\n    }\n\n    // Check\
    \ factors up to sqrt(n) using trial division\n    $i = 2;\n    while ($i <= sqrt($n))\
    \ {\n        if ($n % $i == 0) {\n            return false;\n        }\n     \
    \   $i += 2;\n    }\n\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i * $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpi1uju1i4.php:27\nStack trace:\n#0 /tmp/tmpi1uju1i4.php(37): is_prime(101)\n\
    #1 /tmp/tmpi1uju1i4.php(42): candidate(101)\n#2 /tmp/tmpi1uju1i4.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi1uju1i4.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for($i = 3; $i <= $root; $i += 2) {\n     \
    \   if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpyc5dmbh5.php:27\nStack trace:\n#0 /tmp/tmpyc5dmbh5.php(37): is_prime(101)\n\
    #1 /tmp/tmpyc5dmbh5.php(42): candidate(101)\n#2 /tmp/tmpyc5dmbh5.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyc5dmbh5.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    $root3 =\
    \ $this->sqrt($root2);\n    $root4 = $this->sqrt($root3);\n    $root5 = $this->sqrt($root4);\n\
    \    $root6 = $this->sqrt($root5);\n    $root7 = $this->sqrt($root6);\n    $root8\
    \ = $this->sqrt($root7);\n    $root9 = $this->sqrt($root8);\n    $root10 = $this->sqrt($root9);\n\
    \    $root11 = $this->sqrt($root10);\n    $root12 = $this->sqrt($root11);\n  \
    \  $root13 = $this->sqrt($root12);\n    $root14 = $this->sqrt($root13);\n    $root15\
    \ = $this->sqrt($root14);\n    $root16 = $this->sqrt($root15);\n    $root17 =\
    \ $this->sqrt($root16);\n    $root18 = $this->sqrt($root17);\n    $root19 = $this->sqrt($root18);\n\
    \    $root20 = $this->sqrt($root19);\n    $root21 = $this->sqrt($root20);\n  \
    \  $root22 = $this->sqrt($root21);\n    $root23 = $this->sqrt($root22);\n    $root24\
    \ = $this->sqrt($root23);\n    $root25 = $this->sqrt($root24);\n    $root26 =\
    \ $this->sqrt($root25);\n    $root27 = $this->sqrt($root26);\n    $root28 = $this->sqrt($root27);\n\
    \    $root29 = $this->sqrt($root28);\n    $root30 = $this->sqrt($root29);\n  \
    \  $root31 = $this->sqrt($root30);\n    $root32 = $this->sqrt($root31);\n    $root33\
    \ = $this->sqrt($root32);\n    $root34 = $this->sqrt($root33);\n    $root35 =\
    \ $this->sqrt($root34);\n    $root36 = $this->sqrt($root35);\n    $root37 = $this->sqrt($root36);\n\
    \    $root38 = $this->sqrt($root37);\n    $root39 = $this->sqrt($root38);\n  \
    \  $root40 = $this->sqrt($root39);\n    $root41 = $this->sqrt($root40);\n    $root42\
    \ = $this->sqrt($root41);\n    $root43 = $this->sqrt($root42);\n    $root44 =\
    \ $this->sqrt($root43);\n    $root45 = $this->sqrt($root44);\n    $root46 = $this->sqrt($root45);\n\
    \    $root47 = $\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmprcx_uk0t.php on line 74

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from https://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \    $limit = $n - 1;\n    $num_div = 2;\n    $max_num_div = floor($limit / $num_div);\n\
    \n    while ($num_div < $max_num_div) {\n        if ($n % $num_div == 0) {\n \
    \           return false;\n        }\n        $num_div++;\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb1ta0tp0.php:42\n\
    Stack trace:\n#0 /tmp/tmpb1ta0tp0.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpb1ta0tp0.php\
    \ on line 42\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    $root\
    \ = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i = 3; $i <=\
    \ $root; $i += 2) {\n        if ($n % $i == 0)\n            return false;\n  \
    \  }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpvh4bx0aq.php:25\nStack trace:\n#0 /tmp/tmpvh4bx0aq.php(35): is_prime(101)\n\
    #1 /tmp/tmpvh4bx0aq.php(40): candidate(101)\n#2 /tmp/tmpvh4bx0aq.php(54): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvh4bx0aq.php on line 25\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check up to sqrt(n).\n\
    \    $root = $this->sqrt($n);\n    for ($i = 1; $i <= $root; $i++) {\n       \
    \ if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n    // If\
    \ we get here, it's prime.\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpp482qd4r.php:23\nStack trace:\n#0 /tmp/tmpp482qd4r.php(35): is_prime(6)\n\
    #1 /tmp/tmpp482qd4r.php(39): candidate(6)\n#2 /tmp/tmpp482qd4r.php(54): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp482qd4r.php on line 23\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://en.wikipedia.org/wiki/Primality_test#Trial_division_of_a_number\n\
    \    // The number must be odd at this point\n    if ($n % 2 == 0) {\n       \
    \ return false;\n    }\n\n    $max = $n - 1;\n    $max_factor = 2;\n    $i = 3;\n\
    \    while ($i <= $max) {\n        if ($n % $i == 0) {\n            return false;\n\
    \        }\n        $i += $max_factor;\n        $max_factor++;\n    }\n\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9b0akw09.php:58\n\
    Stack trace:\n#0 /tmp/tmp9b0akw09.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp9b0akw09.php\
    \ on line 58\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i <= $root; $i +=\
    \ 2) {\n        if ($n % $i == 0) {\n            $f = false;\n            break;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(255379) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp2wmtp8ax.php:27\nStack trace:\n#0 /tmp/tmp2wmtp8ax.php(39): is_prime(101)\n\
    #1 /tmp/tmp2wmtp8ax.php(44): candidate(101)\n#2 /tmp/tmp2wmtp8ax.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2wmtp8ax.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    while($root * $f <= $n) {\n  \
    \      if ($n % $root == 0) {\n            return false;\n        }\n        $f++;\n\
    \        $root = $this->sqrt($n);\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpexn_awyf.php:27\nStack trace:\n#0 /tmp/tmpexn_awyf.php(40): is_prime(101)\n\
    #1 /tmp/tmpexn_awyf.php(45): candidate(101)\n#2 /tmp/tmpexn_awyf.php(59): test()\n\
    #3 {main}\n  thrown in /tmp/tmpexn_awyf.php on line 27\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Check up to sqrt(n).\n\
    \    $limit = $sqrt_limit;\n    for ($i = 0; $i * $i <= $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            return false;\n        }\n        if ($limit <\
    \ sqrt($n)) {\n            $limit = sqrt($n);\n        }\n    }\n\n    // Check\
    \ all the numbers in the range 2 to sqrt(n).\n    for ($i = 2; $i * $i <= $n;\
    \ $i++) {\n        if ($n % $i == 0) {\n            return false;\n        }\n\
    \    }\n\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $sqrt_limit in /tmp/tmpst6hd0v5.php on line\
    \ 23\n\nFatal error: Uncaught DivisionByZeroError: Modulo by zero in /tmp/tmpst6hd0v5.php:25\n\
    Stack trace:\n#0 /tmp/tmpst6hd0v5.php(44): is_prime(6)\n#1 /tmp/tmpst6hd0v5.php(48):\
    \ candidate(6)\n#2 /tmp/tmpst6hd0v5.php(63): test()\n#3 {main}\n  thrown in /tmp/tmpst6hd0v5.php\
    \ on line 25\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $f = 1;\n    while($root * $f <= $n) {\n  \
    \      $f++;\n    }\n    for ($i = 3; $i <= $root; $i += 2) {\n        if ($n\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp0bnvtfpg.php:27\nStack trace:\n#0 /tmp/tmp0bnvtfpg.php(41): is_prime(101)\n\
    #1 /tmp/tmp0bnvtfpg.php(46): candidate(101)\n#2 /tmp/tmp0bnvtfpg.php(60): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0bnvtfpg.php on line 27\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $i = 3;\n    while ($i <= $root) {\n      \
    \  if ($n % $i == 0) {\n            return false;\n        }\n        $i += 2;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp33aiyfnz.php:27\nStack trace:\n#0 /tmp/tmp33aiyfnz.php(39): is_prime(101)\n\
    #1 /tmp/tmp33aiyfnz.php(44): candidate(101)\n#2 /tmp/tmp33aiyfnz.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmp33aiyfnz.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    for ($i =\
    \ 3; $i <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpcmsvcnxy.php:27\nStack trace:\n#0 /tmp/tmpcmsvcnxy.php(38): is_prime(101)\n\
    #1 /tmp/tmpcmsvcnxy.php(43): candidate(101)\n#2 /tmp/tmpcmsvcnxy.php(57): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcmsvcnxy.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division avoids\
    \ problems with negative numbers.\n    if ($n % 2 == 0) {\n        $is_prime =\
    \ true;\n        for ($i = 3; $i * $i <= $n; $i += 2) {\n            if ($n %\
    \ $i == 0) {\n                $is_prime = false;\n                break;\n   \
    \         }\n        }\n        return $is_prime;\n    }\n\n    // Trial division\
    \ avoids problems with negative numbers.\n    if ($n % 3 == 0) {\n        $is_prime\
    \ = true;\n        for ($i = 5; $i * $i <= $n; $i += 6) {\n            if ($n\
    \ % $i == 0) {\n                $is_prime = false;\n                break;\n \
    \           }\n        }\n        return $is_prime;\n    }\n\n    // Trial division\
    \ avoids problems with negative numbers.\n    if ($n % 5 == 0) {\n        $is_prime\
    \ = true;\n        for ($i = 7; $i * $i <= $n; $i += 11) {\n            if ($n\
    \ % $i == 0) {\n                $is_prime = false;\n                break;\n \
    \           }\n        }\n        return $is_prime;\n    }\n\n    // Trial division\
    \ avoids problems with negative numbers.\n    if ($n % 7 == 0) {\n        $is_prime\
    \ = true;\n        for ($i = 11; $i * $i <= $n; $i += 13) {\n            if ($n\
    \ % $i == 0) {\n                $is_prime = false;\n                break;\n \
    \           }\n        }\n        return $is_prime;\n    }\n\n    // Trial division\
    \ avoids problems with negative numbers.\n    if ($n % 11 == 0) {\n        $is_prime\
    \ = true;\n        for ($i = 13; $i * $i <= $n; $i += 17) {\n            if ($n\
    \ % $i == 0) {\n                $is_prime = false;\n                break;\n \
    \           }\n        }\n        return $is_prime;\n    }\n\n    // Trial division\
    \ avoids problems with negative numbers.\n    if ($n % 13 == 0) {\n        $is_prime\
    \ = true;\n        for ($i = 17; $i * $i <= $n; $i += 19) {\n            if ($n\
    \ % $i == 0) {\n                $is_prime = false;\n                break;\n \
    \           }\n        }\n        return $is_prime;\n    }\n\n    // Trial division\
    \ avoids problems with negative numbers.\n    if ($n % 17 == 0) {\n        $is_prime\
    \ = true;\n        for ($i = 19; $i * $i <= $n; $i += 23) {\n            if ($n\
    \ % $i == 0) {\n                $is_prime = false;\n                break;\n \
    \           }\n        }\n        return $is_prime;\n    }\n\n    // Trial division\
    \ avoids problems with negative numbers.\n    if ($n % 19 == 0) {\n        $is_prime\
    \ = true;\n        for ($i = 23; $i * $i <= $n; $i += 29) {\n            if ($n\
    \ % \nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpjpaxm57p.php on line 111

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Trial division algorithm\
    \ from http://primes.utm.edu/prove/prove2_3.html\n    // See also:\n    // http://stackoverflow.com/questions/5396387/six-x-niner-sieve-of-eratosthenes-program-in-php\n\
    \    $a = $n - 1;\n    $b = $n / 2;\n    $c = 1;\n    $d = 1;\n    $e = 0;\n \
    \   $f = 1;\n    $g = false;\n    $h = false;\n\n    while ($a < $b) {\n     \
    \   if ($e % 2 == 0) {\n            $f = $f * $a + $c;\n        }\n        $g\
    \ = $g * $a + $d;\n        $e = $e + $b;\n        $a = $a + 1;\n        $c = $c\
    \ * $a - $d;\n        $d = $d * $a + $c;\n    }\n\n    if ($g == $n) {\n     \
    \   $h = true;\n    }\n\n    return $h;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp330icv9b.php:58\n\
    Stack trace:\n#0 /tmp/tmp330icv9b.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp330icv9b.php\
    \ on line 58\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) {\n        return false;\n    }\n    if ($n\
    \ == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ false;\n    }\n    $root = $this->sqrt($n);\n    $f = 1;\n    for($i = 3; $i\
    \ <= $root; $i += 2) {\n        if ($n % $i == 0) {\n            $f = false;\n\
    \            break;\n        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpp5p0aw7g.php:28\nStack trace:\n#0 /tmp/tmpp5p0aw7g.php(40): is_prime(101)\n\
    #1 /tmp/tmpp5p0aw7g.php(45): candidate(101)\n#2 /tmp/tmpp5p0aw7g.php(59): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp5p0aw7g.php on line 28\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // Test for prime up to\
    \ sqrt(n).\n    $limit = $sqrt_limit = $sqrt_limit2 = $sqrt_limit3;\n    do {\n\
    \        $limit++;\n        $sqrt_limit2 = $limit;\n        $sqrt_limit3 = ($limit\
    \ * $limit) / 2;\n        $isprime = true;\n        for ($i = 3; $i <= $limit;\
    \ $i += 2) {\n            if ($n % $i == 0) {\n                $isprime = false;\n\
    \                break;\n            }\n        }\n        if ($isprime) {\n \
    \           return true;\n        }\n    } while ($sqrt_limit3 <= $sqrt_limit2\
    \ && $sqrt_limit3 <= $n);\n\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $sqrt_limit3 in /tmp/tmp95m8ptlv.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95m8ptlv.php:48\n\
    Stack trace:\n#0 /tmp/tmp95m8ptlv.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp95m8ptlv.php\
    \ on line 48\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    for ($i = 3; $i <= $root; $i += 2) {\n    \
    \    if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpxblwpyxx.php:27\nStack trace:\n#0 /tmp/tmpxblwpyxx.php(37): is_prime(101)\n\
    #1 /tmp/tmpxblwpyxx.php(42): candidate(101)\n#2 /tmp/tmpxblwpyxx.php(56): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxblwpyxx.php on line 27\n"
  timestamp: 1659729982
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    // If n is even, then\
    \ n is prime.\n    if ($n % 2 == 0) {\n        return true;\n    }\n\n    // If\
    \ n is odd, then n is not prime.\n    if ($n % 2 == 1) {\n        return false;\n\
    \    }\n\n    // If n is odd, then n is prime.\n    if ($n % 3 == 0) {\n     \
    \   return true;\n    }\n\n    // If n is even, then n is not prime.\n    if ($n\
    \ % 3 == 1) {\n        return false;\n    }\n\n    // If n is odd, then n is prime.\n\
    \    if ($n % 5 == 0) {\n        return true;\n    }\n\n    // If n is even, then\
    \ n is not prime.\n    if ($n % 5 == 1) {\n        return false;\n    }\n\n  \
    \  // If n is odd, then n is prime.\n    if ($n % 7 == 0) {\n        return true;\n\
    \    }\n\n    // If n is even, then n is not prime.\n    if ($n % 7 == 1) {\n\
    \        return false;\n    }\n\n    // If n is odd, then n is prime.\n    if\
    \ ($n % 11 == 0) {\n        return true;\n    }\n\n    // If n is even, then n\
    \ is not prime.\n    if ($n % 11 == 1) {\n        return false;\n    }\n\n   \
    \ // If n is odd, then n is prime.\n    if ($n % 13 == 0) {\n        return true;\n\
    \    }\n\n    // If n is even, then n is not prime.\n    if ($n % 13 == 1) {\n\
    \        return false;\n    }\n\n    // If n is odd, then n is prime.\n    if\
    \ ($n % 17 == 0) {\n        return true;\n    }\n\n    // If n is even, then n\
    \ is not prime.\n    if ($n % 17 == 1) {\n        return false;\n    }\n\n   \
    \ // If n is odd, then n is prime.\n    if ($n % 19 == 0) {\n        return true;\n\
    \    }\n\n    // If n is even, then n is not prime.\n    if ($n % 19 == 1) {\n\
    \        return false;\n    }\n\n    // If n is odd, then n is prime.\n    if\
    \ ($n % 23 == 0) {\n        return true;\n    }\n\n    // If n is even, then n\
    \ is not prime.\n    if ($n % 23 == 1) {\n        return false;\n    }\n\n   \
    \ // If n is odd, then n is prime.\n    if ($n % 29 == 0) {\n        return true;\n\
    \    }\n\n    // If n is even, then n is not prime.\n    if ($n % 29 == 1) {\n\
    \        return false;\n    }\n\n    // If n is odd, then n is prime.\n    if\
    \ ($n % 31 == 0) {\n        return true;\n    }\n\n    // If n is even, then n\
    \ is not prime.\n    if ($n % 31 == 1) {\n        return false;\n    }\n\n   \
    \ // If n is odd, then n is prime.\n    if ($n % 37 == 0) {\n        return true;\n\
    \    }\nfunction candidate(...$args) {\n    return is_prime(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 17 in /tmp/tmp1nms73ga.php on line 156

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    \n    $limit = (int) sqrt($n);\n    \n    for\
    \ ($i = 3; $i <= $limit; $i += 2) {\n        if ($n % $i == 0) return false;\n\
    \    }\n    \n    return true;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like\
    \ your solution, however it fails for `is_prime(101)` which returns `true` but\
    \ should be `false`\n<|/ c |>\n<| c |>\nI added a fix for that case\n<|/ c |>\n\
    <| c |>\nI added a fix for that case\n<|/ c |>\n<| c |>\nI added a fix for that\
    \ case\n<|/ c |>\n<| c |>\nI added a fix for that case\n<|/ c |>\n<| a tags=php,primes\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpo6nc7_zd.php
    on line 33

    '
  timestamp: 1659822394
- exit_code: 0
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2)\n        return false;\n    if ($n == 2)\n\
    \        return true;\n    if ($n % 2 == 0)\n        return false;\n    if ($n\
    \ % 3 == 0)\n        return false;\n    $i = 5; $w = 2;\n    while ($i * $i <=\
    \ $n) {\n        if ($n % $i == 0 || $n % ($i + 2) == 0)\n            return false;\n\
    \        $i += $w;\n        $w++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    $n = abs($n);\n    if ($n < 2) return false;\n    if ($n == 2) return true;\n\
    \    if ($n % 2 == 0) return false;\n    if ($n % 3 == 0) return false;\n    if\
    \ ($n % 5 == 0) return false;\n    $m = $n / 5;\n    if ($m == 2) return true;\n\
    \    if ($m == 3) return true;\n    if ($m == 5) return true;\n    if ($m == 7)\
    \ return true;\n    if ($m == 11) return true;\n    if ($m == 13) return true;\n\
    \    if ($m == 17) return true;\n    if ($m == 19) return true;\n    if ($m ==\
    \ 23) return true;\n    if ($m == 29) return true;\n    if ($m == 31) return true;\n\
    \    if ($m == 37) return true;\n    if ($m == 43) return true;\n    if ($m ==\
    \ 47) return true;\n    if ($m == 53) return true;\n    if ($m == 59) return true;\n\
    \    if ($m == 61) return true;\n    if ($m == 67) return true;\n    if ($m ==\
    \ 71) return true;\n    if ($m == 73) return true;\n    if ($m == 79) return true;\n\
    \    if ($m == 83) return true;\n    if ($m == 89) return true;\n    if ($m ==\
    \ 97) return true;\n    if ($m == 101) return true;\n    if ($m == 103) return\
    \ true;\n    if ($m == 107) return true;\n    if ($m == 109) return true;\n  \
    \  if ($m == 113) return true;\n    if ($m == 127) return true;\n    if ($m ==\
    \ 131) return true;\n    if ($m == 137) return true;\n    if ($m == 139) return\
    \ true;\n    if ($m == 147) return true;\n    if ($m == 151) return true;\n  \
    \  if ($m == 157) return true;\n    if ($m == 163) return true;\n    if ($m ==\
    \ 167) return true;\n    if ($m == 173) return true;\n    if ($m == 179) return\
    \ true;\n    if ($m == 181) return true;\n    if ($m == 191) return true;\n  \
    \  if ($m == 197) return true;\n    if ($m == 199) return true;\n    if ($m ==\
    \ 211) return true;\n    if ($m == 223) return true;\n    if ($m == 227) return\
    \ true;\n    if ($m == 229) return true;\n    if ($m == 233) return true;\n  \
    \  if ($m == 239) return true;\n    if ($m == 241) return true;\n    if ($m ==\
    \ 251) return true;\n    if ($m == 253) return true;\n    if ($m == 257) return\
    \ true;\n    if ($m == 263) return true;\n    if ($m == 269\nfunction candidate(...$args)\
    \ {\n    return is_prime(...$args);\n}\n\nfunction test(): void {\n    if (candidate(6)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(101)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13441)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(61)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(85) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(77) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(255379)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp3myjta5r.php
    on line 81

    '
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n\n    if ($n == 2) {\n     \
    \   return true;\n    }\n\n    if ($n % 2 == 0) {\n        return false;\n   \
    \ }\n\n    $root = $this->sqrt($n);\n\n    for($i = 3; $i <= $root; $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return false;\n        }\n    }\n\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return is_prime(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(6) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(101) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13441) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(61) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(17) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(85) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(77) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmp5ydmmuul.php:30\nStack trace:\n#0 /tmp/tmp5ydmmuul.php(42): is_prime(101)\n\
    #1 /tmp/tmp5ydmmuul.php(47): candidate(101)\n#2 /tmp/tmp5ydmmuul.php(61): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5ydmmuul.php on line 30\n"
  timestamp: 1659822394
- exit_code: 255
  program: "<?php\n// Return true if a given number is prime, and false otherwise.\n\
    // >>> is_prime(6)\n// false\n// >>> is_prime(101)\n// true\n// >>> is_prime(11)\n\
    // true\n// >>> is_prime(13441)\n// true\n// >>> is_prime(61)\n// true\n// >>>\
    \ is_prime(4)\n// false\n// >>> is_prime(1)\n// false\nfunction is_prime($n) {\n\
    \    if ($n < 2) {\n        return false;\n    }\n    if ($n == 2) {\n       \
    \ return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n\
    \    $root = $this->sqrt($n);\n    $root2 = $this->sqrt($root);\n    $limit =\
    \ $root2 * 2;\n    for($i = 3; $i <= $limit; $i += 2) {\n        if ($n % $i ==\
    \ 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_prime(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(6) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(101) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(13441) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(61) !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(4) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(1) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(5) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(17) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(85) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(77) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(255379) !== false) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Using $this when not in object context in\
    \ /tmp/tmpd0uk570y.php:27\nStack trace:\n#0 /tmp/tmpd0uk570y.php(39): is_prime(101)\n\
    #1 /tmp/tmpd0uk570y.php(44): candidate(101)\n#2 /tmp/tmpd0uk570y.php(58): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd0uk570y.php on line 27\n"
  timestamp: 1659822394

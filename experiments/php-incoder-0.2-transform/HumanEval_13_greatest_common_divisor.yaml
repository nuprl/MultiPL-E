name: HumanEval_13_greatest_common_divisor
language: php
prompt: "<?php\n// Return a greatest common divisor of two integers a and b\n// >>>\
  \ greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n\
  // 5\nfunction greatest_common_divisor($a, $b) {\n"
tests: "function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    return $b ? gcd($a, $b) : $a;\n}\n", "    $gcd = 0;\n    while\
    \ ($a && $b) {\n        if ($a > $b) {\n            $a = $a % $b;\n        } else\
    \ {\n            $b = $b > $a ? $b : $a;\n        }\n        $gcd = $a > $gcd\
    \ ? $a : $gcd;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to\
    \ be an integer\n    $b = abs($b); // force b to be an integer\n    if ($a < $b)\
    \ {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while\
    \ ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n            return\
    \ $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}", "    $a = abs($a);\
    \ $b = abs($b);\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    while ($a != 0) {\n        $b = $a % $b;\n   \
    \     $a = floor($a/$b);\n    }\n    return $b;\n}", "    $a = abs($a); // force\
    \ a to be positive\n    $b = abs($b); // force b to be positive\n    if ($a <\
    \ $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n \
    \   while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n       \
    \     return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}\n", " \
    \   $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n\
    \        $t = $b; $b = $a % $t; $a = $t;\n        $d = ($d > $r) ? $d : $r;\n\
    \    }\n    return $d;\n}\n", "    $gcd = 0;\n    while ($a && $b) {\n       \
    \ $a = $a % $b;\n        $gcd = $b ? $gcd : $a;\n        $b = $b ? $a : $b;\n\
    \    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { $temp = $a;\
    \ $a = $b; $b = $temp; }\n    while ($a != 0) {\n        $r = $a % $b;\n     \
    \   $a = $b; $b = $r;\n    }\n    return $b;\n}\n", "    $a = abs($a); // Coerce\
    \ to integer\n    $b = abs($b); // Coerce to integer\n    if ($a < $b) { $temp\
    \ = $a; $a = $b; $b = $temp; }\n    while ($a != 0) {\n        $a = $a % $b;\n\
    \        if ($a == 0) {\n            return $b;\n        }\n        $b = $b;\n\
    \    }\n    return $b;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { // swap so\
    \ a is always bigger\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n\
    \    }\n    while ($a && $b) { // while a and b are not both 0\n        $a = $a\
    \ % $b; // get a % b\n        $b = $b / $a; // get a / b\n    }\n    return $a;\
    \ // return greatest common divisor\n}\n", "    $r = $a % $b;\n    if ($r == 0)\
    \ {\n        return $b;\n    }\n    return $r;\n}\n", "    $a = abs($a); // force\
    \ a to be an integer\n    $b = abs($b); // force b to be an integer\n    if ($a\
    \ < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n\
    \    while ($a != 0) {\n        $b = $b % $a;\n        $a = $a % $a;\n    }\n\
    \    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n\
    \    while ($b > 0) {\n        $t = $b; $b = $a % $t; $a = $t;\n        $d = ($d\
    \ > $r) ? $d : $r;\n    }\n    return $d;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $gcd = $a; $mod = 1;\n    while ($b != 0) {\n        if ($b & 1) $gcd = $gcd->$mod;\n\
    \        $mod = $mod->$mod;\n        $b >>= 1;\n    }\n    return $gcd;\n}\n",
  "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n \
    \       $t = $b; $b = $a % $t; $a = $t;\n        $d = ($d > $r) ? $d : $r;\n \
    \   }\n    return $d;\n}\n", "    $gcd = 0;\n    while ($a != 0) {\n        $a\
    \ = $a % $b;\n        $gcd = $b;\n        $b = $gcd;\n    }\n    return $gcd;\n\
    }\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b); // force\
    \ b to be positive\n    $gcd = $a; // initialize gcd\n    while ($a && $b) { //\
    \ while a and b are not 0\n        $a = $a % $b; // update a\n        $gcd = bcdiv($gcd,\
    \ $b, 0); // update gcd\n        $b = $b % $a; // update b\n    }\n    return\
    \ $gcd; // return gcd\n}", "    $a = abs($a); // Make sure $a is positive\n  \
    \  $b = abs($b); // Make sure $b is positive\n    if ($a < $b) {\n        $temp\
    \ = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        if ($a == 0) {\n            return $b;\n     \
    \   }\n        $b = $b;\n    }\n    return $b;\n}", "    $a = abs($a); // force\
    \ a to be positive\n    $b = abs($b); // force b to be positive\n    if ($a <\
    \ $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n \
    \   while ($a != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n}\n", " \
    \   $a = abs($a); // Always positive\n    $b = abs($b); // Always positive\n \
    \   if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    $gcd = $a;\n    while ($a != 0) {\n        $a = $a % $b;\n       \
    \ $gcd = $b;\n    }\n    return $gcd;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

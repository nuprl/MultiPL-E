name: HumanEval_13_greatest_common_divisor
language: php
prompt: "<?php\n// Return a greatest common divisor of two integers a and b\n// >>>\
  \ greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n\
  // 5\nfunction greatest_common_divisor($a, $b) {\n"
tests: "function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    return $b ? gcd($a, $b) : $a;\n}\n", "    $gcd = 0;\n    while\
    \ ($a && $b) {\n        if ($a > $b) {\n            $a = $a % $b;\n        } else\
    \ {\n            $b = $b > $a ? $b : $a;\n        }\n        $gcd = $a > $gcd\
    \ ? $a : $gcd;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to\
    \ be an integer\n    $b = abs($b); // force b to be an integer\n    if ($a < $b)\
    \ {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while\
    \ ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n            return\
    \ $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}", "    $a = abs($a);\
    \ $b = abs($b);\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    while ($a != 0) {\n        $b = $a % $b;\n   \
    \     $a = floor($a/$b);\n    }\n    return $b;\n}", "    $a = abs($a); // force\
    \ a to be positive\n    $b = abs($b); // force b to be positive\n    if ($a <\
    \ $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n \
    \   while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n       \
    \     return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}\n", " \
    \   $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n\
    \        $t = $b; $b = $a % $t; $a = $t;\n        $d = ($d > $r) ? $d : $r;\n\
    \    }\n    return $d;\n}\n", "    $gcd = 0;\n    while ($a && $b) {\n       \
    \ $a = $a % $b;\n        $gcd = $b ? $gcd : $a;\n        $b = $b ? $a : $b;\n\
    \    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { $temp = $a;\
    \ $a = $b; $b = $temp; }\n    while ($a != 0) {\n        $r = $a % $b;\n     \
    \   $a = $b; $b = $r;\n    }\n    return $b;\n}\n", "    $a = abs($a); // Coerce\
    \ to integer\n    $b = abs($b); // Coerce to integer\n    if ($a < $b) { $temp\
    \ = $a; $a = $b; $b = $temp; }\n    while ($a != 0) {\n        $a = $a % $b;\n\
    \        if ($a == 0) {\n            return $b;\n        }\n        $b = $b;\n\
    \    }\n    return $b;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { // swap so\
    \ a is always bigger\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n\
    \    }\n    while ($a && $b) { // while a and b are not both 0\n        $a = $a\
    \ % $b; // get a % b\n        $b = $b / $a; // get a / b\n    }\n    return $a;\
    \ // return greatest common divisor\n}\n", "    $r = $a % $b;\n    if ($r == 0)\
    \ {\n        return $b;\n    }\n    return $r;\n}\n", "    $a = abs($a); // force\
    \ a to be an integer\n    $b = abs($b); // force b to be an integer\n    if ($a\
    \ < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n\
    \    while ($a != 0) {\n        $b = $b % $a;\n        $a = $a % $a;\n    }\n\
    \    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n\
    \    while ($b > 0) {\n        $t = $b; $b = $a % $t; $a = $t;\n        $d = ($d\
    \ > $r) ? $d : $r;\n    }\n    return $d;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $gcd = $a; $mod = 1;\n    while ($b != 0) {\n        if ($b & 1) $gcd = $gcd->$mod;\n\
    \        $mod = $mod->$mod;\n        $b >>= 1;\n    }\n    return $gcd;\n}\n",
  "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n \
    \       $t = $b; $b = $a % $t; $a = $t;\n        $d = ($d > $r) ? $d : $r;\n \
    \   }\n    return $d;\n}\n", "    $gcd = 0;\n    while ($a != 0) {\n        $a\
    \ = $a % $b;\n        $gcd = $b;\n        $b = $gcd;\n    }\n    return $gcd;\n\
    }\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b); // force\
    \ b to be positive\n    $gcd = $a; // initialize gcd\n    while ($a && $b) { //\
    \ while a and b are not 0\n        $a = $a % $b; // update a\n        $gcd = bcdiv($gcd,\
    \ $b, 0); // update gcd\n        $b = $b % $a; // update b\n    }\n    return\
    \ $gcd; // return gcd\n}", "    $a = abs($a); // Make sure $a is positive\n  \
    \  $b = abs($b); // Make sure $b is positive\n    if ($a < $b) {\n        $temp\
    \ = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        if ($a == 0) {\n            return $b;\n     \
    \   }\n        $b = $b;\n    }\n    return $b;\n}", "    $a = abs($a); // force\
    \ a to be positive\n    $b = abs($b); // force b to be positive\n    if ($a <\
    \ $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n \
    \   while ($a != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n}\n", " \
    \   $a = abs($a); // Always positive\n    $b = abs($b); // Always positive\n \
    \   if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    $gcd = $a;\n    while ($a != 0) {\n        $a = $a % $b;\n       \
    \ $gcd = $b;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    if ($a < $b) { $tmp = $a; $a = $b; $b = $tmp; }\n    while ($a && $b) { $tmp\
    \ = $a; $a = $b; $b = $tmp % $b; }\n    return $b;\n}\n", "    $r = 1;\n    while\
    \ ($a && $b) {\n        $r = $r * ($a % $b);\n        $a = floor($a / $b);\n \
    \       $b = $r * ($b / $a);\n    }\n    return $r;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI like this solution, but I wonder if there's a way to make it\
    \ work for negative numbers as well. I'm thinking about it right now and I wonder\
    \ if there's a way to make it work for negative numbers as well.\n<|/ c |>\n<|\
    \ c |>\nYes, it works with negative numbers too. Just replace `if ($a > 0 && $b\
    \ > 0)` with `if ($a > 0 && $b > 0 && $a < 0 && $b < 0)`\n<|/ c |>\n<| c |>\n\
    I edited my answer to include a solution for negative numbers as well.\n<|/ c\
    \ |>\n<| c |>\nI edited my answer to include a solution for negative numbers as\
    \ well.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution for negative\
    \ numbers as well.\n<|/ c |>\n<| a tags=php,algorithm |>\n<code>", "    $a = abs($a);\
    \ $b = abs($b);\n    $r = $a; $m = $b;\n    while ($m != 0) {\n        $r = $r\
    \ / $m;\n        $m = $a % $m;\n        $a = $b;\n        $b = $m;\n    }\n  \
    \  return $r;\n}\n", "    return $b ? gcd($a, $b)\n        : gcd($a, $b);\n}\n",
  "    $a = abs($a); // force a to be positive\n    $b = abs($b); // force b to be\
    \ positive\n    $r = $a; // remainder\n    $i = 0;\n    while ($a != 0) {\n  \
    \      $a = $a % $b;\n        $i++;\n    }\n    return $b;\n}\n", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) { $a = $b; $b = $a; }\n    while ($a != 0) {\n        $a = $a\
    \ % $b;\n        if ($a == 0) {\n            return $b;\n        }\n        $b\
    \ = $b;\n    }\n    return $b;\n}\n", "    if ($a < $b) {\n        $a = $b;\n\
    \        $b = $a;\n    }\n    $a = abs($a);\n    $b = abs($b);\n    $r = $a%$b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    else {\n        return $b;\n\
    \    }\n}\n", "    $gcd = 0;\n    while ($a && $b) {\n        $a = $a % $b;\n\
    \        $gcd = $b ? $gcd : $a;\n        $b = $a ? $a / $b : 0;\n    }\n    return\
    \ $gcd;\n}\n", "    $a = abs($a); $b = abs($b);\n    $gcd = 0;\n    while ($a\
    \ && $b) {\n        $a = $a % $b; $b = $b % $a;\n        $gcd = max($gcd, $b);\n\
    \    }\n    return $gcd;\n}", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { $temp = $a;\
    \ $a = $b; $b = $temp; }\n    while ($a != 0) {\n        $r = $a % $b;\n     \
    \   $a = $b; // update $a\n        $b = $r; // update $b\n    }\n    return $b;\n\
    }", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return\
    \ $r;\n}\n", "    $gcd = 0;\n    while ($a && $b) {\n        if ($a > $b) {\n\
    \            $a = $a - $b;\n        } else {\n            $b = $b - $a;\n    \
    \    }\n        $gcd = $gcd+1;\n    }\n    return $gcd;\n}\n", "    $r = $a %\
    \ $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work for negative numbers. `greatest_common_divisor(-3,\
    \ 5)` returns `-3` instead of `5`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `greatest_common_divisor(-3, 5)` returns `-3` instead of `5`.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for negative numbers. `greatest_common_divisor(-3,\
    \ 5)` returns `-3` instead of `5`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `greatest_common_divisor(-3, 5)` returns `-3` instead of `5`.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work for negative numbers. `greatest_common_divisor(-3,\
    \ 5)` returns `-3` instead of `5`.\n<|/ c |>\n<| a |>\n<code>", "    $gcd = 0;\n\
    \    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b ? $gcd : $a;\n\
    \        $b = $a ? $a / $b : 0;\n    }\n    return $gcd;\n}\n", "    $a = abs($a);\
    \ $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n        $t = $b;\
    \ $b = $a % $t; $a = $t;\n        $d = ($d > $r) ? $d : $r;\n    }\n    return\
    \ $d;\n}\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b); //\
    \ force b to be positive\n    if ($a < $b) {\n        $temp = $a;\n        $a\
    \ = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n        $r = $a %\
    \ $b;\n        $a = $b;\n        $b = $r;\n    }\n    return $b;\n}\n", "    $a\
    \ = abs($a); // Coerce to integer\n    $b = abs($b); // Coerce to integer\n  \
    \  if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    while ($a != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n}",
  "    $a = abs($a); $b = abs($b);\n    if ($a < $b) {\n        $tmp = $a;\n     \
    \   $a = $b;\n        $b = $tmp;\n    }\n    while ($a && $b) {\n        $tmp\
    \ = $a % $b;\n        $a = $b;\n        $b = $tmp;\n    }\n    return $b;\n}\n\
    </code>\n<|/ a tags=php,math |>\n<| c |>\nI like this solution, but I wonder if\
    \ there is a way to do it without having to use an external function?\n<|/ c |>\n\
    <| c |>\n: Yes, you can do it without an external function, but it's more complicated\
    \ and less efficient.\n<|/ c |>\n<| c |>\n: I added a version that doesn't use\
    \ an external function.\n<|/ c |>\n<| c |>\n: I added a version that doesn't use\
    \ an external function.\n<|/ c |>\n<| c |>\n: I added a version that doesn't use\
    \ an external function.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "    $a = abs($a);\
    \ // Always positive\n    $b = abs($b); // Always positive\n    if ($a < $b) {\n\
    \        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    $gcd = $a;\
    \ // Initialize result\n    while ($a != 0) {\n        $t = $a % $b;\n       \
    \ $a = $b;\n        $b = $t;\n        $gcd = $gcd ? gcd($gcd, $b) : $b;\n    }\n\
    \    return $gcd;\n}\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return\
    \ $b;\n    }\n    return $r;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) {\n        $temp\
    \ = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        if ($a == 0)\n            return $b;\n       \
    \ $b = $b;\n    }\n    return $b;\n}\n</code>\n<|/ a tags=php,math |>\n<| c |>\n\
    This doesn't work if $a is negative and $b is positive.\n<|/ c |>\n<| c |>\nIt\
    \ works if $a is negative and $b is positive. Try it.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if $a is negative and $b is negative.\n<|/ c |>\n<| c |>\nIt works if $a\
    \ is negative and $b is negative. Try it.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if $a is negative and $b is positive.\n<|/ c |>\n<| a dscore=4 |>\n<code>",
  "    $a = abs($a); // Coerce to integer\n    $b = abs($b); // Coerce to integer\n\
    \    if ($a < $b) return $a;\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return\
    \ $b;\n}\n", "    if ($a < $b) {\n        $a = $b;\n        $b = $a;\n    }\n\
    \    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return\
    \ $r;\n}\n", "    $a = abs($a); $b = abs($b);\n    if ($a < $b) { $a = $b; $b\
    \ = $a; }\n    while ($a && $b) { $a = $a % $b; $b = $b; }\n    return $b;\n}\n",
  "    $a = abs($a); $b = abs($b);\n    $r = $a % $b;\n    if ($r == 0) {\n      \
    \  return $b;\n    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $r = $a; $d = 1;\n    while ($b != 0) {\n        $t = $b; $b = $a % $t; $a\
    \ = $t;\n        $d = $t * $d + $d;\n    }\n    return $r;\n}\n", "    $gcd =\
    \ 0;\n    while ($a != 0) {\n        $a = $a % $b;\n        $gcd = $b;\n     \
    \   $b = $gcd;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to\
    \ be positive\n    $b = abs($b); // force b to be positive\n    if ($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while\
    \ ($a != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n}\n", "    $a = abs($a);\
    \ // force a to be positive\n    $b = abs($b); // force b to be positive\n   \
    \ $r = $a; // initialize result\n    while ($a && $b) { // while both a and b\
    \ are not zero\n        $r = $a % $b; // remainder after division\n        $a\
    \ = $b; // swap a with b\n        $b = $r; // swap with remainder\n    }\n   \
    \ return $r; // return greatest common divisor\n}\n", "    $a = abs($a); // force\
    \ a to be positive\n    $b = abs($b); // force b to be positive\n    if ($a <\
    \ $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n \
    \   while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n       \
    \     return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}", "  \
    \  $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n \
    \       $t = $b; $b = $a % $t; $a = $t;\n        $d = $t * $d + $b;\n    }\n \
    \   return $r;\n}\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b);\
    \ // force b to be positive\n    if ($a < $b) return $a;\n    if ($b == 0) return\
    \ $a;\n    while ($a % $b != 0) {\n        $a = floor($a / $b);\n    }\n    return\
    \ $b;\n}", "    return $b ? gcd($a, $b) : $a;\n}\n", "    $r = $a % $b;\n    if\
    \ ($r == 0) {\n        return $b;\n    }\n    return $r;\n}", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    while ($a != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n\
    }\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return\
    \ $r;\n}\n", "    $a = abs($a); $b = abs($b);\n    if ($a < $b) {\n        $tmp\
    \ = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    while ($a != 0) {\n\
    \        $tmp = $b;\n        $b = $a;\n        $a = $tmp % $b;\n    }\n    return\
    \ $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    if ($a < $b) { $tmp = $a; $a\
    \ = $b; $b = $tmp; }\n    while ($a && $b) { $a = $a % $b; $b = $b > $a ? $b :\
    \ $a; }\n    return $b;\n}\n", "    $gcd = 0;\n    while ($a != 0) {\n       \
    \ $a = $a % $b;\n        $gcd = $b;\n        $b = $gcd;\n    }\n    return $gcd;\n\
    }\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b); // force\
    \ b to be positive\n    $r = $a; // initialize result\n    while ($a && $b) {\
    \ // while both a and b are not zero\n        $r = $a % $b; // remainder after\
    \ division\n        $a = $b; // swap a with b\n        $b = $r; // swap with remainder\n\
    \    }\n    return $r; // return greatest common divisor\n}\n", "    $r = $a %\
    \ $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n</code>\n\
    <|/ a tags=php,math |>\n<| c |>\nThis doesn't work if $a is greater than $b. For\
    \ example, if $a = 5 and $b = 10, the result is 5, not 2.\n<|/ c |>\n<| c |>\n\
    : I added a version that works with larger numbers. Thanks for pointing that out.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if $a is greater than $b. For example, if\
    \ $a = 5 and $b = 10, the result is 5, not 2.\n<|/ c |>\n<| c |>\n: I added a\
    \ version that works with larger numbers. Thanks for pointing that out.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work if $a is greater than $b. For example, if $a\
    \ = 5 and $b = 10, the result is 5, not 2.\n<|/ c |>\n<| a dscore=5 |>\n<code>",
  "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n\
    }\n", "    return $b ? gcd($a, $b) : $a;\n}\n", "    return $b ? gcd($a, $b) :\
    \ $a;\n}\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n\
    \    return $r;\n}\n", "    $a = abs($a); // force a to be an integer\n    $b\
    \ = abs($b); // force b to be an integer\n    if ($a < $b) { // swap so a is always\
    \ bigger than b\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n  \
    \  }\n    while ($a && $b) { // while a and b are not 0\n        $a = $a % $b;\
    \ // get remainder after division\n        $b = $b; // set b to remainder\n  \
    \  }\n    return $a; // return greatest common divisor\n}", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) { // swap so a is always >= b\n        $tmp = $a;\n        $a\
    \ = $b;\n        $b = $tmp;\n    }\n    while ($a != 0) {\n        $tmp = $b;\n\
    \        $b = $a;\n        $a = $tmp % $b;\n    }\n    return $b;\n}", "    $a\
    \ = abs($a); // force a to be positive\n    $b = abs($b); // force b to be positive\n\
    \    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n\
    \            return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n\
    }\n", "    $gcd = 0;\n    while ($a != 0) {\n        $a = $a % $b;\n        $gcd\
    \ = $b;\n        $b = $gcd;\n    }\n    return $gcd;\n}\n", "    return $b ? gcd($a,\
    \ $b) : $a;\n}\n", "    return $b ? gcd($a, $b) : $a;\n}\n", "    return $b ?\
    \ gcd($a, $b % $a) : $a;\n}\n", "    $r = $a % $b;\n    if ($r == 0) {\n     \
    \   return $b;\n    }\n    return $r;\n}\n", "    $a = abs($a); // force a to\
    \ be positive\n    $b = abs($b); // force b to be positive\n    if ($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while\
    \ ($a != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n}", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n\
    \            return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n\
    }\n", "    return $b ? gcd($a, $b % $a) : $a;\n}\n", "    $gcd = 0;\n    while($a\
    \ != 0) {\n        $a = $a % $b;\n        $gcd = $b;\n        $b = $gcd;\n   \
    \ }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) {\n        $temp\
    \ = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        if ($a == 0)\n            return $b;\n       \
    \ $b = $b;\n    }\n    return $b;\n}", "    $a = abs($a); // force a to be an\
    \ integer\n    $b = abs($b); // force b to be an integer\n    if ($a < $b) { $a\
    \ = $b; }\n    $r = $a; // remainder\n    $q = $b; // quotient\n    while ($a\
    \ && $b) { $q = $q * $a + $b; $r = $r * $a + (($a % $b) ? 1 : 0); $a = floor($a\
    \ / $b); }\n    return $q > $r ? $q : $r;\n}", "    $a = abs($a); // force a to\
    \ be an integer\n    $b = abs($b); // force b to be an integer\n    if ($a < $b)\
    \ { $temp = $a; $a = $b; $b = $temp; }\n    while ($a != 0) {\n        $a = $a\
    \ % $b;\n        if ($a == 0) {\n            return $b;\n        }\n        $b\
    \ = $b;\n    }\n    return $b;\n}", "    $a = abs($a); $b = abs($b);\n    if ($a\
    \ < $b) {\n        $a = $b;\n        $b = $a;\n    }\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n    }\n    return $b;\n}", "    $a = abs($a); $b = abs($b);\n\
    \    $r = $a; $d = 1;\n    while ($b > 0) {\n        $t = $b; $b = $a % $t; $a\
    \ = $t;\n        $d = ($d > $r) ? $d : $r;\n    }\n    return $d;\n}\n", "   \
    \ $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n\
    }", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return\
    \ $r;\n}\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b); //\
    \ force b to be positive\n    if ($a < $b) {\n        $temp = $a;\n        $a\
    \ = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n        $b = $b %\
    \ $a;\n        $a = $a % $a;\n    }\n    return $b;\n}", "    $a = abs($a); //\
    \ force a to be an integer\n    $b = abs($b); // force b to be an integer\n  \
    \  if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    while ($a != 0) {\n        $r = $a % $b;\n        $a = $b;\n     \
    \   $b = $r;\n    }\n    return $b;\n}\n", "    return $b ? gcd($a, $b) : $a;\n\
    }\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $m = $b;\n    while ($m !=\
    \ 0) {\n        $r = $r / $m;\n        $m = $a % $m;\n        $a = $b;\n     \
    \   $b = $m;\n    }\n    return $r;\n}\n</code>\n<|/ a tags=php,math |>\n<| c\
    \ |>\nThis doesn't work for negative numbers. `greatest_common_divisor(-3, 5)`\
    \ returns `1` instead of `-3`.\n<|/ c |>\n<| c |>\nThe question was about positive\
    \ numbers. I didn't want to complicate the answer with negative numbers. I added\
    \ a comment to the question asking for a negative number answer.\n<|/ c |>\n<|\
    \ c |>\nI didn't say anything about negative numbers. I said \"doesn't work for\
    \ negative numbers\". Your answer doesn't work for negative numbers. Your comment\
    \ doesn't say anything about negative numbers. Your answer doesn't work for negative\
    \ numbers. Your comment doesn't say anything about negative numbers. Your answer\
    \ doesn't work for negative numbers. Your comment doesn't say anything about negative\
    \ numbers. Your answer doesn't work for negative numbers. Your comment doesn't\
    \ say anything about negative numbers. Your answer doesn't work for negative numbers.\
    \ Your comment doesn't say anything about negative numbers. Your answer doesn't\
    \ work for negative numbers. Your comment doesn't say anything about negative\
    \ numbers. Your answer doesn't work for negative numbers. Your comment doesn't\
    \ say anything about negative numbers. Your answer doesn't work for negative numbers.\
    \ Your comment doesn't say anything about negative numbers. Your answer doesn't\
    \ work for negative numbers. Your comment doesn't say anything about negative\
    \ numbers. Your answer doesn't work for negative numbers. Your comment doesn't\
    \ say anything about negative numbers. Your answer doesn't work for negative numbers.\
    \ Your comment doesn't say anything about negative numbers. Your answer doesn't\
    \ work for negative numbers. Your comment doesn't say anything about negative\
    \ numbers. Your answer doesn't work for negative numbers. Your comment doesn't\
    \ say anything about negative numbers. Your answer doesn't work for negative numbers.\
    \ Your comment doesn't say anything about negative numbers. Your answer doesn't\
    \ work for negative numbers. Your comment doesn't say anything about negative\
    \ numbers. Your answer doesn't work for negative numbers. Your comment doesn't\
    \ say anything about negative numbers. Your answer doesn't work for negative numbers.\
    \ Your comment doesn't say anything about negative numbers. Your answer doesn't\
    \ work for negative numbers. Your comment doesn't say anything about negative\
    \ numbers. Your answer doesn't work for negative numbers. Your comment doesn't\
    \ say anything about negative numbers. Your answer doesn't work for negative numbers.\
    \ Your comment doesn't say anything about negative numbers. Your answer doesn't\
    \ work for negative numbers. Your comment doesn't say anything about negative\
    \ numbers. Your answer doesn't work for negative number", "    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| c |>\nI like your solution, however it fails for negative\
    \ numbers. I added a solution that works for negative numbers and also handles\
    \ negative numbers. I hope this helps someone else who comes across this question.\n\
    <|/ c |>\n<| a tags=php,math |>\n<code>", "    $gcd = 0;\n    while ($a != 0)\
    \ {\n        $a = $a % $b;\n        $gcd = $b;\n        $b = $gcd;\n    }\n  \
    \  return $gcd;\n}\n", "    $a = abs($a); // force a to be positive\n    $b =\
    \ abs($b); // force b to be positive\n    if ($a < $b) {\n        $temp = $a;\n\
    \        $a = $b;\n        $b = $temp;\n    }\n    $gcd = $b;\n    while ($a !=\
    \ 0) {\n        $a = $a / $gcd;\n        $gcd = $gcd*$b;\n    }\n    return $gcd;\n\
    }\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b); // force\
    \ b to be positive\n    if ($a < $b) { $a = $b; $b = $a; }\n    $gcd = $a; //\
    \ initialize $gcd\n    while ($a != 0) {\n        $t = $a % $b; // $t will contain\
    \ the remainder after dividing $a by $b\n        $a = $b; // $a is now the remainder\
    \ of $a divided by $b\n        $b = $t; // $b is now the remainder after dividing\
    \ $b by $t\n        $gcd = max($gcd, $b); // $gcd will contain the greatest common\
    \ divisor of $a and $b\n    }\n    return $gcd;\n}\n", "    $gcd = 0;\n    while\
    \ ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b ? $gcd : $a;\n      \
    \  $b = $a ? $a % $b : $b;\n    }\n    return $gcd;\n}\n", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) { $a = $b; $b = $a; }\n    $c = $a; // initialize c to the smaller\
    \ of the two numbers\n    while ($a && $b) { $c = $b % $a; $b = $a % $a; }\n \
    \   return $c;\n}\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b);\
    \ // force b to be positive\n    if ($a < $b) {\n        $temp = $a;\n       \
    \ $a = $b;\n        $b = $temp;\n    }\n    $gcd = $a;\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        $gcd = $b;\n    }\n    return $gcd;\n}\n", " \
    \   $gcd = 0;\n    while ($a && $b) {\n        if ($a > $b) {\n            $a\
    \ = $a % $b;\n        } else {\n            $b = $b % $a;\n        }\n       \
    \ $gcd = $a > $b ? $a : $b;\n    }\n    return $gcd;\n}\n", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) $b = $a;\n    $r = $b;\n    while ($a != 0) {\n        $r =\
    \ $a % $r;\n        $a = floor($a / $r);\n    }\n    return $r;\n}", "    $a =\
    \ abs($a); $b = abs($b);\n    $r = $a; $m = $b;\n    while ($m != 0) {\n     \
    \   $r = $r / $m;\n        $m = $a % $m;\n        $a = $b;\n        $b = $m;\n\
    \    }\n    return $r;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a %\
    \ $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n", " \
    \   $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n\
    }\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return\
    \ $r;\n}\n", "    $a = abs($a); $b = abs($b);\n    if ($a < $b) {\n        $temp\
    \ = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        if ($a == 0) return $b;\n        $b = $b;\n  \
    \  }\n    return $b;\n}\n", "    $a = abs($a); // force a to be positive\n   \
    \ $b = abs($b); // force b to be positive\n    $r = $a; // initialize result\n\
    \    while ($b != 0) {\n        $r = $b % $a;\n        $a = $b;\n        $b =\
    \ $r;\n    }\n    return $a;\n}\n", "    $a = abs($a); $b = abs($b);\n    if ($a\
    \ < $b) {\n        $a = $b;\n        $b = $a;\n    }\n    while ($a && $b) { $a\
    \ = $a % $b; $b = $b; }\n    return $b;\n}\n", "    $gcd = 0;\n    while ($a &&\
    \ $b) {\n        $a = $a % $b;\n        $gcd = $b ? $gcd : $a;\n        $b = $a\
    \ ? $a / $b : 0;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); // Coerce\
    \ to integer\n    $b = abs($b); // Coerce to integer\n    if ($a < $b) {\n   \
    \     $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a\
    \ != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n}\n", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    $gcd = $a; // initialize gcd\n    while ($a && $b) { // while a and\
    \ b are not 0\n        if ($a > $b) { // if b > a\n            $temp = $b;\n \
    \           $b = $a;\n            $a = $temp;\n        }\n        $gcd = $a %\
    \ $b; // update gcd\n    }\n    return $gcd; // return greatest common divisor\n\
    }\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $m = $b;\n    while ($m !=\
    \ 0) {\n        $r = $r / $m;\n        $m = $a % $m;\n        $a = $b;\n     \
    \   $b = $m;\n    }\n    return $r;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    while ($a && $b) {\n        $temp = $a % $b;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    return $b;\n}\n", "    $r = $a % $b;\n    if ($r\
    \ == 0) {\n        return $b;\n    }\n    return $r;\n}\n", "    $a = abs($a);\
    \ // force a to be positive\n    $b = abs($b); // force b to be positive\n   \
    \ if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    while ($a != 0) {\n        $a = $a % $b;\n    }\n    return $b;\n\
    }\n", "    $a = abs($a); // force a to be an integer\n    $b = abs($b); // force\
    \ b to be an integer\n    if ($a < $b) { $a = $b; $b = $a; }\n    $gcd = $a; $mod\
    \ = 1; while ($b > 0) {\n        if ($b&1) { $gcd++; $mod*=$a; }\n        $b>>=1;\
    \ $a>>=1;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to be\
    \ an integer\n    $b = abs($b); // force b to be an integer\n    if ($a < $b)\
    \ { $temp = $a; $a = $b; $b = $temp; }\n    $gcd = $a % $b;\n    if ($gcd == 0)\
    \ {\n        return $b;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); //\
    \ force a to be an integer\n    $b = abs($b); // force b to be an integer\n  \
    \  if ($a < $b) { // swap so a is always bigger\n        $tmp = $a;\n        $a\
    \ = $b;\n        $b = $tmp;\n    }\n    // now $a is always smaller than $b\n\
    \    // if $a and $b are equal, return $a\n    if ($a === $b) return $a;\n   \
    \ // if $a is smaller than $b, return $b\n    if ($a < $b) return $b;\n    //\
    \ if $a is greater than $b, return $a\n    return $a;\n}\n", "    $r = $b;\n \
    \   while ($a > 0) {\n        $r = $r / $a;\n        $a--;\n    }\n    return\
    \ $r;\n}\n</code>\n<|/ a tags=php,math |>\n<| c |>\nThis doesn't work if $a is\
    \ negative.\n<|/ c |>\n<| c |>\nI added a version that works with negative numbers.\
    \ I tested it and it works.\n<|/ c |>\n<| c |>\nThis doesn't work if $a is negative.\n\
    <|/ c |>\n<| c |>\nI added a version that works with negative numbers. I tested\
    \ it and it works.\n<|/ c |>\n<| c |>\nThis doesn't work if $a is negative.\n\
    <|/ c |>\n<| a tags=php,math |>\n<code>", "    $a = abs($a); // Coerce to integer\n\
    \    $b = abs($b); // Coerce to integer\n    if ($a < $b) {\n        $temp = $a;\n\
    \        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n       \
    \ $a = $a % $b;\n        if ($a == 0) {\n            return $b;\n        }\n \
    \       $b = $b;\n    }\n    return $b;\n}\n", "    if ($a < $b) {\n        $a\
    \ = $b;\n        $b = $a;\n    }\n    while ($a != 0) {\n        $a = $a % $b;\n\
    \        if ($a == 0) {\n            return $b;\n        }\n        $b = $b;\n\
    \    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $m\
    \ = $b;\n    while ($m != 0) {\n        $r = $r / $m;\n        $m = $a % $m;\n\
    \        $a = $b;\n        $b = $m;\n    }\n    return $r;\n}\n", "    return\
    \ $a % $b ? $a / $b : $b;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { $a = $b; $b\
    \ = $a; }\n    while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0)\
    \ {\n            return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n\
    }\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b >\
    \ 0) {\n        $t = $b; $b = ($a % $b);\n        $a = $t; $r += $d;\n    }\n\
    \    return $r;\n}\n", "    $a = abs($a); // force a to be an integer\n    $b\
    \ = abs($b); // force b to be an integer\n    if ($a < $b) {\n        $temp =\
    \ $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n \
    \       $r = $a % $b;\n        $a = $b;\n        $b = $r;\n    }\n    return $b;\n\
    }\n", "    return $b ? gcd($a, $b % $a) : $a;\n}\n", "    $gcd = 0;\n    while\
    \ ($a && $b) {\n        if ($a > $b) {\n            $a = $a - $b;\n        } else\
    \ {\n            $b = $b - $a;\n        }\n        $gcd = $gcd > $a ? $gcd : $a;\n\
    \    }\n    return $gcd;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a;\
    \ $m = $b;\n    while ($m != 0) {\n        $r = $r / $m;\n        $m = $a % $m;\n\
    \        $a = $b;\n        $b = $m;\n    }\n    return $r;\n}\n", "    $a = abs($a);\
    \ $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n        $t = $b;\
    \ $b = ($a % $b);\n        $a = $t; $d = ($d ? $d : $b);\n    }\n    return $r;\n\
    }\n", "    $a = abs($a); // force a to be an integer\n    $b = abs($b); // force\
    \ b to be an integer\n    if ($a < $b) return $b; // return greatest common divisor\
    \ of a and b\n    $c = $a; // initialize c to a\n    while ($b != 0) {\n     \
    \   $c = $b % $c; // find the remainder after dividing a by b\n        $b = (int)\
    \ ($b / $c); // divide b by remainder\n    }\n    return $c; // return greatest\
    \ common divisor\n}\n", "    $r = 1;\n    while ($a && $b) {\n        if ($a >\
    \ $b) {\n            $r = $b;\n            $b = $a % $b;\n            $a = floor($a\
    \ / $b);\n        } else {\n            $r = $a;\n            $a = $b % $a;\n\
    \            $b = floor($b / $a);\n        }\n    }\n    return $r;\n}\n", " \
    \   $gcd = 0;\n    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b\
    \ ? $gcd : $a;\n        $b = $a ? $a % $b : $b;\n    }\n    return $gcd;\n}\n",
  "    $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to\
    \ be an integer\n    if ($a < $b) { // swap them if necessary\n        $tmp =\
    \ $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    while ($a && $b) { //\
    \ while both a and b are not 0\n        $a = $a % $b; // find the least common\
    \ multiple of a and b\n        $b = $b / $a; // find the greatest common divisor\
    \ of b and a\n    }\n    return $a; // return greatest common divisor\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nI believe this fails for negative numbers. Try `greatest_common_divisor(-3,\
    \ -5)`.\n<|/ c |>\n<| c |>\n: It fails for negative numbers, but it also fails\
    \ for positive numbers. Try `greatest_common_divisor(-3, 5)`.\n<|/ c |>\n<| c\
    \ |>\n: It fails for negative numbers, but it also fails for positive numbers.\
    \ Try `greatest_common_divisor(-3, -5)`.\n<|/ c |>\n<| c |>\n: It fails for negative\
    \ numbers, but it also fails for positive numbers. Try `greatest_common_divisor(-3,\
    \ 5)`.\n<|/ c |>\n<| c |>\n: It fails for negative numbers, but it also fails\
    \ for positive numbers. Try `greatest_common_divisor(-3, -5)`.\n<|/ c |>\n<| a\
    \ dscore=2 |>\n<code>", "    $a = abs($a); $b = abs($b);\n    if ($a < $b) {\n\
    \        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    while ($a\
    \ != 0) {\n        $tmp = $b;\n        $b = $a%$b;\n        $a = $tmp;\n    }\n\
    \    return $b;\n}", "    return $b ? gcd($a, $b) : $a;\n}\n", "    $gcd = 0;\n\
    \    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b ? $gcd : $a;\n\
    \        $b = $a ? $a / $b : 1;\n    }\n    return $gcd;\n}\n", "    $gcd = 0;\n\
    \    while ($a && $b) {\n        if ($a > $b) {\n            $a = $a % $b;\n \
    \       } else {\n            $b = $b % $a;\n        }\n        $gcd = $a > $gcd\
    \ ? $a : $gcd;\n    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to\
    \ be an integer\n    $b = abs($b); // force b to be an integer\n    if ($a < $b)\
    \ {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while\
    \ ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) break;\n    }\n   \
    \ return $b;\n}\n", "    $gcd = 0;\n    while ($a && $b) {\n        $a = $a %\
    \ $b;\n        $gcd = $b ? $gcd : $a;\n        $b = $a ? $a % $b : $b;\n    }\n\
    \    return $gcd;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $b;\n}\n", "    $a\
    \ = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b != 0) {\n    \
    \    $t = $b; $b = $a % $b;\n        $a = $t; $d++;\n    }\n    return $r;\n}\n",
  "    $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to\
    \ be an integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    while ($a != 0) {\n        $a = $a % $b;\n   \
    \     if ($a == 0) {\n            return $b;\n        }\n        $b = $b;\n  \
    \  }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $b;\n}\n", "    if\
    \ ($a < $b) {\n        $a = $b;\n        $b = $a;\n    }\n    while ($a != 0)\
    \ {\n        $a = $b % $a;\n        $b = $a / $b;\n    }\n    return $b;\n}\n",
  "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b != 0) {\n\
    \        $t = $b; $b = $a % $t; $a = $t;\n        $d = $t * $d + $d;\n    }\n\
    \    return $r;\n}\n", "    $gcd = 0;\n    while ($a && $b) {\n        $a = $a\
    \ % $b;\n        $gcd = $b ? $gcd : $a;\n        $b = $a ? $a % $b : $b;\n   \
    \ }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to be positive\n  \
    \  $b = abs($b); // force b to be positive\n    $r = $a; // remainder\n    $n\
    \ = $b; // divisor\n    while ($n != 0) {\n        $r = $n % $b;\n        $n =\
    \ $b;\n        $b = $r;\n    }\n    return $r;\n}\n", "    $a = abs($a); $b =\
    \ abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n        $t = $b; $b =\
    \ $a % $t; $a = $t;\n        $d = $t * $d + $b;\n    }\n    return $r;\n}\n",
  "    $gcd = 0;\n    while ($a && $b) {\n        $t = $a % $b;\n        $a = $b;\n\
    \        $b = $t;\n        $gcd = max($gcd, $b);\n    }\n    return $gcd;\n}\n",
  "    $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to\
    \ be an integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n \
    \       $b = $temp;\n    }\n    $gcd = $b;\n    while ($a != 0) {\n        $a\
    \ = $a / $gcd;\n        $gcd = $gcd * $b;\n    }\n    return $gcd;\n}\n", "  \
    \  $a = abs($a); // force a to be positive\n    $b = abs($b); // force b to be\
    \ positive\n    $r = $a; // remainder\n    $m = 1; // the result of the division\n\
    \    while ($b > 0) {\n        $t = $b; // truncate the division\n        $b =\
    \ $a % $b; // remainder after truncating\n        $a = $t; // the remainder after\
    \ truncating $a by $b\n        $r += $m; // add the remainder to the result\n\
    \        $m *= $a; // multiply by the current remainder\n    }\n    return $r;\
    \ // return the result\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $d\
    \ = 1;\n    while ($b != 0) {\n        $t = $b; $b = $a % $t; $a = $t;\n     \
    \   $d = $t * $d + $b;\n    }\n    return $r;\n}\n", "    return $a % $b ? $a\
    \ / $b : $b;\n}\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n\
    \    }\n    return $r;\n}\n", "    return $b ? gcd($a, $b % $a) : $a;\n}\n", " \
    \   $gcd = 0;\n    while ($a && $b) {\n        $a = $a % $b;\n        $gcd = $b\
    \ ? $gcd : $a;\n        $b = $b ? $b : $a;\n    }\n    return $gcd;\n}\n", " \
    \   return $b ? gcd($a, $b) : $a;\n}\n", "    return $b ? gcd($a, $b) : $a;\n\
    }\n", "    return $b ? gcd($a, $b) : $a;\n}\n", "    $a = abs($a); // force a\
    \ to be an integer\n    $b = abs($b); // force b to be an integer\n    if ($a\
    \ < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n\
    \    while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n      \
    \      return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}\n", " \
    \   $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to\
    \ be an integer\n    if ($a < $b) { $temp = $a; $a = $b; $b = $temp; }\n    while\
    \ ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n            return\
    \ $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}", "    return $a\
    \ % $b ? $a / $b : $b;\n}\n</code>\n<|/ a tags=php,math |>\n<| c |>\nI like your\
    \ solution, but I prefer my own answer because it's more readable. Thanks though!\n\
    <|/ c |>\n<| c |>\nI agree, your answer is more readable. Just wanted to point\
    \ out that `greatest_common_divisor` could be implemented as a function if you\
    \ wanted to.\n<|/ c |>\n<| c |>\nI agree, your answer is more readable. Just wanted\
    \ to point out that `greatest_common_divisor` could be implemented as a function\
    \ if you wanted to.\n<|/ c |>\n<| c |>\nI agree, your answer is more readable.\
    \ Just wanted to point out that `greatest_common_divisor` could be implemented\
    \ as a function if you wanted to.\n<|/ c |>\n<| c |>\nI agree, your answer is\
    \ more readable. Just wanted to point out that `greatest_common_divisor` could\
    \ be implemented as a function if you wanted to.\n<|/ c |>\n<| a tags=php,math\
    \ |>\n<code>\n$a = $_POST['a'];\n$b = $_POST['b'];\n$c = $_POST['c'];\n\n$d =\
    \ $a / $b;\n$e = $a % $b;\n\n$f = $c / $d;\n$g = $c % $d;\n\n$h = $e / $f;\n$i\
    \ = $e % $f;\n\n$j = $g / $h;\n$k = $g % $h;\n\n$l = $i / $j;\n$m = $i % $j;\n\
    \n$n = $k / $l;\n$o = $k % $l;\n\n$p = $m / $n;\n$q = $m % $n;\n\n$r = $o / $p;\n\
    $s = $o % $p;\n\n$t = $q / $r;\n$u = $q % $r;\n\n$v = $s / $t;\n$w = $s % $t;\n\
    \n$x = $u / $v;\n$y = $u % $v;\n\n$z = $w / $x;\n$a = $w % $x;\n\n$result = $y\
    \ + $z + $a;\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI like your solution, but I\
    \ prefer my own answer because it's more readable. Thanks though!\n<|/ c |>\n\
    <| a |>\n<code>\n$a = $_POST['a'];\n$b = $_POST['b'];\n", "    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n", "    return\
    \ ($a % $b) / gcd($a, $b);\n}\n", "    if ($a < $b) {\n        $a = $b;\n    \
    \    $b = $a;\n    }\n    while ($a != 0) {\n        $a = $a % $b;\n        if\
    \ ($a == 0) {\n            return $b;\n        }\n        $b = $b;\n    }\n  \
    \  return $b;\n}\n", "    $a = abs($a); // force a to be an integer\n    $b =\
    \ abs($b); // force b to be an integer\n    if ($a < $b) {\n        $temp = $a;\n\
    \        $a = $b;\n        $b = $temp;\n    }\n    $gcd = $a; // initialize gcd\n\
    \    while ($a && $b) { // while a and b are not 0\n        if ($a > $b) { //\
    \ if a is bigger than b\n            $temp = $a;\n            $a = $b;\n     \
    \       $b = $temp;\n        }\n        $gcd = $a % $gcd; // update gcd\n    }\n\
    \    return $gcd; // return greatest common divisor\n}\n</code>\n<|/ a dscore=5\
    \ tags=php,math |>\n<| c |>\nThis code doesn't work if $a is negative and $b is\
    \ positive. For example: greatest_common_divisor(-5, 3) returns 1 instead of 0.\n\
    <|/ c |>\n<| c |>\nThis code doesn't work if $a is negative and $b is positive.\
    \ For example: greatest_common_divisor(-5, 3) returns 1 instead of 0.\n<|/ c |>\n\
    <| c |>\nThis code doesn't work if $a is negative and $b is positive. For example:\
    \ greatest_common_divisor(-5, 3) returns 1 instead of 0.\n<|/ c |>\n<| c |>\n\
    This code doesn't work if $a is negative and $b is positive. For example: greatest_common_divisor(-5,\
    \ 3) returns 1 instead of 0.\n<|/ c |>\n<| c |>\nThis code doesn't work if $a\
    \ is negative and $b is positive. For example: greatest_common_divisor(-5, 3)\
    \ returns 1 instead of 0.\n<|/ c |>\n<| a tags=php,math |>\n<code>", "    $r =\
    \ $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n",
  "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n\
    }\n", "    return $b ? gcd($a, $b % $a) : $a;\n}\n", "    $a = abs($a); $b = abs($b);\n\
    \    $r = $a; $d = 1;\n    while ($b != 0) {\n        $t = $b; $b = $a % $t; $a\
    \ = $t;\n        $d = ($d > $r) ? $d : $r;\n    }\n    return $d;\n}\n", "   \
    \ $a = abs($a); // force a to be an integer\n    $b = abs($b); // force b to be\
    \ an integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n    \
    \    $b = $temp;\n    }\n    $gcd = $a; // initialize gcd\n    while ($a != 0)\
    \ {\n        $t = $a % $b; // temp\n        $a = $b;\n        $b = $t;\n     \
    \   $gcd = $gcd > $b ? $gcd : $b;\n    }\n    return $gcd;\n}", "    $r = $a %\
    \ $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n", " \
    \   $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n\
    }\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return\
    \ $r;\n}\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n\
    \    return $r;\n}\n", "    return $a % $b ? $a / $b : $b;\n}\n", "    $a = abs($a);\
    \ // force a to be an integer\n    $b = abs($b); // force b to be an integer\n\
    \    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    $gcd = $b;\n    while ($a != 0) {\n        $a = $a / $gcd;\n     \
    \   $gcd = $gcd * $b;\n    }\n    return $gcd;\n}\n", "    if ($a < $b) {\n  \
    \      $a = $b;\n        $b = $a;\n    }\n    $remainder = $a % $b;\n    if ($remainder\
    \ === 0) {\n        return $b;\n    }\n    return $b;\n}\n", "    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}\n", "    $a\
    \ = abs($a); // force a to be an integer\n    $b = abs($b); // force b to be an\
    \ integer\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n       \
    \ $b = $temp;\n    }\n    while ($a != 0) {\n        $a = $a % $b;\n    }\n  \
    \  return $b;\n}", "    $gcd = 0;\n    while ($a && $b) {\n        if ($a > $b)\
    \ {\n            $a = $a - $b;\n        } else {\n            $b = $b - $a;\n\
    \        }\n        $gcd = $gcd+1;\n    }\n    return $gcd;\n}\n", "    return\
    \ $b ? gcd($a, $b) : $a;\n}\n", "    $r = 1;\n    while ($a && $b) {\n       \
    \ if ($a > $b) {\n            $r = $b;\n            $b = $a % $b;\n          \
    \  $a = floor($a / $b);\n        } else {\n            $r = $a;\n            $a\
    \ = $b % $a;\n            $b = floor($b / $a);\n        }\n    }\n    return $r;\n\
    }\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b !=\
    \ 0) {\n        $t = $b; $b = $a % $b;\n        $a = $t; $d++;\n    }\n    return\
    \ $r;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while\
    \ ($b > 0) {\n        $t = $b; $b = $a % $t; $a = $t;\n        $d = $t * $d +\
    \ $b;\n    }\n    return $r / $d;\n}\n</code>\n<|/ a tags=php,math |>\n<| c |>\n\
    I like your solution, however it fails for negative numbers. I added a fix for\
    \ negative numbers and it works great. Thanks!\n<|/ c |>\n<| c |>\nI added a fix\
    \ for negative numbers and it works great. Thanks!\n<|/ c |>\n<| c |>\nThis fails\
    \ for negative numbers. `greatest_common_divisor(-5, -2)` returns `1` instead\
    \ of `-1`.\n<|/ c |>\n<| c |>\nI added a fix for negative numbers and it works\
    \ great. Thanks!\n<|/ c |>\n<| a dscore=5 |>\n<code>", "    $a = abs($a); // force\
    \ a to be positive\n    $b = abs($b); // force b to be positive\n    if ($a <\
    \ $b) { $a = $b; $b = $a; }\n    while ($a != 0) {\n        $a = $a % $b;\n  \
    \      if ($a == 0) {\n            return $b;\n        }\n        $b = $b;\n \
    \   }\n    return $b;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) {\n        $temp\
    \ = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n\
    \        $t = $a % $b;\n        $a = $b;\n        $b = $t;\n    }\n    return\
    \ $b;\n}\n", "    $a = abs($a); // force a to be an integer\n    $b = abs($b);\
    \ // force b to be an integer\n    if ($a < $b) {\n        $temp = $a;\n     \
    \   $a = $b;\n        $b = $temp;\n    }\n    while ($a != 0) {\n        $a =\
    \ $a % $b;\n        if ($a == 0) {\n            return $b;\n        }\n      \
    \  $b = $b;\n    }\n    return $b;\n}\n", "    $a = abs($a); $b = abs($b);\n \
    \   $gcd = 0;\n    while ($a && $b) {\n        $t = $a; $a = $b; $b = $t;\n  \
    \      $t = $gcd; $gcd = $t % $b;\n    }\n    return $gcd;\n}\n", "    $a = abs($a);\
    \ // Always positive\n    $b = abs($b); // Always positive\n    if ($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while\
    \ ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n            return\
    \ $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}\n", "    $r = $a\
    \ % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n}", " \
    \   $a = abs($a); $b = abs($b);\n    $r = $a; $d = 1;\n    while ($b > 0) {\n\
    \        $t = $b; $b = $a % $t; $a = $t;\n        $d = ($d > $r) ? $d : $r;\n\
    \    }\n    return $d;\n}\n", "    $a = abs($a); $b = abs($b);\n    $r = $a; $d\
    \ = 1;\n    while ($b > 0) {\n        $t = $b; $b = ($a % $b);\n        $a = $t;\
    \ $d = ($d ? $d : $b);\n    }\n    return $r;\n}\n", "    $a = abs($a); // force\
    \ a to be positive\n    $b = abs($b); // force b to be positive\n    if ($a <\
    \ $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n \
    \   while ($a != 0) {\n        $a = $a % $b;\n        if ($a == 0) {\n       \
    \     return $b;\n        }\n        $b = $b;\n    }\n    return $b;\n}\n", " \
    \   $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $r;\n\
    }\n", "    $a = abs($a); // force a to be positive\n    $b = abs($b); // force\
    \ b to be positive\n    $gcd = 1;\n    while ($a && $b) {\n        if ($a > $b)\
    \ {\n            $a %= $gcd;\n        } else {\n            $b %= $gcd;\n    \
    \    }\n        $gcd = $gcd*10;\n    }\n    return $gcd;\n}\n", "    if ($a <\
    \ $b) {\n        $a = $b;\n        $b = $a;\n    }\n\n    while ($a != 0) {\n\
    \        $a = $a % $b;\n        $b = ($b * 10) % $a;\n    }\n\n    return $b;\n\
    }\n", "    $a = abs($a); // force a to be an integer\n    $b = abs($b); // force\
    \ b to be an integer\n    if ($a < $b) { $a = $b; $b = $a; }\n    while ($a &&\
    \ $b) { $a = $a % $b; $b = $b; }\n    return $b;\n}", "    $gcd = 0;\n    while\
    \ ($a && $b) {\n        if ($a > $b) {\n            $a = $a % $b;\n        } else\
    \ {\n            $b = $b % $a;\n        }\n        $gcd = $a > $gcd ? $a : $gcd;\n\
    \    }\n    return $gcd;\n}\n", "    $a = abs($a); // force a to be an integer\n\
    \    $b = abs($b); // force b to be an integer\n    if ($a < $b) { // swap them\
    \ if necessary\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n   \
    \ }\n    while ($a != 0) {\n        $tmp = $b;\n        $b = $a;\n        $a =\
    \ $tmp % $b;\n    }\n    return $b;\n}", "    $a = abs($a); $b = abs($b);\n  \
    \  $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n    }\n    return $b;\n\
    }\n", "    $gcd = 0;\n    while ($a && $b) {\n        if ($a > $b) {\n       \
    \     $a = $a % $b;\n        } else {\n            $b = $b % $a;\n        }\n\
    \        $gcd = $a > $gcd ? $a : $gcd;\n    }\n    return $gcd;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

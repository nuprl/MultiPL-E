language: php
name: HumanEval_47_median
results:
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    return $l[floor(count($l) / 2)];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpzack6jit.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzack6jit.php:17\nStack trace:\n#0 /tmp/tmpzack6jit.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzack6jit.php on line 17\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = sort($l);\n    return $l[count($l) / 2 - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: count(): Parameter must be an array or an object that implements\
    \ Countable in /tmp/tmpd_qfs7fc.php on line 9\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpd_qfs7fc.php:17\nStack trace:\n#0 /tmp/tmpd_qfs7fc.php(24):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpd_qfs7fc.php on line 17\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  return $l[count($l)/2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppq__f_o_.php:18\n\
    Stack trace:\n#0 /tmp/tmppq__f_o_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppq__f_o_.php\
    \ on line 18\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_filter($l);\n  if (count($l) == 0) {\n   \
    \ return 0;\n  }\n  $n = count($l);\n  if ($n % 2 == 0) {\n    return $l[($n -\
    \ 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  }\n  return ($l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcdiqa_4o.php:24\n\
    Stack trace:\n#0 /tmp/tmpcdiqa_4o.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcdiqa_4o.php\
    \ on line 24\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2) {\n    return $l[($n -\
    \ 1) / 2];\n  }\n  else {\n    $m = $n / 2;\n    $left = $l[($n - 1) / 2];\n \
    \   $right = $l[$m];\n    return ($left + $right) / 2;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp250st6xg.php:25\n\
    Stack trace:\n#0 /tmp/tmp250st6xg.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp250st6xg.php\
    \ on line 25\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_values($l);\n    $n = count($l);\n    if\
    \ ($n % 2 === 0) {\n        return $l[($n - 1) / 2];\n    }\n    return ($l[($n\
    \ - 1) / 2] + $l[($n - 2) / 2]) / 2;\n}\n\nfunction candidate(...$args) {\n  \
    \  return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfuy_cxmn.php:21\n\
    Stack trace:\n#0 /tmp/tmpfuy_cxmn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfuy_cxmn.php\
    \ on line 21\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 === 0) {\n\
    \    return $l[$n / 2];\n  }\n  else {\n    return ($l[$n / 2] + $l[($n - 1) /\
    \ 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzk1sdgv0.php:24\n\
    Stack trace:\n#0 /tmp/tmpzk1sdgv0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzk1sdgv0.php\
    \ on line 24\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyjtss3tl.php:23\n\
    Stack trace:\n#0 /tmp/tmpyjtss3tl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyjtss3tl.php\
    \ on line 23\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $l = array_reverse($l);\n  sort($l);\n  return $l[count($l)/2];\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cn9f3sa.php:19\n\
    Stack trace:\n#0 /tmp/tmp0cn9f3sa.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp0cn9f3sa.php\
    \ on line 19\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n - 1) / 2] + ($l[($n - 2) / 2] + $l[($n - 1) / 2]) / 2;\n  }\n\
    \  return $l[($n - 1) / 2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzpslruv1.php:22\n\
    Stack trace:\n#0 /tmp/tmpzpslruv1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpzpslruv1.php\
    \ on line 22\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2) {\n    return\
    \ $l[($n - 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n - 2)\
    \ / 2) / 2];\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpkdsdhasl.php on line 14

    '
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2) {\n\
    \        return $l[($n + 1) / 2];\n    }\n    return ($l[($n - 1) / 2 + 1] + $l[($n\
    \ - 1) / 2];\n}\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp7cx48x_j.php on line 13

    '
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0,\
    \ -1);\n    $l = array_filter($l);\n    $l = array_reverse($l);\n    $l = array_slice($l,\
    \ 0, -1);\n    return $l[0];\n}\n\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7ynbeql.php:21\n\
    Stack trace:\n#0 /tmp/tmps7ynbeql.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps7ynbeql.php\
    \ on line 21\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    sort($l);\n    return $l[count($l)/2];\n}\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcc3f8t3.php:17\n\
    Stack trace:\n#0 /tmp/tmpzcc3f8t3.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpzcc3f8t3.php\
    \ on line 17\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52mhnj9e.php:23\n\
    Stack trace:\n#0 /tmp/tmp52mhnj9e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp52mhnj9e.php\
    \ on line 23\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_filter($l);\n    if (count($l) % 2 == 0)\
    \ {\n        return $l[count($l) / 2 - 1];\n    }\n    else {\n        return\
    \ ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39g1unnm.php:22\n\
    Stack trace:\n#0 /tmp/tmp39g1unnm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp39g1unnm.php\
    \ on line 22\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  $n = count($l);\n  if ($n % 2) {\n    return $l[($n -\
    \ 1) / 2]; // median = (left + right)/2\n  }\n  else {\n    $m = $n / 2;\n   \
    \ return ($l[$m] + $l[$n - 1]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56dufrs1.php:23\n\
    Stack trace:\n#0 /tmp/tmp56dufrs1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp56dufrs1.php\
    \ on line 23\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    if (count($l) % 2 === 0) {\n        return $l[count($l)\
    \ / 2 - 1];\n    }\n    return ($l[count($l) / 2] + $l[count($l) / 2 - 1]) / 2;\n\
    }\n\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpta2k5t31.php:19\n\
    Stack trace:\n#0 /tmp/tmpta2k5t31.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpta2k5t31.php\
    \ on line 19\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n  sort($l);\n  $n = count($l);\n  if ($n % 2 == 0) {\n\
    \    return $l[($n + 1) / 2];\n  }\n  else {\n    return ($l[($n - 1) / 2] + $l[($n\
    \ - 2) / 2]) / 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52mhnj9e.php:23\n\
    Stack trace:\n#0 /tmp/tmp52mhnj9e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp52mhnj9e.php\
    \ on line 23\n"
  timestamp: 1659729960
- exit_code: 255
  program: "<?php\n// Return median of elements in the list l.\n// >>> median(array(3,\
    \ 1, 2, 4, 5))\n// 3\n// >>> median(array(-10, 4, 6, 1000, 10, 20))\n// 15.0\n\
    function median($l) {\n    $l = array_reverse($l);\n    sort($l);\n    return\
    \ $l[count($l)/2];\n}\n\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqlpatsz.php:19\n\
    Stack trace:\n#0 /tmp/tmpfqlpatsz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpfqlpatsz.php\
    \ on line 19\n"
  timestamp: 1659729960

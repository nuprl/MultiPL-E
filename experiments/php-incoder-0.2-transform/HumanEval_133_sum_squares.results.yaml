language: php
name: HumanEval_133_sum_squares
results:
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9snt4mjx.php:29\n\
    Stack trace:\n#0 /tmp/tmp9snt4mjx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9snt4mjx.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr901a1ho.php on line 23

    '
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += $num * $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4kpmt8y.php:29\n\
    Stack trace:\n#0 /tmp/tmpg4kpmt8y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpg4kpmt8y.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9snt4mjx.php:29\n\
    Stack trace:\n#0 /tmp/tmp9snt4mjx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9snt4mjx.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += $num * $num;\n  }\n  return round($sum, 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9k0sjii.php:29\n\
    Stack trace:\n#0 /tmp/tmps9k0sjii.php(43): test()\n#1 {main}\n  thrown in /tmp/tmps9k0sjii.php\
    \ on line 29\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += $num * $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4kpmt8y.php:29\n\
    Stack trace:\n#0 /tmp/tmpg4kpmt8y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpg4kpmt8y.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9snt4mjx.php:29\n\
    Stack trace:\n#0 /tmp/tmp9snt4mjx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9snt4mjx.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += $num * $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4kpmt8y.php:29\n\
    Stack trace:\n#0 /tmp/tmpg4kpmt8y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpg4kpmt8y.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9snt4mjx.php:29\n\
    Stack trace:\n#0 /tmp/tmp9snt4mjx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9snt4mjx.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. OP wants\
    \ to round the numbers to the nearest integer.\n<|/ c |>\n<| c |>\nI believe that\
    \ my answer does exactly that. `round` rounds to the nearest integer. `ceil` rounds\
    \ to the nearest integer and `floor` rounds to the nearest integer but truncates\
    \ the decimal part.\n<|/ c |>\n<| c |>\nI believe that my answer does exactly\
    \ that. `round` rounds to the nearest integer. `ceil` rounds to the nearest integer\
    \ and `floor` rounds to the nearest integer but truncates the decimal part.\n\
    <|/ c |>\n<| c |>\nNo, `ceil` rounds to the nearest integer and `floor` rounds\
    \ to the nearest integer but truncates the decimal part.\n<|/ c |>\n<| c |>\n\
    I believe that my answer does exactly that. `round` rounds to the nearest integer.\
    \ `ceil` rounds to the nearest integer and `floor` rounds to the nearest integer\
    \ but truncates the decimal part.\n<|/ c |>\n<| a tags=php,rounding,ceil |>\n\
    <code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_gxzygy3.php
    on line 23

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += $num * $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4kpmt8y.php:29\n\
    Stack trace:\n#0 /tmp/tmpg4kpmt8y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpg4kpmt8y.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I tried this but\
    \ I am getting this error \"Fatal error: Call to undefined function lst()\"\n\
    <|/ c |>\n<| c |>\nI edited the answer to include a link to a working example.\n\
    <|/ c |>\n<| c |>\nThanks again for your answer. I tried the code but I am getting\
    \ this error \"Fatal error: Call to undefined function lst()\"\n<|/ c |>\n<| c\
    \ |>\nI edited the answer to include a link to a working example.\n<|/ c |>\n\
    <| c |>\nThanks again for your answer. I tried the code but I am getting this\
    \ error \"Fatal error: Call to undefined function lst()\"\n<|/ c |>\n<| a tags=php\
    \ |>\n<code>\n<?php\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpj94o_3gm.php
    on line 23

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpr901a1ho.php on line 23

    '
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9snt4mjx.php:29\n\
    Stack trace:\n#0 /tmp/tmp9snt4mjx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9snt4mjx.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9snt4mjx.php:29\n\
    Stack trace:\n#0 /tmp/tmp9snt4mjx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9snt4mjx.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += $num * $num;\n  }\n  return round($sum);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycr34esl.php:29\n\
    Stack trace:\n#0 /tmp/tmpycr34esl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpycr34esl.php\
    \ on line 29\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I am not allowed\
    \ to use any built-in functions. I am also not allowed to use any loops. I am\
    \ only allowed to use if statements, while loops, switch statements, arrays, foreach\
    \ loops, if statements, switch statements, arrays, foreach loops, if statements,\
    \ switch statements, arrays, foreach loops, if statements, switch statements,\
    \ arrays, foreach loops, if statements, switch statements, arrays, foreach loops,\
    \ if statements, switch statements, arrays, foreach loops, if statements, switch\
    \ statements, arrays, foreach loops, if statements, switch statements, arrays,\
    \ foreach loops, if statements, switch statements, arrays, foreach loops, if statements,\
    \ switch statements, arrays, foreach loops, if statements, switch statements,\
    \ arrays, foreach loops, if statements, switch statements, arrays, foreach loops,\
    \ if statements, switch statements, arrays, foreach loops, if statements, switch\
    \ statements, arrays, foreach loops, if statements, switch statements, arrays,\
    \ foreach loops, if statements, switch statements, arrays, foreach loops, if statements,\
    \ switch statements, arrays, foreach loops, if statements, switch statements,\
    \ arrays, foreach loops, if statements, switch statements, arrays, foreach loops,\
    \ if statements, switch statements, arrays, foreach loops, if statements, switch\
    \ statements, arrays, foreach loops, if statements, switch statements, arrays,\
    \ foreach loops, if statements, switch statements, arrays, foreach loops, if statements,\
    \ switch statements, arrays, foreach loops, if statements, switch statements,\
    \ arrays, foreach loops, if statements, switch statements, arrays, foreach loops,\
    \ if statements, switch statements, arrays, foreach loops, if statements, switch\
    \ statements, arrays, foreach loops, if statements, switch statements, arrays,\
    \ foreach loops, if statements, switch statements, arrays, foreach loops, if statements,\
    \ switch statements, arrays, foreach loops, if statements, switch statements,\
    \ arrays, foreach loops, if statements, switch statements, arrays, foreach loops,\
    \ if statements, switch statements, arrays, foreach loops, if statements, switch\
    \ statements, arrays, foreach loops, if statements, switch statements, arrays,\
    \ foreach loops, if statements, \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp7wt_uaoz.php
    on line 23

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9snt4mjx.php:29\n\
    Stack trace:\n#0 /tmp/tmp9snt4mjx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9snt4mjx.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += $num * $num;\n  }\n  return round($sum, 0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9k0sjii.php:29\n\
    Stack trace:\n#0 /tmp/tmps9k0sjii.php(43): test()\n#1 {main}\n  thrown in /tmp/tmps9k0sjii.php\
    \ on line 29\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n  $sum = 0;\n  foreach ($lst\
    \ as $num) {\n    $sum += $num * $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4kpmt8y.php:29\n\
    Stack trace:\n#0 /tmp/tmpg4kpmt8y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpg4kpmt8y.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,algorithm |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpn6ubupvt.php
    on line 23

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a tags=php |>\n<| c |>\nI didn't downvote you, but I suspect it's\
    \ because you didn't explain what was wrong with OP's code, and why you think\
    \ your solution would work. Also, your solution doesn't round the numbers to the\
    \ nearest integer.\n<|/ c |>\n<| c |>\nI did explain what was wrong with OP's\
    \ code. He didn't know how to round the numbers to the nearest integer. He didn't\
    \ know how to round the numbers to the nearest integer. He didn't know how to\
    \ round the numbers to the nearest integer. He didn't know how to round the numbers\
    \ to the nearest integer. He didn't know how to round the numbers to the nearest\
    \ integer. He didn't know how to round the numbers to the nearest integer. He\
    \ didn't know how to round the numbers to the nearest integer. He didn't know\
    \ how to round the numbers to the nearest integer. He didn't know how to round\
    \ the numbers to the nearest integer. He didn't know how to round the numbers\
    \ to the nearest integer. He didn't know how to round the numbers to the nearest\
    \ integer. He didn't know how to round the numbers to the nearest integer. He\
    \ didn't know how to round the numbers to the nearest integer. He didn't know\
    \ how to round the numbers to the nearest integer. He didn't know how to round\
    \ the numbers to the nearest integer. He didn't know how to round the numbers\
    \ to the nearest integer. He didn't know how to round the numbers to the nearest\
    \ integer. He didn't know how to round the numbers to the nearest integer. He\
    \ didn't know how to round the numbers to the nearest integer. He didn't know\
    \ how to round the numbers to the nearest integer. He didn't know how to round\
    \ the numbers to the nearest integer. He didn't know how to round the numbers\
    \ to the nearest integer. He didn't know how to round the numbers to the nearest\
    \ integer. He didn't know how to round the numbers to the nearest integer. He\
    \ didn't know how to round the numbers to the nearest integer. He didn't know\
    \ how to round the numbers to the nearest integer. He didn't know how to round\
    \ the numbers to the nearest integer. He didn't know how to round the numbers\
    \ to the nearest integer. He didn't know how to round the numbers to the nearest\
    \ integer. He didn't know how to round the numbers to the nearest integer. He\
    \ didn't know how to round the numbers to the nearest integer. He didn't know\
    \ how to round the numbers to the nearest integer. He didn't know how to round\
    \ the numbers to the nearest integer. He didn't know how to round the numbers\
    \ to the nearest integer. He didn't know how to round the numbers to the nearest\
    \ integer. He didn't know how to round the numbers to the nearest integer. He\
    \ \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpnf6sjo_c.php
    on line 23

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a tags=php,arrays,math |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpt4d2iqnc.php
    on line 23

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\n<?php\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmps0jv6heh.php
    on line 23

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=php |>\n<code>\n<?php\n$numbers = array(1,2,3,4,5,6,7,8,9,10);\n\
    $sum = 0;\nforeach ($numbers as $number) {\n    $sum += $number * $number;\n}\n\
    echo $sum;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfogrtqq8.php
    on line 23

    '
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum);\n}\n\
    \nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9snt4mjx.php:29\n\
    Stack trace:\n#0 /tmp/tmp9snt4mjx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9snt4mjx.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 3.0, 5.0, 7.0))\
    \ !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte_py3ua.php:29\n\
    Stack trace:\n#0 /tmp/tmpte_py3ua.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpte_py3ua.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930
- exit_code: 255
  program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// >>> lst(array(1.0, 2.0, 3.0))\n\
    // 14\n// >>> lst(array(1.0, 4.0, 9.0))\n// 98\n// >>> lst(array(1.0, 3.0, 5.0,\
    \ 7.0))\n// 84\n// >>> lst(array(1.4, 4.2, 0.0))\n// 29\n// >>> lst(array(-2.4,\
    \ 1.0, 1.0))\n// 6\nfunction sum_squares($lst) {\n    $sum = 0;\n    foreach ($lst\
    \ as $num) {\n        $sum += $num * $num;\n    }\n    return round($sum, 0);\n\
    }\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0))\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn_0s9yn.php:29\n\
    Stack trace:\n#0 /tmp/tmpmn_0s9yn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmn_0s9yn.php\
    \ on line 29\n"
  timestamp: 1659730930

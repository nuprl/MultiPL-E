language: php
name: HumanEval_39_prime_fib
results:
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    while ($n >= $c)\
    \ {\n        $a = $b;\n        $b = $c + $a;\n        $c = $b;\n    }\n    return\
    \ $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6260tp9r.php:30\n\
    Stack trace:\n#0 /tmp/tmp6260tp9r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6260tp9r.php\
    \ on line 30\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafis6vvp.php:25\n\
    Stack trace:\n#0 /tmp/tmpafis6vvp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafis6vvp.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n == 5)\
    \ {\n\t\treturn 5;\n\t}\n\tif ($n == 7) {\n\t\treturn 7;\n\t}\n\tif ($n == 9)\
    \ {\n\t\treturn 9;\n\t}\n\tif ($n == 11) {\n\t\treturn 11;\n\t}\n\tif ($n == 12)\
    \ {\n\t\treturn 13;\n\t}\n\tif ($n == 13) {\n\t\treturn 13;\n\t}\n\tif ($n ==\
    \ 14) {\n\t\treturn 17;\n\t}\n\tif ($n == 15) {\n\t\treturn 19;\n\t}\n\tif ($n\
    \ == 16) {\n\t\treturn 23;\n\t}\n\tif ($n == 17) {\n\t\treturn 29;\n\t}\n\tif\
    \ ($n == 19) {\n\t\treturn 31;\n\t}\n\tif ($n == 20) {\n\t\treturn 41;\n\t}\n\t\
    if ($n == 21) {\n\t\treturn 47;\n\t}\n\tif ($n == 23) {\n\t\treturn 53;\n\t}\n\
    \tif ($n == 24) {\n\t\treturn 59;\n\t}\n\tif ($n == 25) {\n\t\treturn 61;\n\t\
    }\n\tif ($n == 26) {\n\t\treturn 67;\n\t}\n\tif ($n == 27) {\n\t\treturn 71;\n\
    \t}\n\tif ($n == 28) {\n\t\treturn 73;\n\t}\n\tif ($n == 29) {\n\t\treturn 79;\n\
    \t}\n\tif ($n == 31) {\n\t\treturn 83;\n\t}\n\tif ($n == 32) {\n\t\treturn 89;\n\
    \t}\n\tif ($n == 33) {\n\t\treturn 97;\n\t}\n\tif ($n == 34) {\n\t\treturn 101;\n\
    \t}\n\tif ($n == 35) {\n\t\treturn 103;\n\t}\n\tif ($n == 36) {\n\t\treturn 107;\n\
    \t}\n\tif ($n == 37) {\n\t\treturn 111;\n\t}\n\tif ($n == 38) {\n\t\treturn 113;\n\
    \t}\n\tif ($n == 39) {\n\t\treturn 117;\n\t}\n\tif ($n == 41) {\n\t\treturn 121;\n\
    \t}\n\tif ($n == 42) {\n\t\treturn 127;\n\t}\n\tif ($n == 43) {\n\t\treturn 131;\n\
    \t}\n\tif ($n == 44) {\n\t\treturn 137;\n\t}\n\tif ($n == 45) {\n\t\treturn 139;\n\
    \t}\n\tif ($n == 46) {\n\t\treturn 143;\n\t}\n\tif ($n == 47) {\n\t\treturn 147;\n\
    \t}\n\tif ($n == 48) {\n\t\treturn 151;\n\t}\n\tif ($n == 49) {\n\t\treturn 153;\n\
    \t}\n\tif ($n == 51) {\n\t\treturn 157;\n\t}\n\tif ($n == 52) {\n\t\treturn 163;\n\
    \t}\n\tif ($n == 53) {\n\t\treturn \nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptt5ptcbx.php on line 145

    '
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n    );\n\
    \    foreach ($fibs as $index => $fib) {\n        if ($fib > $n) {\n         \
    \   break;\n        }\n        if ($index == $n - 1) {\n            return $fib;\n\
    \        }\n        $fibs[$index + 1] = $fibs[$index] + $fibs[$index + 1];\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qof62bj.php:34\n\
    Stack trace:\n#0 /tmp/tmp9qof62bj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9qof62bj.php\
    \ on line 34\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafis6vvp.php:25\n\
    Stack trace:\n#0 /tmp/tmpafis6vvp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafis6vvp.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fibs\
    \ = array(2, 3, 5);\n    $fibs[$n - 2] = $fibs[$n - 1] + $fibs[$n - 2];\n    return\
    \ $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjro95_qh.php:27\n\
    Stack trace:\n#0 /tmp/tmpjro95_qh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjro95_qh.php\
    \ on line 27\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(2 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66ux7zgz.php:25\n\
    Stack trace:\n#0 /tmp/tmp66ux7zgz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66ux7zgz.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(2 * $n) + prime_fib(2 * $n - 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7lilfum0.php:25\n\
    Stack trace:\n#0 /tmp/tmp7lilfum0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7lilfum0.php\
    \ on line 25\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 1357931;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 30) {\n        return 5519713;\n\
    \    }\n    if ($n == 31) {\n        return 8919713;\n    }\n    if ($n == 32)\
    \ {\n        return 1357937;\n    }\n    if ($n == 33) {\n        return 23338975;\n\
    \    }\n    if ($n == 34) {\n        return 34197175;\n    }\n    if ($n == 35)\
    \ {\n        return 55197175;\n    }\n    if ($n == 36) {\n        return 89197175;\n\
    \    }\n    if ($n == 37) {\n        return 13579373;\n    }\n    if ($n == 38)\
    \ {\n        return 23338987;\n    }\n    if ($n == 39) {\n        return 34197179;\n\
    \    }\n    if ($n == 40) {\n        return 55197179;\n    }\n    if ($n == 41)\
    \ {\n        return 89197179;\n    }\n    if (\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjgblzvgs.php on line 135

    '
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29asq3de.php:34\n\
    Stack trace:\n#0 /tmp/tmp29asq3de.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp29asq3de.php\
    \ on line 34\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 4);\n    }\n    return prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g2dd_3c.php:34\n\
    Stack trace:\n#0 /tmp/tmp8g2dd_3c.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8g2dd_3c.php\
    \ on line 34\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 3) + prime_fib($n - 2);\n\t}\n\treturn prime_fib($n\
    \ - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wf3apl7.php:37\n\
    Stack trace:\n#0 /tmp/tmp3wf3apl7.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3wf3apl7.php\
    \ on line 37\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 251;\n    }\n    if ($n == 9) {\n        return\
    \ 413;\n    }\n    if ($n == 10) {\n        return 671;\n    }\n    if ($n ==\
    \ 11) {\n        return 987;\n    }\n    if ($n == 12) {\n        return 1569;\n\
    \    }\n    if ($n == 13) {\n        return 2584;\n    }\n    if ($n == 14) {\n\
    \        return 4181;\n    }\n    if ($n == 15) {\n        return 6765;\n    }\n\
    \    if ($n == 16) {\n        return 10943;\n    }\n    if ($n == 17) {\n    \
    \    return 17711;\n    }\n    if ($n == 18) {\n        return 28657;\n    }\n\
    \    if ($n == 19) {\n        return 51453;\n    }\n    if ($n == 20) {\n    \
    \    return 80527;\n    }\n    if ($n == 21) {\n        return 126765;\n    }\n\
    \    if ($n == 22) {\n        return 187689;\n    }\n    if ($n == 23) {\n   \
    \     return 297125;\n    }\n    if ($n == 24) {\n        return 514229;\n   \
    \ }\n    if ($n == 25) {\n        return 832047;\n    }\n    if ($n == 26) {\n\
    \        return 1180593;\n    }\n    if ($n == 27) {\n        return 1814697;\n\
    \    }\n    if ($n == 28) {\n        return 3055087;\n    }\n    if ($n == 29)\
    \ {\n        return 5265737;\n    }\n    if ($n == 30) {\n        return 8128293;\n\
    \    }\n    if ($n == 31) {\n        return 12577231;\n    }\n    if ($n == 32)\
    \ {\n        return 17146567;\n    }\n    if ($n == 33) {\n        return 21896915;\n\
    \    }\n    if ($n == 34) {\n        return 28327049;\n    }\n    if ($n == 35)\
    \ {\n        return 42581407;\n    }\n    if ($n == 36) {\n        return 57028087;\n\
    \    }\n    if ($n == 37) {\n        return 73055771;\n    }\n    if ($n == 38)\
    \ {\n        return 104456419;\n    }\n    if ($n == 39) {\n        return 155987359;\n\
    \    }\n    if ($n == 40) {\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp98iyvo3.php on line 146

    '
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2) + prime_fib($n - 3);\n    }\n    return prime_fib($n - 1) + prime_fib($n\
    \ - 3) + prime_fib($n - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdnf8ktb.php:37\n\
    Stack trace:\n#0 /tmp/tmpfdnf8ktb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfdnf8ktb.php\
    \ on line 37\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafis6vvp.php:25\n\
    Stack trace:\n#0 /tmp/tmpafis6vvp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafis6vvp.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341989;\n   \
    \ }\n    if ($n == 25) {\n        return 551989;\n    }\n    if ($n == 26) {\n\
    \        return 891999;\n    }\n    if ($n == 27) {\n        return 1357939;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419897;\n    }\n    if ($n == 30) {\n        return 5519897;\n\
    \    }\n    if ($n == 31) {\n        return 8919999;\n    }\n    if ($n == 32)\
    \ {\n        return 13579393;\n    }\n    if ($n == 33) {\n        return 23338987;\n\
    \    }\n    if ($n == 34) {\n        return 34199997;\n    }\n    if ($n == 35)\
    \ {\n        return 55199997;\n    }\n    if ($n == 36) {\n        return 89199999;\
    \ // not prime\n    }\n    if ($n == 37) {\n        return 135793937;\n    }\n\
    \    if ($n == 38) {\n        return 233389877;\n    }\n    if ($n == 39) {\n\
    \        return 341999977;\n    }\n    if ($n == 40) {\n        return 551999977;\n\
    \    }\n    if ($n == 41) {\n        return 891999999\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfoe8gix1.php on line 133

    '
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2) + prime_fib($n - 4);\n    }\n\
    \    return prime_fib($n - 5) + prime_fib($n - 4) + prime_fib($n - 3) + prime_fib($n\
    \ - 2) + prime_fib($n - 1);\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps29m5p5a.php:33\n\
    Stack trace:\n#0 /tmp/tmps29m5p5a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmps29m5p5a.php\
    \ on line 33\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $prime_fib_number\
    \ = $n;\n    for($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a =\
    \ $b;\n        $b = $c;\n        if($c % 2 == 0) {\n            $prime_fib_number\
    \ = $c;\n        }\n    }\n    return $prime_fib_number;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4phi8o2.php:35\n\
    Stack trace:\n#0 /tmp/tmpk4phi8o2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpk4phi8o2.php\
    \ on line 35\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib(2);\n    $b = prime_fib(3);\n    $c = $a + $b;\n  \
    \  if ($n % $c == 0) {\n        return $c;\n    }\n    return $c;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtzkivut.php:37\n\
    Stack trace:\n#0 /tmp/tmphtzkivut.php(49): test()\n#1 {main}\n  thrown in /tmp/tmphtzkivut.php\
    \ on line 37\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2) + prime_fib($n - 4);\n    }\n\
    \    return prime_fib($n - 5) + prime_fib($n - 4) + prime_fib($n - 3) + prime_fib($n\
    \ - 2) + prime_fib($n - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuu0k7wn2.php:34\n\
    Stack trace:\n#0 /tmp/tmpuu0k7wn2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpuu0k7wn2.php\
    \ on line 34\n"
  timestamp: 1659730786

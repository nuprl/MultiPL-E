language: php
name: HumanEval_39_prime_fib
results:
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    while ($n >= $c)\
    \ {\n        $a = $b;\n        $b = $c + $a;\n        $c = $b;\n    }\n    return\
    \ $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6260tp9r.php:30\n\
    Stack trace:\n#0 /tmp/tmp6260tp9r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6260tp9r.php\
    \ on line 30\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafis6vvp.php:25\n\
    Stack trace:\n#0 /tmp/tmpafis6vvp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafis6vvp.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n == 5)\
    \ {\n\t\treturn 5;\n\t}\n\tif ($n == 7) {\n\t\treturn 7;\n\t}\n\tif ($n == 9)\
    \ {\n\t\treturn 9;\n\t}\n\tif ($n == 11) {\n\t\treturn 11;\n\t}\n\tif ($n == 12)\
    \ {\n\t\treturn 13;\n\t}\n\tif ($n == 13) {\n\t\treturn 13;\n\t}\n\tif ($n ==\
    \ 14) {\n\t\treturn 17;\n\t}\n\tif ($n == 15) {\n\t\treturn 19;\n\t}\n\tif ($n\
    \ == 16) {\n\t\treturn 23;\n\t}\n\tif ($n == 17) {\n\t\treturn 29;\n\t}\n\tif\
    \ ($n == 19) {\n\t\treturn 31;\n\t}\n\tif ($n == 20) {\n\t\treturn 41;\n\t}\n\t\
    if ($n == 21) {\n\t\treturn 47;\n\t}\n\tif ($n == 23) {\n\t\treturn 53;\n\t}\n\
    \tif ($n == 24) {\n\t\treturn 59;\n\t}\n\tif ($n == 25) {\n\t\treturn 61;\n\t\
    }\n\tif ($n == 26) {\n\t\treturn 67;\n\t}\n\tif ($n == 27) {\n\t\treturn 71;\n\
    \t}\n\tif ($n == 28) {\n\t\treturn 73;\n\t}\n\tif ($n == 29) {\n\t\treturn 79;\n\
    \t}\n\tif ($n == 31) {\n\t\treturn 83;\n\t}\n\tif ($n == 32) {\n\t\treturn 89;\n\
    \t}\n\tif ($n == 33) {\n\t\treturn 97;\n\t}\n\tif ($n == 34) {\n\t\treturn 101;\n\
    \t}\n\tif ($n == 35) {\n\t\treturn 103;\n\t}\n\tif ($n == 36) {\n\t\treturn 107;\n\
    \t}\n\tif ($n == 37) {\n\t\treturn 111;\n\t}\n\tif ($n == 38) {\n\t\treturn 113;\n\
    \t}\n\tif ($n == 39) {\n\t\treturn 117;\n\t}\n\tif ($n == 41) {\n\t\treturn 121;\n\
    \t}\n\tif ($n == 42) {\n\t\treturn 127;\n\t}\n\tif ($n == 43) {\n\t\treturn 131;\n\
    \t}\n\tif ($n == 44) {\n\t\treturn 137;\n\t}\n\tif ($n == 45) {\n\t\treturn 139;\n\
    \t}\n\tif ($n == 46) {\n\t\treturn 143;\n\t}\n\tif ($n == 47) {\n\t\treturn 147;\n\
    \t}\n\tif ($n == 48) {\n\t\treturn 151;\n\t}\n\tif ($n == 49) {\n\t\treturn 153;\n\
    \t}\n\tif ($n == 51) {\n\t\treturn 157;\n\t}\n\tif ($n == 52) {\n\t\treturn 163;\n\
    \t}\n\tif ($n == 53) {\n\t\treturn \nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmptt5ptcbx.php on line 145

    '
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n    );\n\
    \    foreach ($fibs as $index => $fib) {\n        if ($fib > $n) {\n         \
    \   break;\n        }\n        if ($index == $n - 1) {\n            return $fib;\n\
    \        }\n        $fibs[$index + 1] = $fibs[$index] + $fibs[$index + 1];\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qof62bj.php:34\n\
    Stack trace:\n#0 /tmp/tmp9qof62bj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9qof62bj.php\
    \ on line 34\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafis6vvp.php:25\n\
    Stack trace:\n#0 /tmp/tmpafis6vvp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafis6vvp.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $fibs\
    \ = array(2, 3, 5);\n    $fibs[$n - 2] = $fibs[$n - 1] + $fibs[$n - 2];\n    return\
    \ $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjro95_qh.php:27\n\
    Stack trace:\n#0 /tmp/tmpjro95_qh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjro95_qh.php\
    \ on line 27\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(2 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66ux7zgz.php:25\n\
    Stack trace:\n#0 /tmp/tmp66ux7zgz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66ux7zgz.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(2 * $n) + prime_fib(2 * $n - 1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7lilfum0.php:25\n\
    Stack trace:\n#0 /tmp/tmp7lilfum0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7lilfum0.php\
    \ on line 25\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 1357931;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 30) {\n        return 5519713;\n\
    \    }\n    if ($n == 31) {\n        return 8919713;\n    }\n    if ($n == 32)\
    \ {\n        return 1357937;\n    }\n    if ($n == 33) {\n        return 23338975;\n\
    \    }\n    if ($n == 34) {\n        return 34197175;\n    }\n    if ($n == 35)\
    \ {\n        return 55197175;\n    }\n    if ($n == 36) {\n        return 89197175;\n\
    \    }\n    if ($n == 37) {\n        return 13579373;\n    }\n    if ($n == 38)\
    \ {\n        return 23338987;\n    }\n    if ($n == 39) {\n        return 34197179;\n\
    \    }\n    if ($n == 40) {\n        return 55197179;\n    }\n    if ($n == 41)\
    \ {\n        return 89197179;\n    }\n    if (\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjgblzvgs.php on line 135

    '
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29asq3de.php:34\n\
    Stack trace:\n#0 /tmp/tmp29asq3de.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp29asq3de.php\
    \ on line 34\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 4);\n    }\n    return prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g2dd_3c.php:34\n\
    Stack trace:\n#0 /tmp/tmp8g2dd_3c.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8g2dd_3c.php\
    \ on line 34\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 3) + prime_fib($n - 2);\n\t}\n\treturn prime_fib($n\
    \ - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wf3apl7.php:37\n\
    Stack trace:\n#0 /tmp/tmp3wf3apl7.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3wf3apl7.php\
    \ on line 37\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 251;\n    }\n    if ($n == 9) {\n        return\
    \ 413;\n    }\n    if ($n == 10) {\n        return 671;\n    }\n    if ($n ==\
    \ 11) {\n        return 987;\n    }\n    if ($n == 12) {\n        return 1569;\n\
    \    }\n    if ($n == 13) {\n        return 2584;\n    }\n    if ($n == 14) {\n\
    \        return 4181;\n    }\n    if ($n == 15) {\n        return 6765;\n    }\n\
    \    if ($n == 16) {\n        return 10943;\n    }\n    if ($n == 17) {\n    \
    \    return 17711;\n    }\n    if ($n == 18) {\n        return 28657;\n    }\n\
    \    if ($n == 19) {\n        return 51453;\n    }\n    if ($n == 20) {\n    \
    \    return 80527;\n    }\n    if ($n == 21) {\n        return 126765;\n    }\n\
    \    if ($n == 22) {\n        return 187689;\n    }\n    if ($n == 23) {\n   \
    \     return 297125;\n    }\n    if ($n == 24) {\n        return 514229;\n   \
    \ }\n    if ($n == 25) {\n        return 832047;\n    }\n    if ($n == 26) {\n\
    \        return 1180593;\n    }\n    if ($n == 27) {\n        return 1814697;\n\
    \    }\n    if ($n == 28) {\n        return 3055087;\n    }\n    if ($n == 29)\
    \ {\n        return 5265737;\n    }\n    if ($n == 30) {\n        return 8128293;\n\
    \    }\n    if ($n == 31) {\n        return 12577231;\n    }\n    if ($n == 32)\
    \ {\n        return 17146567;\n    }\n    if ($n == 33) {\n        return 21896915;\n\
    \    }\n    if ($n == 34) {\n        return 28327049;\n    }\n    if ($n == 35)\
    \ {\n        return 42581407;\n    }\n    if ($n == 36) {\n        return 57028087;\n\
    \    }\n    if ($n == 37) {\n        return 73055771;\n    }\n    if ($n == 38)\
    \ {\n        return 104456419;\n    }\n    if ($n == 39) {\n        return 155987359;\n\
    \    }\n    if ($n == 40) {\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp98iyvo3.php on line 146

    '
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2) + prime_fib($n - 3);\n    }\n    return prime_fib($n - 1) + prime_fib($n\
    \ - 3) + prime_fib($n - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfdnf8ktb.php:37\n\
    Stack trace:\n#0 /tmp/tmpfdnf8ktb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfdnf8ktb.php\
    \ on line 37\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafis6vvp.php:25\n\
    Stack trace:\n#0 /tmp/tmpafis6vvp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafis6vvp.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341989;\n   \
    \ }\n    if ($n == 25) {\n        return 551989;\n    }\n    if ($n == 26) {\n\
    \        return 891999;\n    }\n    if ($n == 27) {\n        return 1357939;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419897;\n    }\n    if ($n == 30) {\n        return 5519897;\n\
    \    }\n    if ($n == 31) {\n        return 8919999;\n    }\n    if ($n == 32)\
    \ {\n        return 13579393;\n    }\n    if ($n == 33) {\n        return 23338987;\n\
    \    }\n    if ($n == 34) {\n        return 34199997;\n    }\n    if ($n == 35)\
    \ {\n        return 55199997;\n    }\n    if ($n == 36) {\n        return 89199999;\
    \ // not prime\n    }\n    if ($n == 37) {\n        return 135793937;\n    }\n\
    \    if ($n == 38) {\n        return 233389877;\n    }\n    if ($n == 39) {\n\
    \        return 341999977;\n    }\n    if ($n == 40) {\n        return 551999977;\n\
    \    }\n    if ($n == 41) {\n        return 891999999\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfoe8gix1.php on line 133

    '
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2) + prime_fib($n - 4);\n    }\n\
    \    return prime_fib($n - 5) + prime_fib($n - 4) + prime_fib($n - 3) + prime_fib($n\
    \ - 2) + prime_fib($n - 1);\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps29m5p5a.php:33\n\
    Stack trace:\n#0 /tmp/tmps29m5p5a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmps29m5p5a.php\
    \ on line 33\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $prime_fib_number\
    \ = $n;\n    for($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a =\
    \ $b;\n        $b = $c;\n        if($c % 2 == 0) {\n            $prime_fib_number\
    \ = $c;\n        }\n    }\n    return $prime_fib_number;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4phi8o2.php:35\n\
    Stack trace:\n#0 /tmp/tmpk4phi8o2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpk4phi8o2.php\
    \ on line 35\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib(2);\n    $b = prime_fib(3);\n    $c = $a + $b;\n  \
    \  if ($n % $c == 0) {\n        return $c;\n    }\n    return $c;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtzkivut.php:37\n\
    Stack trace:\n#0 /tmp/tmphtzkivut.php(49): test()\n#1 {main}\n  thrown in /tmp/tmphtzkivut.php\
    \ on line 37\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2) + prime_fib($n - 4);\n    }\n\
    \    return prime_fib($n - 5) + prime_fib($n - 4) + prime_fib($n - 3) + prime_fib($n\
    \ - 2) + prime_fib($n - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuu0k7wn2.php:34\n\
    Stack trace:\n#0 /tmp/tmpuu0k7wn2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpuu0k7wn2.php\
    \ on line 34\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cqy_k31.php:34\n\
    Stack trace:\n#0 /tmp/tmp3cqy_k31.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3cqy_k31.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    $a = prime_fib($n -\
    \ 1);\n    $b = prime_fib($n - 2);\n    return $a + $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnarrs5yy.php:36\n\
    Stack trace:\n#0 /tmp/tmpnarrs5yy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnarrs5yy.php\
    \ on line 36\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n\
    \    $e = 1;\n    $f = 0;\n    \n    for($i = 1; $i <= $n; $i++) {\n        $f\
    \ = $a + $b;\n        $a = $b;\n        $b = $c;\n        $c = $d;\n        $d\
    \ = $e;\n        $e = $f;\n    }\n    \n    return $e;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxia35bd.php:39\n\
    Stack trace:\n#0 /tmp/tmpxxia35bd.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxxia35bd.php\
    \ on line 39\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfe8g7v2v.php:25\n\
    Stack trace:\n#0 /tmp/tmpfe8g7v2v.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfe8g7v2v.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime_fib_number\
    \ = $n;\n    while ($prime_fib_number != 0) {\n        $a = $b;\n        $b =\
    \ $c;\n        $c = $a + $b;\n        $prime_fib_number = $c % $n;\n    }\n  \
    \  return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1ki8ksc.php:32\n\
    Stack trace:\n#0 /tmp/tmpe1ki8ksc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe1ki8ksc.php\
    \ on line 32\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $fibs = array();\n    $fibs[0]\
    \ = $a;\n    $fibs[1] = $b;\n    for ($i = 2; $i <= $n; $i++) {\n        $a =\
    \ $b;\n        $b = $a + $b;\n        $fibs[$i] = $b;\n    }\n    return $fibs[$n];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7qlus38.php:31\n\
    Stack trace:\n#0 /tmp/tmpz7qlus38.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpz7qlus38.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $a + $b;\n        $b = $a - $b;\n    }\n    return $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwxk87pc.php:30\n\
    Stack trace:\n#0 /tmp/tmpnwxk87pc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnwxk87pc.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 2); //\
    \ 3n+2\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsxrlrlk.php:28\n\
    Stack trace:\n#0 /tmp/tmprsxrlrlk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprsxrlrlk.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) + prime_fib(3\
    \ * $n + 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8mt77j2.php:28\n\
    Stack trace:\n#0 /tmp/tmpb8mt77j2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb8mt77j2.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9rncrh9.php:34\n\
    Stack trace:\n#0 /tmp/tmpq9rncrh9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpq9rncrh9.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 3) + prime_fib($n - 2);\n\t}\n\treturn prime_fib($n\
    \ - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wf3apl7.php:37\n\
    Stack trace:\n#0 /tmp/tmp3wf3apl7.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3wf3apl7.php\
    \ on line 37\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    if\
    \ ($n <= 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd3zvwgd.php:34\n\
    Stack trace:\n#0 /tmp/tmpwd3zvwgd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwd3zvwgd.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [0, 1];\n    $fibs[2] = 1;\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $fibs[$i] = $fibs[$i - 1] + $fibs[$i - 2];\n\
    \    }\n    return $fibs[$n];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_gievod9.php:27\n\
    Stack trace:\n#0 /tmp/tmp_gievod9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_gievod9.php\
    \ on line 27\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 135795;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 3) {\n        return 5;\n \
    \   }\n    if ($n == 6) {\n        return 13;\n    }\n    if ($n == 7) {\n   \
    \     return 89;\n    }\n    if ($n == 8) {\n        return 233;\n    }\n    if\
    \ ($n == 9) {\n        return 341;\n    }\n    if ($n == 10) {\n        return\
    \ 551;\n    }\n    if ($n == 11) {\n        return 891;\n    }\n    if ($n ==\
    \ 12) {\n        return 1357;\n    }\n    if ($n == 13) {\n        return 2333;\n\
    \    }\n    if ($n == 14) {\n        return 3417;\n    }\n    if ($n == 15) {\n\
    \        return 5517;\n    }\n    if ($n == 16) {\n        return 8917;\n    }\n\
    \    if ($n == 17) {\n        return 13579;\n    }\n    if ($n == 18) {\n    \
    \    return 23339;\n    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 13 in /tmp/tmpjplt85lh.php on line 158

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    return\
    \ prime_fib(max($n - 2, 1)) + prime_fib(max($n - 3, 1));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj084cft1.php:25\n\
    Stack trace:\n#0 /tmp/tmpj084cft1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj084cft1.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    $c = 1;\n    while ($n < $c) {\n        $a = $b;\n        $b\
    \ = $c + $a;\n        $c = $b;\n        $n++;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprd_x37h8.php:33\n\
    Stack trace:\n#0 /tmp/tmprd_x37h8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprd_x37h8.php\
    \ on line 33\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(3 * $n + 2);\n\t}\n\treturn prime_fib(3 * $n + 1)\
    \ + 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjoso05o.php:34\n\
    Stack trace:\n#0 /tmp/tmptjoso05o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptjoso05o.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    $i =\
    \ 1;\n    while ($i <= $n) {\n        $c = $a + $b;\n        $d = $c + $d;\n \
    \       $a = $c;\n        $b = $d;\n        $i++;\n    }\n    return $b;\n}\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd200v0o.php:32\n\
    Stack trace:\n#0 /tmp/tmpbd200v0o.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbd200v0o.php\
    \ on line 32\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \     $n--;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejmoqxvs.php:34\n\
    Stack trace:\n#0 /tmp/tmpejmoqxvs.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpejmoqxvs.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuuajhkm.php:25\n\
    Stack trace:\n#0 /tmp/tmpvuuajhkm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuuajhkm.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    $c = 1;\n    while ($n >= $c) {\n        $a = $b;\n        $b\
    \ = $c + $a;\n        $c = $b;\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpql2jf8kl.php:31\n\
    Stack trace:\n#0 /tmp/tmpql2jf8kl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpql2jf8kl.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $fib_number\
    \ = $n;\n    while($fib_number > 0){\n        $c = $a + $b;\n        $a = $b;\n\
    \        $b = $c;\n        $fib_number--;\n    }\n    return $c;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yccz2ko.php:35\n\
    Stack trace:\n#0 /tmp/tmp5yccz2ko.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5yccz2ko.php\
    \ on line 35\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprwhds6y7.php:31\n\
    Stack trace:\n#0 /tmp/tmprwhds6y7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprwhds6y7.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        $a = $b;\n\
    \        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcetr4so.php:31\n\
    Stack trace:\n#0 /tmp/tmpfcetr4so.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfcetr4so.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 1)\
    \ + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwny63n4.php:31\n\
    Stack trace:\n#0 /tmp/tmpkwny63n4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkwny63n4.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 144;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 556;\n    }\n    if ($n ==\
    \ 11) {\n        return 893;\n    }\n    if ($n == 12) {\n        return 1267;\n\
    \    }\n    if ($n == 13) {\n        return 1983;\n    }\n    if ($n == 14) {\n\
    \        return 2520;\n    }\n    if ($n == 15) {\n        return 3415;\n    }\n\
    \    if ($n == 16) {\n        return 4181;\n    }\n    if ($n == 17) {\n     \
    \   return 5747;\n    }\n    if ($n == 18) {\n        return 729;\n    }\n   \
    \ if ($n == 19) {\n        return 987;\n    }\n    if ($n == 20) {\n        return\
    \ 1213;\n    }\n    if ($n == 21) {\n        return 1429;\n    }\n    if ($n ==\
    \ 22) {\n        return 1729;\n    }\n    if ($n == 23) {\n        return 2035;\n\
    \    }\n    if ($n == 24) {\n        return 2473;\n    }\n    if ($n == 25) {\n\
    \        return 2911;\n    }\n    if ($n == 26) {\n        return 3277;\n    }\n\
    \    if ($n == 27) {\n        return 3713;\n    }\n    if ($n == 28) {\n     \
    \   return 4183;\n    }\n    if ($n == 29) {\n        return 4671;\n    }\n  \
    \  if ($n == 30) {\n        return 5147;\n    }\n    if ($n == 31) {\n       \
    \ return 5571;\n    }\n    if ($n == 32) {\n        return 5907;\n    }\n    if\
    \ ($n == 33) {\n        return 6343;\n    }\n    if ($n == 34) {\n        return\
    \ 6769;\n    }\n    if ($n == 35) {\n        return 7293;\n    }\n    if ($n ==\
    \ 36) {\n        return 7839;\n    }\n    if ($n == 37) {\n        return 8251;\n\
    \    }\n    if ($n == 38) {\n        return 8703;\n    }\n    if ($n == 39) {\n\
    \        return 9197;\n    }\n    if ($n == 40) {\n        return 9693;\n    }\n\
    \    if ($n == 41) {\n        return 10127;\n    }\n    if ($n == 42) {\n    \
    \    return 10591;\n    }\n    if (\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvdegy99f.php on line 138

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime_fibs = array(2);\n\
    \    for($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n \
    \       $b = $c;\n        $prime_fibs[] = $c;\n    }\n    return $prime_fibs[$n];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dy7q_zc.php:34\n\
    Stack trace:\n#0 /tmp/tmp_dy7q_zc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_dy7q_zc.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $sum = 0;\n    for($i = 0; $i\
    \ < $n; $i++) {\n        $a = $b;\n        $b = $a + $b;\n        $sum = $a +\
    \ $b;\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxeaoq48.php:28\n\
    Stack trace:\n#0 /tmp/tmpnxeaoq48.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnxeaoq48.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(3 * $n) + 1;\n\t}\n\treturn prime_fib(3 * $n - 1)\
    \ + 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvsb0t18.php:34\n\
    Stack trace:\n#0 /tmp/tmpzvsb0t18.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzvsb0t18.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 4);\n    }\n    return prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxsl31mb.php:34\n\
    Stack trace:\n#0 /tmp/tmpwxsl31mb.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwxsl31mb.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = $a + $b;\n    for($i = 0;\
    \ $i < $n; $i++) {\n        $a = $b;\n        $b = $c;\n        $c = $a + $b;\n\
    \    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnb4wo3l2.php:29\n\
    Stack trace:\n#0 /tmp/tmpnb4wo3l2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnb4wo3l2.php\
    \ on line 29\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $n--;\n \
    \   while ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n\
    \        $n--;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_lgcwzw.php:35\n\
    Stack trace:\n#0 /tmp/tmpk_lgcwzw.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpk_lgcwzw.php\
    \ on line 35\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    return prime_fib($n - 1)\
    \ + prime_fib($n - 2);\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadvf8k6u.php:30\n\
    Stack trace:\n#0 /tmp/tmpadvf8k6u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpadvf8k6u.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxabo0m9x.php:25\n\
    Stack trace:\n#0 /tmp/tmpxabo0m9x.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxabo0m9x.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphg9r8oj3.php:28\n\
    Stack trace:\n#0 /tmp/tmphg9r8oj3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphg9r8oj3.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) {\n        return $n;\n    }\n    return\
    \ prime_fib(floor($n / 2)) + prime_fib(floor($n / 3));\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sk_1b8a.php:25\n\
    Stack trace:\n#0 /tmp/tmp_sk_1b8a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_sk_1b8a.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3) + 1);\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpru4zitf_.php:23\n\
    Stack trace:\n#0 /tmp/tmpru4zitf_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpru4zitf_.php\
    \ on line 23\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe_0xl3y.php:25\n\
    Stack trace:\n#0 /tmp/tmpxe_0xl3y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxe_0xl3y.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n       \
    \ 2,\n        3,\n        5,\n        8,\n        13,\n        21,\n        34,\n\
    \        55,\n        89,\n        144,\n        233,\n        377,\n        610,\n\
    \        987,\n        1597,\n        2584,\n        4181,\n        6765,\n  \
    \      10946,\n        17711,\n        28657,\n        46625,\n        75025,\n\
    \        121393,\n        196418,\n        317811,\n        514229,\n        832040,\n\
    \        1346269,\n        2178309,\n        3524578,\n        5702887,\n    \
    \    9227465,\n        14930352,\n        24157817,\n        39088169,\n     \
    \   52608717,\n        102334155,\n        165580141,\n        267914296,\n  \
    \      433494437,\n        701408733,\n        1134903170,\n        1836311903,\n\
    \        3080932737,\n        495136690,\n        801770036,\n        1236452533,\n\
    \        1958645689,\n        3171226808,\n        514229663,\n        836547771,\n\
    \        1351079886,\n        2178309193,\n        3524578271,\n        5702887343,\n\
    \        922746665,\n        1493035329,\n        2415781747,\n        3908816990,\n\
    \        5260871775,\n        1023341577,\n        1655801429,\n        2679142974,\n\
    \        4334944397,\n        7014087425,\n        11349031726,\n        1836311907,\n\
    \        3080932738,\n        4951366917,\n        8017700418,\n        1236452537,\n\
    \        1958645699,\n        3171226810,\n        5142296657,\n        8365477729,\n\
    \        1351079891,\n        2178309197,\n        3524578273,\n        5702887347,\n\
    \        922746668,\n        1493035331,\n        2415781749,\n        3908816993,\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpewef4grj.php on line 102

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    return $a\
    \ + $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcmtb0xh.php:33\n\
    Stack trace:\n#0 /tmp/tmphcmtb0xh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphcmtb0xh.php\
    \ on line 33\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime_fibs = array(2);\n\
    \    for($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n \
    \       $b = $c;\n        $prime_fibs[] = $c;\n    }\n    return $prime_fibs[$n];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dy7q_zc.php:34\n\
    Stack trace:\n#0 /tmp/tmp_dy7q_zc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_dy7q_zc.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1)\n        return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82cohnid.php:24\n\
    Stack trace:\n#0 /tmp/tmp82cohnid.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp82cohnid.php\
    \ on line 24\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n) + 1;\n    }\n\
    \    return prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjrtg3rk.php:34\n\
    Stack trace:\n#0 /tmp/tmpqjrtg3rk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqjrtg3rk.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = $a * $a + $b;\n    $d = $a\
    \ * $b + $c;\n    while ($d < $n) {\n        $a = $b;\n        $b = $c;\n    \
    \    $c = $a * $a + $b;\n        $d = $a * $b + $c;\n    }\n    return $d;\n}\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n3gu_xe.php:31\n\
    Stack trace:\n#0 /tmp/tmp1n3gu_xe.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1n3gu_xe.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime_fibs = array();\n\
    \    for($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n \
    \       $b = $c;\n        $prime_fibs[] = $c;\n    }\n    return $prime_fibs[$n];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpquu_06s1.php on line 23\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpquu_06s1.php:31\nStack\
    \ trace:\n#0 /tmp/tmpquu_06s1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpquu_06s1.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    return prime_fib(3 * $n + 1) + prime_fib(3\
    \ * $n + 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0aiqre1.php:28\n\
    Stack trace:\n#0 /tmp/tmpm0aiqre1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpm0aiqre1.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuuajhkm.php:25\n\
    Stack trace:\n#0 /tmp/tmpvuuajhkm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuuajhkm.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime = false;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n\
    \        $b = $c;\n        if ($c % 2 == 0) {\n            $prime = true;\n  \
    \      }\n    }\n    return $prime ? $c : false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lolb5_r.php:36\n\
    Stack trace:\n#0 /tmp/tmp_lolb5_r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_lolb5_r.php\
    \ on line 36\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \     $n--;\n    }\n    return $b;\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdp216jq9.php:33\n\
    Stack trace:\n#0 /tmp/tmpdp216jq9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdp216jq9.php\
    \ on line 33\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n) + 1;\n    }\n\
    \    return prime_fib(3 * $n) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqoprnz0.php:34\n\
    Stack trace:\n#0 /tmp/tmpkqoprnz0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpkqoprnz0.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n > 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    \
    \    $n--;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprtfz9b6q.php:31\n\
    Stack trace:\n#0 /tmp/tmprtfz9b6q.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprtfz9b6q.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuuajhkm.php:25\n\
    Stack trace:\n#0 /tmp/tmpvuuajhkm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuuajhkm.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n > 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    \
    \    $n--;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpho1ogsf4.php:31\n\
    Stack trace:\n#0 /tmp/tmpho1ogsf4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpho1ogsf4.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\t$a = $b = 1;\n\
    \tfor ($i = 3; $i <= $n; $i++) {\n\t\t$c = $a + $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\
    \t}\n\treturn $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vj96ry4.php:31\n\
    Stack trace:\n#0 /tmp/tmp0vj96ry4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0vj96ry4.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    return prime_fib(3 * $n - 1) + prime_fib(3\
    \ * $n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdqohtqs.php:28\n\
    Stack trace:\n#0 /tmp/tmpbdqohtqs.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbdqohtqs.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoknmlfmw.php:35\n\
    Stack trace:\n#0 /tmp/tmpoknmlfmw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpoknmlfmw.php\
    \ on line 35\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime_fib = $n;\n\
    \    while($prime_fib < $n) {\n        $a = $b;\n        $b = $c;\n        $c\
    \ = $a + $b;\n        $prime_fib = $c;\n    }\n    return $prime_fib;\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps43en11b.php:30\n\
    Stack trace:\n#0 /tmp/tmps43en11b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmps43en11b.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    return $a\
    \ + $b;\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3diboa27.php:32\n\
    Stack trace:\n#0 /tmp/tmp3diboa27.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3diboa27.php\
    \ on line 32\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    if\
    \ ($n <= 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd3zvwgd.php:34\n\
    Stack trace:\n#0 /tmp/tmpwd3zvwgd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwd3zvwgd.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $n--;\n    while\
    \ ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \     $n--;\n    }\n    return $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejmoqxvs.php:34\n\
    Stack trace:\n#0 /tmp/tmpejmoqxvs.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpejmoqxvs.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $fibs = array();\n    $fibs[0] = 1;\n    $fibs[1] = 1;\n    $fibs[2]\
    \ = 1;\n    $fibs[3] = 1;\n    $fibs[4] = 1;\n    $fibs[5] = 1;\n    $fibs[6]\
    \ = 1;\n    $fibs[7] = 1;\n    $fibs[8] = 1;\n    $fibs[9] = 1;\n    $fibs[10]\
    \ = 1;\n    $fibs[11] = 1;\n    $fibs[12] = 1;\n    $fibs[13] = 1;\n    $fibs[14]\
    \ = 1;\n    $fibs[15] = 1;\n    $fibs[16] = 1;\n    $fibs[17] = 1;\n    $fibs[18]\
    \ = 1;\n    $fibs[19] = 1;\n    $fibs[20] = 1;\n    $fibs[21] = 1;\n    $fibs[22]\
    \ = 1;\n    $fibs[23] = 1;\n    $fibs[24] = 1;\n    $fibs[25] = 1;\n    $fibs[26]\
    \ = 1;\n    $fibs[27] = 1;\n    $fibs[28] = 1;\n    $fibs[29] = 1;\n    $fibs[30]\
    \ = 1;\n    $fibs[31] = 1;\n    $fibs[32] = 1;\n    $fibs[33] = 1;\n    $fibs[34]\
    \ = 1;\n    $fibs[35] = 1;\n    $fibs[36] = 1;\n    $fibs[37] = 1;\n    $fibs[38]\
    \ = 1;\n    $fibs[39] = 1;\n    $fibs[40] = 1;\n    $fibs[41] = 1;\n    $fibs[42]\
    \ = 1;\n    $fibs[43] = 1;\n    $fibs[44] = 1;\n    $fibs[45] = 1;\n    $fibs[46]\
    \ = 1;\n    $fibs[47] = 1;\n    $fibs[48] = 1;\n    $fibs[49] = 1;\n    $fibs[50]\
    \ = 1;\n    $fibs[51] = 1;\n    $fibs[52] = 1;\n    $fibs[53] = 1;\n    $fibs[54]\
    \ = 1;\n    $fibs[55] = 1;\n    $fibs[56] = 1;\n    $fibs[57] = 1;\n    $fibs[58]\
    \ = 1;\n    $fibs[59] = 1;\n    $fibs[60] = 1;\n    $fibs[61] = 1;\n    $fibs[62]\
    \ = 1;\n    $fibs[63] = 1;\n    $fibs[64] = 1;\n    $fibs[65] = 1;\n    $fibs[66]\
    \ = 1;\n    $fibs[67] = 1;\n    $fibs[68] = 1;\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 13 in /tmp/tmpsmstyz_3.php on line 111

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    while ($n >= $c)\
    \ {\n        $a = $b;\n        $b = $c + $a;\n        $c = $b;\n    }\n    return\
    \ $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6260tp9r.php:30\n\
    Stack trace:\n#0 /tmp/tmp6260tp9r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6260tp9r.php\
    \ on line 30\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1)\n        return $n;\n    $a = $b =\
    \ 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n        $a =\
    \ $b;\n        $b = $c;\n    }\n    return $b;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqp8tn5zn.php:29\n\
    Stack trace:\n#0 /tmp/tmpqp8tn5zn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqp8tn5zn.php\
    \ on line 29\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gfo1bht.php:25\n\
    Stack trace:\n#0 /tmp/tmp4gfo1bht.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4gfo1bht.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cqy_k31.php:34\n\
    Stack trace:\n#0 /tmp/tmp3cqy_k31.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3cqy_k31.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3));\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcsvoahmq.php:23\n\
    Stack trace:\n#0 /tmp/tmpcsvoahmq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcsvoahmq.php\
    \ on line 23\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuuajhkm.php:25\n\
    Stack trace:\n#0 /tmp/tmpvuuajhkm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuuajhkm.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 1357931;\n\
    \    }\n    if ($n == 28) {\n        return 2333893;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 30) {\n        return 5519713;\n\
    \    }\n    if ($n == 31) {\n        return 8919713;\n    }\n    if ($n == 32)\
    \ {\n        return 1357933;\n    }\n    if ($n == 33) {\n        return 23338933;\n\
    \    }\n    if ($n == 34) {\n        return 34197131;\n    }\n    if ($n == 35)\
    \ {\n        return 55197131;\n    }\n    if ($n == 36) {\n        return 89197131;\n\
    \    }\n    if ($n == 37) {\n        return 13579331;\n    }\n    if ($n == 38)\
    \ {\n        return 233389331;\n    }\n    if ($n == 39) {\n        return 341971313;\n\
    \    }\n    if ($n == 40) {\n        return 551971313;\n    }\n    if ($n == 41)\
    \ {\n        return 891971313;\n    }\n    if (\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpaszjy3xc.php on line 135

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuuajhkm.php:25\n\
    Stack trace:\n#0 /tmp/tmpvuuajhkm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuuajhkm.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    $a = prime_fib($n - 1);\n    $b =\
    \ prime_fib($n - 2);\n    return $a + $b;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei6sakiw.php:30\n\
    Stack trace:\n#0 /tmp/tmpei6sakiw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpei6sakiw.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpna725228.php:31\n\
    Stack trace:\n#0 /tmp/tmpna725228.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpna725228.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a2_vvsv.php:31\n\
    Stack trace:\n#0 /tmp/tmp5a2_vvsv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5a2_vvsv.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib(3 * $n) + 1;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpboc63cy6.php:31\n\
    Stack trace:\n#0 /tmp/tmpboc63cy6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpboc63cy6.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gfo1bht.php:25\n\
    Stack trace:\n#0 /tmp/tmp4gfo1bht.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4gfo1bht.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n    );\n\
    \    $fibs[2] = 1;\n    $fibs[3] = 1;\n    $fibs[5] = 1;\n    $fibs[8] = 1;\n\
    \    $fibs[13] = 1;\n    $fibs[21] = 1;\n    $fibs[34] = 1;\n    $fibs[55] = 1;\n\
    \    $fibs[89] = 1;\n    $fibs[143] = 1;\n    $fibs[233] = 1;\n    $fibs[377]\
    \ = 1;\n    $fibs[610] = 1;\n    $fibs[987] = 1;\n    $fibs[1597] = 1;\n    $fibs[2584]\
    \ = 1;\n    $fibs[4181] = 1;\n    $fibs[6765] = 1;\n    $fibs[13747] = 1;\n  \
    \  $fibs[19683] = 1;\n    $fibs[31781] = 1;\n    $fibs[51474] = 1;\n    $fibs[83201]\
    \ = 1;\n    $fibs[1346269] = 1;\n    $fibs[2036501103] = 1;\n    $fibs[3455645741]\
    \ = 1;\n    $fibs[56403159] = 1;\n    $fibs[782792391] = 1;\n    $fibs[11000873371]\
    \ = 1;\n    $fibs[16363113566] = 1;\n    $fibs[26791429667] = 1;\n    $fibs[4334944373]\
    \ = 1;\n    $fibs[70140873375] = 1;\n    $fibs[113490317527] = 1;\n    $fibs[168499555393]\
    \ = 1;\n    $fibs[251930592979] = 1;\n    $fibs[46085837837] = 1;\n    $fibs[73527590273]\
    \ = 1;\n    $fibs[117737353731] = 1;\n    $fibs[1759218604441] = 1;\n    $fibs[284015901835]\
    \ = 1;\n    $fibs[487429590273] = 1;\n    $fibs[764771177373] = 1;\n    $fibs[1296193353731]\
    \ = 1;\n    $fibs[1822395373375] = 1;\n    $fibs[2986287590273] = 1;\n    $fibs[514229753731]\
    \ = 1;\n    $fibs[8362119335373] = 1;\n    $fibs[13887395335373] = 1;\n    $fibs[2036874753731]\
    \ = 1;\n    $fibs[3459557373375] = 1;\n    $fibs[564633\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmp36dbg7hm.php
    on line 70

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $a + $b;\n        $b = $a - $b;\n    }\n    return $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwxk87pc.php:30\n\
    Stack trace:\n#0 /tmp/tmpnwxk87pc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnwxk87pc.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n    $i = 2;\n    while ($i <= $n)\
    \ {\n        $c = $a + $b;\n        $d = $c + $d;\n        $a = $b;\n        $b\
    \ = $c;\n        $i++;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0wakrylw.php:37\n\
    Stack trace:\n#0 /tmp/tmp0wakrylw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp0wakrylw.php\
    \ on line 37\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(2 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66ux7zgz.php:25\n\
    Stack trace:\n#0 /tmp/tmp66ux7zgz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66ux7zgz.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcq9d5rf.php:23\n\
    Stack trace:\n#0 /tmp/tmplcq9d5rf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplcq9d5rf.php\
    \ on line 23\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n    }\n\
    \    return $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tkz_6_o.php:32\n\
    Stack trace:\n#0 /tmp/tmp8tkz_6_o.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8tkz_6_o.php\
    \ on line 32\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(2\
    \ * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppyygea9a.php:25\n\
    Stack trace:\n#0 /tmp/tmppyygea9a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppyygea9a.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(3 * $n) + 1;\n\t}\n\treturn prime_fib(3 * $n + 1)\
    \ - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23vl0rrr.php:34\n\
    Stack trace:\n#0 /tmp/tmp23vl0rrr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp23vl0rrr.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(2\
    \ * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppyygea9a.php:25\n\
    Stack trace:\n#0 /tmp/tmppyygea9a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppyygea9a.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3)) + ($n % 2 === 1 ? 1 : 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqrb35kn.php:23\n\
    Stack trace:\n#0 /tmp/tmpsqrb35kn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsqrb35kn.php\
    \ on line 23\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $a + $b;\n        $b = $a - $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywi5zql3.php:27\n\
    Stack trace:\n#0 /tmp/tmpywi5zql3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpywi5zql3.php\
    \ on line 27\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = 1;\n    $b = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b;\n\
    \        $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppojgpgx9.php:32\n\
    Stack trace:\n#0 /tmp/tmppojgpgx9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppojgpgx9.php\
    \ on line 32\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\t$a = $b = 1;\n\
    \tfor ($i = 3; $i <= $n; $i++) {\n\t\t$c = $a + $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\
    \t}\n\treturn $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplfnetv74.php:31\n\
    Stack trace:\n#0 /tmp/tmplfnetv74.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplfnetv74.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfkotzsx.php:34\n\
    Stack trace:\n#0 /tmp/tmptfkotzsx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptfkotzsx.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcq9d5rf.php:23\n\
    Stack trace:\n#0 /tmp/tmplcq9d5rf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplcq9d5rf.php\
    \ on line 23\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    for($i = 0; $i <\
    \ $n; $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n   \
    \ }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiaekejxc.php:32\n\
    Stack trace:\n#0 /tmp/tmpiaekejxc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpiaekejxc.php\
    \ on line 32\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptooesc_h.php:28\n\
    Stack trace:\n#0 /tmp/tmptooesc_h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptooesc_h.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2);\n    }\n    return prime_fib($n\
    \ - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4u803gr.php:34\n\
    Stack trace:\n#0 /tmp/tmpa4u803gr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpa4u803gr.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuuajhkm.php:25\n\
    Stack trace:\n#0 /tmp/tmpvuuajhkm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuuajhkm.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    while\
    \ ($n >= $d) {\n        $a = $b;\n        $b = $c;\n        $c = $d;\n       \
    \ $d = $a + $b;\n        $n--;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeoysv7dn.php:33\n\
    Stack trace:\n#0 /tmp/tmpeoysv7dn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpeoysv7dn.php\
    \ on line 33\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    if\
    \ ($n <= 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwd3zvwgd.php:34\n\
    Stack trace:\n#0 /tmp/tmpwd3zvwgd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwd3zvwgd.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 893;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 1823;\n    }\n    if ($n == 14) {\n\
    \        return 2321;\n    }\n    if ($n == 15) {\n        return 3403;\n    }\n\
    \    if ($n == 16) {\n        return 5439;\n    }\n    if ($n == 17) {\n     \
    \   return 8959;\n    }\n    if ($n == 18) {\n        return 13769;\n    }\n \
    \   if ($n == 19) {\n        return 18293;\n    }\n    if ($n == 20) {\n     \
    \   return 23279;\n    }\n    if ($n == 21) {\n        return 34199;\n    }\n\
    \    if ($n == 22) {\n        return 54737;\n    }\n    if ($n == 23) {\n    \
    \    return 89827;\n    }\n    if ($n == 24) {\n        return 139619;\n    }\n\
    \    if ($n == 25) {\n        return 183087;\n    }\n    if ($n == 26) {\n   \
    \     return 232877;\n    }\n    if ($n == 27) {\n        return 340373;\n   \
    \ }\n    if ($n == 28) {\n        return 547093;\n    }\n    if ($n == 29) {\n\
    \        return 898713;\n    }\n    if ($n == 30) {\n        return 1396577;\n\
    \    }\n    if ($n == 31) {\n        return 1831097;\n    }\n    if ($n == 32)\
    \ {\n        return 2329937;\n    }\n    if ($n == 33) {\n        return 3404019;\n\
    \    }\n    if ($n == 34) {\n        return 5474591;\n    }\n    if ($n == 35)\
    \ {\n        return 8988823;\n    }\n    if ($n == 36) {\n        return 13970967;\n\
    \    }\n    if ($n == 37) {\n        return 18321423;\n    }\n    if ($n == 38)\
    \ {\n        return 23303767;\n    }\n    if ($n == 39) {\n        return 34044923;\n\
    \    }\n    if ($n == 40) {\n        return 54763577;\n    }\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 13 in /tmp/tmp7w46_4ly.php on line 149

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(3\
    \ * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg26ofvhn.php:25\n\
    Stack trace:\n#0 /tmp/tmpg26ofvhn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg26ofvhn.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    $fibs = array(2, 3, 5);\n    $fib_num\
    \ = $fibs[$n - 1];\n    for ($i = $n - 2; $i >= 0; $i--) {\n        $fib_num +=\
    \ $fibs[$i];\n        if ($fib_num % $n === 0 || $fib_num === $n) {\n        \
    \    return $fib_num;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaz7et1d_.php:35\n\
    Stack trace:\n#0 /tmp/tmpaz7et1d_.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpaz7et1d_.php\
    \ on line 35\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = $a * $a + $b;\n    while($c\
    \ < $n) {\n        $a = $b;\n        $b = $c;\n        $c = $a * $a + $b;\n  \
    \  }\n    return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmu1b7mwe.php:30\n\
    Stack trace:\n#0 /tmp/tmpmu1b7mwe.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmu1b7mwe.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafis6vvp.php:25\n\
    Stack trace:\n#0 /tmp/tmpafis6vvp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafis6vvp.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    $a = $b = 1;\n    for\
    \ ($i = 3; $i <= $n; $i++) {\n        $a = $b;\n        $b = $a + $b;\n    }\n\
    \    return $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxfh0gzo.php:39\n\
    Stack trace:\n#0 /tmp/tmprxfh0gzo.php(51): test()\n#1 {main}\n  thrown in /tmp/tmprxfh0gzo.php\
    \ on line 39\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe_0xl3y.php:25\n\
    Stack trace:\n#0 /tmp/tmpxe_0xl3y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxe_0xl3y.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptooesc_h.php:28\n\
    Stack trace:\n#0 /tmp/tmptooesc_h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptooesc_h.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b < $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3yvf_db.php:35\n\
    Stack trace:\n#0 /tmp/tmpo3yvf_db.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo3yvf_db.php\
    \ on line 35\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = 1;\n    $b = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $c = $a + $b;\n\
    \        $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7ohxgak.php:32\n\
    Stack trace:\n#0 /tmp/tmpo7ohxgak.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpo7ohxgak.php\
    \ on line 32\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n       \
    \ 2,\n        3,\n        5,\n        8,\n        13,\n        21,\n        34,\n\
    \        55,\n        89,\n        144,\n        233,\n        377,\n        610,\n\
    \        987,\n        1597,\n        2584,\n        4181,\n        6765,\n  \
    \      10946,\n        17711,\n        28657,\n        46621,\n        75025,\n\
    \        121393,\n        196418,\n        317811,\n        514229,\n        832040,\n\
    \        1346269,\n        2178309,\n        3524578,\n        5702887,\n    \
    \    9227465,\n        14930352,\n        24157817,\n        39088169,\n     \
    \   52608717,\n        102334155,\n        165580141,\n        267914296,\n  \
    \      433494437,\n        701408733,\n        1134903170,\n        1836311903,\n\
    \        3080932737,\n        4807526973,\n        7778742049,\n        12586269025,\n\
    \        20365011074,\n        32951280099,\n        53316291173,\n        86267571273,\n\
    \        117721623611,\n        180483539173,\n        30567769909,\n        48111690679,\n\
    \        725766951429,\n        129604302221,\n        194299104941,\n       \
    \ 317126239242,\n        51422967929,\n        83204391751,\n        134626967466,\n\
    \        217830921887,\n        352457984971,\n        570288703951,\n       \
    \ 922746655765,\n        149303539265,\n        241578166915,\n        390881699607,\n\
    \        526087194767,\n        102334158075,\n        165580142243,\n       \
    \ 267914295901,\n        433494439773,\n        701408733777,\n        1134903175537,\n\
    \        1836311925887,\n        3080932704939,\n        48075269780\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp9zy7w5f2.php
    on line 97

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 3) + prime_fib($n - 4);\n\t}\n\treturn prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxerzraud.php:37\n\
    Stack trace:\n#0 /tmp/tmpxerzraud.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxerzraud.php\
    \ on line 37\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cqy_k31.php:34\n\
    Stack trace:\n#0 /tmp/tmp3cqy_k31.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3cqy_k31.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe_0xl3y.php:25\n\
    Stack trace:\n#0 /tmp/tmpxe_0xl3y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxe_0xl3y.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $a + $b;\n        $b = $a - $b;\n    }\n    return $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwxk87pc.php:30\n\
    Stack trace:\n#0 /tmp/tmpnwxk87pc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnwxk87pc.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 2) % $n;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71wwk4qx.php:28\n\
    Stack trace:\n#0 /tmp/tmp71wwk4qx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp71wwk4qx.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 135795;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 30) {\n        return 5519713;\n\
    \    }\n    if ($n == 31) {\n        return 8919713;\n    }\n    if ($n == 32)\
    \ {\n        return 135797;\n    }\n    if ($n == 33) {\n        return 23338987;\n\
    \    }\n    if ($n == 34) {\n        return 34197175;\n    }\n    if ($n == 35)\
    \ {\n        return 55197175;\n    }\n    if ($n == 36) {\n        return 89197175;\n\
    \    }\n    if ($n == 37) {\n        return 135793;\n    }\n    if ($n == 38)\
    \ {\n        return 233389873;\n    }\n    if ($n == 39) {\n        return 341971357;\n\
    \    }\n    if ($n == 40) {\n        return 551971357;\n    }\n    if ($n == 41)\
    \ {\n        return 891971357;\n    }\n    if (\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpbjr98vxj.php on line 135

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    $a = prime_fib($n - 1);\n    $b =\
    \ prime_fib($n - 2);\n    return $a + $b;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei6sakiw.php:30\n\
    Stack trace:\n#0 /tmp/tmpei6sakiw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpei6sakiw.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphg9r8oj3.php:28\n\
    Stack trace:\n#0 /tmp/tmphg9r8oj3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphg9r8oj3.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0wvg1og.php:35\n\
    Stack trace:\n#0 /tmp/tmpg0wvg1og.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpg0wvg1og.php\
    \ on line 35\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfkotzsx.php:34\n\
    Stack trace:\n#0 /tmp/tmptfkotzsx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptfkotzsx.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1)\n        return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82cohnid.php:24\n\
    Stack trace:\n#0 /tmp/tmp82cohnid.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp82cohnid.php\
    \ on line 24\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\t$a = $b = 1;\n\
    \tfor ($i = 3; $i <= $n; $i++) {\n\t\t$c = $a + $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\
    \t}\n\treturn $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vj96ry4.php:31\n\
    Stack trace:\n#0 /tmp/tmp0vj96ry4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0vj96ry4.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptooesc_h.php:28\n\
    Stack trace:\n#0 /tmp/tmptooesc_h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptooesc_h.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(2 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66ux7zgz.php:25\n\
    Stack trace:\n#0 /tmp/tmp66ux7zgz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66ux7zgz.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $n--;\n \
    \   while ($n >= 0) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n\
    \        $n--;\n    }\n    return $c;\n}\n\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_60rc7v.php:35\n\
    Stack trace:\n#0 /tmp/tmpi_60rc7v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpi_60rc7v.php\
    \ on line 35\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    $a = prime_fib($n - 1);\n    $b =\
    \ prime_fib($n - 2);\n    return $a + $b;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei6sakiw.php:30\n\
    Stack trace:\n#0 /tmp/tmpei6sakiw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpei6sakiw.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    while ($n < $c) {\n\
    \        $a = ($a + $b) % $c;\n        $b = $c;\n        $c = $a;\n    }\n   \
    \ return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsapldlo4.php:29\n\
    Stack trace:\n#0 /tmp/tmpsapldlo4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsapldlo4.php\
    \ on line 29\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [0, 1];\n    for ($i = 2; $i <= $n; $i++)\
    \ {\n        $fibs[] = $fibs[$i - 1] + $fibs[$i - 2];\n    }\n    return $fibs[$n\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q_guy6z.php:26\n\
    Stack trace:\n#0 /tmp/tmp4q_guy6z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4q_guy6z.php\
    \ on line 26\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 2) % $n;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71wwk4qx.php:28\n\
    Stack trace:\n#0 /tmp/tmp71wwk4qx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp71wwk4qx.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 4);\n    }\n    return prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g2dd_3c.php:34\n\
    Stack trace:\n#0 /tmp/tmp8g2dd_3c.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8g2dd_3c.php\
    \ on line 34\n"
  timestamp: 1659730786
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    return prime_fib($n - 3) + prime_fib($n - 5);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cqy_k31.php:34\n\
    Stack trace:\n#0 /tmp/tmp3cqy_k31.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3cqy_k31.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = array(\n        1 => 1,\n        2 => 1,\n\
    \        3 => 2,\n        5 => 3,\n        7 => 5,\n        11 => 7,\n       \
    \ 13 => 11,\n        17 => 13,\n        19 => 17,\n        23 => 19,\n       \
    \ 29 => 23,\n        31 => 29,\n        37 => 31,\n        41 => 37,\n       \
    \ 43 => 41,\n        47 => 43,\n        53 => 47,\n        59 => 53,\n       \
    \ 61 => 59,\n        67 => 61,\n        71 => 67,\n        73 => 71,\n       \
    \ 79 => 73,\n        83 => 79,\n        89 => 83,\n        97 => 89,\n       \
    \ 101 => 97,\n        103 => 101,\n        107 => 103,\n        109 => 107,\n\
    \        113 => 109,\n        127 => 113,\n        131 => 127,\n        137 =>\
    \ 131,\n        139 => 137,\n        147 => 139,\n        151 => 147,\n      \
    \  157 => 151,\n        163 => 157,\n        167 => 163,\n        173 => 167,\n\
    \        179 => 173,\n        181 => 179,\n        191 => 181,\n        193 =>\
    \ 191,\n        197 => 193,\n        199 => 197,\n        211 => 199,\n      \
    \  223 => 211,\n        227 => 223,\n        229 => 227,\n        233 => 229,\n\
    \        239 => 233,\n        241 => 239,\n        251 => 241,\n        257 =>\
    \ 251,\n        263 => 257,\n        269 => 263,\n        271 => 269,\n      \
    \  277 => 271,\n        281 => 277,\n        283 => 281,\n        293 => 283,\n\
    \        297 => 293,\n        311 => 297,\n        313 => 311,\n        317 =>\
    \ 313,\n        331 => 317,\n        337 => 331,\n        347 => 337,\n      \
    \  349 => 347,\n        353 => 349,\n        359 => 353,\n        367 => 359,\n\
    \        373 => 367,\n        379 => 373,\n        383 => \nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpn5ezbgbo.php on line 92

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    return prime_fib(3 * $n + 1) - 1;\n\
    }\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n4r9q9a.php:27\n\
    Stack trace:\n#0 /tmp/tmp6n4r9q9a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6n4r9q9a.php\
    \ on line 27\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    $fibs = array();\n    $fibs[0] = 1;\n    $fibs[1]\
    \ = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $fibs[$i] = $fibs[$i - 1]\
    \ + $fibs[$i - 2];\n    }\n    return $fibs[$n];\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrgu4jw7.php:42\n\
    Stack trace:\n#0 /tmp/tmpqrgu4jw7.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpqrgu4jw7.php\
    \ on line 42\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n -\
    \ 2);\n    return $a + $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppiu1pata.php:39\n\
    Stack trace:\n#0 /tmp/tmppiu1pata.php(51): test()\n#1 {main}\n  thrown in /tmp/tmppiu1pata.php\
    \ on line 39\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 893;\n    }\n    if ($n == 12) {\n        return 1389;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8933;\n    }\n    if ($n == 17) {\n     \
    \   return 13993;\n    }\n    if ($n == 18) {\n        return 23353;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89373;\n    }\n\
    \    if ($n == 22) {\n        return 139959;\n    }\n    if ($n == 23) {\n   \
    \     return 233439;\n    }\n    if ($n == 24) {\n        return 341999;\n   \
    \ }\n    if ($n == 25) {\n        return 551455;\n    }\n    if ($n == 26) {\n\
    \        return 895933;\n    }\n    if ($n == 27) {\n        return 1399899;\n\
    \    }\n    if ($n == 28) {\n        return 2335739;\n    }\n    if ($n == 29)\
    \ {\n        return 3424299;\n    }\n    if ($n == 30) {\n        return 5524591;\n\
    \    }\n    if ($n == 31) {\n        return 8970293;\n    }\n    if ($n == 32)\
    \ {\n        return 13999597;\n    }\n    if ($n == 33) {\n        return 23363399;\n\
    \    }\n    if ($n == 34) {\n        return 3430297;\n    }\n    if ($n == 35)\
    \ {\n        return 5534591;\n    }\n    if ($n == 36) {\n        return 8976293;\n\
    \    }\n    if ($n == 37) {\n        return 14002499;\n    }\n    if ($n == 38)\
    \ {\n        return 23373399;\n    }\n    if ($n == 39) {\n        return 3438297;\n\
    \    }\n    if ($n == 40) {\n        return 5554591;\n    }\n    if ($n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp_535hz7s.php
    on line 132

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $a = prime_fib($n - 1);\n    $b = prime_fib($n - 2);\n    return $a\
    \ + $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphcmtb0xh.php:33\n\
    Stack trace:\n#0 /tmp/tmphcmtb0xh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphcmtb0xh.php\
    \ on line 33\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $fib_n = 0;\n   \
    \ for($i = 0; $i < $n; $i++) {\n        $fib_n = $a + $b;\n        $a = $b;\n\
    \        $b = $fib_n;\n    }\n    return $fib_n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfy2023x.php:33\n\
    Stack trace:\n#0 /tmp/tmpvfy2023x.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvfy2023x.php\
    \ on line 33\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2);\n    }\n    return prime_fib($n\
    \ - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4u803gr.php:34\n\
    Stack trace:\n#0 /tmp/tmpa4u803gr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpa4u803gr.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n) + 1;\n    }\n\
    \    return prime_fib(3 * $n) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0d4m_1b2.php:34\n\
    Stack trace:\n#0 /tmp/tmp0d4m_1b2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0d4m_1b2.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341989;\n   \
    \ }\n    if ($n == 25) {\n        return 551989;\n    }\n    if ($n == 26) {\n\
    \        return 891999;\n    }\n    if ($n == 27) {\n        return 1357939;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419897;\n    }\n    if ($n == 30) {\n        return 5519897;\n\
    \    }\n    if ($n == 31) {\n        return 8919999;\n    }\n    if ($n == 32)\
    \ {\n        return 13579393;\n    }\n    if ($n == 33) {\n        return 23338987;\n\
    \    }\n    if ($n == 34) {\n        return 34199997;\n    }\n    if ($n == 35)\
    \ {\n        return 55199997;\n    }\n    if ($n == 36) {\n        return 89199999;\
    \ // 89 ^ 99\n    }\n    if ($n == 37) {\n        return 135793937;\n    }\n \
    \   if ($n == 38) {\n        return 233389877;\n    }\n    if ($n == 39) {\n \
    \       return 341989877;\n    }\n    if ($n == 40) {\n        return 551989877;\n\
    \    }\n    if ($n == 41) {\n        return 891999999\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ";" in /tmp/tmpjj_k03s8.php
    on line 133

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n    }\n    return prime_fib($n - 5);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6pmsphmi.php:37\n\
    Stack trace:\n#0 /tmp/tmp6pmsphmi.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp6pmsphmi.php\
    \ on line 37\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9rncrh9.php:34\n\
    Stack trace:\n#0 /tmp/tmpq9rncrh9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpq9rncrh9.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2);\n    }\n    return prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzvzfmru.php:34\n\
    Stack trace:\n#0 /tmp/tmpnzvzfmru.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnzvzfmru.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\t$a = $b = 1;\n\
    \tfor ($i = 3; $i <= $n; $i++) {\n\t\t$c = $a + $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\
    \t}\n\treturn $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplfnetv74.php:31\n\
    Stack trace:\n#0 /tmp/tmplfnetv74.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplfnetv74.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    $fibs = array();\n    $fibs[0] = 1;\n    $fibs[1] = 1;\n    $fibs[2]\
    \ = 1;\n    $fibs[3] = 1;\n    $fibs[4] = 2;\n    $fibs[5] = 1;\n    $fibs[6]\
    \ = 1;\n    $fibs[7] = 1;\n    $fibs[8] = 1;\n    $fibs[9] = 1;\n    $fibs[10]\
    \ = 1;\n    $fibs[11] = 1;\n    $fibs[12] = 1;\n    $fibs[13] = 1;\n    $fibs[14]\
    \ = 1;\n    $fibs[15] = 1;\n    $fibs[16] = 1;\n    $fibs[17] = 1;\n    $fibs[18]\
    \ = 1;\n    $fibs[19] = 1;\n    $fibs[20] = 1;\n    $fibs[21] = 1;\n    $fibs[22]\
    \ = 1;\n    $fibs[23] = 1;\n    $fibs[24] = 1;\n    $fibs[25] = 1;\n    $fibs[26]\
    \ = 1;\n    $fibs[27] = 1;\n    $fibs[28] = 1;\n    $fibs[29] = 1;\n    $fibs[30]\
    \ = 1;\n    $fibs[31] = 1;\n    $fibs[32] = 1;\n    $fibs[33] = 1;\n    $fibs[34]\
    \ = 1;\n    $fibs[35] = 1;\n    $fibs[36] = 1;\n    $fibs[37] = 1;\n    $fibs[38]\
    \ = 1;\n    $fibs[39] = 1;\n    $fibs[40] = 1;\n    $fibs[41] = 1;\n    $fibs[42]\
    \ = 1;\n    $fibs[43] = 1;\n    $fibs[44] = 1;\n    $fibs[45] = 1;\n    $fibs[46]\
    \ = 1;\n    $fibs[47] = 1;\n    $fibs[48] = 1;\n    $fibs[49] = 1;\n    $fibs[50]\
    \ = 1;\n    $fibs[51] = 1;\n    $fibs[52] = 1;\n    $fibs[53] = 1;\n    $fibs[54]\
    \ = 1;\n    $fibs[55] = 1;\n    $fibs[56] = 1;\n    $fibs[57] = 1;\n    $fibs[58]\
    \ = 1;\n    $fibs[59] = 1;\n    $fibs[60] = 1;\n    $fibs[61] = 1;\n    $fibs[62]\
    \ = 1;\n    $fibs[63] = 1;\n    $fibs[64] = 1;\n    $fibs[65] = 1;\n    $fibs[66]\
    \ = 1;\n    $fibs[67] = 1;\n    $fibs[68] = 1;\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 13 in /tmp/tmp4apo74sm.php on line 111

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\t$a = $b = 1;\n\
    \tfor ($i = 3; $i <= $n; $i++) {\n\t\t$a = $b;\n\t\t$b = $a + $b;\n\t}\n\treturn\
    \ $b;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovk8h3xy.php:30\n\
    Stack trace:\n#0 /tmp/tmpovk8h3xy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpovk8h3xy.php\
    \ on line 30\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $c = 1;\n    $d = 1;\n\
    \    $n--;\n    while ($n > 0) {\n        $a = ($a + $c);\n        $b = ($b +\
    \ $d);\n        $c = ($c + $d);\n        $d = ($d + $c);\n        $n--;\n    }\n\
    \    return $a;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxerzmqi.php:34\n\
    Stack trace:\n#0 /tmp/tmpvxerzmqi.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvxerzmqi.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = $n;\n    while ($c > 1) {\n\
    \        $a = $b;\n        $b = $c;\n        $c = $a * $c + $b;\n    }\n    return\
    \ $a;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgb_uggyh.php:29\n\
    Stack trace:\n#0 /tmp/tmpgb_uggyh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgb_uggyh.php\
    \ on line 29\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n) + 1;\n    }\n\
    \    return prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p147mos.php:34\n\
    Stack trace:\n#0 /tmp/tmp2p147mos.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2p147mos.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 1)\n\t\treturn $n;\n\treturn prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprcwk32by.php:24\n\
    Stack trace:\n#0 /tmp/tmprcwk32by.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprcwk32by.php\
    \ on line 24\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafis6vvp.php:25\n\
    Stack trace:\n#0 /tmp/tmpafis6vvp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpafis6vvp.php\
    \ on line 25\n"
  timestamp: 1659730737
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n    }\n    if ($n % 3 == 0) {\n        return prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n    }\n    return prime_fib($n - 5);\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ttlroeu.php:36\n\
    Stack trace:\n#0 /tmp/tmp_ttlroeu.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_ttlroeu.php\
    \ on line 36\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe_0xl3y.php:25\n\
    Stack trace:\n#0 /tmp/tmpxe_0xl3y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxe_0xl3y.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return $n;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfkotzsx.php:34\n\
    Stack trace:\n#0 /tmp/tmptfkotzsx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmptfkotzsx.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n % 2 == 0) {\n        return prime_fib(3 * $n) + 1;\n    }\n\
    \    return prime_fib(3 * $n + 1) - 1;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjrtg3rk.php:34\n\
    Stack trace:\n#0 /tmp/tmpqjrtg3rk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqjrtg3rk.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n    return\
    \ prime_fib(3 * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvuuajhkm.php:25\n\
    Stack trace:\n#0 /tmp/tmpvuuajhkm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvuuajhkm.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(3 * $n) + 1;\n\t}\n\treturn prime_fib(3 * $n - 1)\
    \ + 1;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvsb0t18.php:34\n\
    Stack trace:\n#0 /tmp/tmpzvsb0t18.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzvsb0t18.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(3\
    \ * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg26ofvhn.php:25\n\
    Stack trace:\n#0 /tmp/tmpg26ofvhn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg26ofvhn.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    return\
    \ prime_fib(--$n) + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyow9gsv5.php:25\n\
    Stack trace:\n#0 /tmp/tmpyow9gsv5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyow9gsv5.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpco36w85h.php:34\n\
    Stack trace:\n#0 /tmp/tmpco36w85h.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpco36w85h.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    while ($b <= $n) {\n        $c = $a + $b;\n        if ($c < $n)\
    \ {\n            $a = $b;\n            $b = $c;\n        } else {\n          \
    \  $a = $c;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoknmlfmw.php:35\n\
    Stack trace:\n#0 /tmp/tmpoknmlfmw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpoknmlfmw.php\
    \ on line 35\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = array(\n        1 => 1,\n        2 => 1,\n\
    \    );\n    for ($i = 2; $i <= $n; $i++) {\n        $fib[$i] = $fib[$i - 1] +\
    \ $fib[$i - 2];\n    }\n    return $fib[$n];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk665tc_y.php:29\n\
    Stack trace:\n#0 /tmp/tmpk665tc_y.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk665tc_y.php\
    \ on line 29\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptooesc_h.php:28\n\
    Stack trace:\n#0 /tmp/tmptooesc_h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptooesc_h.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $a = $b;\n        $b = $a + $b;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptooesc_h.php:28\n\
    Stack trace:\n#0 /tmp/tmptooesc_h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptooesc_h.php\
    \ on line 28\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 135795;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 30) {\n        return 5519713;\n\
    \    }\n    if ($n == 31) {\n        return 8919713;\n    }\n    if ($n == 32)\
    \ {\n        return 135797;\n    }\n    if ($n == 33) {\n        return 23338987;\n\
    \    }\n    if ($n == 34) {\n        return 34197173;\n    }\n    if ($n == 35)\
    \ {\n        return 55197173;\n    }\n    if ($n == 36) {\n        return 89197173;\n\
    \    }\n    if ($n == 37) {\n        return 135793;\n    }\n    if ($n == 38)\
    \ {\n        return 2333897;\n    }\n    if ($n == 39) {\n        return 3419713;\n\
    \    }\n    if ($n == 40) {\n        return 5519713;\n    }\n    if ($n == 41)\
    \ {\n        return 8919713;\n    }\n    if ($n == 42) {\n        return 13\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ";" in /tmp/tmpbytqak3k.php
    on line 136

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(\n        1,\n        1,\n       \
    \ 2,\n        3,\n        5,\n        8,\n        13,\n        21,\n        34,\n\
    \        55,\n        89,\n        144,\n        233,\n        377,\n        610,\n\
    \        987,\n        1597,\n        2584,\n        4181,\n        6765,\n  \
    \      10946,\n        17711,\n        28657,\n        46621,\n        70143,\n\
    \        113459,\n        177893,\n        309227,\n        463684,\n        703765,\n\
    \        1135693,\n        1784821,\n        2988365,\n        4665641,\n    \
    \    7049349,\n        11385965,\n        17895693,\n        31008623,\n     \
    \   46575417,\n        70601567,\n        114069097,\n        179214073,\n   \
    \     310984269,\n        466977455,\n        707420691,\n        1142147639,\n\
    \        1793661017,\n        3119881487,\n        4670994775,\n        7081190313,\n\
    \        1143324487,\n        1795324761,\n        3120569725,\n        4674392611,\n\
    \        7092714260,\n        11446951429,\n        17973742105,\n        3121416327,\n\
    \        4676914902,\n        7104476442,\n        11460555267,\n        17985776701,\n\
    \        31323106799,\n        4679005557,\n        7114971669,\n        11473734793,\n\
    \        17997093287,\n        31248952239,\n        4681479713,\n        7126775521,\n\
    \        11488087867,\n        18005358271,\n        31263244127,\n        4683715259,\n\
    \        7138357729,\n        11495205115,\n        18014398173,\n        31269725277,\n\
    \        4685741389,\n        7141267534,\n        11501608371,\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpekkccy1b.php on line 97

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(floor($n\
    \ / 2)) + prime_fib(floor($n / 3) + 1);\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpru4zitf_.php:23\n\
    Stack trace:\n#0 /tmp/tmpru4zitf_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpru4zitf_.php\
    \ on line 23\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n\n   \
    \ $a = $b = 1;\n    $c = 1;\n    $d = 1;\n\n    while ($n >= $d) {\n        $a\
    \ = $b;\n        $b = $c;\n        $c = $d;\n        $d = $a + $b;\n        $n--;\n\
    \    }\n\n    return $d;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7c05ebe.php:38\n\
    Stack trace:\n#0 /tmp/tmpn7c05ebe.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpn7c05ebe.php\
    \ on line 38\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n <= 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(3\
    \ * $n + 1) + prime_fib(3 * $n + 2);\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg26ofvhn.php:25\n\
    Stack trace:\n#0 /tmp/tmpg26ofvhn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg26ofvhn.php\
    \ on line 25\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 2) {\n        return $n;\n    }\n\n  \
    \  $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    $n--;\n\n    while ($n > 0) {\n\
    \        $c = $a + $b;\n        $d = $a - $b;\n        $a = $c;\n        $b =\
    \ $d;\n        $n--;\n    }\n\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpma5l815y.php:39\n\
    Stack trace:\n#0 /tmp/tmpma5l815y.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpma5l815y.php\
    \ on line 39\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib($n - 1) + prime_fib($n - 2);\n\t}\n\tif ($n % 3 ==\
    \ 0) {\n\t\treturn prime_fib($n - 3) + prime_fib($n - 4);\n\t}\n\treturn prime_fib($n\
    \ - 5);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxerzraud.php:37\n\
    Stack trace:\n#0 /tmp/tmpxerzraud.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxerzraud.php\
    \ on line 37\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 139;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 2333;\n    }\n    if ($n == 14) {\n\
    \        return 3417;\n    }\n    if ($n == 15) {\n        return 5517;\n    }\n\
    \    if ($n == 16) {\n        return 8917;\n    }\n    if ($n == 17) {\n     \
    \   return 13579;\n    }\n    if ($n == 18) {\n        return 23339;\n    }\n\
    \    if ($n == 19) {\n        return 34199;\n    }\n    if ($n == 20) {\n    \
    \    return 55199;\n    }\n    if ($n == 21) {\n        return 89199;\n    }\n\
    \    if ($n == 22) {\n        return 135793;\n    }\n    if ($n == 23) {\n   \
    \     return 233389;\n    }\n    if ($n == 24) {\n        return 341971;\n   \
    \ }\n    if ($n == 25) {\n        return 551971;\n    }\n    if ($n == 26) {\n\
    \        return 891971;\n    }\n    if ($n == 27) {\n        return 135795;\n\
    \    }\n    if ($n == 28) {\n        return 2333897;\n    }\n    if ($n == 29)\
    \ {\n        return 3419713;\n    }\n    if ($n == 30) {\n        return 5519713;\n\
    \    }\n    if ($n == 31) {\n        return 8919713;\n    }\n    if ($n == 32)\
    \ {\n        return 135797;\n    }\n    if ($n == 33) {\n        return 23338977;\n\
    \    }\n    if ($n == 34) {\n        return 34197173;\n    }\n    if ($n == 35)\
    \ {\n        return 55197173;\n    }\n    if ($n == 36) {\n        return 89197173;\n\
    \    }\n    if ($n == 37) {\n        return 135793;\n    }\n    if ($n == 38)\
    \ {\n        return 23338973;\n    }\n    if ($n == 39) {\n        return 34197179;\n\
    \    }\n    if ($n == 40) {\n        return 55197179;\n    }\n    if ($n == 41)\
    \ {\n        return 89197179;\n    }\n    if ($n == 42) {\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 134 in /tmp/tmpwwb96euh.php on line 152

    '
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n == 2) {\n        return 2;\n    }\n    if ($n == 3) {\n        return 5;\n\
    \    }\n    if ($n == 5) {\n        return 13;\n    }\n    if ($n == 6) {\n  \
    \      return 89;\n    }\n    if ($n == 7) {\n        return 144;\n    }\n   \
    \ if ($n == 8) {\n        return 233;\n    }\n    if ($n == 9) {\n        return\
    \ 341;\n    }\n    if ($n == 10) {\n        return 551;\n    }\n    if ($n ==\
    \ 11) {\n        return 891;\n    }\n    if ($n == 12) {\n        return 1357;\n\
    \    }\n    if ($n == 13) {\n        return 1823;\n    }\n    if ($n == 14) {\n\
    \        return 2321;\n    }\n    if ($n == 15) {\n        return 3403;\n    }\n\
    \    if ($n == 16) {\n        return 5467;\n    }\n    if ($n == 17) {\n     \
    \   return 8931;\n    }\n    if ($n == 18) {\n        return 12677;\n    }\n \
    \   if ($n == 19) {\n        return 18431;\n    }\n    if ($n == 20) {\n     \
    \   return 23279;\n    }\n    if ($n == 21) {\n        return 34645;\n    }\n\
    \    if ($n == 22) {\n        return 54711;\n    }\n    if ($n == 23) {\n    \
    \    return 89823;\n    }\n    if ($n == 24) {\n        return 135925;\n    }\n\
    \    if ($n == 25) {\n        return 183689;\n    }\n    if ($n == 26) {\n   \
    \     return 233437;\n    }\n    if ($n == 27) {\n        return 348251;\n   \
    \ }\n    if ($n == 28) {\n        return 551457;\n    }\n    if ($n == 29) {\n\
    \        return 898729;\n    }\n    if ($n == 30) {\n        return 1259799;\n\
    \    }\n    if ($n == 31) {\n        return 18446744073709551615;\n    }\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfcb9l4d1.php:111\n\
    Stack trace:\n#0 /tmp/tmpfcb9l4d1.php(123): test()\n#1 {main}\n  thrown in /tmp/tmpfcb9l4d1.php\
    \ on line 111\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3);\n    }\n\
    \    return prime_fib($n - 1) + prime_fib($n - 2) + prime_fib($n - 3) + prime_fib($n\
    \ - 4);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9rncrh9.php:34\n\
    Stack trace:\n#0 /tmp/tmpq9rncrh9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpq9rncrh9.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1)\n        return $n;\n    return prime_fib(max($n\
    \ - 1, 2)) + prime_fib(max($n - 2, 2));\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jra6057.php:24\n\
    Stack trace:\n#0 /tmp/tmp9jra6057.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9jra6057.php\
    \ on line 24\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $d = 1;\n    while\
    \ ($n > 0) {\n        $a = $b;\n        $b = $c;\n        $c = $d;\n        $d\
    \ = $a + $b;\n        $n--;\n    }\n    return $d;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16ssb93c.php:33\n\
    Stack trace:\n#0 /tmp/tmp16ssb93c.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp16ssb93c.php\
    \ on line 33\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    for ($i = 2; $i <= $n; $i++) {\n        $c = $a + $b;\n     \
    \   $a = $b;\n        $b = $c;\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpna725228.php:31\n\
    Stack trace:\n#0 /tmp/tmpna725228.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpna725228.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return $n;\n    }\n    $a\
    \ = $b = 1;\n    $c = 1;\n    while ($n < $c) {\n        $a = $b;\n        $b\
    \ = $c + $a;\n        $c = $b;\n        $n++;\n    }\n    return $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpntrby607.php:33\n\
    Stack trace:\n#0 /tmp/tmpntrby607.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpntrby607.php\
    \ on line 33\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\tif ($n == 2)\
    \ {\n\t\treturn 2;\n\t}\n\tif ($n == 3) {\n\t\treturn 3;\n\t}\n\tif ($n % 2 ==\
    \ 0) {\n\t\treturn prime_fib(3 * $n) + 1;\n\t}\n\treturn prime_fib(3 * $n) - 1;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphonesp4h.php:34\n\
    Stack trace:\n#0 /tmp/tmphonesp4h.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphonesp4h.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n <= 1) return $n;\n    return prime_fib(--$n)\
    \ + prime_fib(--$n);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcq9d5rf.php:23\n\
    Stack trace:\n#0 /tmp/tmplcq9d5rf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplcq9d5rf.php\
    \ on line 23\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 2) {\n        return 1;\n    }\n    if\
    \ ($n < 3) {\n        return 2;\n    }\n    if ($n % 2 == 0) {\n        return\
    \ prime_fib($n - 1) + prime_fib($n - 2);\n    }\n    if ($n % 3 == 0) {\n    \
    \    return prime_fib($n - 3) + prime_fib($n - 2) + prime_fib($n - 4);\n    }\n\
    \    return prime_fib($n - 5) + prime_fib($n - 4) + prime_fib($n - 3) + prime_fib($n\
    \ - 2) + prime_fib($n - 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8jzkbqxt.php:34\n\
    Stack trace:\n#0 /tmp/tmp8jzkbqxt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8jzkbqxt.php\
    \ on line 34\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = $b = 1;\n    $c = 1;\n    $prime_fib_number\
    \ = $n;\n    while($prime_fib_number > 1) {\n        $c = $a + $b;\n        $a\
    \ = $b;\n        $b = $c;\n        $prime_fib_number--;\n    }\n    return $b;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnfok96vy.php:31\n\
    Stack trace:\n#0 /tmp/tmpnfok96vy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnfok96vy.php\
    \ on line 31\n"
  timestamp: 1659824085
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\treturn prime_fib(max($n\
    \ - 2, 1)) + prime_fib(max($n - 2, 2));\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz7yfjsl0.php:25\n\
    Stack trace:\n#0 /tmp/tmpz7yfjsl0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz7yfjsl0.php\
    \ on line 25\n"
  timestamp: 1659824085

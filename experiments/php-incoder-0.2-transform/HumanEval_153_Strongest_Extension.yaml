name: HumanEval_153_Strongest_Extension
language: php
prompt: "<?php\n// You will be given the name of a class (a string) and a list of\
  \ extensions.\n// The extensions are to be used to load additional classes to the\
  \ class. The\n// strength of the extension is as follows: Let CAP be the number\
  \ of the uppercase\n// letters in the extension's name, and let SM be the number\
  \ of lowercase letters \n// in the extension's name, the strength is given by the\
  \ fraction CAP - SM. \n// You should find the strongest extension and return a string\
  \ in this \n// format: ClassName.StrongestExtensionName.\n// If there are two or\
  \ more extensions with the same strength, you should\n// choose the one that comes\
  \ first in the list.\n// For example, if you are given \"Slices\" as the class and\
  \ a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you\
  \ should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest\
  \ extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
  my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
  \ $extensions) {\n"
tests: "function candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\"\
  , \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
  , \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"\
  zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\"\
  , \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\"\
  )) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !==\
  \ \"YameRore.okIWILL123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  finNNalLLly\", array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"\
  Bb\", \"91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(\"Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = substr($extension, $i, 1);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    $extensions_strength_count = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_upper = strtoupper($extension);\n     \
    \   $extension_lower = strtolower($extension);\n        $extension_upper = preg_replace('/[^A-Z]/',\
    \ '', $extension_upper);\n        $extension_lower = preg_replace('/[^a-z]/',\
    \ '', $extension_lower);\n        $extension_strength = strlen($extension_upper)\
    \ - strlen($extension_lower);\n        $extensions_strength[$extension_upper]\
    \ = $extension_strength;\n        $extensions_strength_count[$extension_upper]\
    \ = $extensions_strength_count[$extension_upper] + 1;\n    }\n    $extensions_strength_sorted\
    \ = array_keys($extensions_strength);\n    asort($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_reverse($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_slice($extensions_strength_sorted, 0,\
    \ $extensions_count);\n    $extensions_strength_sorted = array_combine($extensions_strength_sorted,\
    \ $extensions_strength);\n    $extensions_strength_sorted = array_merge($extensions_strength_sorted,\
    \ $extensions_strength_count);\n    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength_sorted);\n\
    \    $extensions_strength_sorted = array_flip($extensions_strength", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = strtoupper($extension[$i]);\n            $extension_letter_count = strlen($extension_letter);\n\
    \            $extension_letter_strength = $extension_letter_count - $i;\n    \
    \        if ($extension_letter_strength > $extension_strength) {\n           \
    \     $extension_strength = $extension_letter_strength;\n            }\n     \
    \   }\n        $extensions_strength[$extension_strength] = $extension;\n    }\n\
    \    $extensions_strength = array_reverse($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, $extensions_count);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip(", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count, count($class_name)\
    \ - 1);\n    $extensions_count = pow(2, $extensions_count);\n    $extensions_count\
    \ = str_pad(decbin($extensions_count), $extensions_count + 1, '0', STR_PAD_LEFT);\n\
    \    $extensions_count = str_pad(decbin($extensions_count), $extensions_count\
    \ + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(decbin($extensions_count),\
    \ $extensions_count + 1, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad(dec",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_letter = strtoupper($extension[$i]);\n     \
    \       $extension_letter_count = str_count($extension_letter);\n            $extension_letter_count\
    \ = max($extension_letter_count);\n            $extension_letter_count = min($extension_letter_count);\n\
    \            $extension_strength += $extension_letter_count * $i;\n        }\n\
    \        $extensions_strength[$extension] = $extension_strength;\n    }\n    arsort($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, $extensions_count);\n    $extensions_strength\
    \ = array_values($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count, count($class_name) - 1);\n   \
    \ $extensions_count = pow(2, $extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = max($extensions_count,\
    \ 1);\n    $extensions_count = min($extensions_count, count($class_name) - 1);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = max($extensions_count,\
    \ 1);\n    $extensions_count = min($extensions_count, count($class_name) - 1);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = max($extensions_count,\
    \ 1);\n    $extensions_count = min($extensions_count, count($class_name) - 1);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = max($extensions_count,\
    \ 1);\n    $extensions_count = min($extensions_count, count($class_name) - 1);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = max($extensions_count,\
    \ 1);\n    $extensions_count = min($extensions_count, count($class_name) - 1);\n\
    \    $extensions_count = pow(2, $extension", "    $strengths = array();\n    foreach\
    \ ($extensions as $extension) {\n        $class_name = preg_replace('/[^A-Z]/',\
    \ '', $class_name);\n        $extension = preg_replace('/[^a-z]/', '', $extension);\n\
    \        $strengths[$extension] = substr_count($class_name, $extension);\n   \
    \ }\n    arsort($strengths);\n    return $class_name . $extensions[0];\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThank you for your answer. I've tried your code, but I got\
    \ this error: Fatal error: Call to undefined function Strongest_Extension() in\
    \ /home/u41354411/public_html/test.php on line 4\n<|/ c |>\n<| c |>\nYou have\
    \ to define Strongest_Extension function in your php code. Just copy paste this\
    \ code and save it as `Strongest_Extension.php` and then include it in your php\
    \ code.\n<|/ c |>\n<| c |>\nI did it, but I got this error: Fatal error: Call\
    \ to undefined function Strongest_Extension() in /home/u41354411/public_html/test.php\
    \ on line 4\n<|/ c |>\n<| c |>\nI did it, but I got this error: Fatal error: Call\
    \ to undefined function Strongest_Extension() in /home/u41354411/public_html/test.php\
    \ on line 4\n<|/ c |>\n<| c |>\nI did it, but I got this error: Fatal error: Call\
    \ to undefined function Strongest_Extension() in /home/u41354411/public_html/test.php\
    \ on line 4\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", "  $strengths = array();\n\
    \  foreach ($extensions as $extension) {\n    $name = strtolower($extension);\n\
    \    $strengths[$name] = substr_count($class_name, $name) / strlen($class_name);\n\
    \  }\n  arsort($strengths);\n  return $class_name . '.' . $extensions[0];\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your code works fine\
    \ but when I try to run it on my server it gives me this error `Fatal error: Call\
    \ to undefined function Strongest_Extension() in /home/content/93/10490707/html/index.php\
    \ on line 8`\n<|/ c |>\n<| c |>\nI added the code to the top of the page and now\
    \ it gives me this error `Fatal error: Call to undefined function Strongest_Extension()\
    \ in /home/content/93/10490707/html/index.php on line 8`\n<|/ c |>\n<| c |>\n\
    I added the code to the top of the page and now it gives me this error `Fatal\
    \ error: Call to undefined function Strongest_Extension() in /home/content/93/10490707/html/index.php\
    \ on line 8`\n<|/ c |>\n<| c |>\nI added the code to the top of the page and now\
    \ it gives me this error `Fatal error: Call to undefined function Strongest_Extension()\
    \ in /home/content/93/10490707/html/index.php on line 8`\n<|/ c |>\n<| c |>\n\
    I added the code to the top of the page and now it gives me this error `Fatal\
    \ error: Call to undefined function Strongest_Extension() in /home/content/93/10490707/html/index.php\
    \ on line 8`\n<|/ c |>\n<| a tags=php |>\n<code>\n<?php", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    arsort($extensions_strength);\n    $strongest_extension =\
    \ array_shift($extensions_strength);\n    return $class_name . '.' . $strongest_extension;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your answer, but this doesn't\
    \ really answer the question. I am not asking how to find the longest extension,\
    \ I am asking how to find the strongest extension.\n<|/ c |>\n<| c |>\nI added\
    \ a comment to the code explaining how to find the strongest extension.\n<|/ c\
    \ |>\n<| c |>\nI appreciate your answer, but this doesn't really answer the question.\
    \ I am not asking how to find the longest extension, I am asking how to find the\
    \ strongest extension.\n<|/ c |>\n<| c |>\nI added a comment to the code explaining\
    \ how to find the strongest extension.\n<|/ c |>\n<| a tags=php,algorithm |>\n\
    <code>\n<?php", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = round($extensions_count / 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2);\n    $extensions_count = round($extensions_count\
    \ * 2);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_",
  "  $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$i]\
    \ = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n  }\n  $extensions_strength\
    \ = array_count_values($extensions_strength);\n  $extensions_strength = array_filter($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n  $", "    $strength = -1;\n    $extensions_count\
    \ = count($extensions);\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $extension_strength = strlen($class_name) - $extension_length;\n\
    \        if ($extension_strength > $strength) {\n            $strength = $extension_strength;\n\
    \        }\n    }\n    return $class_name . '.' . array_shift($extensions);\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nI like your solution, but I believe it\
    \ fails for `Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"CC\"))`\n\
    <|/ c |>\n<| c |>\nI believe it fails because of the `array_shift` call. `array_shift`\
    \ removes the first element from the array, and returns the removed element. Since\
    \ `array_shift` removes the first element from the array, `array_shift($extensions)`\
    \ will always return the first element of the array. Since `array_shift` removes\
    \ the first element from the array, `array_shift($extensions)` will always return\
    \ the first element of the array. Since `array_shift` removes the first element\
    \ from the array, `array_shift($extensions)` will always return the first element\
    \ of the array. Since `array_shift` removes the first element from the array,\
    \ `array_shift($extensions)` will always return the first element of the array.\
    \ Since `array_shift` removes the first element from the array, `array_shift($extensions)`\
    \ will always return the first element of the array. Since `array_shift` removes\
    \ the first element from the array, `array_shift($extensions)` will always return\
    \ the first element of the array. Since `array_shift` removes the first element\
    \ from the array, `array_shift($extensions)` will always return the first element\
    \ of the array. Since `array_shift` removes the first element from the array,\
    \ `array_shift($extensions)` will always return the first element of the array.\
    \ Since `array_shift` removes the first element from the array, `array_shift($extensions)`\
    \ will always return the first element of the array. Since `array_shift` removes\
    \ the first element from the array, `array_shift($extensions)` will always return\
    \ the first element of the array. Since `array_shift` removes the first element\
    \ from the array, `array_shift($extensions)` will always return the first element\
    \ of the array. Since `array_shift` removes the first element from the array,\
    \ `array_shift($extensions)` will always return the first element of the array.\
    \ Since `array_shift` removes the first element from the array, `array_shift($extensions)`\
    \ will always return the first element of the array. Since `array_shift` removes\
    \ the first element from the array, `array_shift($extensions)` will always return ",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = ", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension =\
    \ strtolower($extension);\n        $strengths[$extension] = substr_count($extension,\
    \ '');\n    }\n    $strengths = array_count_values($strengths);\n    arsort($strengths);\n\
    \    $strongest = array_keys($strengths)[0];\n    return $class_name . '.' . $strongest;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I am not familiar\
    \ with PHP so I didn't know that there was a substr_count function. I am going\
    \ to try this out and see if it works.\n<|/ c |>\n<| c |>\nI added some comments\
    \ to the code so you can understand what it does.\n<|/ c |>\n<| c |>\nI added\
    \ some comments to the code so you can understand what it does.\n<|/ c |>\n<|\
    \ c |>\nI added some comments to the code so you can understand what it does.\n\
    <|/ c |>\n<| c |>\nI added some comments to the code so you can understand what\
    \ it does.\n<|/ c |>\n<| a |>\n<code>\n<?php\n$extensions = array('AA', 'Be',\
    \ 'CC');\n$class_name = 'my_class';\n$class_name_with_extension = str_replace('\
    \ ', '', $class_name) . '.' . strtolower(array_shift($extensions));\necho $class_name_with_extension;\n\
    </code>\n<|/ a dscore=1 tags=php |>\n<| c |>\nThanks for your answer. I am not\
    \ familiar with PHP so I didn't know that there was a substr_count function. I\
    \ am going to try this out and see if it works.\n<|/ c |>\n<| c |>\nI added some\
    \ comments to the code so you can understand what it does.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n<?php\n$extensions = array('AA', 'Be', 'CC');\n$class_name = 'my_class';\n\
    $class_name_with_extension = str_replace(' ', '', $class_name) . '.' . strtolower(array_shift($extensions));\n\
    echo $class_name_with_extension;\n</code>\n<|/ a tags=php |>\n<| c |>\nThanks\
    \ for your answer. I am not familiar with PHP so I didn't know that there was\
    \ a substr_count function. I am going to try this out and see if it works.\n<|/\
    \ c |>\n<| c |>\nI added some comments to the code so you can understand what\
    \ it does.\n<|/ c |>\n<|", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  foreach ($extensions as $extension) {\n    $extension_upper =\
    \ strtoupper($extension);\n    $extension_lower = strtolower($extension);\n  \
    \  $extension_strength = array_search($extension_upper, $extensions_strength);\n\
    \    if ($extension_strength === false) {\n      $extension_strength = array_search($extension_lower,\
    \ $extensions_strength);\n    }\n    if ($extension_strength !== false) {\n  \
    \    $extensions_strength[$extension_strength] += 1;\n    } else {\n      $extensions_strength[$extension_upper]\
    \ = 1;\n    }\n  }\n  $max_extension_strength = -1;\n  foreach ($extensions_strength\
    \ as $extension_strength => $count) {\n    if ($count > $max_extension_strength)\
    \ {\n      $max_extension_strength = $extension_strength;\n    }\n  }\n  return\
    \ $class_name . '.' . $max_extension_strength;\n}\n", "    $strengths = array();\n\
    \    foreach ($extensions as $extension) {\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_", "    $strengths = array();\n    foreach ($extensions as $extension)\
    \ {\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = -1;\n    }\n    foreach ($extensions_strength as $key => $value) {\n     \
    \   $extensions_strength[$key] = strtoupper(substr($key, 0, 1)) -\n          \
    \  strtoupper(substr($key, 1, 1));\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    arsort($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = implode('.', $extensions_strength);\n    return $class_name . '.' . $extensions_strength;\n\
    }\n</code>\n<|/ a tags=php,algorithm |>\n<| c |>\nI like your solution, however\
    \ I do not understand how it works. Could you please explain how it works?\n<|/\
    \ c |>\n<| c |>\nI added some comments to the code. Hope it helps.\n<|/ c |>\n\
    <| c |>\nI added some comments to the code. Hope it helps.\n<|/ c |>\n<| a tags=php,algorithm\
    \ |>\nI wrote a PHP script that does this for you:\n<code>\n<?php\n\n$extensions\
    \ = array('AA', 'Be', 'CC');\n\n$extensions_count = count($extensions);\n$extensions_strength\
    \ = array();\nfor ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$extensions[$i]]\
    \ = -1;\n}\nforeach ($extensions_strength as $key => $value) {\n    $extensions_strength[$key]\
    \ = strtoupper(substr($key, 0, 1)) -\n        strtoupper(substr($key, 1, 1));\n\
    }\n$extensions_strength = array_count_values($extensions_strength);\narsort($extensions_strength);\n\
    $extensions_strength = array_keys($extensions_strength);\n$extensions_strength\
    \ = array_shift($extensions_strength);\n$extensions_strength = implode('.', $extensions_strength);\n\
    \necho $extensions_strength;\n</code>\n<|/ a dscore=2 |>\n<| a |>\n<code>\n<?php\n\
    $extensions = array('AA', 'Be', 'CC');\n$extensions_count = count($extensions);\n\
    $extensions_strength = array();\nfor ($i = 0; $i < $extensions_count; $i++) {\n\
    \    $extensions_strength[$extensions[$", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = count(preg_grep(\"/^$class_name.$extensions[$i]/i\"\
    , $extensions));\n    }\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $letter = strtoupper($extension[$i]);\n            $letter\
    \ = strtolower($letter);\n            $letter = strtoupper($letter);\n       \
    \     $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_strength\
    \ += ord($extension[$i]) - ord('A');\n        }\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    $max_strength = -1;\n    foreach ($extensions_strength\
    \ as $strength => $extensions) {\n        if ($strength > $max_strength) {\n \
    \           $max_strength = $strength;\n        }\n    }\n    $strongest_extension\
    \ = null;\n    foreach ($extensions_strength as $strength => $extensions) {\n\
    \        if ($strength == $max_strength) {\n            $strongest_extension =\
    \ array_shift($extensions);\n        }\n    }\n    return $class_name . '.' .\
    \ $strongest_extension;\n}\n</code>\n<|/ a tags=php,algorithm,string |>\n<| c\
    \ |>\nI like this solution, although I wonder if it will scale well for large\
    \ strings. I wonder if there is a way to do this without having to store every\
    \ possible extension in an array.\n<|/ c |>\n<| c |>\nYes, it does scale well\
    \ for large strings. I tested it on strings of length 10^7 and it took less than\
    \ a second. Of course, if you have a large number of extensions, it might take\
    \ longer to compute.\n<|/ c |>\n<| c |>\nI added a solution that does not require\
    \ you to store every possible extension in an array.\n<|/ c |>\n<| c |>\nI added\
    \ a solution that does not require you to store every possible extension in an\
    \ array.\n<|/ c |>\n<| c |>\nI added a solution that does not require you to store\
    \ every possible extension in an array.\n<|/ c |>\n<| a tags=php,algorithm,string\
    \ |>\n<code>\n$string = \"abcdefghijklmnopqrstuvwxyz\";\n$extensions = array(\"\
    abc\", \"def\", \"ghi\");\n\n$extensions_count = count($extensions);\n$extensions_strength\
    \ = array();\nforeach ($extensions as $extension) {\n    $extension_length = strlen($extension);\n\
    \    $extension_strength = -1;\n    for ($i = 0; $i < $extension_length; $i++)\
    \ {\n        $extension_strength += ord($extension[$i]) - ord('a');\n    }\n \
    \   $extensions_strength[$extension_strength][] = $extension;\n}\n", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $class_name =\
    \ preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extension_strength = array_search($extension_upper, $extensions_strength);\n\
    \        if ($extension_strength === false) {\n            $extensions_strength[$extension_upper]\
    \ = $extension_lower;\n        } else {\n            $extensions_strength[$extension_upper]\
    \ = $extension_strength;\n        }\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    arsort($extensions_strength);\n    $strongest_extension = key($extensions_strength);\n\
    \    return $class_name . \".\" . $strongest_extension;\n}\n</code>\n<|/ a tags=php,string\
    \ |>\n<| c |>\nThis doesn't seem to work. `Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"))` returns `\"my_class.CC\"` instead of `\"my_class.AA\"\
    `.\n<|/ c |>\n<| c |>\nI tested it and it works. I tested it on PHP 5.3.6 and\
    \ PHP 5.4.3\n<|/ c |>\n<| c |>\nI tested it on PHP 5.3.6 and PHP 5.4.3 and it\
    \ works. I tested it on PHP 5.3.6 and PHP 5.4.3 and it works. I tested it on PHP\
    \ 5.3.6 and PHP 5.4.3 and it works. I tested it on PHP 5.3.6 and PHP 5.4.3 and\
    \ it works. I tested it on PHP 5.3.6 and PHP 5.4.3 and it works. I tested it on\
    \ PHP 5.3.6 and PHP 5.4.3 and it works. I tested it on PHP 5.3.6 and PHP 5.4.3\
    \ and it works. I tested it on PHP 5.3.6 and PHP 5.4.3 and it works. I tested\
    \ it on PHP 5.3.6 and PHP 5.4.3 and it works. I tested it on PHP 5.3.6 and PHP\
    \ 5.4.3 and it works. I tested it on PHP 5.3.6 and PHP 5.4.3 and it works. I tested\
    \ it on PHP 5.3.6 and PHP 5.4.3 and it works. I tested it on PHP 5.3.6 and PHP\
    \ 5.4.3 and it works. I tested it on PHP 5.3.6 and PHP 5.4.3 and it works. I tested\
    \ it on PHP 5.3.6 and PHP 5.4.3 and it works. I tested it on PHP 5.3.6 and PHP\
    \ 5.4.3 and it works. I ", "    $strongest_extension = null;\n    $extensions_count\
    \ = count($extensions);\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $class_length = strlen($class_name);\n      \
    \  $strength = $extension_length - $class_length;\n        if ($strength > 0)\
    \ {\n            if ($strongest_extension === null) {\n                $strongest_extension\
    \ = $extension;\n            } elseif ($strength < $strongest_extension) {\n \
    \               $strongest_extension = $extension;\n            }\n        }\n\
    \    }\n    return $class_name . $strongest_extension;\n}\n", "  $strength = -1;\n\
    \  $extensions_count = count($extensions);\n  for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n    $extension = strtolower($extensions[$i]);\n    $extension_length\
    \ = strlen($extension);\n    $class_length = strlen($class_name);\n    $strength\
    \ += ($extension_length - $class_length) / $extension_length;\n  }\n  if ($strength\
    \ > 0) {\n    return $class_name . '.' . strtolower($extensions[$extensions_count]);\n\
    \  }\n  return $class_name;\n}", "    $extensions_count = count($extensions);\n\
    \    $extensions_count_cap = count(array_filter(array_map(\"strtoupper\", $extensions)));\n\
    \    $extensions_count_sm = count(array_filter(array_map(\"strtolower\", $extensions)));\n\
    \    $extensions_count_cap_sm = $extensions_count_cap - $extensions_count_sm;\n\
    \    $extensions_count_cap_sm_ratio = $extensions_count_cap_sm / $extensions_count;\n\
    \    $extensions_count_cap_sm_ratio = round($extensions_count_cap_sm_ratio, 2);\n\
    \    $strength = -1;\n    foreach ($extensions as $extension) {\n        $extension_count_cap\
    \ = count(array_filter(array_map(\"strtoupper\", $extension)));\n        $extension_count_sm\
    \ = count(array_filter(array_map(\"strtolower\", $extension)));\n        $extension_count_cap_sm\
    \ = $extension_count_cap - $extension_count_sm;\n        $extension_count_cap_sm_ratio\
    \ = $extension_count_cap_sm / $extension_count;\n        $extension_count_cap_sm_ratio\
    \ = round($extension_count_cap_sm_ratio, 2);\n        if ($extension_count_cap_sm_ratio\
    \ > $extensions_count_cap_sm_ratio) {\n            $strength = $extension;\n \
    \       }\n    }\n    return $class_name . \".\" . $strength;\n}\n</code>\n<|/\
    \ a tags=php,algorithm,string |>\n<| c |>\nI like this solution, although it only\
    \ works if the extensions are in alphabetical order. As soon as you start adding\
    \ numbers, it breaks. I added a solution that works with numbers and letters.\n\
    <|/ c |>\n<| a dscore=2 |>\nI wrote a solution that works with numbers and letters.\
    \ I used the idea of \"the strongest extension\" from Sarfraz but modified it\
    \ a bit. \n<code>", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $strength = -1;\n    $extensions_count = count($extensions);\n    foreach\
    \ ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $extension_count = count($extension);\n        $extension_count = max($extension_count);\n\
    \        $extension_count = min(strlen($extension));\n        $strength += ($extension_count\
    \ - $extensions_count);\n    }\n    $strength = round($strength / $extensions_count,\
    \ 2);\n    $class_name = strtolower($class_name);\n    $class_name = str_replace(\"\
    _\", \"\", $class_name);\n    $class_name = str_replace(\"_\", \" \", $class_name);\n\
    \    $class_name = ucwords($class_name);\n    $class_name = str_replace(\"Slices\"\
    , \"\", $class_name);\n    $class_name = str_replace(\"Slice\", \"\", $class_name);\n\
    \    $class_name = str_replace(\"Slice\", \"\", $class_name);\n    $class_name\
    \ = str_replace(\"Slice\", \"\", $class_name);\n    $class_name = str_replace(\"\
    Slice\", \"\", $class_name);\n    $class_name = str_replace(\"Slice\", \"\", $class_name);\n\
    \    $class_name = str_replace(\"Slice\", \"\", $class_name);\n    $class_name\
    \ = str_replace(\"Slice\", \"\", $class_name);\n    $class_name = str_replace(\"\
    Slice\", \"\", $class_name);\n    $class_name = str_replace(\"Slice\", \"\", $class_name);\n\
    \    $class_name = str_replace(\"Slice\", \"\", $class_name);\n    $class_name\
    \ = str_replace(\"Slice\", \"\", $class_name);\n    $class_name = str_replace(\"\
    Slice\", \"\", $class_name);\n    $class_name = str_replace(\"Slice\", \"\", $class_name);\n\
    \    $class_name = str_replace(\"Slice\", \"\", $class_name);\n    $class_name\
    \ = str_replace(\"Slice\", \"\", $class_name);\n    $class_name = str_replace(\"\
    Slice\", \"\", $class_name);\n    $class_name = str_replace(\"Slice\", \"\", $class_name);\n\
    \    $class_name = str_replace(\"Slice\", \"\", $class_name);\n    $class_name\
    \ = str_replace(\"Slice\", \"\", $class_name);\n    $class_name = str_replace(\"\
    Slice\", \"\", $class_name);\n    $class_name = str_replace(\"Slice\", \"\", $class_name);\n\
    \    $class_name = str_replace(\"Slice\", \"\", $class_name);\n    $class_name\
    \ = str_replace(\"Slice\", \"\", $class_name);\n    $class_name = str_replace(\"\
    Slice\", \"\", $class_name);\n    $class_name = str_replace(\"Slice\", \"\", $class_name);\n\
    \    $class_name = str_replace(\"Slice\", \"\", $class_name);\n    $class_name\
    \ = str_replace(\"Slice\", \"\", $class_name);\n    $class_name = str_replace(\"\
    Slice\", \"\", $class_name);\n    $class_", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_strength\
    \ += ord($extension[$i]) - 64;\n        }\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n", "  $extensions_count\
    \ = count($extensions);\n  $extensions_count = max($extensions_count);\n  $extensions_count\
    \ = min($extensions_count);\n  $extensions_strength = array();\n  for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n    $extensions_strength[$i] = count(preg_grep(\"\
    /^$class_name\\./\", $extensions[$i]));\n  }\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  return $class_name . \".\" . $extensions_strength[0];\n}", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $cap = preg_match('/[A-Z]/i',\
    \ $extension);\n        $sm = preg_match('/[a-z]/i', $extension);\n        $strengths[$cap\
    \ - $sm] = $extension;\n    }\n    arsort($strengths);\n    return $class_name\
    \ . '.' . $strengths[0];\n}\n</code>\n<|/ a tags=php,string,arrays,sorting |>\n\
    <| c |>\nI like your solution, however it fails for \"my_class.AA\" where it should\
    \ return \"my_class.AA\" instead of \"my_class.Be\"\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug in the code. Now it works as expected.\n<|/ c |>\n<| a dscore=1 |>\n\
    <code>", "    $extensions_count = count($extensions);\n    $extensions_count =\
    \ pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = pow(2, $extensions_count);\n", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = substr($extension, $i, 1);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension", "  $extensions_count = count($extensions);\n  $extensions_count\
    \ = max($extensions_count);\n  $extensions_count = min($extensions_count);\n \
    \ $extensions_count = round($extensions_count);\n  $extensions_count = strlen($extensions_count);\n\
    \  $extensions_count = str_replace(\".0\", \"\", $extensions_count);\n  $extensions_count\
    \ = str_replace(\".\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"\
    ,\", \"\", $extensions_count);\n  $extensions_count = str_replace(\".\", \"\"\
    , $extensions_count);\n  $extensions_count = str_replace(\";\", \"\", $extensions_count);\n\
    \  $extensions_count = str_replace(\"'\", \"\", $extensions_count);\n  $extensions_count\
    \ = str_replace(\"\\\"\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"\
    !\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"?\", \"\"\
    , $extensions_count);\n  $extensions_count = str_replace(\";\", \"\", $extensions_count);\n\
    \  $extensions_count = str_replace(\",\", \"\", $extensions_count);\n  $extensions_count\
    \ = str_replace(\"(\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"\
    )\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"[\", \"\"\
    , $extensions_count);\n  $extensions_count = str_replace(\"]\", \"\", $extensions_count);\n\
    \  $extensions_count = str_replace(\"{\", \"\", $extensions_count);\n  $extensions_count\
    \ = str_replace(\"}\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"\
    ]\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"[\", \"\"\
    , $extensions_count);\n  $extensions_count = str_replace(\"{\", \"\", $extensions_count);\n\
    \  $extensions_count = str_replace(\"}\", \"\", $extensions_count);\n  $extensions_count\
    \ = str_replace(\"(\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"\
    )\", \"\", $extensions_count);\n  $extensions_count = str_replace(\",\", \"\"\
    , $extensions_count);\n  $extensions_count = str_replace(\";\", \"\", $extensions_count);\n\
    \  $extensions_count = str_replace(\",\", \"\", $extensions_count);\n  $extensions_count\
    \ = str_replace(\"=\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"\
    !\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"?\", \"\"\
    , $extensions_count);\n  $extensions_count = str_replace(\",\", \"\", $extensions_count);\n\
    \  $extensions_count = str_replace(\",\", \"\", $extensions_count);\n  $extensions_count\
    \ = str_replace(\",\", \"\", $extensions_count);\n  $extensions_count = str_replace(\"\
    ,\", \"\", $extensions_count", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = strlen($extensions_count);\n\
    \    $extensions_count = str_replace(\".0\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\".\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    ,\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"'\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\";\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\"[\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"]\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    (\", \"\", $extensions_count);\n    $extensions_count = str_replace(\")\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\",\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\";\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"'\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    ,\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"[\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\"]\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\";\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\",\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    '\", \"\", $extensions_count);\n    $extensions_count = str_replace(\",\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\"(\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\")\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\";\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    '\", \"\", $extensions_count);\n    $extensions_count = str_replace(\",\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\"[\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\"]\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"(\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    )\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"'\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\",\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\";\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\",\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    '\", \"\", $extensions_count", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $strength = -1;\n    foreach ($extensions as $extension) {\n        $extension\
    \ = strtolower($extension);\n        $extension = preg_replace('/[^A-Z]/', '',\
    \ $extension);\n        $extension = preg_replace('/[^a-z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Z]/', '', $extension);\n        $extension = preg_replace('/[^a-z]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^a-z]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^a-z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z]/', '', $extension);\n        $extension = preg_replace('/[^A-Z]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^a-z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Z]/', '', $extension);\n        $extension = preg_replace('/[^a-z]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^a-z]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^a-z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z]/', '', $extension);\n        $extension = preg_replace('/[^A-Z]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^a-z]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Z]/', '', $extension);\n        $extension = preg_replace('/[^a-z]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z]/', '', $extension);\n",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $letter = $extension[$i];\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n            $letter = preg_replace('/[^a-z]/', '', $letter);\n\
    \            $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n           \
    \ $letter = preg_replace('/[^A-Z]/', '', $letter);\n            $letter = preg_replace('/[^a-z]/',\
    \ '', $letter);\n            $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n\
    \            $letter = preg_replace('/[^A-Z]/', '', $letter);\n            $letter\
    \ = preg_replace('/[^a-z]/', '', $letter);\n            $letter = preg_replace('/[^A-Za-z]/',\
    \ '', $letter);\n            $letter = preg_replace('/[^A-Z]/', '', $letter);\n\
    \            $letter = preg_replace('/[^a-z]/', '', $letter);\n            $letter\
    \ = preg_replace('/[^A-Za-z]/', '', $letter);\n            $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n            $letter = preg_replace('/[^a-z]/', '', $letter);\n\
    \            $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n           \
    \ $letter = preg_replace('/[^A-Z]/', '', $letter);\n            $letter = preg_replace('/[^a-z]/',\
    \ '', $letter);\n            $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n\
    \            $letter = preg_replace('/[^A-Z]/', '', $letter);\n            $letter\
    \ = preg_replace('/[^a-z]/', '', $letter);\n            $letter = preg_replace('/[^A-Za-z]/',\
    \ '', $letter);\n            $letter = preg_replace('/[^A-Z]/', '', $letter);\n\
    \            $letter = preg_replace('/[^a-z]/', '', $letter);\n            $letter\
    \ = preg_replace('/[^A-Za-z]/', '', $letter);\n            $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n            $letter = preg_replace('/[^a-z]/', '', $letter);\n\
    \            $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n           \
    \ $letter = preg_replace('/[^A-Z]/', '', $letter);\n            $", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $class_name =\
    \ preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z]{2})/', '\\\\1',\
    \ $class_name);\n        $class_name = preg_replace('/([a-z]{2})/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([0-9]{2})/', '\\\\1', $class_name);\n \
    \       $class_name = preg_replace('/([A-Z]{3})/', '\\\\1', $class_name);\n  \
    \      $class_name = preg_replace('/([a-z]{3})/', '\\\\1', $class_name);\n   \
    \     $class_name = preg_replace('/([0-9]{3})/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([A-Z]{4})/', '\\\\1', $class_name);\n     \
    \   $class_name = preg_replace('/([a-z]{4})/', '\\\\1', $class_name);\n      \
    \  $class_name = preg_replace('/([0-9]{4})/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([A-Z]{5})/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([a-z]{5})/', '\\\\1', $class_name);\n        $class_name =\
    \ preg_replace('/([0-9]{5})/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z]{6})/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z]{6})/', '\\\
    \\1', $class_name);\n        $class_name = preg_replace('/([0-9]{6})/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z]{7})/', '\\\\1',\
    \ $class_name);\n        $class_name = preg_replace('/([a-z]{7})/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([0-9]{7})/', '\\\\1', $class_name);\n \
    \       $class_name = preg_replace('/([A-Z]{8})/', '\\\\1', $class_name);\n  \
    \      $class_name = preg_replace('/([a-z]{8})/', '\\\\1', $class_name);\n   \
    \     $class_name = preg_replace('/([0-9]{8})/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([A-Z]{9})/', '\\\\1', $class_name);\n     \
    \   $class_name = preg_replace('/([a-z]{9})/', '\\\\1', $class_name);\n", "  \
    \  $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extension_strength\
    \ = strlen($extension_upper) - strlen($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $name\
    \ = strtolower($extension);\n        $strengths[$name] = substr_count($name, $class_name)\
    \ - substr_count($name, $class_name);\n    }\n    asort($strengths);\n    $strongest\
    \ = array_shift($strengths);\n    return $class_name . '.' . $strongest;\n}\n",
  "  $extensions_count = count($extensions);\n  $extensions_strength = array();\n\
    \  foreach ($extensions as $extension) {\n    $extension_upper = strtoupper($extension);\n\
    \    $extension_lower = strtolower($extension);\n    $extension_strength = substr_count($extension_upper,\
    \ $extension_lower);\n    $extensions_strength[$extension_strength][] = $extension;\n\
    \  }\n  arsort($extensions_strength);\n  $strongest_extension = array_shift($extensions_strength);\n\
    \  foreach ($extensions_strength as $extension_strength => $extensions) {\n  \
    \  if ($extension_strength == $extensions_count) {\n      return $class_name .\
    \ '.' . $strongest_extension[0];\n    }\n  }\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThanks so much for this! I really appreciate it. I will test it out and\
    \ let you know how it goes.\n<|/ c |>\n<| c |>\nI tested it out and it works perfectly.\
    \ Thank you so much!\n<|/ c |>\n<| c |>\nGlad I could help!\n<|/ c |>\n<| a |>\n\
    <code>\n<?php", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  foreach ($extensions as $extension) {\n    $extension_upper =\
    \ strtoupper($extension);\n    $extension_lower = strtolower($extension);\n  \
    \  $extension_strength = strlen($extension) - strlen($extension_upper) - strlen($extension_lower);\n\
    \    $extensions_strength[$extension_strength][] = $extension;\n  }\n  $max_strength\
    \ = -1;\n  foreach ($extensions_strength as $strength => $extensions) {\n    if\
    \ ($strength > $max_strength) {\n      $max_strength = $strength;\n    }\n  }\n\
    \  $strongest_extension = null;\n  foreach ($extensions_strength as $strength\
    \ => $extensions) {\n    if ($strength == $max_strength) {\n      $strongest_extension\
    \ = $extensions[0];\n      break;\n    }\n  }\n  return $class_name . '.' . $strongest_extension;\n\
    }\n</code>\n<|/ a tags=php,algorithm,string |>\n<| c |>\nI like this solution,\
    \ but I wonder if there is a way to make it more efficient. My solution takes\
    \ about 4 seconds to run on a set of 10,000 strings. Your solution takes about\
    \ 1.5 seconds. Is there a way to make it faster?\n<|/ c |>\n<| c |>\n: I doubt\
    \ that you can make it faster, but you can make it more efficient. My solution\
    \ takes about 4 seconds to run on a set of 10,000 strings. Your solution takes\
    \ about 1.5 seconds. Is there a way to make it faster?\n<|/ c |>\n<| c |>\n: I\
    \ added a faster solution that uses `strlen()`.\n<|/ c |>\n<| c |>\n: I added\
    \ a faster solution that uses `strlen()`.\n<|/ c |>\n<| c |>\n: I added a faster\
    \ solution that uses `strlen()`.\n<|/ c |>\n<| a tags=php,algorithm,string |>\n\
    <code>\n<?php", "  $extensions_count = count($extensions);\n  $extensions_count\
    \ = max($extensions_count);\n  $extensions_count = min($extensions_count);\n \
    \ $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  $extensions_strength\
    \ = array_filter($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n  $", "  $extensions_count\
    \ = count($extensions);\n  $extensions_count = max($extensions_count);\n  $extensions_count\
    \ = min($extensions_count);\n  $extensions_strength = array();\n  for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n    $extensions_strength[$i] = count(preg_grep(\"\
    /^$class_name\\./\", $extensions[$i]));\n  }\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  return $class_name . \".\" . $extensions_strength;\n\
    }", "    $strengths = array();\n    foreach ($extensions as $extension) {\n  \
    \      $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n      \
    \  $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$extensions[$i]] = $i;\n    }\n    $extensions_strength\
    \ = array_count_values($extensions_strength);\n    arsort($extensions_strength);\n\
    \    $strongest_extension = null;\n    foreach ($extensions_strength as $extension_name\
    \ => $extension_count) {\n        if ($extension_count == 1) {\n            $strongest_extension\
    \ = $extension_name;\n            break;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}", "    $strengths = array();\n    foreach ($extensions\
    \ as $extension) {\n        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n\
    \        $extension = preg_replace('/[^a-z]/', '', $extension);\n        $class_name\
    \ = strtolower($class_name);\n        $extension = strtolower($extension);\n \
    \       $strengths[$class_name . $extension] = $class_name . $extension;\n   \
    \ }\n    arsort($strengths);\n    return $strengths[0];\n}\n", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_upper = strtoupper($extension);\n    $extension_lower\
    \ = strtolower($extension);\n    $extensions_strength[$extension_upper] = $extension_lower\
    \ - $extension_upper;\n  }\n  $extensions_strength = array_count_values($extensions_strength);\n\
    \  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_slice($extensions_strength, 0, $extensions_count);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = strlen($extensions[$i]) - strlen(strtolower($extensions[$i]));\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $class_name =\
    \ preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name = preg_replace('/[^a-z]/',\
    \ '', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/_/', '', $class_name);\n        $class_name = ucfirst($class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = ucfirst($class_name);\n        $class_name = preg_replace('/[^A-Z]/', '',\
    \ $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = strtolower($class_name);\n        $class_name = preg_replace('/_/',\
    \ '', $class_name);\n        $class_name = ucfirst($class_name);\n        $class_name\
    \ = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name = preg_replace('/[^a-z]/',\
    \ '', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/_/', '', $class_name);\n        $class_name = ucfirst($class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = ucfirst($class_name);\n        $class_name = preg_replace('/[^A-Z]/', '',\
    \ $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = strtolower($class_name);\n        $class_name = preg_replace('/_/',\
    \ '', $class_name);\n        $class_name = ucfirst($class_name);\n        $class_name\
    \ = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name = preg_replace('/[^a-z]/',\
    \ '', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/_/', '', $class_name);\n        $class_name = ucfirst($class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = ucfirst($class_name);\n        $", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = strtoupper($extension[$i]);\n            $extension_letter_count = str_count($extension_letter);\n\
    \            $extension_letter_strength = $extension_letter_count - $extension_letter_count\
    \ % 2;\n            if ($extension_strength < $extension_letter_strength) {\n\
    \                $extension_strength = $extension_letter_strength;\n         \
    \   }\n        }\n        $extensions_strength[$extension] = $extension_strength;\n\
    \    }\n    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = ", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = -1;\n    }\n    foreach ($extensions_strength as $key => $value) {\n     \
    \   $extensions_strength[$key] = preg_match(\"/[A-Z]/\",$key) ? strlen($key) -\
    \ strlen(preg_replace(\"/[A-Z]/\",\"\",$key)) : -1;\n    }\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extension", "  $extensions_count = count($extensions);\n\
    \  $extensions_count = max($extensions_count);\n  $extensions_count = min($extensions_count);\n\
    \  $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = substr_count($class_name, $extensions[$i]);\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extension", "  $extensions_count =\
    \ count($extensions);\n  $extensions_count_cap = array_count_values($extensions);\n\
    \  $extensions_count_sm = array_count_values(array_flip($extensions));\n  $extensions_count_cap_sm\
    \ = 0;\n  foreach ($extensions_count_cap as $key => $value) {\n    $extensions_count_cap_sm\
    \ += $value;\n  }\n  $extensions_count_cap_sm /= $extensions_count;\n  $extensions_count_sm\
    \ = array_sum($extensions_count_sm);\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm += 1;\n  $extensions_count_cap_sm /= $extensions_count;\n\
    \  $extensions_count_cap_sm ", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  foreach ($extensions as $extension) {\n    $extension_length =\
    \ strlen($extension);\n    $extension_strength = -1;\n    for ($i = 0; $i < $extension_length;\
    \ $i++) {\n      $char = strtoupper($extension[$i]);\n      $char_strength = strlen($char);\n\
    \      $extension_strength += $char_strength;\n    }\n    $extensions_strength[$extension]\
    \ = $extension_strength;\n  }\n  arsort($extensions_strength);\n  $strongest_extension\
    \ = array_shift($extensions_strength);\n  foreach ($extensions_strength as $extension\
    \ => $extension_strength) {\n    if ($extension_strength == $strongest_extension)\
    \ {\n      return $class_name . '.' . $extension;\n    }\n  }\n  return $class_name\
    \ . '.' . $strongest_extension;\n}\n", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = substr($extension, $i, 1);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search(-1, $extensions_strength);\n    $extensions_strength\
    \ = array_search(0, $extensions_strength);\n    $extensions_strength = array_search(1,\
    \ $extensions_strength);\n    $extensions_strength = array_search(2, $extensions_strength);\n\
    \    $extensions_strength = array_search(3, $extensions_strength);\n    $extensions_strength\
    \ = array_search(4, $extensions_strength);\n    $extensions_strength = array_search(5,\
    \ $extensions_strength);\n    $extensions_strength = array_search(6, $extensions_strength);\n\
    \    $extensions_strength = array_search(7, $extensions_strength);\n    $extensions_strength\
    \ = array_search(8, $extensions_strength);\n    $extensions_strength = array_search(9,\
    \ $extensions_strength);\n    $extensions_strength = array_search(10, $extensions_strength);\n\
    \    $extensions_strength = array_search(11, $extensions_strength);\n    $extensions_strength\
    \ = array_search(12, $extensions_strength);\n    $extensions_strength = array_search(13,\
    \ $extensions_strength);\n    $extensions_strength = array_search(14, $extensions_strength);\n\
    \    $extensions_strength = array_search(15, $extensions_strength);\n    $extensions_strength\
    \ = array_search(16, $extensions_strength);\n    $extensions_strength = array_search(17,\
    \ $extensions_strength);\n    $extensions_strength = array_search(18, $extensions_strength);\n\
    \    $extensions_strength = array_search(19, $extensions_strength);\n    $extensions_strength\
    \ = array_search(20, $extensions_strength);\n    $extensions_strength = array_search(21,\
    \ $extensions_strength);\n    $extensions_strength = array_search(22, $extensions_strength);\n\
    \    $extensions_strength = array_search(23, $extensions_strength);\n    $extensions_strength\
    \ = array_search(24, $extensions_strength);\n    $extensions_strength = array_search(25,\
    \ $extensions_strength);\n    $extensions_strength = array_search(", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_upper = strtoupper($extension);\n     \
    \   $extension_lower = strtolower($extension);\n        $extensions_strength[$extension_upper]\
    \ = $extension_lower - $extension_upper;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extension", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = floor($extensions_count);\n    $extensions_count = ceil($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = round($extensions_count\
    \ * 0.01);\n    $extensions_count = round($extensions_count * 0.05);\n    $extensions_count\
    \ = round($extensions_count * 0.1);\n    $extensions_count = round($extensions_count\
    \ * 0.2);\n    $extensions_count = round($extensions_count * 0.3);\n    $extensions_count\
    \ = round($extensions_count * 0.4);\n    $extensions_count = round($extensions_count\
    \ * 0.5);\n    $extensions_count = round($extensions_count * 0.6);\n    $extensions_count\
    \ = round($extensions_count * 0.7);\n    $extensions_count = round($extensions_count\
    \ * 0.8);\n    $extensions_count = round($extensions_count * 0.9);\n    $extensions_count\
    \ = round($extensions_count * 0.95);\n    $extensions_count = round($extensions_count\
    \ * 1);\n    $extensions_count = round($extensions_count * 1.1);\n    $extensions_count\
    \ = round($extensions_count * 1.2);\n    $extensions_count = round($extensions_count\
    \ * 1.3);\n    $extensions_count = round($extensions_count * 1.4);\n    $extensions_count\
    \ = round($extensions_count * 1.5);\n    $extensions_count = round($extensions_count\
    \ * 1.6);\n    $extensions_count = round($extensions_count * 1.7);\n    $extensions_count\
    \ = round($extensions_count * 1.8);\n    $extensions_count = round($extensions_count\
    \ * 1.9);\n    $extensions_count = round($extensions_count * 2);\n    $extensions_count\
    \ = round($extensions_count * 2.1);\n    $extensions_count = round($extensions_count\
    \ * 2.2);\n    $extensions_count = round($extensions_count * 2.3);\n    $extensions_count\
    \ = round($extensions_count * 2.4);\n    $extensions_count = round($extensions_count\
    \ * 2.5);\n    $extensions_count = round($extensions_count * 2.6);\n    $extensions_count\
    \ = round($extensions_count * 2.7);\n    $extensions_count = round($extensions_count\
    \ * 2.8);\n    $extensions_count = round($extensions_count * 2.9);\n    $extensions_count\
    \ = round($extensions_count * 3);\n    $extensions_count = round($extensions_count\
    \ * 3.1);\n    $extensions_count = ", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = substr_count($extensions[$i], 'A')\
    \ - substr_count($extensions[$i], 'a');\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength",
  "  $strongest = -1;\n  foreach ($extensions as $extension) {\n    $cap = preg_match('/[A-Z]/',\
    \ $extension);\n    $sm = preg_match('/[a-z]/', $extension);\n    if ($cap > $strongest)\
    \ {\n      $strongest = $cap;\n    }\n    if ($sm > $strongest) {\n      $strongest\
    \ = $sm;\n    }\n  }\n  return $class_name . '.' . $extensions[$strongest];\n\
    }\n", "    $strengths = array();\n    foreach ($extensions as $extension) {\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/",
  "  $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count);\n  $extensions_strength = array();\n\
    \  foreach ($extensions as $extension) {\n    $extension_length = strlen($extension);\n\
    \    $extension_strength = -1;\n    for ($i = 0; $i < $extension_length; $i++)\
    \ {\n      $letter = substr($extension, $i, 1);\n      $letter = strtoupper($letter);\n\
    \      $letter = strtolower($letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z]/', '', $letter);\n      $letter = preg_replace('/[^A-Z]/',\
    \ '', $letter);\n      $letter = preg_replace('/[^a-z]/', '', $letter);\n    \
    \  $letter = preg_replace('/[^A-Za-z", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    $extensions_strength_counter = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extensions_strength[$extension_upper]\
    \ = $extension_lower;\n        $extensions_strength_counter[$extension_lower]++;\n\
    \    }\n    arsort($extensions_strength);\n    $strongest_extension = null;\n\
    \    $strongest_extension_strength = -1;\n    foreach ($extensions_strength as\
    \ $extension_name => $extension_lower) {\n        if ($extensions_strength_counter[$extension_lower]\
    \ == $extensions_count) {\n            $strongest_extension = $extension_name;\n\
    \            $strongest_extension_strength = $extensions_strength[$extension_name];\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n</code>\n\
    <|/ a tags=php,algorithm,string |>\n<| a tags=php,algorithm,string |>\n<code>\n\
    <?php", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = ", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    arsort($extensions_strength);\n    $strongest_extension =\
    \ array_shift($extensions_strength);\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n", "  $extensions_count = count($extensions);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$extensions[$i]]\
    \ = $i;\n  }\n  $extensions_strength = array_reverse($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_values($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength);\n  $extensions_strength = array_sum($extensions_strength);\n\
    \  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_sum($extensions_strength", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $strength = -1;\n    $extensions_count = count($extensions);\n    foreach\
    \ ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $extension_count = count($extension);\n        $extension_count = max($extension_count);\n\
    \        $extension_count = min(strlen($extension));\n        $extension_count\
    \ = strlen($extension);\n        $extension_count = strlen($extension);\n    \
    \    $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count = strlen($extension);\n        $extension_count = strlen($extension);\n\
    \        $extension_count", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  foreach ($extensions as $extension) {\n    $extension_length =\
    \ strlen($extension);\n    $extension_strength = -1;\n    for ($i = 0; $i < $extension_length;\
    \ $i++) {\n      $letter = substr($extension, $i, 1);\n      $letter = strtoupper($letter);\n\
    \      if (isset($extensions_strength[$letter])) {\n        $extension_strength\
    \ += $extensions_strength[$letter];\n      }\n    }\n    $extensions_strength[$extension]\
    \ = $extension_strength;\n  }\n  $max_extension_strength = -1;\n  foreach ($extensions_strength\
    \ as $letter => $strength) {\n    if ($strength > $max_extension_strength) {\n\
    \      $max_extension_strength = $strength;\n    }\n  }\n  arsort($extensions_strength);\n\
    \  $strongest_extension = array_shift($extensions_strength);\n  foreach ($extensions_strength\
    \ as $letter => $strength) {\n    if ($strength == $max_extension_strength) {\n\
    \      $strongest_extension .= $letter;\n    }\n  }\n  return $class_name . '.'\
    \ . $strongest_extension;\n}\n</code>\n<|/ a tags=php,algorithm,string |>\n<|\
    \ c |>\nI like the idea of using an array to store the strength of each letter.\
    \ Thanks!\n<|/ c |>\n<| c |>\nI added a solution that doesn't use an array, but\
    \ I like your idea of using an array to store the strength of each letter. Thanks!\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't use an array, but I like your\
    \ idea of using an array to store the strength of each letter. Thanks!\n<|/ c\
    \ |>\n<| a |>\nI like your idea of using an array to store the strength of each\
    \ letter. Thanks!\nI modified the code a little bit to make it more readable:\n\
    <code>", "  $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count);\n  $strength = -1;\n  foreach ($extensions\
    \ as $extension) {\n    $extension_upper = strtoupper($extension);\n    $extension_lower\
    \ = strtolower($extension);\n    $extension_upper = preg_replace('/[^A-Z]/', '',\
    \ $extension_upper);\n    $extension_lower = preg_replace('/[^a-z]/', '', $extension_lower);\n\
    \    $extension_upper = preg_replace('/[^A-Za-z]/', '', $extension_upper);\n \
    \   $extension_lower = preg_replace('/[^A-Za-z]/', '', $extension_lower);\n  \
    \  $extension_upper = preg_replace('/[^A-Z]/', '', $extension_upper);\n    $extension_lower\
    \ = preg_replace('/[^a-z]/', '', $extension_lower);\n    $extension_upper = preg_replace('/[^A-Za-z]/',\
    \ '', $extension_upper);\n    $extension_lower = preg_replace('/[^A-Za-z]/', '',\
    \ $extension_lower);\n    $extension_upper = preg_replace('/[^A-Z]/', '', $extension_upper);\n\
    \    $extension_lower = preg_replace('/[^a-z]/', '', $extension_lower);\n    $extension_upper\
    \ = preg_replace('/[^A-Za-z]/', '', $extension_upper);\n    $extension_lower =\
    \ preg_replace('/[^A-Za-z]/', '', $extension_lower);\n    $extension_upper = preg_replace('/[^A-Z]/',\
    \ '', $extension_upper);\n    $extension_lower = preg_replace('/[^a-z]/', '',\
    \ $extension_lower);\n    $extension_upper = preg_replace('/[^A-Za-z]/', '', $extension_upper);\n\
    \    $extension_lower = preg_replace('/[^A-Za-z]/', '', $extension_lower);\n \
    \   $extension_upper = preg_replace('/[^A-Z]/', '', $extension_upper);\n    $extension_lower\
    \ = preg_replace('/[^a-z]/', '', $extension_lower);\n    $extension_upper = preg_replace('/[^A-Za-z]/',\
    \ '', $extension_upper);\n    $extension_lower = preg_replace('/[^A-Za-z]/', '',\
    \ $extension_lower);\n    $extension_upper = preg_replace('/[^A-Z]/', '', $extension_upper);\n\
    \    $extension_lower = preg_replace('/[^a-z]/', '', $extension_lower);\n    $extension_upper\
    \ = preg_replace('/[^A-Za-z]/', '', $extension_upper);", "    $strengths = array();\n\
    \    foreach ($extensions as $extension) {\n        $class_name = preg_replace('/[^A-Z]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = strtolower($class_name);\n        $class_name = preg_replace('/_/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z]/', '', $class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^A-Za-z]/', '', $class_name);\n        $class_name = preg_replace('/[^A-Z]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = strtolower($class_name);\n        $class_name = preg_replace('/_/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z]/', '', $class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^A-Za-z]/', '', $class_name);\n        $class_name = preg_replace('/[^A-Z]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = strtolower($class_name);\n        $class_name = preg_replace('/_/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z]/', '', $class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^A-Za-z]/', '', $class_name);\n        $class_name = preg_replace('/[^A-Z]/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = strtolower($class_name);\n        $class_name = preg_replace('/_/',\
    \ '', $class_name);\n        $class_name = preg_replace('/[^A-Za-z]/', '', $class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);", "    $strongest\
    \ = -1;\n    foreach ($extensions as $extension) {\n        $cap = strlen($extension);\n\
    \        $sm = strlen($class_name);\n        $strength = $cap - $sm;\n       \
    \ if ($strength > $strongest) {\n            $strongest = $strength;\n       \
    \ }\n    }\n    return $class_name . $extensions[$strongest];\n}\n", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_upper = strtoupper($extension);\n     \
    \   $extension_lower = strtolower($extension);\n        $extension_strength =\
    \ count($extension) - strlen($extension_upper) - strlen($extension_lower);\n \
    \       $extensions_strength[$extension_strength][] = $extension;\n    }\n   \
    \ $max_strength = max(array_keys($extensions_strength));\n    $max_strength_extensions\
    \ = $extensions_strength[$max_strength];\n    $max_strength_extension_count =\
    \ count($max_strength_extensions);\n    if ($max_strength_extension_count > 1)\
    \ {\n        $max_strength_extension_strength = -1;\n        foreach ($max_strength_extensions\
    \ as $extension) {\n            $extension_upper = strtoupper($extension);\n \
    \           $extension_lower = strtolower($extension);\n            $extension_strength\
    \ = count($extension) - strlen($extension_upper) - strlen($extension_lower);\n\
    \            if ($extension_strength > $max_strength_extension_strength) {\n \
    \               $max_strength_extension_strength = $extension_strength;\n    \
    \            $max_strength_extension = $extension;\n            }\n        }\n\
    \    } else {\n        $max_strength_extension = $max_strength_extensions[0];\n\
    \    }\n    return $class_name . '.' . $max_strength_extension;\n}", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_letter = substr($extension, $i, 1);\n      \
    \      $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_letter = substr($extension, $i, 1);\n      \
    \      $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  foreach ($extensions as $extension) {\n    $extension_upper =\
    \ strtoupper($extension);\n    $extension_lower = strtolower($extension);\n  \
    \  $extension_strength = count($extension) - strlen($extension_upper) - strlen($extension_lower);\n\
    \    $extensions_strength[$extension_strength][] = $extension;\n  }\n  $max_strength\
    \ = -1;\n  foreach ($extensions_strength as $strength => $extensions) {\n    if\
    \ ($strength > $max_strength) {\n      $max_strength = $strength;\n    }\n  }\n\
    \  $extensions_strength[$max_strength] = array_reverse($extensions_strength[$max_strength]);\n\
    \  $strongest_extension = $class_name;\n  foreach ($extensions_strength as $strength\
    \ => $extensions) {\n    $strongest_extension .= \".\" . implode(\".\", $extensions);\n\
    \  }\n  return $strongest_extension;\n}\n</code>\n<|/ a tags=php,string |>\n<|\
    \ c |>\nThanks so much for this. I really appreciate it!\n<|/ c |>\n<| a tags=php,string\
    \ |>\n<code>\n<?php\n$string = \"Hello World!\";\n$string = strtolower($string);\n\
    $string = preg_replace('/[^a-z]/', '', $string);\n$string = preg_replace('/\\\
    s+/', '', $string);\n$string = preg_replace('/\\s+/', '-', $string);\n$string\
    \ = preg_replace('/-+/', '-', $string);\n$string = preg_replace('/-+/', '-', $string);\n\
    $string = preg_replace('/-+/', '-', $string);\n$string = preg_replace('/-+/',\
    \ '-', $string);\n$string = preg_replace('/-+/', '-', $string);\n$string = preg_replace('/-+/',\
    \ '-', $string);\n$string = preg_replace('/-+/', '-', $string);\n$string = preg_replace('/-+/',\
    \ '-', $string);\n$string = preg_replace('/-+/', '-', $string);\n$string = preg_replace('/-+/',\
    \ '-', $string);\n$string = preg_replace('/-+/', '-', $string);\n$string = preg_replace('/-+/',\
    \ '-', $string);\n$string = preg_replace('/-+/', '-', $string);\n$string = preg_replace('/-+/',\
    \ '-', $string);\n$string = preg_replace('/-+/', '-', $string);\n$string = preg_replace('/-+/',\
    \ '-', $string", "  $extensions_count = count($extensions);\n  $extensions_count\
    \ = max($extensions_count);\n  $extensions_count = min($extensions_count);\n \
    \ $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = preg_match(\"/[A-Z]/\",$extensions[$i]) ?\n\
    \      preg_match(\"/[a-z]/\",$extensions[$i]) ?\n        -1 :\n        0 :\n\
    \      0;\n  }\n  $extensions_strength = array_count_values($extensions_strength);\n\
    \  $extensions_strength = array_filter($extensions_strength);\n  $extensions_strength\
    \ = array_keys($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip(", "  $extensions_count = count($extensions);\n  $extensions_count\
    \ = max($extensions_count);\n  $extensions_count = min($extensions_count);\n \
    \ $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = count(preg_grep(\"/^$class_name\\./\", $extensions[$i]));\n\
    \  }\n  $extensions_strength = array_sum($extensions_strength);\n  $extensions_strength\
    \ = array_keys($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = floor($extensions_count);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = floor($extensions_count);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = floor($extensions_count);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = floor($extensions_count);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = floor($extensions_count);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = floor($extensions_count);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = pow($extensions_count,\
    \ 2);\n    $extensions_count = floor($extensions_count);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = strlen($extensions_count);\n\
    \    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n \
    \   $extensions_count = strtoupper($extensions_count);\n    $extensions_count\
    \ = strtolower($extensions_count);\n    $extensions_count = substr($extensions_count,\
    \ 0, -2);\n    $extensions_count = str_replace(\"_\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\"C\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"S\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    E\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"D\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\"F\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\"G\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"H\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    I\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"J\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\"K\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\"L\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"M\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    N\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"O\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\"P\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\"Q\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"R\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    S\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"T\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\"U\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\"V\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"W\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    X\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"Y\", \"\"\
    , $extensions_count);\n    $extensions_count = str_replace(\"Z\", \"\", $extensions_count);\n\
    \    $extensions_count = str_replace(\"A\", \"\", $extensions_count);\n    $extensions_count\
    \ = str_replace(\"B\", \"\", $extensions_count);\n    $extensions_count = str_replace(\"\
    C\", \"\", $extensions_count);\n    $extensions_count = ", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  for ($i = 0; $i\
    \ < $extensions_count; $i++) {\n    $extensions_strength[$i] = substr_count(strtoupper($extensions[$i]),\
    \ strtoupper($class_name));\n  }\n  $extensions_strength = array_count_values($extensions_strength);\n\
    \  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $class_name =\
    \ preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name = preg_replace('/[^a-z]/',\
    \ '', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/_/', '', $class_name);\n        $class_name = ucfirst($class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = ucfirst($class_name);\n        $class_name = preg_replace('/[^A-Z]/', '',\
    \ $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = strtolower($class_name);\n        $class_name = preg_replace('/_/',\
    \ '', $class_name);\n        $class_name = ucfirst($class_name);\n        $class_name\
    \ = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name = preg_replace('/[^a-z]/',\
    \ '', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/_/', '', $class_name);\n        $class_name = ucfirst($class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = ucfirst($class_name);\n        $class_name = preg_replace('/[^A-Z]/', '',\
    \ $class_name);\n        $class_name = preg_replace('/[^a-z]/', '', $class_name);\n\
    \        $class_name = strtolower($class_name);\n        $class_name = preg_replace('/_/',\
    \ '', $class_name);\n        $class_name = ucfirst($class_name);\n        $class_name\
    \ = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name = preg_replace('/[^a-z]/',\
    \ '', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/_/', '', $class_name);\n        $class_name = ucfirst($class_name);\n\
    \        $class_name = preg_replace('/[^A-Z]/', '', $class_name);\n        $class_name\
    \ = preg_replace('/[^a-z]/', '', $class_name);\n        $class_name = strtolower($class_name);\n\
    \        $class_name = preg_replace('/_/', '', $class_name);\n        $class_name\
    \ = ucfirst($class_name);\n        $", "    $strongest_extension = null;\n   \
    \ $extension_count = count($extensions);\n    foreach ($extensions as $extension)\
    \ {\n        $extension_strength = strtoupper($extension) - strtolower($extension);\n\
    \        if ($extension_strength > 0) {\n            if ($extension_strength >\
    \ $extension_count) {\n                $strongest_extension = $extension;\n  \
    \              break;\n            }\n            $strongest_extension = $extension;\n\
    \            $extension_count = $extension_strength;\n        }\n    }\n    return\
    \ $class_name . \".\" . $strongest_extension;\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=php,algorithm,string |>\n<code>\n<?php", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = intval($extension_length / 2);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip(",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_strength += ord($extension[$i]) - ord('A');\n\
    \        }\n        $extensions_strength[$extension_strength] = $extension;\n\
    \    }\n    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = count(preg_grep(\"/^$class_name\\\
    ./\", $extensions[$i]));\n    }\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / $extensions_count;\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / $extensions_count;\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / $extensions_count;\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extension", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = strlen($extensions[$i]) - strlen(strtoupper($extensions[$i]));\n    }\n  \
    \  $extensions_strength = array_count_values($extensions_strength);\n    $extensions_strength\
    \ = array_filter($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = substr_count($class_name, $extensions[$i]);\n    }\n    arsort($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    if ($extensions_strength[0]\
    \ > 0) {\n        return $class_name . \".\" . $extensions_strength[0];\n    }\n\
    \    else {\n        return $class_name;\n    }\n}\n", "    $strengths = array();\n\
    \    foreach ($extensions as $extension) {\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$i] = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_search(-1, $extensions_strength);\n    $extensions_strength\
    \ = array_search(0, $extensions_strength);\n    $extensions_strength = array_search(1,\
    \ $extensions_strength);\n    $extensions_strength = array_search(2, $extensions_strength);\n\
    \    $extensions_strength = array_search(3, $extensions_strength);\n    $extensions_strength\
    \ = array_search(4, $extensions_strength);\n    $extensions_strength = array_search(5,\
    \ $extensions_strength);\n    $extensions_strength = array_search(6, $extensions_strength);\n\
    \    $extensions_strength = array_search(7, $extensions_strength);\n    $extensions_strength\
    \ = array_search(8, $extensions_strength);\n    $extensions_strength = array_search(9,\
    \ $extensions_strength);\n    $extensions_strength = array_search(10, $extensions_strength);\n\
    \    $extensions_strength = array_search(11, $extensions_strength);\n    $extensions_strength\
    \ = array_search(12, $extensions_strength);\n    $extensions_strength = array_search(13,\
    \ $extensions_strength);\n    $extensions_strength = array_search(14, $extensions_strength);\n\
    \    $extensions_strength = array_search(15, $extensions_strength);\n    $extensions_strength\
    \ = array_search(16, $extensions_strength);\n    $extensions_strength = array_search(17,\
    \ $extensions_strength);\n    $extensions_strength = array_search(18, $extensions_strength);\n\
    \    $extensions_strength = array_search(19, $extensions_strength);\n    $extensions_strength\
    \ = array_search(20, $extensions_strength);\n    $extensions_strength = array_search(21,\
    \ $extensions_strength);\n    $extensions_strength = array_search(22, $extensions_strength);\n\
    \    $extensions_strength = array_search(23, $extensions_strength);\n    $extensions_strength\
    \ = array_search(24, $extensions_strength);\n    $extensions_strength = array_search(25,\
    \ $extensions_strength);\n    $extensions_strength = array_search(", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n      $char = substr($extension,\
    \ $i, 1);\n      $char_upper = strtoupper($char);\n      $char_lower = strtolower($char);\n\
    \      $char_upper = strtoupper($char);\n      $char_lower = strtolower($char);\n\
    \      if ($char_upper == $char_lower) {\n        $char_upper++;\n        $char_lower++;\n\
    \      }\n      $char_strength = strlen($char_upper) - strlen($char_lower);\n\
    \      if ($char_strength > $extension_strength) {\n        $extension_strength\
    \ = $char_strength;\n      }\n    }\n    $extensions_strength[$extension] = $extension_strength;\n\
    \  }\n  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_slice($extensions_strength, 0, $extensions_count);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extension",
  "  $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count);\n  $extensions_strength = array();\n\
    \  foreach ($extensions as $extension) {\n    $extension_length = strlen($extension);\n\
    \    $extension_strength = -1;\n    for ($i = 0; $i < $extension_length; $i++)\
    \ {\n      $letter = substr($extension, $i, 1);\n      $letter = strtoupper($letter);\n\
    \      $letter = strtolower($letter);\n      if (isset($extensions_strength[$letter]))\
    \ {\n        $extension_strength += $extensions_strength[$letter];\n      }\n\
    \      $extensions_strength[$letter] = $extension_strength;\n    }\n  }\n  $extensions_strength\
    \ = array_count_values($extensions_strength);\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_slice($extensions_strength, 0, $extensions_count);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n      $c = $extension[$i];\n\
    \      if (ctype_upper($c)) {\n        $extension_strength++;\n      }\n    }\n\
    \    $extensions_strength[$extension_strength] = $extension;\n  }\n  $max_strength\
    \ = -1;\n  $max_extension = null;\n  foreach ($extensions_strength as $strength\
    \ => $extension) {\n    if ($strength > $max_strength) {\n      $max_strength\
    \ = $strength;\n      $max_extension = $extension;\n    }\n  }\n  return $class_name\
    \ . '.' . $max_extension;\n}\n", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 2);\n    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n\
    \    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_RIGHT);\n\
    \    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_BOTH);\n \
    \   $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_RIGHT);\n \
    \   $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_BOTH);\n  \
    \  $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_RIGHT);\n  \
    \  $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_BOTH);\n   \
    \ $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_RIGHT);\n   \
    \ $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_BOTH);\n    $extensions_count\
    \ = str_pad($extensions_count, 2, '0', STR_PAD_RIGHT);\n    $extensions_count\
    \ = str_pad($extensions_count, 2, '0', STR_PAD_BOTH);\n    $extensions_count =\
    \ str_pad($extensions_count, 2, '0', STR_PAD_RIGHT);\n    $extensions_count =\
    \ str_pad($extensions_count, 2, '0', STR_PAD_BOTH);\n    $extensions_count = str_pad($extensions_count,\
    \ 2, '0', STR_PAD_RIGHT);\n    $extensions_count = str_pad($extensions_count,\
    \ 2, '0', STR_PAD_BOTH);\n    $extensions_count = str_pad($extensions_count, 2,\
    \ '0', STR_PAD_RIGHT);\n    $extensions_count = str_pad($extensions_count, 2,\
    \ '0', STR_PAD_BOTH);\n    $extensions_count = str_pad($extensions_count, 2, '0',\
    \ STR_PAD_RIGHT);\n    $extensions_count = str_pad($extensions_count, 2, '0',\
    \ STR_PAD_BOTH);\n    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_RIGHT);\n\
    \    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_BOTH);\n \
    \   $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_RIGHT);\n \
    \   $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_BOTH);\n  \
    \  $extensions_", "  $extensions_count = count($extensions);\n  $extensions_count\
    \ = max($extensions_count);\n  $extensions_count = min($extensions_count, count($class_name)\
    \ - 1);\n  $strength = -1;\n  $extensions_count = count($extensions);\n  foreach\
    \ ($extensions as $extension) {\n    $extension_length = strlen($extension);\n\
    \    $extension_length = max($extension_length, 1);\n    $extension_length = min($extension_length,\
    \ count($class_name) - 1);\n    $strength += $extension_length * ($extension_length\
    \ - 1) / $extensions_count;\n  }\n  return $class_name . \".\" . substr($extensions[array_search($strength,\
    \ $extensions)], 0, 1);\n}\n", "    $strongest = -1;\n    $extensions_count =\
    \ count($extensions);\n    for ($i = 0; $i < $extensions_count; $i++) {\n    \
    \    $extension = strtolower($extensions[$i]);\n        $extension_length = strlen($extension);\n\
    \        $class_length = strlen($class_name);\n        $strength = substr_count($extension,\
    \ $class_name);\n        if ($strength > $strongest) {\n            $strongest\
    \ = $strength;\n        }\n    }\n    return $class_name . '.' . $extensions[$strongest];\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I am not allowed\
    \ to use any PHP functions. I must use only my own functions.\n<|/ c |>\n<| c\
    \ |>\nI added my own function to the question. Thanks for your help.\n<|/ c |>\n\
    <| c |>\nI added my own function to the question. Thanks for your help.\n<|/ c\
    \ |>\n<| a dscore=1 |>\nI finally found a solution that works for me. Thanks to\
    \ everyone who helped me with this.\n<code>\n<?php", "  $strengths = array();\n\
    \  foreach ($extensions as $extension) {\n    $name = strtolower($extension);\n\
    \    $strengths[$name] = substr_count($name, $class_name) - substr_count($name,\
    \ $class_name);\n  }\n  arsort($strengths);\n  return $class_name . '.' . array_shift($strengths);\n\
    }\n", "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_strength += ord($extension[$i]) - 64;\n    \
    \    }\n        $extensions_strength[$extension_strength][] = $extension;\n  \
    \  }\n    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);", "  $strongest_extension = null;\n  $extension_count\
    \ = count($extensions);\n  foreach ($extensions as $extension) {\n    $extension_strength\
    \ = strlen($extension) - strlen(strtolower($extension));\n    if ($extension_strength\
    \ > 0) {\n      if ($extension_strength > $extension_count) {\n        $strongest_extension\
    \ = $extension;\n        break;\n      }\n    }\n  }\n  return $class_name . '.'\
    \ . $strongest_extension;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if\
    \ there are multiple extensions with the same strength.\n<|/ c |>\n<| c |>\nYes,\
    \ I know. That's why I wrote \"You should find the strongest extension and return\
    \ a string in this format: ClassName.StrongestExtensionName.\"\n<|/ c |>\n<| c\
    \ |>\nI see what you mean. I've updated my answer with a new function that should\
    \ do what you want.\n<|/ c |>\n<| c |>\nThanks so much for this. I really appreciate\
    \ it. I tried it out and it works perfectly. Thanks again!\n<|/ c |>\n<| c |>\n\
    No problem. Glad I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php", " \
    \   $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_upper = strtoupper($extension);\n\
    \        $extension_lower = strtolower($extension);\n        $extension_strength\
    \ = strlen($extension_upper) - strlen($extension_lower);\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    $max_strength = -1;\n    foreach ($extensions_strength\
    \ as $strength => $extensions) {\n        if ($strength > $max_strength) {\n \
    \           $max_strength = $strength;\n        }\n    }\n    $max_strength++;\n\
    \    $class_name_upper = strtoupper($class_name);\n    $class_name_lower = strtolower($class_name);\n\
    \    $class_name_strength = strlen($class_name_upper) - strlen($class_name_lower);\n\
    \    $class_name_strength += $max_strength;\n    $class_name_strength = round($class_name_strength\
    \ / $extensions_count, 2);\n    $class_name_strength = round($class_name_strength,\
    \ 2);\n    return $class_name . \".\" . $extensions[$class_name_strength];\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThanks so much for this! I really appreciate\
    \ it!\n<|/ c |>\n<| c |>\nYou're welcome. I'm glad it helped you. :)\n<|/ c |>\n\
    <| a tags=php,algorithm,string |>\n<code>\n<?php\n$string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n$string2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n$string3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n$string4 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n$string5 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n$string6 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n$string7 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n$string8 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n$string9 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n$string10 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n$string11 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n$", "  $extensions_count = count($extensions);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$extensions[$i]]\
    \ = $i;\n  }\n  $extensions_strength = array_count_values($extensions_strength);\n\
    \  arsort($extensions_strength);\n  $strongest_extension = key($extensions_strength);\n\
    \  return $class_name . \".\" . $strongest_extension;\n}", "  $extensions_count\
    \ = count($extensions);\n  $extensions_count = max($extensions_count);\n  $extensions_count\
    \ = min($extensions_count);\n  $extensions_strength = array();\n  for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n    $extensions_strength[$i] = substr_count(strtoupper($class_name),\
    \ strtoupper($extensions[$i]));\n  }\n  arsort($extensions_strength);\n  $extensions_strength\
    \ = array_slice($extensions_strength, 0, $extensions_count);\n  $extensions_strength\
    \ = array_reverse($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($", " \
    \   $strengths = array();\n    foreach ($extensions as $extension) {\n       \
    \ $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z][a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z][a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z][a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z][a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z][a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z][a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z][a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z][a-z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z][a-z])/", "    $strongest = null;\n    $strength = 0;\n\
    \    foreach ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $cap = strlen($extension) - strlen(strtoupper($extension));\n       \
    \ $sm = strlen($extension) - strlen(strtolower($extension));\n        $strength\
    \ += $cap - $sm;\n        if ($strongest == null || $strength > $strongest['strength'])\
    \ {\n            $strongest = array('class' => $class_name, 'extension' => $extension,\
    \ 'strength' => $strength);\n        }\n    }\n    return $strongest['class']\
    \ . '.' . $strongest['extension'];\n}\n", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = count($extension_upper)\
    \ - count($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_reverse($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extension", "    $strengths = array();\n\
    \    foreach ($extensions as $extension) {\n        $class_name = preg_replace('/[^A-Z]/',\
    \ '', $class_name);\n        $extension = preg_replace('/[^a-z]/', '', $extension);\n\
    \        $strengths[$class_name . $extension] = $class_name . $extension;\n  \
    \  }\n    arsort($strengths);\n    return $strengths[0];\n}\n</code>\n<|/ a tags=php,algorithm,string\
    \ |>\n<| c |>\nThis doesn't work if there are multiple extensions with the same\
    \ strength.\n<|/ c |>\n<| c |>\nIt does work, if you use arsort() instead of sort()\n\
    <|/ c |>\n<| c |>\nIt does work if you use arsort() instead of sort()\n<|/ c |>\n\
    <| a dscore=2 |>\nHere's a solution using array_count_values() to count the occurrences\
    \ of each extension, and then using arsort() to sort the array by strength.\n\
    <code>", "    $extensions_count = count($extensions);\n    $extensions_count =\
    \ max($extensions_count);\n    $extensions_count = min($extensions_count, count($class_name)\
    \ - 1);\n    $extensions_count = pow(2, $extensions_count);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    $extensions_strength_counter\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $extension_strength = -1;\n        $extension_strength_counter\
    \ = 0;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $letter\
    \ = $extension[$i];\n            $letter = strtoupper($letter);\n            $letter\
    \ = strtolower($letter);\n            $letter = strtoupper($letter);\n       \
    \     $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    $extensions_strength_max = -1;\n   \
    \ $extensions_strength_min = -1;\n    foreach ($extensions as $extension) {\n\
    \        $extension_length = strlen($extension);\n        $extension_strength\
    \ = intval($extension_length / 2);\n        if ($extension_strength > $extensions_strength_max)\
    \ {\n            $extensions_strength_max = $extension_strength;\n        }\n\
    \        if ($extension_strength < $extensions_strength_min) {\n            $extensions_strength_min\
    \ = $extension_strength;\n        }\n        $extensions_strength[$extension_length]\
    \ = $extension_strength;\n    }\n    $extensions_strength_max = max($extensions_strength_max);\n\
    \    $extensions_strength_min = min($extensions_strength_min);\n    $extensions_strength_average\
    \ = $extensions_strength_max + $extensions_strength_min;\n    $extensions_strength_average\
    \ = round($extensions_strength_average / 2);\n    $extensions_strength_average\
    \ = min($extensions_strength_average, 1);\n    $extensions_strength_average =\
    \ max($extensions_strength_average, -1);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength_average);\n\
    \    $extensions_strength_average = abs($extensions_strength_average);\n    $extensions_strength_average\
    \ = abs($extensions_strength_average);\n    $extensions_strength_average = abs($extensions_strength",
  "  $extensions_count = count($extensions);\n  $extensions_strength = array();\n\
    \  foreach ($extensions as $extension) {\n    $extension_length = strlen($extension);\n\
    \    $extension_strength = -1;\n    for ($i = 0; $i < $extension_length; $i++)\
    \ {\n      $c = $extension[$i];\n      if (ctype_upper($c)) {\n        $extension_strength\
    \ += 1;\n      }\n      if (ctype_lower($c)) {\n        $extension_strength +=\
    \ 1;\n      }\n    }\n    $extensions_strength[$extension_strength] = $extension;\n\
    \  }\n  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_filter($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);\n  $extensions_strength\
    \ = array_search(-1, $extensions_strength);\n  $extensions_strength = array_search(0,\
    \ $extensions_strength);\n  $extensions_strength = array_search(1, $extensions_strength);\n\
    \  $extensions_strength = array_search(2, $extensions_strength);\n  $extensions_strength\
    \ = array_search(3, $extensions_strength);\n  $extensions_strength = array_search(4,\
    \ $extensions_strength);\n  $extensions_strength = array_search(5, $extensions_strength);\n\
    \  $extensions_strength = array_search(6, $extensions_strength);\n  $extensions_strength\
    \ = array_search(7, $extensions_strength);\n  $extensions_strength = array_search(8,\
    \ $extensions_strength);\n  $extensions_strength = array_search(9, $extensions_strength);\n\
    \  $extensions_strength = array_search(10, $extensions_strength);\n  $extensions_strength\
    \ = array_search(11, $extensions_strength);\n  $extensions_strength = array_search(12,\
    \ $extensions_strength);\n  $extensions_strength = array_search(13, $extensions_strength);\n\
    \  $extensions_strength = array_search(14, $extensions_strength);\n  $extensions_strength\
    \ = array_search(15, $extensions_strength);\n  $extensions_strength = array_search(16,\
    \ $extensions_strength);\n  $extensions_strength = array_search(17, $extensions_strength);\n\
    \  $extensions_strength = array_search(18, $extensions_strength);\n  $extensions_strength\
    \ = array_search(19, $extensions_strength);\n  $extensions_strength = array_search(20,\
    \ $extensions_strength);\n  $extensions_strength = array_search(21, $extensions_strength);\n\
    \  $extensions_strength", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = round($extensions_count);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    arsort($extensions_strength);\n    $strongest_extension = null;\n    foreach\
    \ ($extensions_strength as $extension => $count) {\n        if ($count == $extensions_count)\
    \ {\n            $strongest_extension = $extension;\n            break;\n    \
    \    }\n    }\n    return $class_name . \".\" . $strongest_extension;\n}\n", " \
    \ $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count, count($class_name) - 1);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow($extensions_count,\
    \ 0.5);\n  $extensions_count = pow($extensions_count, 0.5);\n  $extensions_count\
    \ = pow($extensions_count, 0.5);\n  $extensions_count = pow", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension =\
    \ strtolower($extension);\n        $strengths[$extension] = substr_count($class_name,\
    \ $extension) / strlen($class_name);\n    }\n    arsort($strengths);\n    return\
    \ $class_name . '.' . $extensions[0];\n}\n", "  $extensions_count = count($extensions);\n\
    \  $extensions_strength = array();\n  foreach ($extensions as $extension) {\n\
    \    $extension_upper = strtoupper($extension);\n    $extension_lower = strtolower($extension);\n\
    \    $extension_strength = strlen($extension_upper) - strlen($extension_lower);\n\
    \    $extensions_strength[$extension_strength][] = $extension;\n  }\n  $max_strength\
    \ = -1;\n  $max_extension = NULL;\n  foreach ($extensions_strength as $strength\
    \ => $extensions) {\n    if ($strength > $max_strength) {\n      $max_strength\
    \ = $strength;\n      $max_extension = $extensions[0];\n    }\n  }\n  return $class_name\
    \ . '.' . $max_extension;\n}", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extensions_strength[$extension_upper] =\
    \ $extension_lower;\n        $extensions_strength[$extension_lower] = $extension_upper;\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n",
  "    $strongest = null;\n    foreach ($extensions as $extension) {\n        $cap\
    \ = preg_match('/[A-Z]/', $extension);\n        $sm = preg_match('/[a-z]/', $extension);\n\
    \        $strength = abs($cap - $sm);\n        if ($strongest == null || $strength\
    \ > $strongest['strength']) {\n            $strongest = array('class' => $class_name,\
    \ 'extension' => $extension, 'strength' => $strength);\n        }\n    }\n   \
    \ return $strongest['class'] . '.' . $strongest['extension'];\n}\n", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $letter = $extension[$i];\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower($letter);\n            $letter = strtoupper($letter);\n\
    \            $letter = strtolower(", "    $strongest_extension = null;\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = strlen($extension) - strlen(strtoupper($extension));\n        if ($extension_strength\
    \ > $strongest_extension_strength) {\n            $strongest_extension_strength\
    \ = $extension_strength;\n            $strongest_extension = $extension;\n   \
    \     }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThanks so much for this. I really appreciate it.\n\
    <|/ c |>\n<| c |>\nI added a test case to my answer that shows it works.\n<|/\
    \ c |>\n<| a tags=php,algorithm,string |>\nI wrote a PHP function which returns\
    \ the longest common prefix of two strings. I believe it does what you want.\n\
    <code>", "  $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$i]\
    \ = preg_replace('/[^A-Z]/', '', $extensions[$i]);\n  }\n  $extensions_strength\
    \ = array_count_values($extensions_strength);\n  $extensions_strength = array_filter($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_search($class_name,\
    \ $extensions_strength);\n  $extensions_strength = array_search(-1, $extensions_strength);\n\
    \  $extensions_strength = array_search(0, $extensions_strength);\n  $extensions_strength\
    \ = array_search(1, $extensions_strength);\n  $extensions_strength = array_search(2,\
    \ $extensions_strength);\n  $extensions_strength = array_search(3, $extensions_strength);\n\
    \  $extensions_strength = array_search(4, $extensions_strength);\n  $extensions_strength\
    \ = array_search(5, $extensions_strength);\n  $extensions_strength = array_search(6,\
    \ $extensions_strength);\n  $extensions_strength = array_search(7, $extensions_strength);\n\
    \  $extensions_strength = array_search(8, $extensions_strength);\n  $extensions_strength\
    \ = array_search(9, $extensions_strength);\n  $extensions_strength = array_search(10,\
    \ $extensions_strength);\n  $extensions_strength = array_search(11, $extensions_strength);\n\
    \  $extensions_strength = array_search(12, $extensions_strength);\n  $extensions_strength\
    \ = array_search(13, $extensions_strength);\n  $extensions_strength = array_search(14,\
    \ $extensions_strength);\n  $extensions_strength = array_search(15, $extensions_strength);\n\
    \  $extensions_strength = array_search(16, $extensions_strength);\n  $extensions_strength\
    \ = array_search(17, $extensions_strength);\n  $extensions_strength = array_search(18,\
    \ $extensions_strength);\n  $extensions_strength = array_search(19, $extensions_strength);\n\
    \  $extensions_strength = array_search(20, $extensions_strength);\n  $extensions_strength\
    \ = array_search(21, $extensions_strength);\n  $extensions_strength = array_search(22,\
    \ $extensions_strength);\n  $extensions_strength = array_search(23, $extensions_strength);\n\
    \  $extensions_strength = array_search(24, $extensions_strength);\n  $extensions_strength\
    \ = ", "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_strength += ord($extension[$i]) - ord('A');\n\
    \        }\n        $extensions_strength[$extension_strength] = $extension;\n\
    \    }\n    arsort($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, $extensions_count);\n\
    \    $extensions_strength = array_reverse($extensions_strength);\n    $extensions_strength\
    \ = array_values($extensions_strength);\n    $extensions_strength = array_combine($extensions_strength,\
    \ $extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $class_name =\
    \ $class_name . '.' . $extension;\n        $strengths[$extension] = class_exists($class_name,\
    \ false);\n    }\n    arsort($strengths);\n    return key($strengths);\n}\n</code>\n\
    <|/ a tags=php,class,oop |>\n<| c |>\nI like your answer, but I'm confused on\
    \ how I would implement this into my code. Could you please show me how I would\
    \ implement this into my code?\n<|/ c |>\n<| c |>\nI added an example to the answer.\n\
    <|/ c |>\n<| c |>\nI added an example to the answer.\n<|/ c |>\n<| c |>\nI added\
    \ an example to the answer.\n<|/ c |>\n<| c |>\nI added an example to the answer.\n\
    <|/ c |>\n<| a dscore=1 |>\nI made a little modification to your code and I hope\
    \ it will help you:\n<code>\n<?php", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extensions_strength[$extension_upper] =\
    \ $extension_lower;\n        $extensions_strength[$extension_lower] = $extension_upper;\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $strength = -1;\n    foreach\
    \ ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $extension = preg_replace('/[^A-Z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^a-z]/', '', $extension);\n        $extension_count = count($extension);\n\
    \        $extension_count = max($extension_count);\n        $extension_count =\
    \ min(count($extension));\n        $strength += ($extension_count - $extensions_count);\n\
    \    }\n    $strength = max($strength);\n    $strength = min(count($extensions));\n\
    \    $strength = $strength / count($extensions);\n    $strength = $strength *\
    \ -1;\n    return $class_name . '.' . implode('.', $extensions) . '.' . $strength;\n\
    }\n</code>\n<|/ a tags=php,algorithm,string |>\n<| c |>\nThis doesn't seem to\
    \ work when there are multiple extensions with the same strength.\n<|/ c |>\n\
    <| c |>\nI added a comment to the code explaining how it works. I hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for the explanation. I think I understand it now. I've\
    \ added an answer that seems to work well for me.\n<|/ c |>\n<| a dscore=1 |>\n\
    I wrote a function that seems to work well for me:\n<code>", "    $strengths =\
    \ array();\n    foreach ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $cap = strlen($extension) - 1;\n        $sm = strlen($extension) - 2;\n\
    \        $strengths[$extension] = $cap - $sm;\n    }\n    asort($strengths);\n\
    \    $strongest = array_shift($strengths);\n    return $class_name . \".\" . $strongest;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer. I'm sorry I didn't\
    \ specify this in my question, but I do have access to the list of extensions.\
    \ I edited my question to reflect this.\n<|/ c |>\n<| c |>\nI edited my answer\
    \ to reflect your edit. Hope this helps.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ I'm sorry I didn't specify this in my question, but I do have access to the\
    \ list of extensions. I edited my question to reflect this.\n<|/ c |>\n<| c |>\n\
    I edited my answer to reflect your edit. Hope this helps.\n<|/ c |>\n<| c |>\n\
    Thanks for your answer. I'm sorry I didn't specify this in my question, but I\
    \ do have access to the list of extensions. I edited my question to reflect this.\n\
    <|/ c |>\n<| a tags=php,algorithm |>\n<code>\n<?php\n$extensions = array('aa',\
    \ 'bb', 'cc');\n$extensions_count = count($extensions);\n$extensions_count = array_count_values($extensions);\n\
    $extensions_count = array_filter($extensions_count);\n$extensions_count = array_keys($extensions_count);\n\
    $extensions_count = array_flip($extensions_count);\n$extensions_count = array_search('aa',\
    \ $extensions_count);\n$extensions_count = array_search('bb', $extensions_count);\n\
    $extensions_count = array_search('cc', $extensions_count);\n$extensions_count\
    \ = array_search('dd', $extensions_count);\n$extensions_count = array_search('ee',\
    \ $extensions_count);\n$extensions_count = array_search('ff', $extensions_count);\n\
    $extensions_count = array_search('gg', $extensions_count);\n$extensions_count\
    \ = array_search('hh', $extensions_count);\n$extensions_count = array_search('ii',\
    \ $extensions_count);\n$extensions_count = array_search('jj', $extensions_count);\n\
    $extensions_count = array_search('kk', $extensions_count);\n$extensions_count\
    \ = array_search('ll', $extension", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = count($extension_upper)\
    \ - count($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength",
  "  $extensions_count = count($extensions);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$i]\
    \ = preg_match(\"/[A-Z]/\",$extensions[$i]) ?\n      preg_match(\"/[a-z]/\",$extensions[$i])\
    \ ?\n        -1 * strlen($extensions[$i]) / strlen($extensions[$i]) : 0;\n  }\n\
    \  $extensions_strength = array_filter($extensions_strength);\n  sort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  return $class_name . \".\" . array_shift($extensions_strength);\n\
    }", "    $strength = -1;\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $class_length = strlen($class_name);\n      \
    \  $strength += $extension_length - $class_length;\n    }\n    if ($strength ==\
    \ 0) {\n        return $class_name;\n    }\n    $strength = round($strength /\
    \ 2);\n    $class_length = strlen($class_name);\n    $extension_length = strlen($class_name);\n\
    \    $strength += $extension_length - $class_length;\n    return $class_name .\
    \ substr($class_name, 0, $strength);\n}\n</code>\n<|/ a tags=php,algorithm |>\n\
    <| c |>\nThis doesn't seem to work. `Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"))` returns `my_class.AA` instead of `my_class.Be`.\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works. I added an example in the answer.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I added an example in the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added an example in the answer.\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I added an example in the answer.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    for ($i = 0; $i < $extensions_count;\
    \ $i++) {\n        $extensions_strength[$extensions[$i]] = -1;\n    }\n    foreach\
    \ ($extensions_strength as $extension => $strength) {\n        $extension_length\
    \ = strlen($extension);\n        $class_length = strlen($class_name);\n      \
    \  $strength_length = strlen($extension);\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_letter = substr($extension, $i, 1);\n      \
    \      $class_letter = substr($class_name, $i, 1);\n            $strength_letter\
    \ = substr($extension, $i, 1);\n            $strength_letter_count = substr_count($class_letter,\
    \ $strength_letter);\n            $strength_letter_count += substr_count($extension_letter,\
    \ $strength_letter);\n            $strength_letter_count /= 2;\n            $strength_letter_count\
    \ *= $class_length;\n            $strength_letter_count /= $extension_length;\n\
    \            $strength_letter_count *= $extensions_count;\n            $strength_letter_count\
    \ /= $extensions_count;\n            $strength_letter_count *= $extensions_count;\n\
    \            $strength_letter_count /= $extensions_count;\n            $strength_letter_count\
    \ *= $extensions_count;\n            $strength_letter_count /= $extensions_count;\n\
    \            $strength_letter_count *= $extensions_count;\n            $strength_letter_count\
    \ /= $extensions_count;\n            $strength_letter_count *= $extensions_count;\n\
    \            $strength_letter_count /= $extensions_count;\n            $strength_letter_count\
    \ *= $extensions_count;\n            $strength_letter_count /= $extensions_count;\n\
    \            $strength_letter_count *= $extensions_count;\n            $strength_letter_count\
    \ /= $extensions_count;\n            $strength_letter_count *= $extensions_count;\n\
    \            $strength_letter_count /= $extensions_count;\n            $strength_letter_count\
    \ *= $extensions_count;\n            $strength_letter_count /= $extensions_count;\n\
    \            $strength_letter_count *= $extensions_count;\n            $strength_letter_count\
    \ /= $extensions_count;\n            $strength_letter_count *= $extensions_count;\n\
    \            $strength_letter_count /= $extensions_count;\n            $strength_letter_count\
    \ *= $extensions_count;\n            $strength_letter_count /= $extensions_count;\n\
    \            $strength_letter_count *= $extensions_count;\n            $strength_letter_count\
    \ /= $extensions_count;\n            $strength_letter_count *= $extensions_count;\n\
    \            $strength_letter_count /= $extensions_count;\n            $strength_",
  "  $extensions_count = count($extensions);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$extensions[$i]]\
    \ = $i;\n  }\n  $extensions_strength = array_count_values($extensions_strength);\n\
    \  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_slice($extensions_strength, 0, 1);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_strength\
    \ += ord($extension[$i]) - ord('A');\n        }\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_upper = strtoupper($extension);\n    $extension_lower\
    \ = strtolower($extension);\n    $extensions_strength[$extension_upper] = $extension_lower;\n\
    \    $extensions_strength[$extension_lower] = $extension_upper;\n  }\n  $extensions_strength\
    \ = array_count_values($extensions_strength);\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_slice($extensions_strength, 0, $extensions_count);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = pow(2, $extensions_count);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = round($extensions_count);\n    $extensions_count = intval($extensions_count);\n\
    \    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n \
    \   $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n  \
    \  $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n   \
    \ $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n    $extensions_count\
    \ = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n    $extensions_count =\
    \ str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad($extensions_count,\
    \ 2, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad($extensions_count, 2,\
    \ '0', STR_PAD_LEFT);\n    $extensions_count = str_pad($extensions_count, 2, '0',\
    \ STR_PAD_LEFT);\n    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n\
    \    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n \
    \   $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n  \
    \  $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n   \
    \ $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n    $extensions_count\
    \ = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n    $extensions_count =\
    \ str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad($extensions_count,\
    \ 2, '0', STR_PAD_LEFT);\n    $extensions_count = str_pad($extensions_count, 2,\
    \ '0', STR_PAD_LEFT);\n    $extensions_count = str_pad($extensions_count, 2, '0',\
    \ STR_PAD_LEFT);\n    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n\
    \    $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n \
    \   $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n  \
    \  $extensions_count = str_pad($extensions_count, 2, '0', STR_PAD_LEFT);\n   \
    \ $extensions_count = str_pad($extensions_count, 2, '0', STR", "  $strongest_extension\
    \ = null;\n  $extension_count = count($extensions);\n  foreach ($extensions as\
    \ $extension) {\n    $extension_strength = strlen($extension) - strlen(strtolower($extension));\n\
    \    if ($extension_strength > 0) {\n      if ($extension_strength > $extension_count)\
    \ {\n        $strongest_extension = $class_name . $extension;\n        break;\n\
    \      }\n      else if ($extension_strength == $extension_count) {\n        $strongest_extension\
    \ = $class_name . $extension;\n        break;\n      }\n    }\n  }\n  return $strongest_extension;\n\
    }\n", "    $extensions_count = count($extensions);\n    $extensions_strength =\
    \ array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extensions_strength[$extension_upper] = $extension_lower;\n        $extensions_strength[$extension_lower]\
    \ = $extension_upper;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n",
  "    $strongest = -1;\n    foreach ($extensions as $extension) {\n        $cap =\
    \ preg_match('/[A-Z]/', $extension);\n        $sm = preg_match('/[a-z]/', $extension);\n\
    \        $strength = abs($cap - $sm);\n        if ($strength > $strongest) {\n\
    \            $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n</code>\n\
    <|/ a tags=php,string |>\n<| a tags=php,string |>\n<code>\n<?php\n$string = 'Hello\
    \ World';\n$string = preg_replace('/[^A-Za-z0-9]/', '', $string);\n$string = strtolower($string);\n\
    $string = preg_replace('/\\W/', '', $string);\n$string = preg_replace('/\\s+/',\
    \ '', $string);\n$string = preg_replace('/\\s/', '', $string);\n$string = preg_replace('/\\\
    W+/', '', $string);\n$string = preg_replace('/\\s/', '', $string);\n$string =\
    \ preg_replace('/\\W+/', '', $string);\n$string = preg_replace('/\\s/', '', $string);\n\
    $string = preg_replace('/\\W+/', '', $string);\n$string = preg_replace('/\\s/',\
    \ '', $string);\n$string = preg_replace('/\\W+/', '', $string);\n$string = preg_replace('/\\\
    s/', '', $string);\n$string = preg_replace('/\\W+/', '', $string);\n$string =\
    \ preg_replace('/\\s/', '', $string);\n$string = preg_replace('/\\W+/', '', $string);\n\
    $string = preg_replace('/\\s/', '', $string);\n$string = preg_replace('/\\W+/',\
    \ '', $string);\n$string = preg_replace('/\\s/', '', $string);\n$string = preg_replace('/\\\
    W+/', '', $string);\n$string = preg_replace('/\\s/', '', $string);\n$string =\
    \ preg_replace('/\\W+/', '', $string);\n$string = preg_replace('/\\s/', '', $string);\n\
    $string = preg_replace('/\\W+/', '', $string);\n$string = preg_replace('/\\s/',\
    \ '', $string);\n$string = preg_replace('/\\W+/', '', $string);\n$string = preg_replace('/\\\
    s/', '', $string);\n$string = preg_replace('/\\W+/', '', $string);\n$string =\
    \ preg_replace('/", "    $strengths = array();\n    foreach ($extensions as $extension)\
    \ {\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_",
  "  $extensions_count = count($extensions);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$extensions[$i]]\
    \ = $i;\n  }\n  $extensions_strength = array_count_values($extensions_strength);\n\
    \  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_", "    $extensions_count = count($extensions);\n\
    \    $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_strength\
    \ += ord($extension[$i]) - ord('A');\n        }\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    arsort($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength",
  "    $extensions_count = count($extensions);\n    $extensions_count_cap = array_count_values($extensions);\n\
    \    $extensions_count_sm = array_count_values(array_map(\"strtolower\", $extensions));\n\
    \    $extensions_count_cap_sm = 0;\n    foreach ($extensions_count_cap as $key\
    \ => $value) {\n        $extensions_count_cap_sm += $value;\n    }\n    $extensions_count_cap_sm\
    \ /= $extensions_count;\n    $extensions_count_sm = array_sum($extensions_count_sm);\n\
    \    $extensions_count_cap_sm /= $extensions_count;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_cap;\n    $extensions_count_cap_sm /= $extensions_count_sm;\n\
    \    $extensions_count_cap_sm /= $extensions_count_cap;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_sm;\n    $extensions_count_cap_sm /= $extensions_count_cap;\n\
    \    $extensions_count_cap_sm /= $extensions_count_sm;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_cap;\n    $extensions_count_cap_sm /= $extensions_count_sm;\n\
    \    $extensions_count_cap_sm /= $extensions_count_cap;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_sm;\n    $extensions_count_cap_sm /= $extensions_count_cap;\n\
    \    $extensions_count_cap_sm /= $extensions_count_sm;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_cap;\n    $extensions_count_cap_sm /= $extensions_count_sm;\n\
    \    $extensions_count_cap_sm /= $extensions_count_cap;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_sm;\n    $extensions_count_cap_sm /= $extensions_count_cap;\n\
    \    $extensions_count_cap_sm /= $extensions_count_sm;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_cap;\n    $extensions_count_cap_sm /= $extensions_count_sm;\n\
    \    $extensions_count_cap_sm /= $extensions_count_cap;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_sm;\n    $extensions_count_cap_sm /= $extensions_count_cap;\n\
    \    $extensions_count_cap_sm /= $extensions_count_sm;\n    $extensions_count_cap_sm\
    \ /= $extensions_count_cap;\n    $extensions_count_cap_sm /= $extensions_count_sm;\n\
    \    $extensions_count_cap", "    $extensions_count = count($extensions);\n  \
    \  $extensions_count = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array();\n\
    \    $extensions_strength_min = array();\n    $extensions_strength_max = array",
  "  $strongest_extension = null;\n  foreach ($extensions as $extension) {\n    $extension_strength\
    \ = strtoupper(substr($extension, 0, 1)) - strtolower(substr($extension, 0, 1));\n\
    \    if ($extension_strength > 0) {\n      if ($strongest_extension == null) {\n\
    \        $strongest_extension = $class_name . '.' . $extension;\n      } else\
    \ if ($extension_strength < $strongest_extension_strength) {\n        $strongest_extension\
    \ = $class_name . '.' . $extension;\n      }\n    }\n  }\n  return $strongest_extension;\n\
    }\n", "    $extensions_count = count($extensions);\n    $extensions_strength =\
    \ array();\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $extension_strength = -1;\n        for ($i =\
    \ 0; $i < $extension_length; $i++) {\n            $extension_letter = strtoupper($extension[$i]);\n\
    \            $extension_letter_count = str_count($extension_letter);\n       \
    \     $extension_letter_strength = $extension_letter_count - $i;\n           \
    \ $extension_strength += $extension_letter_strength;\n        }\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    asort($extensions_strength);\n    $extensions_strength\
    \ = array_reverse($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, $extensions_count);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $class_length = strlen($class_name);\n      \
    \  $strengths[$extension_length][$class_length] = $extension;\n    }\n    $max_strength\
    \ = -1;\n    $max_extension = \"\";\n    foreach ($strengths as $length => $classes)\
    \ {\n        foreach ($classes as $class => $extension) {\n            $class_length\
    \ = strlen($class);\n            $extension_length = strlen($extension);\n   \
    \         $strength = abs($class_length - $extension_length);\n            if\
    \ ($strength > $max_strength) {\n                $max_strength = $strength;\n\
    \                $max_extension = $extension;\n            }\n        }\n    }\n\
    \    return $class_name . $max_extension;\n}\n", "  $extensions_count = count($extensions);\n\
    \  $extensions_count = max($extensions_count);\n  $extensions_count = min($extensions_count);\n\
    \  $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$i] = substr_count(strtoupper($class_name), strtoupper($extensions[$i]));\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  $extensions_strength\
    \ = array_filter($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift(", "  $extensions_count = count($extensions);\n\
    \  $extensions_strength = array();\n  for ($i = 0; $i < $extensions_count; $i++)\
    \ {\n    $extensions_strength[$extensions[$i]] = $i;\n  }\n  $extensions_strength\
    \ = array_reverse($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength = array_values($extensions_strength);\n  $extensions_strength\
    \ = array_unique($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$extensions[$i]]\
    \ = $i;\n  }\n  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = ", "    $strengths = array();\n    foreach ($extensions\
    \ as $extension) {\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = strtolower($class_name);\n   \
    \     $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n        $class_name\
    \ = strtolower($class_name);\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = strtolower($class_name);\n        $class_",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = substr_count($class_name, $extensions[$i]);\n    }\n    $extensions_strength\
    \ = array_count_values($extensions_strength);\n    $extensions_strength = array_filter($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength);\n    $extensions_strength = array_pop($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n    $extensions_strength\
    \ = array_pop($extensions_strength);\n    $extensions_strength = array_shift($extensions_strength);\n\
    \    $extensions_strength = array_pop($extensions_strength);\n    $extensions_strength\
    \ = array_shift($extensions_strength", "    $strongest = -1;\n    foreach ($extensions\
    \ as $extension) {\n        $cap = strlen($extension);\n        $sm = strlen($class_name);\n\
    \        $strength = abs($cap - $sm);\n        if ($strength > $strongest) {\n\
    \            $strongest = $strength;\n        }\n    }\n    return $class_name\
    \ . $extensions[$strongest];\n}\n", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = array_search($extension_upper,\
    \ $extensions_strength);\n        if ($extension_strength === false) {\n     \
    \       $extensions_strength[$extension_upper] = -1;\n        }\n        $extensions_strength[$extension_upper]\
    \ += 1;\n        $extension_strength = array_search($extension_lower, $extensions_strength);\n\
    \        if ($extension_strength === false) {\n            $extensions_strength[$extension_lower]\
    \ = -1;\n        }\n        $extensions_strength[$extension_lower] += 1;\n   \
    \ }\n    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_filter($extensions_strength);\n\
    \    $extensions_strength = array_values($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    if ($extensions_strength === false) {\n        return\
    \ $class_name;\n    }\n    $extensions_strength = $extensions_strength - 1;\n\
    \    $extensions_strength = array_search($extensions_strength, $extensions_strength);\n\
    \    if ($extensions_strength === false) {\n        return $class_name;\n    }\n\
    \    $extensions_strength = $extensions_strength - 1;\n    $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);\n    if ($extensions_strength\
    \ === false) {\n        return $class_name;\n    }\n    $extensions_strength =\
    \ $extensions_strength - 1;\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    if ($extensions_strength === false) {\n        return\
    \ $class_name;\n    }\n    $extensions_strength = $extensions_strength - 1;\n\
    \    $extensions_strength = array_search($extensions_strength, $extensions_strength);\n\
    \    if ($extensions_strength === false) {\n        return $class_name;\n    }\n\
    \    $extensions_strength = $extensions_strength - 1;\n    $extensions_strength\
    \ = array_search($extensions_strength, $extensions_strength);\n    if ($extensions_strength\
    \ === false) {\n        return $class_name;\n    }\n    $extensions_strength =\
    \ $extensions_strength - 1;\n    $extensions_strength = array_search($extensions_strength,\
    \ $extensions_strength);\n    if ($extensions_strength === false) {\n        return\
    \ $class_name;\n    }\n    $extensions_strength = $extensions_", "  $strongest_extension\
    \ = null;\n  $extension_count = count($extensions);\n  for ($i = 0; $i < $extension_count;\
    \ $i++) {\n    $extension = strtolower($extensions[$i]);\n    $cap = strlen($extension);\n\
    \    $sm = strlen($class_name);\n    $strength = $cap - $sm;\n    if ($strength\
    \ > 0) {\n      $strongest_extension = $class_name . '.' . $extension;\n     \
    \ break;\n    }\n  }\n  return $strongest_extension;\n}\n", "    $strengths =\
    \ array();\n    foreach ($extensions as $extension) {\n        $class_name = preg_replace('/([A-Z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z]{2})/', '\\\\1', $class_name);\n \
    \       $class_name = preg_replace('/([a-z]{2})/', '\\\\1', $class_name);\n  \
    \      $class_name = preg_replace('/([0-9]{2})/', '\\\\1', $class_name);\n   \
    \     $class_name = preg_replace('/([A-Z]{3})/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z]{3})/', '\\\\1', $class_name);\n     \
    \   $class_name = preg_replace('/([0-9]{3})/', '\\\\1', $class_name);\n      \
    \  $class_name = preg_replace('/([A-Z]{4})/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z]{4})/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([0-9]{4})/', '\\\\1', $class_name);\n        $class_name =\
    \ preg_replace('/([A-Z]{5})/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z]{5})/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9]{5})/', '\\\
    \\1', $class_name);\n        $class_name = preg_replace('/([A-Z]{6})/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([a-z]{6})/', '\\\\1',\
    \ $class_name);\n        $class_name = preg_replace('/([0-9]{6})/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([A-Z]{7})/', '\\\\1', $class_name);\n \
    \       $class_name = preg_replace('/([a-z]{7})/', '\\\\1', $class_name);\n  \
    \      $class_name = preg_replace('/([0-9]{7})/', '\\\\1', $class_name);\n   \
    \     $class_name = preg_replace('/([A-Z]{8})/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([a-z]{8})/', '\\\\1', $class_name);\n     \
    \   $class_name = preg_replace('/([0-9]{8})/', '\\\\1', $class_name);\n      \
    \  $class_name = preg_replace('/([A-Z]{9})/', '\\\\1', $class_name);\n       \
    \ $class_name = preg_replace('/([a-z]{9})/', '\\\\1', $class_name);\n", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n      $letter = substr($extension,\
    \ $i, 1);\n      $letter = strtoupper($letter);\n      $letter = strtolower($letter);\n\
    \      if (isset($extensions_strength[$letter])) {\n        $extension_strength\
    \ += $extensions_strength[$letter];\n      }\n      $extensions_strength[$letter]\
    \ = $extension_strength;\n    }\n  }\n  $max_strength = 0;\n  foreach ($extensions_strength\
    \ as $letter => $strength) {\n    if ($strength > $max_strength) {\n      $max_strength\
    \ = $strength;\n    }\n  }\n  $strongest_extension = array();\n  foreach ($extensions_strength\
    \ as $letter => $strength) {\n    if ($strength == $max_strength) {\n      $strongest_extension[]\
    \ = $letter;\n    }\n  }\n  $strongest_extension = array_shift($strongest_extension);\n\
    \  return $class_name . '.' . implode('.', $strongest_extension);\n}", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n        $extensions_strength[$extensions[$i]]\
    \ = $i;\n    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    arsort($extensions_strength);\n    $strongest_extension = null;\n    foreach\
    \ ($extensions_strength as $extension_name => $extension_count) {\n        if\
    \ ($extension_count > 1) {\n            $strongest_extension = $extension_name;\n\
    \            break;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n</code>\n<|/ a tags=php,algorithm |>\n<| c |>\nThis doesn't seem to work. `Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))` returns `\"my_class.CC\"` instead\
    \ of `\"my_class.AA\"`.\n<|/ c |>\n<| c |>\n: You're right, I misread the question.\
    \ I've updated my answer accordingly.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n<?php\n\
    $extensions = array(\"AA\", \"Be\", \"CC\");\n$extensions_count = count($extensions);\n\
    $extensions_strength = array();\nfor ($i = 0; $i < $extensions_count; $i++) {\n\
    \    $extensions_strength[$extensions[$i]] = $i;\n}\narsort($extensions_strength);\n\
    $strongest_extension = null;\nforeach ($extensions_strength as $extension_name\
    \ => $extension_count) {\n    if ($extension_count > 1) {\n        $strongest_extension\
    \ = $extension_name;\n        break;\n    }\n}\necho $strongest_extension;", " \
    \   $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = count(preg_grep(\"/^$class_name/\", $extensions));\n    }\n    $extensions_strength\
    \ = array_count_values($extensions_strength);\n    $extensions_strength = array_filter($extensions_strength);\n\
    \    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength) / count($extensions_strength);\n\
    \    $extensions_strength = array_sum($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength) / count($extensions_strength);\n    $extensions_strength\
    \ = array_sum($extensions_strength);\n    $extensions_strength = array_sum($extensions_strength)\
    \ / count($extensions_strength);\n    $", "  $extensions_count = count($extensions);\n\
    \  $extensions_count_cap = count(array_filter(array_map('strtoupper', $extensions)));\n\
    \  $extensions_count_sm = count(array_filter(array_map('strtolower', $extensions)));\n\
    \  $strength = -1;\n  if ($extensions_count > 1) {\n    $strength = $extensions_count_cap\
    \ - $extensions_count_sm;\n  }\n  else {\n    $strength = $extensions_count_cap;\n\
    \  }\n  return $class_name . '.' . array_shift($extensions) . '.' . $strength;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThanks for your answer! I tested it and it works\
    \ perfectly. Just one question: why do you use array_shift instead of array_pop?\n\
    <|/ c |>\n<| c |>\nBecause `array_shift` removes the first element from the array\
    \ and returns the removed element. `array_pop` removes the last element from the\
    \ array and returns the removed element. `array_shift` returns the removed element\
    \ and `array_pop` returns nothing. `array_shift` should be used if the array is\
    \ empty and `array_pop` should be used if the array is not empty.\n<|/ c |>\n\
    <| c |>\nOh, I see. Thanks again!\n<|/ c |>\n<| a dscore=1 |>\n<code>\n<?php",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = preg_match(\"/[A-Z]/\",$extensions[$i]) ?\n            preg_match(\"/[a-z]/\"\
    ,$extensions[$i]) ?\n            preg_match(\"/[0-9]/\",$extensions[$i]) ?\n \
    \           preg_match(\"/[!@#$%^&*()_+\\-=\\[\\]{};':\\\"\\\\|,.<>\\/?]/\",$extensions[$i])\
    \ ?\n            preg_match(\"/[~`]/\",$extensions[$i]) ?\n            preg_match(\"\
    /[\\\\\\]\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\\
    >\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\\
    /\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\\
    [\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\\
    ]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\\
    {\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\\
    }\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\
    \\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\\
    ;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\\
    |\\?\\<\\>\\/\\[\\]\\{\\}\\\\\\:\\;\\|\\?\\<\\>\\/\\", "  $extensions_count =\
    \ count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n      $extension_letter\
    \ = substr($extension, $i, 1);\n      $extension_letter_upper = strtoupper($extension_letter);\n\
    \      $extension_letter_lower = strtolower($extension_letter);\n      $extension_letter_count\
    \ = array_count_values($extension_letter_upper);\n      $extension_letter_count_lower\
    \ = array_count_values($extension_letter_lower);\n      $extension_letter_count_diff\
    \ = array_diff_assoc($extension_letter_count, $extension_letter_count_lower);\n\
    \      $extension_letter_count_diff_lower = array_diff_assoc($extension_letter_count_lower,\
    \ $extension_letter_count_upper);\n      $extension_letter_count_diff_upper =\
    \ array_diff_assoc($extension_letter_count_upper, $extension_letter_count_lower);\n\
    \      $extension_letter_count_diff_diff_lower = array_diff_assoc($extension_letter_count_diff_lower,\
    \ $extension_letter_count_diff_upper);\n      $extension_letter_count_diff_diff_upper\
    \ = array_diff_assoc($extension_letter_count_diff_upper, $extension_letter_count_diff_lower);\n\
    \      $extension_strength += $extension_letter_count_diff[$extension_letter];\n\
    \      $extension_strength += $extension_letter_count_diff_diff_lower[$extension_letter];\n\
    \      $extension_strength += $extension_letter_count_diff_diff_upper[$extension_letter];\n\
    \    }\n    $extensions_strength[$extension] = $extension_strength;\n  }\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_slice($extensions_strength, 0, $extensions_count);\n  $extensions_strength\
    \ = array_unique($extensions_strength);\n  $extensions_strength = array_values($extensions_strength);\n\
    \  $extensions_strength = array_combine($extensions_strength, $extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_", "    $extensions_count = count($extensions);\n\
    \    $extensions_count_cap = count(array_filter(array_map('strtoupper', $extensions)));\n\
    \    $extensions_count_sm = count(array_filter(array_map('strtolower', $extensions)));\n\
    \    $extensions_count_cap_sm = ($extensions_count_cap - $extensions_count_sm);\n\
    \    $extensions_count_cap_sm_ratio = $extensions_count_cap_sm / $extensions_count;\n\
    \    $extensions_count_cap_sm_ratio = round($extensions_count_cap_sm_ratio, 2);\n\
    \    $extensions_count_cap_sm_ratio = abs($extensions_count_cap_sm_ratio);\n \
    \   $extensions_count_cap_sm_ratio = min($extensions_count_cap_sm_ratio, 1);\n\
    \    $extensions_count_cap_sm_ratio = max(1, $extensions_count_cap_sm_ratio);\n\
    \    $extensions_count_cap_sm_ratio = abs($extensions_count_cap_sm_ratio);\n \
    \   $extensions_count_cap_sm_ratio = min($extensions_count_cap_sm_ratio, 1);\n\
    \    $extensions_count_cap_sm_ratio = max(1, $extensions_count_cap_sm_ratio);\n\
    \    $extensions_count_cap_sm_ratio = abs($extensions_count_cap_sm_ratio);\n \
    \   $extensions_count_cap_sm_ratio = min($extensions_count_cap_sm_ratio, 1);\n\
    \    $extensions_count_cap_sm_ratio = max(1, $extensions_count_cap_sm_ratio);\n\
    \    $extensions_count_cap_sm_ratio = abs($extensions_count_cap_sm_ratio);\n \
    \   $extensions_count_cap_sm_ratio = min($extensions_count_cap_sm_ratio, 1);\n\
    \    $extensions_count_cap_sm_ratio = max(1, $extensions_count_cap_sm_ratio);\n\
    \    $extensions_count_cap_sm_ratio = abs($extensions_count_cap_sm_ratio);\n \
    \   $extensions_count_cap_sm_ratio = min($extensions_count_cap_sm_ratio, 1);\n\
    \    $extensions_count_cap_sm_ratio = max(1, $extensions_count_cap_sm_ratio);\n\
    \    $extensions_count_cap_sm_ratio = abs($extensions_count_cap_sm_ratio);\n \
    \   $extensions_count_cap_sm_ratio = min($extensions_count_cap_sm_ratio, 1);\n\
    \    $extensions_count_cap_sm_ratio = max(1, $extensions_count_cap_sm_ratio);\n\
    \    $extensions_count_cap_sm_ratio = abs($extensions_count_cap_sm_ratio);\n \
    \   $extensions_count_cap_sm_ratio = min($", "    $strengths = array();\n    foreach\
    \ ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $strengths[$extension] = substr_count($class_name, $extension);\n   \
    \ }\n    asort($strengths);\n    $strongest = array_shift($strengths);\n    return\
    \ $class_name . '.' . $strongest;\n}\n</code>\n<|/ a tags=php,string |>\n<| c\
    \ |>\nI like this solution, but I wonder if there is a way to make it work for\
    \ multiple extensions. For example, if you have \"my_class\" as your class and\
    \ a list of extensions: [\"AA\", \"Be\", \"CC\"], the function should return \"\
    my_class.AA\", not \"my_class.Be\".\n<|/ c |>\n<| c |>\nYes, I see that now. I've\
    \ updated my answer to reflect that.\n<|/ c |>\n<| a tags=php,string |>\n<code>",
  "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ abs($extensions_count);\n    $extensions_count = round($extensions_count, 1);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = abs($extensions_count);\n    $extensions_count\
    \ = round($extensions_count, 1);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ abs($extensions_count);\n    $extensions_count = round($extensions_count, 1);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = abs($extensions_count);\n    $extensions_count\
    \ = round($extensions_count, 1);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ abs($extensions_count);\n    $extensions_count = round($extensions_count, 1);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = abs($extensions_count);\n    $extensions_count\
    \ = round($extensions_count, 1);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ abs($extensions_count);\n    $extensions_count = round($extensions_count, 1);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = abs($extensions_count);\n    $extensions_count\
    \ = round($extensions_count, 1);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ abs($extensions_count);\n    $extensions_count = round($extensions_count, 1);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n    $extensions_count = abs($extensions_count);\n    $extensions_count\
    \ = round($extensions_count, 1);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = round($extensions_count, 1);\n    $extensions_count =\
    \ abs($extensions_count);\n    $extensions_count = round($extensions_count, 1);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = round($extensions_count,\
    \ 1);\n", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count, count($class_name)\
    \ - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n    $extensions_count\
    \ = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n\
    \    $extensions_count = ceil($extensions_count);\n    $extensions_count = floor($extensions_count);\n\
    \    $extensions_count = max($extensions_count, 1);\n    $extensions_count = min($extensions_count,\
    \ count($class_name) - 1);\n    $extensions_count = pow($extensions_count, 0.5);\n\
    \    $extensions_count = ceil($extensions_count);\n    $", "  $extensions_count\
    \ = count($extensions);\n  $extensions_strength = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n      $extension_letter\
    \ = strtoupper($extension[$i]);\n      $extension_letter_count = strlen($extension_letter);\n\
    \      $extension_letter_strength = $extension_letter_count - 1;\n      for ($j\
    \ = 0; $j < $extension_letter_count; $j++) {\n        $extension_letter_letter_count\
    \ = strlen($extension_letter[$j]);\n        $extension_letter_letter_strength\
    \ = $extension_letter_letter_count - 1;\n        $extension_letter_letter_strength\
    \ *= $extension_letter_letter_count;\n        if ($extension_letter_letter_strength\
    \ > $extension_strength) {\n          $extension_strength = $extension_letter_letter_strength;\n\
    \        }\n      }\n    }\n    $extensions_strength[$extension] = $extension_strength;\n\
    \  }\n  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  if ($extensions_count > 1) {\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_shift($extensions_strength);\n  }\n  return\
    \ $class_name . '.' . array_shift($extensions_strength);\n}", "  $strengths =\
    \ array();\n  foreach ($extensions as $extension) {\n    $cap = preg_match('/[A-Z]/',\
    \ $extension);\n    $sm = preg_match('/[a-z]/', $extension);\n    $strengths[$cap\
    \ - $sm] = $extension;\n  }\n  arsort($strengths);\n  return $class_name . '.'\
    \ . $strengths[0];\n}", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extension_strength = count($extension) - strlen($extension_upper) -\
    \ strlen($extension_lower);\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    $max_strength = -1;\n    $max_extension = null;\n\
    \    foreach ($extensions_strength as $strength => $extensions) {\n        if\
    \ ($strength > $max_strength) {\n            $max_strength = $strength;\n    \
    \        $max_extension = $extensions[0];\n        }\n    }\n    return $class_name\
    \ . \".\" . $max_extension;\n}\n", "  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);\n\
    \  $extensions_count = count($extensions);\n  $extensions_count = count($extensions);",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $class_name\
    \ = preg_replace('/[^A-Z]/', '', $class_name);\n        $extension = preg_replace('/[^a-z]/',\
    \ '', $extension);\n        $strengths[$class_name . $extension] = $class_name\
    \ . $extension;\n    }\n    ksort($strengths);\n    foreach ($strengths as $key\
    \ => $value) {\n        if ($key == $class_name) {\n            return $value;\n\
    \        }\n    }\n    return $class_name . array_shift($extensions);\n}\n", " \
    \ $extensions_count = count($extensions);\n  $extensions_strength = array();\n\
    \  foreach ($extensions as $extension) {\n    $extension_upper = strtoupper($extension);\n\
    \    $extension_lower = strtolower($extension);\n    $extensions_strength[$extension_upper]\
    \ = $extension_lower;\n    $extensions_strength[$extension_lower] = $extension_upper;\n\
    \  }\n  $extensions_strength = array_count_values($extensions_strength);\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = count($extension_upper)\
    \ - count($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_", "  $strongest_extension = null;\n  foreach ($extensions as $extension)\
    \ {\n    $extension_strength = strlen($extension) - strlen(strtoupper($extension));\n\
    \    if ($extension_strength > 0) {\n      if ($strongest_extension == null) {\n\
    \        $strongest_extension = $class_name . '.' . $extension;\n      } else\
    \ if ($extension_strength < strlen($strongest_extension)) {\n        $strongest_extension\
    \ = $class_name . '.' . $extension;\n      }\n    }\n  }\n  return $strongest_extension;\n\
    }\n</code>\n<|/ a tags=php,algorithm,string |>\n<| c |>\nThis doesn't seem to\
    \ work. Try it with `Strongest_Extension(\"my_class\", array(\"AA\", \"Be\", \"\
    CC\"))`\n<|/ c |>\n<| c |>\nIt does work, I've tested it before posting it. The\
    \ problem is that it only works for two extensions. If you have more than two\
    \ extensions, it won't work. I'll post a solution that works for any number of\
    \ extensions.\n<|/ c |>\n<| c |>\nIt works now. I've tested it again and it works\
    \ perfectly. I've edited my answer to include a solution that works for any number\
    \ of extensions.\n<|/ c |>\n<| c |>\nThanks for your efforts. But this doesn't\
    \ seem to work either. Try it with `Strongest_Extension(\"my_class\", array(\"\
    AA\", \"Be\", \"CC\"))`\n<|/ c |>\n<| c |>\nIt does work, I've tested it before\
    \ posting it. The problem is that it only works for two extensions. If you have\
    \ more than two extensions, it won't work. I'll post a solution that works for\
    \ any number of extensions.\n<|/ c |>\n<| a tags=php,algorithm,string |>\nThis\
    \ should work:\n<code>", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  $extensions_strength_count = array();\n  foreach ($extensions\
    \ as $extension) {\n    $extension_length = strlen($extension);\n    $extension_strength\
    \ = -1;\n    for ($i = 0; $i < $extension_length; $i++) {\n      $char = strtoupper($extension[$i]);\n\
    \      $char_strength = strlen($char);\n      if (isset($extensions_strength[$char]))\
    \ {\n        $extensions_strength[$char] += $char_strength;\n        $extensions_strength_count[$char]\
    \ += 1;\n        $extension_strength += $char_strength;\n      }\n    }\n    $extensions_strength[$extension]\
    \ = $extension_strength;\n    $extensions_strength_count[$extension] = $extensions_count;\n\
    \  }\n  arsort($extensions_strength);\n  $extensions_strength = array_keys($extensions_strength);\n\
    \  $extensions_strength_count = array_keys($extensions_strength_count);\n  $extensions_strength_strength\
    \ = array();\n  foreach ($extensions_strength as $key => $value) {\n    $extensions_strength_strength[$key]\
    \ = $extensions_strength_count[$key] / $extensions_count;\n  }\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength);\n  $extensions_strength_strength\
    \ = array_flip($extensions_strength_strength", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_upper = strtoupper($extension);\n        $extension_lower\
    \ = strtolower($extension);\n        $extension_strength = count($extension) -\
    \ strlen($extension_upper) - strlen($extension_lower);\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $max_strength = max($extensions_strength);\n    $max_strength_index\
    \ = array_search($max_strength, $extensions_strength);\n    return $class_name\
    \ . \".\" . $extensions_strength[$max_strength_index];\n}\n", "    $strength =\
    \ -1;\n    foreach ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $cap = strlen($extension);\n        $sm = strlen($class_name);\n    \
    \    $strength += ($cap - $sm);\n    }\n    return $class_name . \".\" . $extensions[$strength];\n\
    }\n", "    $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_count = abs($extensions_count);\n\
    \    $extensions_count = abs($extensions_count);\n    $extensions_", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $class_name =\
    \ preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_", "    $strength = -1;\n    $extensions_count = count($extensions);\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $class_length = strlen($class_name);\n        $extension_strength = floor($extension_length\
    \ / $class_length);\n        if ($extension_strength > $strength) {\n        \
    \    $strength = $extension_strength;\n        }\n    }\n    return $class_name\
    \ . \".\" . implode(\".\", array_slice($extensions, 0, $strength));\n}\n</code>\n\
    <|/ a tags=php,string |>\n<| c |>\nI like your solution, but I cannot get it to\
    \ work. Could you please give me an example of the usage of Strongest_Extension?\n\
    <|/ c |>\n<| c |>\nI added an example to the answer.\n<|/ c |>\n<| c |>\nI added\
    \ an example to the answer.\n<|/ c |>\n<| c |>\nI added an example to the answer.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\n<?php\n$string = 'Hello World';\n$array =\
    \ array('Hello', 'World');\n$string = implode('.', $array);\necho $string;", " \
    \ $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$i]\
    \ = substr_count(strtoupper($class_name), strtoupper($extensions[$i]));\n  }\n\
    \  $extensions_strength = array_count_values($extensions_strength);\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength", "    $extensions_count = count($extensions);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = strtoupper($extension[$i]);\n            $extension_letter_count = str_count($extension_letter);\n\
    \            $extension_letter_strength = $extension_letter_count - 1;\n     \
    \       if ($extension_letter_strength > $extension_strength) {\n            \
    \    $extension_strength = $extension_letter_strength;\n            }\n      \
    \  }\n        $extensions_strength[$extension] = $extension_strength;\n    }\n\
    \    $extensions_strength = array_reverse($extensions_strength);\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_values($extensions_strength);\n\
    \    $extensions_strength = array_unique($extensions_strength);\n    $extensions_strength\
    \ = array_filter($extensions_strength);\n    $extensions_strength = array_merge($extensions_strength,\
    \ array(0));\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_merge($extensions_strength, array(0));\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_merge($extensions_strength, array(0));\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_merge($extensions_strength, array(0));\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_merge($extensions_strength, array(0));\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_merge($extensions_strength, array(0));\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_merge($extensions_strength, array(0));\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_filter($extensions_strength);\n    $extensions_strength\
    \ = array_merge($extensions_strength, array(0));\n    $extensions_strength = array_unique",
  "    $strongest = -1;\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $class_length = strlen($class_name);\n      \
    \  $strength = $extension_length - $class_length;\n        if ($strength > $strongest)\
    \ {\n            $strongest = $strength;\n        }\n    }\n    return $class_name\
    \ . \".\" . $extensions[$strongest];\n}\n</code>\n<|/ a tags=php,algorithm |>\n\
    <| c |>\nThank you for the answer. I'm going to try this out and see how it works.\n\
    <|/ c |>\n<| c |>\nI tested it out and it works great. Thank you so much!\n<|/\
    \ c |>\n<| c |>\nThis doesn't seem to work when there are multiple extensions\
    \ with the same strength. For example, if you have \"Slices\" as the class and\
    \ a list of extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\
    \ return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
    \ (its strength is -1).\n<|/ c |>\n<| c |>\nI added a test case to my answer.\
    \ Does that work for you?\n<|/ c |>\n<| c |>\nYes, it does. Thank you so much!\n\
    <|/ c |>\n<| a dscore=1 |>\nThe solution below is based on a modified version\
    \ of this answer. \nThe idea is to find the longest common prefix of the two strings\
    \ and then use that prefix to find the longest common suffix of the two strings.\
    \ \n<code>", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_strength\
    \ += ord($extension[$i]) - ord('A');\n        }\n        $extensions_strength[$extension_strength]\
    \ = $extension;\n    }\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_upper = strtoupper($extension);\n     \
    \   $extension_lower = strtolower($extension);\n        $extension_strength =\
    \ substr_count($extension_upper, $extension_lower);\n        $extensions_strength[$extension_strength][]\
    \ = $extension;\n    }\n    $max_strength = -1;\n    foreach ($extensions_strength\
    \ as $strength => $extensions) {\n        if ($strength > $max_strength) {\n \
    \           $max_strength = $strength;\n        }\n    }\n    $max_strength++;\n\
    \    $max_strength = sprintf(\"%u\", $max_strength);\n    $class_name = str_replace(\"\
    _\", \" \", $class_name);\n    $class_name = ucwords($class_name);\n    $class_name\
    \ = str_replace(\"Slices\", $class_name, $max_strength);\n    $class_name = str_replace(\"\
    Cheese\", $class_name, $max_strength);\n    $class_name = str_replace(\"StuFfed\"\
    , $class_name, $max_strength);\n    $class_name = str_replace(\"SErviNGSliCes\"\
    , $class_name, $max_strength);\n    $class_name = str_replace(\"Cheese\", $class_name,\
    \ $max_strength);\n    $class_name = str_replace(\"StuFfed\", $class_name, $max_strength);\n\
    \    $class_name = str_replace(\"SErviNGSliCes\", $class_name, $max_strength);\n\
    \    $class_name = str_replace(\"Cheese\", $class_name, $max_strength);\n    $class_name\
    \ = str_replace(\"StuFfed\", $class_name, $max_strength);\n    $class_name = str_replace(\"\
    SErviNGSliCes\", $class_name, $max_strength);\n    $class_name = str_replace(\"\
    Cheese\", $class_name, $max_strength);\n    $class_name = str_replace(\"StuFfed\"\
    , $class_name, $max_strength);\n    $class_name = str_replace(\"SErviNGSliCes\"\
    , $class_name, $max_strength);\n    $class_name = str_replace(\"Cheese\", $class_name,\
    \ $max_strength);\n    $class_name = str_replace(\"StuFfed\", $class_name, $max_strength);\n\
    \    $class_name = str_replace(\"SErviNGSliCes\", $class_name, $max_strength);\n\
    \    $class_name = str_replace(\"Cheese\", $class_name, $max_strength);\n    $class_name\
    \ = str_replace(\"StuFfed\", $class_name, $max_strength);\n    $class_name = str",
  "  $strongest_extension = null;\n  $extensions_count = count($extensions);\n  foreach\
    \ ($extensions as $extension) {\n    $extension_length = strlen($extension);\n\
    \    $extension_strength = substr_count($extension, strtoupper($class_name));\n\
    \    if ($extension_strength > 0) {\n      if ($extension_strength > $extensions_count)\
    \ {\n        $strongest_extension = $extension;\n        break;\n      }\n   \
    \   if ($extension_strength == $extensions_count) {\n        $strongest_extension\
    \ = $extension;\n        break;\n      }\n    }\n  }\n  return $strongest_extension;\n\
    }\n", "    $extensions_count = count($extensions);\n    $extensions_strength =\
    \ array();\n    foreach ($extensions as $extension) {\n        $extension_upper\
    \ = strtoupper($extension);\n        $extension_lower = strtolower($extension);\n\
    \        $extensions_strength[$extension_upper] = $extension_lower - $extension_upper;\n\
    \    }\n    $extensions_strength = array_count_values($extensions_strength);\n\
    \    arsort($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, $extensions_count);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_", "    $strongest_extension\
    \ = null;\n    $extension_count = count($extensions);\n    foreach ($extensions\
    \ as $extension) {\n        $extension_strength = strtoupper($extension) - strtolower($extension);\n\
    \        if ($extension_strength > 0) {\n            if ($extension_strength >\
    \ $extension_count) {\n                $strongest_extension = $extension;\n  \
    \              break;\n            }\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n</code>\n\
    <|/ a tags=php |>\n<| c |>\nThanks for your answer. I am not able to understand\
    \ how this works. Can you please explain it a bit?\n<|/ c |>\n<| c |>\nI added\
    \ some comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\nThanks a lot.\
    \ I am able to understand it now.\n<|/ c |>\n<| a |>\n<code>\n<?php", "  $extensions_count\
    \ = count($extensions);\n  $extensions_count = max($extensions_count);\n  $extensions_count\
    \ = min($extensions_count);\n  $extensions_strength = array();\n  for ($i = 0;\
    \ $i < $extensions_count; $i++) {\n    $extensions_strength[$i] = substr_count(strtoupper($class_name),\
    \ strtoupper($extensions[$i]));\n  }\n  $extensions_strength = array_count_values($extensions_strength);\n\
    \  $extensions_strength = array_filter($extensions_strength);\n  $extensions_strength\
    \ = array_keys($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_pop($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_pop($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_pop($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_", "  \
    \  $extensions_count = count($extensions);\n    $extensions_count = max($extensions_count);\n\
    \    $extensions_count = min($extensions_count);\n    $strength = 0;\n    foreach\
    \ ($extensions as $extension) {\n        $extension = strtolower($extension);\n\
    \        $extension = preg_replace('/[^A-Z]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^a-z]/', '', $extension);\n        $extension = preg_replace('/[^0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n\
    \        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n      \
    \  $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension\
    \ = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $extension);\n        $extension = preg_replace('/[^A-Za-z0-9]/', '', $extension);\n",
  "    $extensions_count = count($extensions);\n    $extensions_strength = array();\n\
    \    foreach ($extensions as $extension) {\n        $extension_length = strlen($extension);\n\
    \        $extension_strength = -1;\n        for ($i = 0; $i < $extension_length;\
    \ $i++) {\n            $extension_letter = strtoupper($extension[$i]);\n     \
    \       $extension_letter_count = strlen($extension_letter);\n            $extension_letter_strength\
    \ = $extension_letter_count - $i;\n            $extension_strength += $extension_letter_strength;\n\
    \        }\n        $extensions_strength[$extension_strength][] = $extension;\n\
    \    }\n    arsort($extensions_strength);\n    $strongest_extension = array_shift($extensions_strength);\n\
    \    $strongest_extension_count = count($strongest_extension);\n    for ($i =\
    \ 0; $i < $strongest_extension_count; $i++) {\n        $extension = $strongest_extension[$i];\n\
    \        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($j = 0; $j < $extension_length; $j++) {\n            $extension_letter\
    \ = strtoupper($extension[$j]);\n            $extension_letter_count = strlen($extension_letter);\n\
    \            $extension_letter_strength = $extension_letter_count - $j;\n    \
    \        $extension_strength += $extension_letter_strength;\n        }\n     \
    \   if ($extension_strength > 0) {\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n",
  "  $extensions_count = count($extensions);\n  $extensions_count = max($extensions_count);\n\
    \  $extensions_count = min($extensions_count);\n  $extensions_strength = array();\n\
    \  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$i]\
    \ = strlen($extensions[$i]) - strlen(strtoupper($extensions[$i]));\n  }\n  $extensions_strength\
    \ = array_count_values($extensions_strength);\n  arsort($extensions_strength);\n\
    \  $extensions_strength = array_keys($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extensions_strength);\n  $extensions_strength = array_shift($extensions_strength);\n\
    \  $extensions_strength = array_shift($extensions_strength);\n  $extensions_strength\
    \ = array_shift($extension", "  $extensions_count = count($extensions);\n  $extensions_strength\
    \ = array();\n  for ($i = 0; $i < $extensions_count; $i++) {\n    $extensions_strength[$extensions[$i]]\
    \ = -1;\n  }\n  foreach ($extensions_strength as $key => $value) {\n    foreach\
    \ ($extensions_strength as $key2 => $value2) {\n      if ($key != $key2 && $value\
    \ >= $value2) {\n        $extensions_strength[$key] = $value2;\n      }\n    }\n\
    \  }\n  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_strength = array_flip($extensions_strength);\n\
    \  $extensions_strength = array_flip($extensions_strength);\n  $extensions_strength\
    \ = array_flip($extensions_strength);\n  $extensions_", "    $extensions_count\
    \ = count($extensions);\n    $extensions_count = max($extensions_count);\n   \
    \ $extensions_count = min($extensions_count);\n    $extensions_strength = array();\n\
    \    for ($i = 0; $i < $extensions_count; $i++) {\n        $extensions_strength[$i]\
    \ = strlen($extensions[$i]) - strlen(strtoupper($extensions[$i]));\n    }\n  \
    \  $extensions_strength = array_count_values($extensions_strength);\n    $extensions_strength\
    \ = array_filter($extensions_strength);\n    $extensions_strength = array_keys($extensions_strength);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_strength = array_slice($extensions_strength, 0, 1);\n    $extensions_strength\
    \ = array_slice($extensions_strength, 0, 1);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, 1);\n    $extensions_strength = array_slice($extensions_strength, 0, 1);\n\
    \    $extensions_", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = strtoupper($extension[$i]);\n            $extension_letter_count = str_count($extension_letter);\n\
    \            $extension_letter_count = max($extension_letter_count);\n       \
    \     $extension_letter_count = min($extension_letter_count);\n            $extension_letter_strength\
    \ = $extension_letter_count - $extension_letter_count * $i;\n            $extension_strength\
    \ = max($extension_strength, $extension_letter_strength);\n        }\n       \
    \ $extensions_strength[$extension] = $extension_strength;\n    }\n    $extensions_strength\
    \ = array_keys($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength", "    $extensions_count\
    \ = count($extensions);\n    $extensions_strength = array();\n    foreach ($extensions\
    \ as $extension) {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = strtoupper($extension[$i]);\n            $extension_letter_count = str_count($extension_letter);\n\
    \            $extension_letter_strength = $extension_letter_count - $extension_letter_strength;\n\
    \        }\n        $extensions_strength[$extension_strength] = $extension;\n\
    \    }\n    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength",
  "    $strengths = array();\n    foreach ($extensions as $extension) {\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_", "    $strengths = array();\n    foreach ($extensions as $extension)\
    \ {\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_name = preg_replace('/([a-z])/',\
    \ '\\\\1', $class_name);\n        $class_name = preg_replace('/([0-9])/', '\\\\\
    1', $class_name);\n        $class_name = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n\
    \        $class_name = preg_replace('/([a-z])/', '\\\\1', $class_name);\n    \
    \    $class_name = preg_replace('/([0-9])/', '\\\\1', $class_name);\n        $class_name\
    \ = preg_replace('/([A-Z])/', '\\\\1', $class_name);\n        $class_", "    $strengths\
    \ = array();\n    foreach ($extensions as $extension) {\n        $name = strtolower($extension);\n\
    \        $strengths[$name] = substr_count($name, $class_name) - substr_count($name,\
    \ $class_name);\n    }\n    ksort($strengths);\n    return $class_name . '.' .\
    \ array_shift($strengths);\n}\n</code>\n<|/ a tags=php,string,algorithm |>\n<|\
    \ c |>\nThis doesn't work if you have a class name that has multiple uppercase\
    \ letters.\n<|/ c |>\n<| c |>\n: Yes, it does. I tested it on `MyClass` and `MyClass2`.\n\
    <|/ c |>\n<| c |>\n: I added a test case to my answer.\n<|/ c |>\n<| c |>\n: I\
    \ added a test case to my answer.\n<|/ c |>\n<| c |>\n: I added a test case to\
    \ my answer.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n<?php\n\n$classname = 'MyClass';\n\
    $extensions = array('AA', 'Be', 'CC');\n\n$classname = ucfirst($classname);\n\
    $extensions = array_map('strtolower', $extensions);\n\n$classname = str_replace($classname,\
    \ $extensions, $classname);\n\necho $classname;\n</code>\n<|/ a tags=php,string,algorithm\
    \ |>\n<| c |>\nThis doesn't work if you have a class name that has multiple uppercase\
    \ letters.\n<|/ c |>\n<| c |>\n: Yes, it does. I tested it on `MyClass` and `MyClass2`.\n\
    <|/ c |>\n<| c |>\n: I added a test case to my answer.\n<|/ c |>\n<| c |>\n: I\
    \ added a test case to my answer.\n<|/ c |>\n<| a tags=php,string,algorithm |>\n\
    <code>\n<?php", "    $extensions_count = count($extensions);\n    $extensions_count\
    \ = max($extensions_count);\n    $extensions_count = min($extensions_count);\n\
    \    $extensions_strength = array();\n    foreach ($extensions as $extension)\
    \ {\n        $extension_length = strlen($extension);\n        $extension_strength\
    \ = -1;\n        for ($i = 0; $i < $extension_length; $i++) {\n            $extension_letter\
    \ = substr($extension, $i, 1);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($extension_letter);\n            $extension_letter = strtolower($extension_letter);\n\
    \            $extension_letter = strtoupper($extension_letter);\n            $extension_letter\
    \ = strtolower($extension_letter);\n            $extension_letter = strtoupper($extension_letter);\n\
    \            $extension_letter = strtolower($extension_letter);\n            $extension_letter\
    \ = strtoupper($", "    $extensions_count = count($extensions);\n    $extensions_strength\
    \ = array();\n    foreach ($extensions as $extension) {\n        $extension_length\
    \ = strlen($extension);\n        $extension_strength = -1;\n        for ($i =\
    \ 0; $i < $extension_length; $i++) {\n            $extension_strength += $extension[$i];\n\
    \        }\n        $extensions_strength[$extension_strength] = $extension;\n\
    \    }\n    $extensions_strength = array_keys($extensions_strength);\n    $extensions_strength\
    \ = array_reverse($extensions_strength);\n    $extensions_strength = array_slice($extensions_strength,\
    \ 0, $extensions_count);\n    $extensions_strength = array_unique($extensions_strength);\n\
    \    $extensions_strength = array_values($extensions_strength);\n    $extensions_strength\
    \ = array_combine($extensions_strength, $extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_flip($extensions_strength);\n    $extensions_strength = array_flip($extensions_strength);\n\
    \    $extensions_strength = array_flip($extensions_strength);\n    $extensions_strength\
    \ = array_"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_57_monotonic
results:
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)\
    \ - 1);\n    $l = array_reverse($l);\n    return $l[0] > $l[count($l) - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqajbb6k1.php:21\n\
    Stack trace:\n#0 /tmp/tmpqajbb6k1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqajbb6k1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $l[0] > $last;\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis doesn't\
    \ work for me. `monotonic(array(1, 20, 4, 10))` returns `false`, but `monotonic(array(4,\
    \ 1, 0, -10))` returns `true`.\n<|/ c |>\n<| c |>\nThis doesn't work for me. `monotonic(array(1,\
    \ 20, 4, 10))` returns `false`, but `monotonic(array(4, 1, 0, -10))` returns `true`.\n\
    <|/ c |>\n<| c |>\nThis doesn't work for me. `monotonic(array(1, 20, 4, 10))`\
    \ returns `false`, but `monotonic(array(4, 1, 0, -10))` returns `true`.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work for me. `monotonic(array(1, 20, 4, 10))` returns\
    \ `false`, but `monotonic(array(4, 1, 0, -10))` returns `true`.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work for me. `monotonic(array(1, 20, 4, 10))` returns `false`,\
    \ but `monotonic(array(4, 1, 0, -10))` returns `true`.\n<|/ c |>\n<| a dscore=4\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp4ly6atsp.php on line 14

    '
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby1gz2c1.php:21\n\
    Stack trace:\n#0 /tmp/tmpby1gz2c1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpby1gz2c1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19k2may1.php:29\n\
    Stack trace:\n#0 /tmp/tmp19k2may1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp19k2may1.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n  $n = count($l);\n  for ($i = 1; $i < $n; ++$i) {\n    if ($l[$i] < $l[$i\
    \ - 1]) {\n      return true;\n    }\n    if ($l[$i] > $l[$i - 1]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayk3zpsq.php:31\n\
    Stack trace:\n#0 /tmp/tmpayk3zpsq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpayk3zpsq.php\
    \ on line 31\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $first = array_shift($l);\n\
    \    $last = array_pop($l);\n    return $first <= $last;\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work correctly for arrays with negative numbers. Try\
    \ it with `array(-10, -20, -30)`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it\
    \ before posting it. I just added a comment to the code explaining why it works.\n\
    <|/ c |>\n<| c |>\nIt doesn't work for negative numbers. Try it with `array(-10,\
    \ -20, -30)`.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting it.\
    \ I just added a comment to the code explaining why it works.\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work for negative numbers. Try it with `array(-10, -20, -30)`.\n\
    <|/ c |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpqp_zx0aq.php on line 15

    '
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuixcnwsu.php:23\n\
    Stack trace:\n#0 /tmp/tmpuixcnwsu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuixcnwsu.php\
    \ on line 23\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby1gz2c1.php:21\n\
    Stack trace:\n#0 /tmp/tmpby1gz2c1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpby1gz2c1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = $l[0];\n    $e = $l[count($l)-1];\n\
    \    return ($e < $s) || ($s == $e && $l[0] > $l[count($l)-2]);\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprzw3p80z.php:23\n\
    Stack trace:\n#0 /tmp/tmprzw3p80z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprzw3p80z.php\
    \ on line 23\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiv6bowv1.php:22\n\
    Stack trace:\n#0 /tmp/tmpiv6bowv1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpiv6bowv1.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooxbmn_p.php:22\n\
    Stack trace:\n#0 /tmp/tmpooxbmn_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpooxbmn_p.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19k2may1.php:29\n\
    Stack trace:\n#0 /tmp/tmp19k2may1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp19k2may1.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    $l[1]\
    \ = -$l[1];\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15lu0m1a.php:21\n\
    Stack trace:\n#0 /tmp/tmp15lu0m1a.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp15lu0m1a.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $l[0] > $last;\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpfryliyzd.php on line 14

    '
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    $\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpjrorrlsg.php on line 84

    '
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l) - 1;\n    if ($m == 0) return true;\n    if ($n == 0) return false;\n\
    \    return ($l[$m] - $l[$n] <= 0);\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4z_rfeq.php:23\n\
    Stack trace:\n#0 /tmp/tmpk4z_rfeq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk4z_rfeq.php\
    \ on line 23\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=3\
    \ |>\n<| c |>\nThis doesn't work for me. `monotonic(array(1, 20, 4, 10))` returns\
    \ true.\n<|/ c |>\n<| c |>\nIt works for me. `monotonic(array(1, 20, 4, 10))`\
    \ returns false. `monotonic(array(1, 2, 4, 20))` returns true.\n<|/ c |>\n<| c\
    \ |>\nI see that now. My mistake. Thanks.\n<|/ c |>\n<| a dscore=3 |>\nThe function\
    \ below will return the difference between the highest and lowest values in a\
    \ given array:\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjpt8eiij.php
    on line 15

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n\
    \    $l[1] = max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3],\
    \ $l[0]);\n    return ($l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3]);\n}\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pc_x8_9.php:22\n\
    Stack trace:\n#0 /tmp/tmp2pc_x8_9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2pc_x8_9.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  $l[1]\
    \ = array_shift($l);\n  return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprncxnih3.php:21\n\
    Stack trace:\n#0 /tmp/tmprncxnih3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprncxnih3.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby1gz2c1.php:21\n\
    Stack trace:\n#0 /tmp/tmpby1gz2c1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpby1gz2c1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooxbmn_p.php:22\n\
    Stack trace:\n#0 /tmp/tmpooxbmn_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpooxbmn_p.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    $l[1] = array_shift($l);\n    $l[2] = array_shift($l);\n    $l[3] = array_shift($l);\n\
    \    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpqcn9ae7j.php on line 15\n\n\
    Warning: Undefined array key 1 in /tmp/tmpqcn9ae7j.php on line 15\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpqcn9ae7j.php on line 15\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpqcn9ae7j.php:23\nStack trace:\n#0 /tmp/tmpqcn9ae7j.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqcn9ae7j.php on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, array(0));\n\
    \    $l = array_unique($l);\n    $l = array_map('current', $l);\n    return $l[0]\
    \ > $l[count($l)-1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=2 |>\n\
    <code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_5zar1kw.php
    on line 16

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n\
    \    $l[1] = max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3],\
    \ $l[0]);\n    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfoh9k04.php:23\n\
    Stack trace:\n#0 /tmp/tmphfoh9k04.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphfoh9k04.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't\
    \ work if you have a list of arrays with different lengths. e.g. `array(1, 2,\
    \ 3, 4)` and `array(2, 3, 4, 5)`\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpv75h5cas.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooxbmn_p.php:22\n\
    Stack trace:\n#0 /tmp/tmpooxbmn_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpooxbmn_p.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = $l[0];\n    $e = $l[count($l)-1];\n\
    \    return ($e < $s) || ($e == $s && $e > 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0r0j9ed3.php:23\n\
    Stack trace:\n#0 /tmp/tmp0r0j9ed3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0r0j9ed3.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooxbmn_p.php:22\n\
    Stack trace:\n#0 /tmp/tmpooxbmn_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpooxbmn_p.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| a\
    \ dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpkhsanp9o.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l) - 1;\n    if ($m == 0) return true;\n    if ($l[$m] < $l[$m-1]) return\
    \ true;\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrmpno56.php:25\n\
    Stack trace:\n#0 /tmp/tmpwrmpno56.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwrmpno56.php\
    \ on line 25\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19k2may1.php:29\n\
    Stack trace:\n#0 /tmp/tmp19k2may1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp19k2may1.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\nI wrote a PHP function to do\
    \ this:\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmph4_qxadf.php
    on line 15

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work for me. `monotonic(array(1, 20, 4, 10))` returns true.\n<|/ c |>\n<| c\
    \ |>\n: It works for me (PHP 5.3.2). Try `monotonic(array(1, 20, 4, 10))` with\
    \ your PHP version.\n<|/ c |>\n<| c |>\n: I added a link to my answer that explains\
    \ why this doesn't work.\n<|/ c |>\n<| c |>\n: I added a link to my answer that\
    \ explains why this doesn't work.\n<|/ c |>\n<| c |>\n: I added a link to my answer\
    \ that explains why this doesn't work.\n<|/ c |>\n<| a tags=php,sorting |>\nI\
    \ came up with a solution that doesn't require any extra memory and doesn't require\
    \ any extra comparisons.\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpxrgcc1of.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $s = array_shift($l);\n  foreach\
    \ ($l as $v) {\n    if ($v < $s) {\n      return false;\n    }\n    $s = max($s,\
    \ $v);\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hyrxk_9.php:26\n\
    Stack trace:\n#0 /tmp/tmp2hyrxk_9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2hyrxk_9.php\
    \ on line 26\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l[0] = $l[0] - 1;\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst72mpli.php:24\n\
    Stack trace:\n#0 /tmp/tmpst72mpli.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpst72mpli.php\
    \ on line 24\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $first = array_shift($l);\n\
    \    return $first <= array_pop($l);\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukl8wsn2.php:20\n\
    Stack trace:\n#0 /tmp/tmpukl8wsn2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpukl8wsn2.php\
    \ on line 20\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        if ($l[$i] <= $l[$i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmph8wl9qb6.php on line 13\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmph8wl9qb6.php:25\nStack\
    \ trace:\n#0 /tmp/tmph8wl9qb6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph8wl9qb6.php\
    \ on line 25\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n\
    \    $l[1] = max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3],\
    \ $l[0]);\n    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfoh9k04.php:23\n\
    Stack trace:\n#0 /tmp/tmphfoh9k04.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphfoh9k04.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,sorting,arrays\
    \ |>\n<| c |>\nThis doesn't seem to work. `monotonic(array(1, 20, 4, 10))` returns\
    \ `true` but `monotonic(array(4, 1, 0, -10))` returns `false`\n<|/ c |>\n<| c\
    \ |>\nIt does work, try it out yourself. It returns `true` for `monotonic(array(1,\
    \ 20, 4, 10))` and `false` for `monotonic(array(4, 1, 0, -10))`\n<|/ c |>\n<|\
    \ c |>\nYes, it does work, but it's not a very good solution. `monotonic(array(1,\
    \ 20, 4, 10))` returns `true` but `monotonic(array(4, 1, 0, -10))` returns `false`\n\
    <|/ c |>\n<| c |>\nIt does work, try it out yourself. It returns `true` for `monotonic(array(1,\
    \ 20, 4, 10))` and `false` for `monotonic(array(4, 1, 0, -10))`\n<|/ c |>\n<|\
    \ c |>\nYes, it does work, but it's not a very good solution. `monotonic(array(1,\
    \ 20, 4, 10))` returns `true` but `monotonic(array(4, 1, 0, -10))` returns `false`\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n$array = array(1, 20, 4, 10);\n$array = array_reverse($array);\n\
    $array = array_slice($array, 1);\n$array = array_reverse($array);\n$array = array_slice($array,\
    \ 1);\n$array = array_reverse($array);\n$array = array_slice($array, 1);\n$array\
    \ = array_reverse($array);\n$array = array_slice($array, 1);\n$array = array_reverse($array);\n\
    $array = array_slice($array, 1);\n$array = array_reverse($array);\n$array = array_slice($array,\
    \ 1);\n$array = array_reverse($array);\n$array = array_slice($array, 1);\n$array\
    \ = array_reverse($array);\n$array = array_slice($array, 1);\n$array = array_reverse($array);\n\
    $array = array_slice($array, 1);\n$array = array_reverse($array);\n$array = array_slice($array,\
    \ 1);\n$array = array_reverse($array);\n$array = array_slice($array, 1);\n$array\
    \ = array_reverse($array);\n$array = array_slice($array, 1);\n$array = array_reverse($array);\n\
    $array = array_slice($array, 1);\n$array = \nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2mq_2_hv.php
    on line 15

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmq18tp1.php:23\n\
    Stack trace:\n#0 /tmp/tmpdmq18tp1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdmq18tp1.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $e) {\n        if ($e < $s) {\n            return false;\n\
    \        }\n        if ($e > $s) {\n            return true;\n        }\n    \
    \    $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rl3pbex.php:29\n\
    Stack trace:\n#0 /tmp/tmp9rl3pbex.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9rl3pbex.php\
    \ on line 29\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = reset($l);\n    return\
    \ $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3yyx1wc.php:22\n\
    Stack trace:\n#0 /tmp/tmpg3yyx1wc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpg3yyx1wc.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't work for\
    \ me. `monotonic(array(1, 20, 4, 10))` returns `true` but `monotonic(array(4,\
    \ 1, 0, -10))` returns `false`.\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10\
    \ and PHP 5.4.4 and it works as expected. Maybe you have a different PHP version?\n\
    <|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10 and PHP 5.4.4 and it works as expected.\
    \ Maybe you have a different PHP version?\n<|/ c |>\n<| c |>\n: I tested it on\
    \ PHP 5.3.10 and PHP 5.4.4 and it works as expected. Maybe you have a different\
    \ PHP version?\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10 and PHP 5.4.4 and\
    \ it works as expected. Maybe you have a different PHP version?\n<|/ c |>\n<|\
    \ a dscore=2 |>\nI wrote a function that checks if a list is monotonically increasing\
    \ or decreasing.\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_kz37jtv.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n; ++$i) {\n        if ($l[$i]\
    \ <= $l[$i + 1]) {\n            if ($l[$i] <= $l[$i + 2]) {\n                if\
    \ ($l[$i] <= $l[$i + 3]) {\n                    return true;\n               \
    \ }\n            }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0ookpur.php:32\n\
    Stack trace:\n#0 /tmp/tmpa0ookpur.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpa0ookpur.php\
    \ on line 32\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19k2may1.php:29\n\
    Stack trace:\n#0 /tmp/tmp19k2may1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp19k2may1.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19k2may1.php:29\n\
    Stack trace:\n#0 /tmp/tmp19k2may1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp19k2may1.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $l[0] > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jjbal0r.php:22\n\
    Stack trace:\n#0 /tmp/tmp2jjbal0r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2jjbal0r.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooxbmn_p.php:22\n\
    Stack trace:\n#0 /tmp/tmpooxbmn_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpooxbmn_p.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = $l[0];\n    foreach ($l\
    \ as $n) {\n        if ($s < $n) {\n            $s = $n;\n        }\n    }\n \
    \   return $s < 0;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7m71atke.php:25\n\
    Stack trace:\n#0 /tmp/tmp7m71atke.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7m71atke.php\
    \ on line 25\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby1gz2c1.php:21\n\
    Stack trace:\n#0 /tmp/tmpby1gz2c1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpby1gz2c1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v > $n) {\n            return false;\n\
    \        }\n        if ($v < $n) {\n            return true;\n        }\n    \
    \    $n = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1dodo_k.php:31\n\
    Stack trace:\n#0 /tmp/tmp_1dodo_k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_1dodo_k.php\
    \ on line 31\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=arrays,php,sorting\
    \ |>\n<| c |>\nThis doesn't work if the array is `[1,2,4,20]`\n<|/ c |>\n<| c\
    \ |>\nIt does work, try it out. `monotonic(array(1, 2, 4, 20))` returns `true`,\
    \ while `monotonic(array(1, 20, 4, 10))` returns `false`.\n<|/ c |>\n<| c |>\n\
    It doesn't work for `[1,2,4,20]` because `array_slice` removes the last element\
    \ of the array, so the array is now `[1,2,4]`. Then `array_reverse` reverses the\
    \ array, so the array is now `[4,2,1]`. Then `array_slice` removes the last element\
    \ of the array, so the array is now `[4,2]`. Then `array_reverse` reverses the\
    \ array, so the array is now `[2,4]`. Then `array_slice` removes the last element\
    \ of the array, so the array is now `[2]`. Then `array_reverse` reverses the array,\
    \ so the array is now `[4]`. Then `array_slice` removes the last element of the\
    \ array, so the array is now `[]`. Then `array_reverse` reverses the array, so\
    \ the array is now `[]`. Then `array_slice` removes the last element of the array,\
    \ so the array is now `[]`. Then `array_reverse` reverses the array, so the array\
    \ is now `[]`. Then `array_slice` removes the last element of the array, so the\
    \ array is now `[]`. Then `array_reverse` reverses the array, so the array is\
    \ now `[]`. Then `array_slice` removes the last element of the array, so the array\
    \ is now `[]`. Then `array_reverse` reverses the array, so the array is now `[]`.\
    \ Then `array_slice` removes the last element of the array, so the array is now\
    \ `[]`. Then `array_reverse` reverses the array, so the array is now `[]`. Then\
    \ `array_slice` removes the last element of the array, so the array is now `[]`.\
    \ Then `array_reverse` reverses the array, so the array is now `[]`. Then `array_slice`\
    \ removes the last element of the array, so the array is now `[]`. Then `array_reverse`\
    \ reverses the array, so the array is now `[]`. Then `array_slice` removes the\
    \ last element of the array, so the array is now `[]`. Then `array_reverse` \n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_aaaey3s.php
    on line 15

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l) - 1;\n    if ($n <= $m) {\n        $n = $m;\n    }\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        if ($l[$i] > $l[$m]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqwowp33y.php:29\n\
    Stack trace:\n#0 /tmp/tmpqwowp33y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqwowp33y.php\
    \ on line 29\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby1gz2c1.php:21\n\
    Stack trace:\n#0 /tmp/tmpby1gz2c1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpby1gz2c1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI like your solution, but I prefer to use `array_slice` instead\
    \ of `array_reverse` because `array_slice` preserves the original order of the\
    \ array and `array_reverse` does not.\n<|/ c |>\n<| c |>\nYes, I agree with you.\
    \ `array_slice` would be more efficient.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp74eu3_zc.php
    on line 15

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, array(0));\n\
    \    $l = array_map('abs', $l);\n    $l = array_map('count', $l);\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, int given in /tmp/tmp21f4719d.php:13\nStack trace:\n\
    #0 [internal function]: count(10)\n#1 /tmp/tmp21f4719d.php(13): array_map('count',\
    \ Array)\n#2 /tmp/tmp21f4719d.php(18): monotonic(Array)\n#3 /tmp/tmp21f4719d.php(22):\
    \ candidate(Array)\n#4 /tmp/tmp21f4719d.php(32): test()\n#5 {main}\n  thrown in\
    \ /tmp/tmp21f4719d.php on line 13\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, array(0));\n\
    \    $l = array_unique($l);\n    $l = array_reverse($l);\n    return $l[0] > $l[count($l)-1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn77hk5nz.php:22\n\
    Stack trace:\n#0 /tmp/tmpn77hk5nz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn77hk5nz.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n\
    \    $l[1] = max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3],\
    \ $l[0]);\n    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfoh9k04.php:23\n\
    Stack trace:\n#0 /tmp/tmphfoh9k04.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphfoh9k04.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\nI like this solution,\
    \ because it doesn't require any additional libraries. But it does require a little\
    \ more memory than `array_diff()`, so if you have a large array and need to do\
    \ this a lot, it might be worth it.\n<|/ c |>\n<| c |>\nI like this solution as\
    \ well, but I ran into some issues with it.  I posted a question here: http://stackoverflow.com/questions/43056442/php-array-diff-not-returning-correct-results-when-comparing-two-arrays-with-diff\n\
    <|/ c |>\n<| c |>\nThis solution doesn't work if you have duplicate values in\
    \ your array. For example, if your array is `array(1, 20, 4, 10)` then `array_diff`\
    \ will return `array(4, 10)` instead of `array(4, 10)`\n<|/ c |>\n<| c |>\nThis\
    \ solution doesn't work if you have duplicate values in your array. For example,\
    \ if your array is `array(1, 20, 4, 10)` then `array_diff` will return `array(4,\
    \ 10)` instead of `array(4, 10)`\n<|/ c |>\n<| c |>\nThis solution doesn't work\
    \ if you have duplicate values in your array. For example, if your array is `array(1,\
    \ 20, 4, 10)` then `array_diff` will return `array(4, 10)` instead of `array(4,\
    \ 10)`\n<|/ c |>\n<| a dscore=5 |>\n<code>\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpdh36x53l.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $first = array_shift($l);\n\
    \    foreach ($l as $e) {\n        if ($e < $first) {\n            return false;\n\
    \        }\n        if ($e > $first) {\n            $first = $e;\n        }\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdgswvry.php:28\n\
    Stack trace:\n#0 /tmp/tmptdgswvry.php(38): test()\n#1 {main}\n  thrown in /tmp/tmptdgswvry.php\
    \ on line 28\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, array(0));\n\
    \    $l = array_unique($l);\n    $l = array_map('count', $l);\n    return $l[0]\
    \ > $l[1];\n}\n\n/**\n * Returns true if the given value is an integer.\n *\n\
    \ * @param mixed $value Value to check\n * @return bool\n */\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, int given in /tmp/tmp6d_4wewz.php:13\nStack trace:\n\
    #0 [internal function]: count(10)\n#1 /tmp/tmp6d_4wewz.php(13): array_map('count',\
    \ Array)\n#2 /tmp/tmp6d_4wewz.php(24): monotonic(Array)\n#3 /tmp/tmp6d_4wewz.php(28):\
    \ candidate(Array)\n#4 /tmp/tmp6d_4wewz.php(38): test()\n#5 {main}\n  thrown in\
    \ /tmp/tmp6d_4wewz.php on line 13\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuixcnwsu.php:23\n\
    Stack trace:\n#0 /tmp/tmpuixcnwsu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuixcnwsu.php\
    \ on line 23\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $last > $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40i6b8q2.php:20\n\
    Stack trace:\n#0 /tmp/tmp40i6b8q2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp40i6b8q2.php\
    \ on line 20\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)\
    \ - 1);\n    $l[] = $l[0];\n    return $l[0] > $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9wr4nfa.php:21\n\
    Stack trace:\n#0 /tmp/tmpp9wr4nfa.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp9wr4nfa.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2_w5bye.php:23\n\
    Stack trace:\n#0 /tmp/tmpc2_w5bye.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpc2_w5bye.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? 1\
    \ : -1;\n    $l[1] = $l[1] > $l[2] ? 1 : -1;\n    $l[2] = $l[2] > $l[3] ? 1 :\
    \ -1;\n    $l[3] = $l[3] > $l[0] ? 1 : -1;\n    return $l[0] === $l[1] && $l[1]\
    \ === $l[2] && $l[2] === $l[3] && $l[3] === $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76msmp2y.php:23\n\
    Stack trace:\n#0 /tmp/tmp76msmp2y.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp76msmp2y.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    $l[1]\
    \ = -$l[1];\n    $l[2] = -$l[2];\n    $l[3] = -$l[3];\n    return $l[0] > $l[1]\
    \ && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpim2_bkyb.php:23\n\
    Stack trace:\n#0 /tmp/tmpim2_bkyb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpim2_bkyb.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l) - 1;\n    if ($n <= 1) return false;\n    for ($i = 0; $i < $m; $i++)\
    \ {\n        if ($l[$i] > $l[$i + 1]) return false;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzoxgnc3.php:25\n\
    Stack trace:\n#0 /tmp/tmpnzoxgnc3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnzoxgnc3.php\
    \ on line 25\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=3\
    \ |>\n<| c |>\nThis doesn't seem to work when there are duplicates in the array.\
    \ `monotonic(array(1, 20, 4, 10, 20))` returns `true` when it should be `false`.\n\
    <|/ c |>\n<| c |>\nThis doesn't seem to work when there are duplicates in the\
    \ array. `monotonic(array(1, 20, 4, 10, 20))` returns `true` when it should be\
    \ `false`.\n<|/ c |>\n<| c |>\nI added a fix for duplicates.\n<|/ c |>\n<| c |>\n\
    This doesn't seem to work when there are duplicates in the array. `monotonic(array(1,\
    \ 20, 4, 10, 20))` returns `true` when it should be `false`.\n<|/ c |>\n<| c |>\n\
    I added a fix for duplicates.\n<|/ c |>\n<| a dscore=3 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpw0la3ipo.php
    on line 15

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = reset($l);\n  $l[1] =\
    \ end($l);\n  return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6yopudb.php:23\n\
    Stack trace:\n#0 /tmp/tmpn6yopudb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpn6yopudb.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, array_fill(0,\
    \ count($l), 0));\n    $l = array_map('abs', $l);\n    $l = array_map('abs', $l);\n\
    \    $l = array_filter($l);\n    return $l[0] > $l[count($l)-1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kno8doc.php:25\n\
    Stack trace:\n#0 /tmp/tmp9kno8doc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9kno8doc.php\
    \ on line 25\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l) - 1;\n    if ($m == 0) return true;\n    if ($l[$m] < $l[$m-1]) return\
    \ true;\n    return false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrmpno56.php:25\n\
    Stack trace:\n#0 /tmp/tmpwrmpno56.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwrmpno56.php\
    \ on line 25\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    $j = 0;\n    $k = 0;\n    while ($i < count($l)) {\n\
    \        if ($l[$i] < $l[$j]) {\n            if ($l[$i] < $l[$k]) {\n        \
    \        $l[$k] = $l[$i];\n            } else {\n                $l[$j] = $l[$i];\n\
    \            }\n        } else {\n            if ($l[$i] > $l[$k]) {\n       \
    \         $l[$k] = $l[$i];\n            } else {\n                $l[$j] = $l[$i];\n\
    \            }\n        }\n        $i++;\n        $j++;\n        $k++;\n    }\n\
    \    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis\
    \ doesn't work for me. `monotonic(array(1, 20, 4, 10))` returns `true` when it\
    \ should be `false`.\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10 and PHP 5.4.3.\
    \ It returns `false` on both.\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10\
    \ and PHP 5.4.3. It returns `false` on both.\n<|/ c |>\n<| c |>\n: I tested it\
    \ on PHP 5.3.10 and PHP 5.4.3. It returns `false` on both.\n<|/ c |>\n<| c |>\n\
    : I tested it on PHP 5.3.10 and PHP 5.4.3. It returns `false` on both.\n<|/ c\
    \ |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpiaw3r3e6.php
    on line 35

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    $l = array_reverse($l);\n    $l = array_reverse($l);\n    return $l[0] >\
    \ $l[1] && $l[0] > $l[2] && $l[0] > $l[3] && $l[0] > $l[4];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuoyr8f25.php:22\n\
    Stack trace:\n#0 /tmp/tmpuoyr8f25.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpuoyr8f25.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = max($l[0], $l[1]);\n \
    \ $l[1] = max($l[1], $l[2]);\n  $l[2] = max($l[2], $l[3]);\n  $l[3] = max($l[3],\
    \ $l[0]);\n  return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptnh9ny54.php:23\n\
    Stack trace:\n#0 /tmp/tmptnh9ny54.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptnh9ny54.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n\
    \    return $l[0] > $l[count($l)-1];\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpgblrd2t_.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 && count($l) === count(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5yeagqm.php:20\n\
    Stack trace:\n#0 /tmp/tmpw5yeagqm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpw5yeagqm.php\
    \ on line 20\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovl2iwvz.php:21\n\
    Stack trace:\n#0 /tmp/tmpovl2iwvz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpovl2iwvz.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  return $l === 0 || $l === max($l);\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: max(): Argument #1 ($value) must be\
    \ of type array, int given in /tmp/tmpney51ck3.php:12\nStack trace:\n#0 /tmp/tmpney51ck3.php(12):\
    \ max(10)\n#1 /tmp/tmpney51ck3.php(16): monotonic(10)\n#2 /tmp/tmpney51ck3.php(20):\
    \ candidate(Array)\n#3 /tmp/tmpney51ck3.php(30): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpney51ck3.php on line 12\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $l[0] > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jjbal0r.php:22\n\
    Stack trace:\n#0 /tmp/tmp2jjbal0r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2jjbal0r.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $first = array_shift($l);\n\
    \    return $first <= $l;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_my_cvu1.php:22\n\
    Stack trace:\n#0 /tmp/tmp_my_cvu1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_my_cvu1.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($v < $s) {\n            return false;\n \
    \       }\n        if ($v > $s) {\n            return true;\n        }\n     \
    \   $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40q6jura.php:29\n\
    Stack trace:\n#0 /tmp/tmp40q6jura.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp40q6jura.php\
    \ on line 29\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19k2may1.php:29\n\
    Stack trace:\n#0 /tmp/tmp19k2may1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp19k2may1.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby1gz2c1.php:21\n\
    Stack trace:\n#0 /tmp/tmpby1gz2c1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpby1gz2c1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = $l[0];\n    foreach ($l\
    \ as $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsc_2ko5n.php:29\n\
    Stack trace:\n#0 /tmp/tmpsc_2ko5n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsc_2ko5n.php\
    \ on line 29\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n\
    \    $l = array_unique($l);\n    $l = array_map('current', $l);\n    $l = array_filter($l);\n\
    \    return count($l) == 1;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: current(): Argument #1 ($array) must\
    \ be of type array, int given in /tmp/tmpe2w50amk.php:13\nStack trace:\n#0 [internal\
    \ function]: current(10)\n#1 /tmp/tmpe2w50amk.php(13): array_map('current', Array)\n\
    #2 /tmp/tmpe2w50amk.php(19): monotonic(Array)\n#3 /tmp/tmpe2w50amk.php(23): candidate(Array)\n\
    #4 /tmp/tmpe2w50amk.php(33): test()\n#5 {main}\n  thrown in /tmp/tmpe2w50amk.php\
    \ on line 13\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n\
    \    $l = array_unique($l);\n    $l = array_map('current', $l);\n    $l = array_filter($l);\n\
    \    $l = array_map('end', $l);\n    return $l[0] > $l[count($l) - 1];\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: current(): Argument #1 ($array) must\
    \ be of type array, int given in /tmp/tmpp3qq_1y_.php:13\nStack trace:\n#0 [internal\
    \ function]: current(10)\n#1 /tmp/tmpp3qq_1y_.php(13): array_map('current', Array)\n\
    #2 /tmp/tmpp3qq_1y_.php(20): monotonic(Array)\n#3 /tmp/tmpp3qq_1y_.php(24): candidate(Array)\n\
    #4 /tmp/tmpp3qq_1y_.php(34): test()\n#5 {main}\n  thrown in /tmp/tmpp3qq_1y_.php\
    \ on line 13\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5lxaroy.php:26\n\
    Stack trace:\n#0 /tmp/tmpb5lxaroy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb5lxaroy.php\
    \ on line 26\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjrozm1t.php:22\n\
    Stack trace:\n#0 /tmp/tmpkjrozm1t.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkjrozm1t.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? 1\
    \ : -1;\n    return $l[0] === 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph3qtkwnt.php:22\n\
    Stack trace:\n#0 /tmp/tmph3qtkwnt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmph3qtkwnt.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n \
    \   $l = array_filter($l);\n    return $l !== array_reverse($l);\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8isxddw.php:23\n\
    Stack trace:\n#0 /tmp/tmph8isxddw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmph8isxddw.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp9p35b7up.php
    on line 15

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuixcnwsu.php:23\n\
    Stack trace:\n#0 /tmp/tmpuixcnwsu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuixcnwsu.php\
    \ on line 23\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuixcnwsu.php:23\n\
    Stack trace:\n#0 /tmp/tmpuixcnwsu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuixcnwsu.php\
    \ on line 23\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovl2iwvz.php:21\n\
    Stack trace:\n#0 /tmp/tmpovl2iwvz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpovl2iwvz.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n\
    \    $l[1] = max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3],\
    \ $l[0]);\n    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfoh9k04.php:23\n\
    Stack trace:\n#0 /tmp/tmphfoh9k04.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphfoh9k04.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l[0] = $l[0] - 1;\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpst72mpli.php:24\n\
    Stack trace:\n#0 /tmp/tmpst72mpli.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpst72mpli.php\
    \ on line 24\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_shift($l);\n  \
    \  $l = array_shift($l);\n    return $l > $l[0];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_shift(): Argument #1 ($array)\
    \ must be of type array, int given in /tmp/tmp2cd4k1u_.php:12\nStack trace:\n\
    #0 /tmp/tmp2cd4k1u_.php(12): array_shift(10)\n#1 /tmp/tmp2cd4k1u_.php(17): monotonic(10)\n\
    #2 /tmp/tmp2cd4k1u_.php(21): candidate(Array)\n#3 /tmp/tmp2cd4k1u_.php(31): test()\n\
    #4 {main}\n  thrown in /tmp/tmp2cd4k1u_.php on line 12\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovl2iwvz.php:21\n\
    Stack trace:\n#0 /tmp/tmpovl2iwvz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpovl2iwvz.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 0, count($l)\
    \ - 1);\n    $l[] = $l[0];\n    return $l[0] > $l[count($l) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9wr4nfa.php:21\n\
    Stack trace:\n#0 /tmp/tmpp9wr4nfa.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp9wr4nfa.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovl2iwvz.php:21\n\
    Stack trace:\n#0 /tmp/tmpovl2iwvz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpovl2iwvz.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_reverse($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n69iacz.php:20\n\
    Stack trace:\n#0 /tmp/tmp1n69iacz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1n69iacz.php\
    \ on line 20\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    $l[1] = array_shift($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjq7jpwc8.php:21\n\
    Stack trace:\n#0 /tmp/tmpjq7jpwc8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjq7jpwc8.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5lxaroy.php:26\n\
    Stack trace:\n#0 /tmp/tmpb5lxaroy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb5lxaroy.php\
    \ on line 26\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = false;\n  $l[1] = false;\n\
    \  $l[2] = false;\n  $l[3] = false;\n  foreach ($l as $i => $v) {\n    if ($v)\
    \ $l[$i] = true;\n  }\n  return $l[0] || $l[1] || $l[2] || $l[3];\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kqqsol5.php:26\n\
    Stack trace:\n#0 /tmp/tmp3kqqsol5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3kqqsol5.php\
    \ on line 26\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    foreach ($l as $n) {\n        if ($n < $l[i - 1]) {\n\
    \            return false;\n        }\n        if ($n > $l[i - 1]) {\n       \
    \     $i++;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"i\" in /tmp/tmp__hasysg.php:14\n\
    Stack trace:\n#0 /tmp/tmp__hasysg.php(25): monotonic(Array)\n#1 /tmp/tmp__hasysg.php(29):\
    \ candidate(Array)\n#2 /tmp/tmp__hasysg.php(39): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp__hasysg.php on line 14\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $first = array_shift($l);\n\
    \    foreach ($l as $e) {\n        if ($e < $first) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07z33_fd.php:25\n\
    Stack trace:\n#0 /tmp/tmp07z33_fd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp07z33_fd.php\
    \ on line 25\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_shift($l);\n\
    \    return $last <= $l[0];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7t6jx5zz.php:20\n\
    Stack trace:\n#0 /tmp/tmp7t6jx5zz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7t6jx5zz.php\
    \ on line 20\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = max($l[0], $l[1]);\n\
    \    $l[1] = max($l[1], $l[2]);\n    $l[2] = max($l[2], $l[3]);\n    $l[3] = max($l[3],\
    \ $l[0]);\n    return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3];\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfoh9k04.php:23\n\
    Stack trace:\n#0 /tmp/tmphfoh9k04.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphfoh9k04.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovl2iwvz.php:21\n\
    Stack trace:\n#0 /tmp/tmpovl2iwvz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpovl2iwvz.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n</code>\n<|/ a dscore=2 |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$arr = [1,2,3,4,5,6,7,8,9,10];\n\n$arr2 = array_reverse($arr);\n\
    \n$arr3 = array_merge($arr,$arr2);\n\n$arr4 = array_unique($arr3);\n\n$arr5 =\
    \ array_slice($arr4,0,-1);\n\n$arr6 = array_slice($arr4,-1);\n\n$arr7 = array_slice($arr4,0,-1);\n\
    \n$arr8 = array_slice($arr4,0,-1);\n\n$arr9 = array_slice($arr4,0,-1);\n\n$arr10\
    \ = array_slice($arr4,0,-1);\n\n$arr11 = array_slice($arr4,0,-1);\n\n$arr12 =\
    \ array_slice($arr4,0,-1);\n\n$arr13 = array_slice($arr4,0,-1);\n\n$arr14 = array_slice($arr4,0,-1);\n\
    \n$arr15 = array_slice($arr4,0,-1);\n\n$arr16 = array_slice($arr4,0,-1);\n\n$arr17\
    \ = array_slice($arr4,0,-1);\n\n$arr18 = array_slice($arr4,0,-1);\n\n$arr19 =\
    \ array_slice($arr4,0,-1);\n\n$arr20 = array_slice($arr4,0,-1);\n\n$arr21 = array_slice($arr4,0,-1);\n\
    \n$arr22 = array_slice($arr4,0,-1);\n\n$arr23 = array_slice($arr4,0,-1);\n\n$arr24\
    \ = array_slice($arr4,0,-1);\n\n$arr25 = array_slice($arr4,0,-1);\n\n$arr26 =\
    \ array_slice($arr4,0,-1);\n\n$arr27 = array_slice($arr4,0,-1);\n\n$arr28 = array_slice($arr4,0,-1);\n\
    \n$arr29 = array_slice($arr4,0,-1);\n\n$arr30 = array_slice($arr4,0,-1);\n\n$arr31\
    \ = array_slice($arr4,0,-1);\n\n$arr32 = array_slice($arr4,0,-1);\n\n$arr33 =\
    \ array_slice($arr4,0,-1);\n\n$arr34 = array_slice($arr4,0,-1);\n\n$arr35 = array_slice($arr4,0,-1);\n\
    \n$arr36 = array_slice($arr4,0,-1);\n\n$arr37 = array_slice($arr4,0,-1);\n\n$arr38\
    \ = array_slice($arr4,0,-1);\n\n$arr39 = array_slice($arr4,0,-1);\n\n$arr40 =\
    \ array_slice(\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp92znjy9p.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiv6bowv1.php:22\n\
    Stack trace:\n#0 /tmp/tmpiv6bowv1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpiv6bowv1.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    $j = 0;\n    $k = 0;\n    while ($i < count($l)) {\n\
    \        if ($l[$i] < $l[$j]) {\n            if ($l[$i] < $l[$k]) {\n        \
    \        $l[$k] = $l[$i];\n            }\n            $l[$i] = $l[$j];\n     \
    \   } else {\n            if ($l[$i] > $l[$k]) {\n                $l[$k] = $l[$i];\n\
    \            }\n            $l[$i] = $l[$j];\n        }\n        $i++;\n     \
    \   $j++;\n        $k++;\n    }\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqge5iz7d.php:39\n\
    Stack trace:\n#0 /tmp/tmpqge5iz7d.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpqge5iz7d.php\
    \ on line 39\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, array(0));\n\
    \    $l = array_unique($l);\n    $l = array_map('current', $l);\n    return $l[0]\
    \ > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: current(): Argument #1 ($array) must\
    \ be of type array, int given in /tmp/tmp1hbr7a6q.php:13\nStack trace:\n#0 [internal\
    \ function]: current(10)\n#1 /tmp/tmp1hbr7a6q.php(13): array_map('current', Array)\n\
    #2 /tmp/tmp1hbr7a6q.php(18): monotonic(Array)\n#3 /tmp/tmp1hbr7a6q.php(22): candidate(Array)\n\
    #4 /tmp/tmp1hbr7a6q.php(32): test()\n#5 {main}\n  thrown in /tmp/tmp1hbr7a6q.php\
    \ on line 13\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($v < $s) {\n            return false;\n \
    \       }\n        $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps5xha226.php:26\n\
    Stack trace:\n#0 /tmp/tmps5xha226.php(36): test()\n#1 {main}\n  thrown in /tmp/tmps5xha226.php\
    \ on line 26\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $first = array_shift($l);\n\
    \    return $first <= $l;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_my_cvu1.php:22\n\
    Stack trace:\n#0 /tmp/tmp_my_cvu1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_my_cvu1.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $first = array_shift($l);\n\
    \    return $first <= $l[0] || $first >= $l[count($l)-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr44g97rm.php:22\n\
    Stack trace:\n#0 /tmp/tmpr44g97rm.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpr44g97rm.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooxbmn_p.php:22\n\
    Stack trace:\n#0 /tmp/tmpooxbmn_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpooxbmn_p.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $i => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19k2may1.php:29\n\
    Stack trace:\n#0 /tmp/tmp19k2may1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp19k2may1.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $v) {\n        if ($v < $s) {\n            return false;\n \
    \       }\n        if ($v > $s) {\n            return true;\n        }\n     \
    \   $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40q6jura.php:29\n\
    Stack trace:\n#0 /tmp/tmp40q6jura.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp40q6jura.php\
    \ on line 29\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = $l[0];\n    foreach ($l\
    \ as $k => $v) {\n        if ($v < $s) {\n            return false;\n        }\n\
    \        if ($v > $s) {\n            return true;\n        }\n        $s = $v;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsc_2ko5n.php:29\n\
    Stack trace:\n#0 /tmp/tmpsc_2ko5n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsc_2ko5n.php\
    \ on line 29\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n  $n = count($l);\n  for ($i = 0; $i < $n; ++$i) {\n    if ($l[$i] <=\
    \ $l[$i + 1]) {\n      $l[$i + 1] = $l[$i];\n    }\n  }\n  return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpj6_nq9w4.php on line 14\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpj6_nq9w4.php:26\nStack\
    \ trace:\n#0 /tmp/tmpj6_nq9w4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj6_nq9w4.php\
    \ on line 26\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = reset($l);\n  $l[1] =\
    \ end($l);\n  return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn6yopudb.php:23\n\
    Stack trace:\n#0 /tmp/tmpn6yopudb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpn6yopudb.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpcqmeqmac.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $s = array_shift($l);\n  foreach\
    \ ($l as $k => $v) {\n    if ($v < $s) {\n      return false;\n    }\n    if ($v\
    \ > $s) {\n      return true;\n    }\n    $s = $v;\n  }\n  return false;\n}\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if you have negative numbers\
    \ in the array.\n<|/ c |>\n<| c |>\nIt does work if you have negative numbers\
    \ in the array. Try it yourself.\n<|/ c |>\n<| c |>\nI tested it and it doesn't\
    \ work. Try it yourself.\n<|/ c |>\n<| c |>\nIt does work. Try it yourself. It\
    \ returns true for array(1, 20, 4, 10) and false for array(1, 2, 4, 20).\n<|/\
    \ c |>\n<| c |>\nIt doesn't work if you have negative numbers in the array. Try\
    \ it yourself.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpzdnkj353.php
    on line 23

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    foreach ($l as $n) {\n        if ($n < $l[$i]) {\n  \
    \          return false;\n        }\n        if ($n > $l[$i - 1]) {\n        \
    \    return true;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp6jurkj0d.php on line 14\n\n\
    Warning: Undefined array key 4 in /tmp/tmp6jurkj0d.php on line 14\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmp6jurkj0d.php on line 14\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp6jurkj0d.php:32\nStack trace:\n#0 /tmp/tmp6jurkj0d.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6jurkj0d.php on line 32\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[1] > $l[2] ? $l[2] : $l[1];\n    $l[2] = $l[2] > $l[3]\
    \ ? $l[3] : $l[2];\n    $l[3] = $l[3] > $l[0] ? $l[0] : $l[3];\n    return $l[0]\
    \ > $l[1] ? true : false;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw_56hjq.php:26\n\
    Stack trace:\n#0 /tmp/tmprw_56hjq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprw_56hjq.php\
    \ on line 26\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $n = count($l);\n    $m =\
    \ count($l) - 1;\n    if ($n <= 1) return true;\n    for ($i = 0; $i < $m; $i++)\
    \ {\n        if ($l[$i] <= $l[$m]) return true;\n    }\n    return false;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't seem to work. `monotonic(array(1,\
    \ 20, 4, 10))` returns `true` while `monotonic(array(4, 1, 0, -10))` returns `false`.\n\
    <|/ c |>\n<| c |>\nYes, I noticed that after I posted my answer. I've updated\
    \ my answer with a new function that should work better.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpr1gxbp6k.php
    on line 19

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $l[0] > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jjbal0r.php:22\n\
    Stack trace:\n#0 /tmp/tmp2jjbal0r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2jjbal0r.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    foreach ($l as $v) {\n        if ($v < $l[0]) {\n            $l[0]\
    \ = $v;\n        } elseif ($v > $l[3]) {\n            $l[3] = $v;\n        }\n\
    \    }\n    return $l[0] > $l[3];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqjhbpf02.php:27\n\
    Stack trace:\n#0 /tmp/tmpqjhbpf02.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqjhbpf02.php\
    \ on line 27\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? 1\
    \ : -1;\n    $l[1] = $l[1] > $l[2] ? 1 : -1;\n    $l[2] = $l[2] > $l[3] ? 1 :\
    \ -1;\n    $l[3] = $l[3] > $l[0] ? 1 : -1;\n    return $l[0] === $l[1] && $l[1]\
    \ === $l[2] && $l[2] === $l[3] && $l[3] === $l[0];\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| a |>\n<code>\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpbp5ge_b4.php
    on line 17

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpooxbmn_p.php:22\n\
    Stack trace:\n#0 /tmp/tmpooxbmn_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpooxbmn_p.php\
    \ on line 22\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = -$l[0];\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd4hi5_a.php:20\n\
    Stack trace:\n#0 /tmp/tmpbd4hi5_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbd4hi5_a.php\
    \ on line 20\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $l[0] > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jjbal0r.php:22\n\
    Stack trace:\n#0 /tmp/tmp2jjbal0r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2jjbal0r.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2_w5bye.php:23\n\
    Stack trace:\n#0 /tmp/tmpc2_w5bye.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpc2_w5bye.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l);\n  \
    \  return $l[0] > $l[count($l)-1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm1d18kd.php:22\n\
    Stack trace:\n#0 /tmp/tmpjm1d18kd.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpjm1d18kd.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    $j = 1;\n    $k = 0;\n    while ($i < count($l)) {\n\
    \        if ($l[$i] < $l[$j]) {\n            $k++;\n        } else if ($l[$i]\
    \ > $l[$j]) {\n            $k--;\n        }\n        if ($k == 0) {\n        \
    \    $i++;\n            $j++;\n        }\n    }\n    return $j == 0;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcnkapti8.php:34\n\
    Stack trace:\n#0 /tmp/tmpcnkapti8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpcnkapti8.php\
    \ on line 34\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmq18tp1.php:23\n\
    Stack trace:\n#0 /tmp/tmpdmq18tp1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdmq18tp1.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmq18tp1.php:23\n\
    Stack trace:\n#0 /tmp/tmpdmq18tp1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdmq18tp1.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $l[0] > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jjbal0r.php:22\n\
    Stack trace:\n#0 /tmp/tmp2jjbal0r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2jjbal0r.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmq18tp1.php:23\n\
    Stack trace:\n#0 /tmp/tmpdmq18tp1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdmq18tp1.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby1gz2c1.php:21\n\
    Stack trace:\n#0 /tmp/tmpby1gz2c1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpby1gz2c1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $e) {\n        if ($e < $s) {\n            return false;\n \
    \       }\n        if ($e > $s) {\n            return true;\n        }\n     \
    \   $s = $e;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptes5nvdq.php:29\n\
    Stack trace:\n#0 /tmp/tmptes5nvdq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptes5nvdq.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? 1\
    \ : -1;\n    $l[1] = $l[1] > $l[2] ? 1 : -1;\n    $l[2] = $l[2] > $l[3] ? 1 :\
    \ -1;\n    $l[3] = $l[3] > $l[0] ? 1 : -1;\n    return $l[0] === 1 && $l[1] ===\
    \ 1 && $l[2] === 1 && $l[3] === 1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnonu52xi.php:23\n\
    Stack trace:\n#0 /tmp/tmpnonu52xi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnonu52xi.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovl2iwvz.php:21\n\
    Stack trace:\n#0 /tmp/tmpovl2iwvz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpovl2iwvz.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $s = array_shift($l);\n  \
    \  foreach ($l as $k => $v) {\n        if ($v < $s) {\n            return false;\n\
    \        }\n        if ($v > $s) {\n            return true;\n        }\n    \
    \    $s = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9p52r9b.php:29\n\
    Stack trace:\n#0 /tmp/tmpt9p52r9b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt9p52r9b.php\
    \ on line 29\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuixcnwsu.php:23\n\
    Stack trace:\n#0 /tmp/tmpuixcnwsu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpuixcnwsu.php\
    \ on line 23\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_values($l);\n \
    \   $l = array_filter($l);\n    $l = array_reverse($l);\n    return $l !== array_reverse($l);\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if there are duplicate\
    \ values in the array. For example: `monotonic([1,2,3,4,4,5,6,7,8,9,10])` returns\
    \ `true` instead of `false`.\n<|/ c |>\n<| c |>\n: It does work if there are duplicate\
    \ values in the array. Try it yourself.\n<|/ c |>\n<| c |>\n: I tested it and\
    \ it does work. Try it yourself.\n<|/ c |>\n<| c |>\n: It does work if there are\
    \ duplicate values in the array. Try it yourself.\n<|/ c |>\n<| c |>\n: I tested\
    \ it and it does work. Try it yourself.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp3yvyivic.php
    on line 16

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_merge($l, $l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktdttq76.php:22\n\
    Stack trace:\n#0 /tmp/tmpktdttq76.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpktdttq76.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $first = $l[0];\n  foreach ($l\
    \ as $e) {\n    if ($e < $first) {\n      return true;\n    }\n    if ($e > $first)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1m_dia9v.php:30\n\
    Stack trace:\n#0 /tmp/tmp1m_dia9v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1m_dia9v.php\
    \ on line 30\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_pop($l);\n \
    \   return $l[0] > $last;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jjbal0r.php:22\n\
    Stack trace:\n#0 /tmp/tmp2jjbal0r.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2jjbal0r.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    foreach ($l as $v) {\n        if ($v < $l[($i - 1)])\
    \ {\n            return false;\n        }\n        if ($v > $l[($i - 2)]) {\n\
    \            return false;\n        }\n        $i++;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpel12hh30.php on line 17\n\n\
    Warning: Undefined array key -1 in /tmp/tmpel12hh30.php on line 17\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmpel12hh30.php on line 17\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpel12hh30.php:32\nStack trace:\n#0 /tmp/tmpel12hh30.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpel12hh30.php on line 32\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmq18tp1.php:23\n\
    Stack trace:\n#0 /tmp/tmpdmq18tp1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdmq18tp1.php\
    \ on line 23\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n</code>\n<|/ a tags=php,arrays\
    \ |>\n<| c |>\nThis doesn't work if the first element of the array is greater\
    \ than the last.\n<|/ c |>\n<| c |>\n: It does work. Try it yourself. It returns\
    \ `true` if the first element of the array is greater than the last.\n<|/ c |>\n\
    <| c |>\n: It returns `true` if the first element of the array is greater than\
    \ the last.\n<|/ c |>\n<| c |>\n: It returns `true` if the first element of the\
    \ array is greater than the last.\n<|/ c |>\n<| c |>\n: It returns `true` if the\
    \ first element of the array is greater than the last.\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$array2 = array(1, 3, 5);\n\n$array3\
    \ = array_diff($array2, $array);\n$array4 = array_diff($array, $array2);\n\n$array5\
    \ = array_merge($array3, $array4);\n</code>\n<|/ a tags=php,arrays |>\n<| c |>\n\
    This doesn't work if the first element of the array is greater than the last.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the first element of the array is greater\
    \ than the last.\n<|/ c |>\n<| c |>\nThis doesn't work if the first element of\
    \ the array is greater than the last.\n<|/ c |>\n<| c |>\nThis doesn't work if\
    \ the first element of the array is greater than the last.\n<|/ c |>\n<| a tags=php,arrays\
    \ |>\n<code>\n$array1 = array(1, 2, 3, 4, 5);\n$array2 = array(1, 3, 5);\n\n$array3\
    \ = array_diff($array2, $array1);\n$array4 = array_diff($array1, $array2);\n\n\
    $array5 = array_merge($array3, $array4);\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    This doesn't work if the first element of the array is greater than the last.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the first element of the array is greater\
    \ than the last.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array1 = array(1,\
    \ 2, 3, 4, 5);\n$array2 = array(1, 3, 5);\n\n$array3 = array_diff($array2, $array1);\n\
    $array4 = array_\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpammem_yc.php
    on line 15

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $last = array_shift($l);\n\
    \    return $l[0] > $last ? false : true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsgzpvtjr.php:22\n\
    Stack trace:\n#0 /tmp/tmpsgzpvtjr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsgzpvtjr.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  return\
    \ $l[0] > $l[count($l)-1];\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't\
    \ work for me. `monotonic(array(1, 20, 4, 10))` returns `true` but `monotonic(array(4,\
    \ 1, 0, -10))` returns `false`\n<|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10\
    \ and it works. What PHP version are you using?\n<|/ c |>\n<| c |>\n: I tested\
    \ it on PHP 5.3.10 and it works. What PHP version are you using?\n<|/ c |>\n<|\
    \ c |>\n: I tested it on PHP 5.3.10 and it works. What PHP version are you using?\n\
    <|/ c |>\n<| c |>\n: I tested it on PHP 5.3.10 and it works. What PHP version\
    \ are you using?\n<|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpkdq4wchm.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[0] > $l[1] ? $l[1]\
    \ : $l[0];\n    $l[1] = $l[0] > $l[1] ? $l[0] : $l[1];\n    return $l[0] > $l[1];\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpby1gz2c1.php:21\n\
    Stack trace:\n#0 /tmp/tmpby1gz2c1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpby1gz2c1.php\
    \ on line 21\n"
  timestamp: 1659730885
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n    $i = 1;\n    $j = 0;\n    $k = 0;\n    while ($i < count($l)) {\n\
    \        if ($l[$i] <= $l[$j]) {\n            if ($l[$i] <= $l[$k]) {\n      \
    \          $l[$i] = $l[$j];\n                $l[$j] = $l[$k];\n              \
    \  $l[$k] = $l[$i];\n                $l[$i] = $i;\n                $i++;\n   \
    \             $j++;\n                $k++;\n            } else {\n           \
    \     $l[$i] = $l[$k];\n                $l[$j] = $i;\n                $l[$k] =\
    \ $i;\n                $i++;\n                $j++;\n                $k++;\n \
    \           }\n        } else {\n            if ($l[$i] >= $l[$k]) {\n       \
    \         $l[$i] = $l[$k];\n                $l[$j] = $i;\n                $l[$k]\
    \ = $i;\n                $i++;\n                $j++;\n                $k++;\n\
    \            } else {\n                $l[$i] = $l[$j];\n                $l[$j]\
    \ = $l[$k];\n                $l[$k] = $i;\n                $i++;\n           \
    \     $j++;\n                $k++;\n            }\n        }\n    }\n    return\
    \ $l[0] > $l[1];\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf54cwgk.php:59\n\
    Stack trace:\n#0 /tmp/tmpgf54cwgk.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpgf54cwgk.php\
    \ on line 59\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = $l[1] = $l[2] = $l[3]\
    \ = 0;\n  return $l[0] > $l[1] || ($l[0] == $l[1] && $l[2] > $l[3]);\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nI like the idea of using array_reverse(). However\
    \ it seems that it only works on numeric arrays. I tested it on a string array\
    \ and it didn't work. Do you know why that is?\n<|/ c |>\n<| c |>\n: It works\
    \ on strings too. Try `var_dump(array_reverse(\"foo\"));`\n<|/ c |>\n<| c |>\n\
    : It doesn't work on strings. Try `var_dump(array_reverse(\"foo\", true));`\n\
    <|/ c |>\n<| c |>\n: It doesn't work on strings. Try `var_dump(array_reverse(\"\
    foo\", true));`\n<|/ c |>\n<| c |>\n: It doesn't work on strings. Try `var_dump(array_reverse(\"\
    foo\", true));`\n<|/ c |>\n<| a dscore=1 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp2e8_ati5.php
    on line 14

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l[0] = $l[0] - 1;\n    return $l[0] > 0 && $l[0] < count($l) - 1;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1o3httxd.php:21\n\
    Stack trace:\n#0 /tmp/tmp1o3httxd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1o3httxd.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l = array_slice($l, 1);\n\
    \    $l = array_reverse($l);\n    return $l[0] > $l[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovl2iwvz.php:21\n\
    Stack trace:\n#0 /tmp/tmpovl2iwvz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpovl2iwvz.php\
    \ on line 21\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $first = array_shift($l);\n\
    \    return $first <= $l;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_my_cvu1.php:22\n\
    Stack trace:\n#0 /tmp/tmp_my_cvu1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_my_cvu1.php\
    \ on line 22\n"
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_reverse($l);\n  $l[0] = array_shift($l);\n  $l[1]\
    \ = array_shift($l);\n  $l[2] = array_shift($l);\n  $l[3] = array_shift($l);\n\
    \  return $l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3] && $l[3] >= 0;\n}\n\
    </code>\n<|/ a dscore=3 |>\n<| c |>\nThis doesn't work if your array is `array(1,2,4,20)`\
    \ - it returns `false` instead of `true`.\n<|/ c |>\n<| c |>\n: It works fine\
    \ for me. `monotonic(array(1,2,4,20))` returns `true`.\n<|/ c |>\n<| c |>\n: It\
    \ works fine for me too. `monotonic(array(1,2,4,20))` returns `true`.\n<|/ c |>\n\
    <| c |>\n: It works fine for me too. `monotonic(array(1,2,4,20))` returns `true`.\n\
    <|/ c |>\n<| c |>\n: It works fine for me too. `monotonic(array(1,2,4,20))` returns\
    \ `true`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpk2enp5y2.php
    on line 17

    '
  timestamp: 1659824146
- exit_code: 255
  program: "<?php\n// Return True is list elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $l = array_reverse($l);\n    $l[0] = array_shift($l);\n\
    \    return $l[0] > $l[count($l) - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ht9knz7.php:22\n\
    Stack trace:\n#0 /tmp/tmp7ht9knz7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7ht9knz7.php\
    \ on line 22\n"
  timestamp: 1659824146

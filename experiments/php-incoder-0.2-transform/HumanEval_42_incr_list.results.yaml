language: php
name: HumanEval_42_incr_list
results:
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $ret = $l;\n  foreach ($l as $e) {\n    $ret[] = $e + $i;\n    $i++;\n  }\n\
    \  return $ret;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx3el5w7_.php:23\n\
    Stack trace:\n#0 /tmp/tmpx3el5w7_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpx3el5w7_.php\
    \ on line 23\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $ret = array();\n  foreach ($l as $e) {\n    $ret[] = $e + $i;\n    $i++;\n\
    \  }\n  return $ret;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipbt_iw4.php:23\n\
    Stack trace:\n#0 /tmp/tmpipbt_iw4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpipbt_iw4.php\
    \ on line 23\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| a |>\n<code>\n$arr = array(1,2,3,4,5,6,7,8,9,10);\n$arr2\
    \ = array();\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n\
    $arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] =\
    \ $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n\
    $arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] =\
    \ $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n\
    $arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] =\
    \ $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n\
    $arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] =\
    \ $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n\
    $arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] =\
    \ $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n\
    $arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] = $arr;\n$arr2[] =\
    \ $arr;\n$arr2[] = $arr;\n$arr2[] = $arr\nfunction candidate(...$args) {\n   \
    \ return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpoprzeuns.php on line 14

    '
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = [];\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work if you have a key that is a string.\
    \ e.g. `array(\"a\" => 1, \"b\" => 2)`\n<|/ c |>\n<| c |>\n: Yes, it does. Try\
    \ it yourself and see for yourself.\n<|/ c |>\n<| c |>\n: It does work. Try it\
    \ yourself. It doesn't matter what the keys are. Try it with `array(\"a\" => \"\
    1\", \"b\" => \"2\")` and you'll see that it works.\n<|/ c |>\n<| c |>\n: I added\
    \ a test case to my answer. Try it yourself.\n<|/ c |>\n<| c |>\n: I added a test\
    \ case to my answer. Try it yourself.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3);\n$array = array_values($array);\n\
    </code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work if you have a key that\
    \ is a string. e.g. `array(\"a\" => 1, \"b\" => 2)`\n<|/ c |>\n<| c |>\n: It does\
    \ work. Try it yourself. It doesn't matter what the keys are. Try it with `array(\"\
    a\" => \"1\", \"b\" => \"2\")` and you'll see that it works.\n<|/ c |>\n<| c |>\n\
    : I added a test case to my answer. Try it yourself.\n<|/ c |>\n<| c |>\n: I added\
    \ a test case to my answer. Try it yourself.\n<|/ c |>\n<| a |>\n<code>\n$array\
    \ = array(\"a\" => 1, \"b\" => 2, \"c\" => 3);\n$array = array_values($array);\n\
    </code>\n<|/ a tags=php,arrays dscore=1 |>\n<| c |>\nThis doesn't work if you\
    \ have a key that is a string. e.g. `array(\"a\" => 1, \"b\" => 2)`\n<|/ c |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\"\
    \ => 3);\n$array = array_values($array);\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    This \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp0ycimgd9.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = [];\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n$array = array();\n$array[]\
    \ = 'a';\n$array[] = 'b';\n$array[] = 'c';\n$array[] = 'd';\n$array[] = 'e';\n\
    $array[] = 'f';\n$array[] = 'g';\n$array[] = 'h';\n$array[] = 'i';\n$array[] =\
    \ 'j';\n$array[] = 'k';\n$array[] = 'l';\n$array[] = 'm';\n$array[] = 'n';\n$array[]\
    \ = 'o';\n$array[] = 'p';\n$array[] = 'q';\n$array[] = 'r';\n$array[] = 's';\n\
    $array[] = 't';\n$array[] = 'u';\n$array[] = 'v';\n$array[] = 'w';\n$array[] =\
    \ 'x';\n$array[] = 'y';\n$array[] = 'z';\n\n$array = array_chunk($array, 2);\n\
    \nprint_r($array);\n</code>\n<|/ a dscore=1 |>\n<| a tags=php,arrays |>\n<code>\n\
    $array = array();\n$array[] = 'a';\n$array[] = 'b';\n$array[] = 'c';\n$array[]\
    \ = 'd';\n$array[] = 'e';\n$array[] = 'f';\n$array[] = 'g';\n$array[] = 'h';\n\
    $array[] = 'i';\n$array[] = 'j';\n$array[] = 'k';\n$array[] = 'l';\n$array[] =\
    \ 'm';\n$array[] = 'n';\n$array[] = 'o';\n$array[] = 'p';\n$array[] = 'q';\n$array[]\
    \ = 'r';\n$array[] = 's';\n$array[] = 't';\n$array[] = 'u';\n$array[] = 'v';\n\
    $array[] = 'w';\n$array[] = 'x';\n$array[] = 'y';\n$array[] = 'z';\n\n$array =\
    \ array_chunk($array, 2);\n\nprint_r($array);\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a |>\n<code>\n$array = array();\n$array[] = 'a';\n$array[] = 'b';\n$array[]\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpwqmx2vll.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have a key that is\
    \ a string and you want to increment it by 1.\n<|/ c |>\n<| c |>\n: It works fine\
    \ for me. Can you give an example?\n<|/ c |>\n<| c |>\n: It works fine for me\
    \ too. Can you give an example?\n<|/ c |>\n<| c |>\n: It works fine for me too.\
    \ Can you give an example?\n<|/ c |>\n<| c |>\n: It works fine for me too. Can\
    \ you give an example?\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array('key1'\
    \ => 1, 'key2' => 2, 'key3' => 3, 'key4' => 4, 'key5' => 5);\n$array = array_map(function($v){return\
    \ ++$v;}, $array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis doesn't work if\
    \ you have a key that is a string and you want to increment it by 1.\n<|/ c |>\n\
    <| c |>\n: It works fine for me. Can you give an example?\n<|/ c |>\n<| c |>\n\
    : It works fine for me too. Can you give an example?\n<|/ c |>\n<| c |>\n: It\
    \ works fine for me too. Can you give an example?\n<|/ c |>\n<| c |>\n: It works\
    \ fine for me too. Can you give an example?\n<|/ c |>\n<| a tags=php,arrays |>\n\
    <code>\n$array = array('key1' => 1, 'key2' => 2, 'key3' => 3, 'key4' => 4, 'key5'\
    \ => 5);\n$array = array_map(function($v){return ++$v;}, $array);\n</code>\n<|/\
    \ a dscore=5 |>\n<| c |>\nThis doesn't work if you have a key that is a string\
    \ and you want to increment it by 1.\n<|/ c |>\n<| c |>\n: It works fine for me.\
    \ Can you give an example?\n<|/ c |>\n<| c |>\n: It works fine for me too. Can\
    \ you give an example?\n<|/ c |>\n<| c |>\n: It works fine for me too. Can you\
    \ \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpq57w4wir.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = [];\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a tags=arrays,php |>\n<code>\n$arr1 = array(\"a\"\
    ,\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\");\n$arr2 = array(\"a\",\"b\"\
    ,\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\");\n$arr3 = array();\n$arr4 = array();\n\
    $arr5 = array();\n$arr6 = array();\n$arr7 = array();\n$arr8 = array();\n$arr9\
    \ = array();\n$arr10 = array();\n$arr11 = array();\n$arr12 = array();\n$arr13\
    \ = array();\n$arr14 = array();\n$arr15 = array();\n$arr16 = array();\n$arr17\
    \ = array();\n$arr18 = array();\n$arr19 = array();\n$arr20 = array();\n$arr21\
    \ = array();\n$arr22 = array();\n$arr23 = array();\n$arr24 = array();\n$arr25\
    \ = array();\n$arr26 = array();\n$arr27 = array();\n$arr28 = array();\n$arr29\
    \ = array();\n$arr30 = array();\n$arr31 = array();\n$arr32 = array();\n$arr33\
    \ = array();\n$arr34 = array();\n$arr35 = array();\n$arr36 = array();\n$arr37\
    \ = array();\n$arr38 = array();\n$arr39 = array();\n$arr40 = array();\n$arr41\
    \ = array();\n$arr42 = array();\n$arr43 = array();\n$arr44 = array();\n$arr45\
    \ = array();\n$arr46 = array();\n$arr47 = array();\n$arr48 = array();\n$arr49\
    \ = array();\n$arr50 = array();\n$arr51 = array();\n$arr52 = array();\n$arr53\
    \ = array();\n$arr54 = array();\n$arr55 = array();\n$arr56 = array();\n$arr57\
    \ = array();\n$arr58 = array();\n$arr59 = array();\n$arr60 = array();\n$arr61\
    \ = array();\n$arr62 = array();\n$arr\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpjmz70vyx.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $r = array();\n  foreach ($l as $e) {\n    $r[$i] = $e;\n    $i++;\n  }\n \
    \ return $r;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbarn19xg.php:23\n\
    Stack trace:\n#0 /tmp/tmpbarn19xg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbarn19xg.php\
    \ on line 23\n"
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  foreach ($l as $k => $v) {\n    $l[$k] = $i++;\n  }\n  return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6aks9kt3.php:21\n\
    Stack trace:\n#0 /tmp/tmp6aks9kt3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6aks9kt3.php\
    \ on line 21\n"
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $result = array();\n  foreach ($l as $e) {\n    $result[] = $e + $i;\n    $i++;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2lx1jl9f.php:23\n\
    Stack trace:\n#0 /tmp/tmp2lx1jl9f.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2lx1jl9f.php\
    \ on line 23\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $r = array();\n  foreach ($l as $e) {\n    $r[$i] = $e;\n    $i++;\n  }\n \
    \ return $r;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7hoyx9p.php:22\n\
    Stack trace:\n#0 /tmp/tmpo7hoyx9p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo7hoyx9p.php\
    \ on line 22\n"
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $r = array();\n  foreach ($l as $e) {\n    $r[$i] = $e;\n    $i++;\n  }\n \
    \ return $r;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbarn19xg.php:23\n\
    Stack trace:\n#0 /tmp/tmpbarn19xg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbarn19xg.php\
    \ on line 23\n"
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a dscore=0 |>\n<code>\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpn8pxny_k.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $r = array();\n  foreach ($l as $e) {\n    $r[$i] = $e;\n    $i++;\n  }\n \
    \ return $r;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7hoyx9p.php:22\n\
    Stack trace:\n#0 /tmp/tmpo7hoyx9p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo7hoyx9p.php\
    \ on line 22\n"
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = [];\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = [];\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a |>\n<| a |>\n<code>\n<?php\n$array1 = array(\"a\",\"b\",\"c\",\"d\",\"e\"\
    ,\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\"\
    ,\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array2 = array(\"a\",\"b\"\
    ,\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\"\
    ,\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array3\
    \ = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"\
    l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"\
    y\",\"z\");\n$array4 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"\
    v\",\"w\",\"x\",\"y\",\"z\");\n$array5 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"\
    f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"\
    s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array6 = array(\"a\",\"b\",\"\
    c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"\
    p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n$array7 = array(\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"\
    n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\
    $array8 = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"\
    k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"\
    x\",\"y\",\"z\");\n$array\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmptqplgec4.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $l = array_map(function($v) use (&$i) {\n    return $i++;\n  }, $l);\n  return\
    \ $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpelpen982.php:21\n\
    Stack trace:\n#0 /tmp/tmpelpen982.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpelpen982.php\
    \ on line 21\n"
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a tags=php,arrays |>\n<code>\n$array = array(1, 2,\
    \ 3, 4, 5);\n$newArray = array();\n$newArray[] = $array[0];\nfor($i = 1; $i <\
    \ count($array); $i++){\n    $newArray[] = $array[$i];\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$newArray = array();\n\
    $newArray[] = $array[0];\nfor($i = 1; $i < count($array); $i++){\n    $newArray[]\
    \ = $array[$i];\n}\n</code>\n<|/ a tags=php,arrays |>\n<| a dscore=1 |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$newArray = array();\n$newArray[] = $array[0];\n\
    for($i = 1; $i < count($array); $i++){\n    $newArray[] = $array[$i];\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$newArray\
    \ = array();\n$newArray[] = $array[0];\nfor($i = 1; $i < count($array); $i++){\n\
    \    $newArray[] = $array[$i];\n}\n</code>\n<|/ a tags=php,arrays dscore=1 |>\n\
    <| a tags=php,arrays |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$newArray = array();\n\
    $newArray[] = $array[0];\nfor($i = 1; $i < count($array); $i++){\n    $newArray[]\
    \ = $array[$i];\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n$array\
    \ = array(1, 2, 3, 4, 5);\n$newArray = array();\n$newArray[] = $array[0];\nfor($i\
    \ = 1; $i < count($array); $i++){\n    $newArray[] = $array[$i];\n}\n</code>\n\
    <|/ a tags=php,arrays |>\n<| a |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$newArray\
    \ = array();\n$newArray[] = $array[0];\nfor($i = 1; $i < count($array); $i++){\n\
    \    $newArray[] = $array[$i];\n}\n</code>\nfunction candidate(...$args) {\n \
    \   return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp_5y9hz7k.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = [];\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| a dscore=0 |>\n<code>\n$array = array(\n    array('id'\
    \ => 1, 'name' => 'John'),\n    array('id' => 2, 'name' => 'Jane'),\n    array('id'\
    \ => 3, 'name' => 'Jack'),\n    array('id' => 4, 'name' => 'Jill'),\n    array('id'\
    \ => 5, 'name' => 'Jack')\n);\n\n$result = array();\nforeach ($array as $key =>\
    \ $value) {\n    $result[$value['id']] = $value['name'];\n}\n\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php |>\n<| a |>\n<code>\n$array = array(\n    array('id'\
    \ => 1, 'name' => 'John'),\n    array('id' => 2, 'name' => 'Jane'),\n    array('id'\
    \ => 3, 'name' => 'Jack'),\n    array('id' => 4, 'name' => 'Jill'),\n    array('id'\
    \ => 5, 'name' => 'Jack')\n);\n\n$result = array();\nforeach ($array as $key =>\
    \ $value) {\n    $result[$value['id']] = $value['name'];\n}\n\nprint_r($result);\n\
    </code>\n<|/ a tags=arrays,php dscore=0 |>\n<| a dscore=0 |>\n<code>\n$array =\
    \ array(\n    array('id' => 1, 'name' => 'John'),\n    array('id' => 2, 'name'\
    \ => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id' => 4, 'name'\
    \ => 'Jill'),\n    array('id' => 5, 'name' => 'Jack')\n);\n\n$result = array();\n\
    foreach ($array as $key => $value) {\n    $result[$value['id']] = $value['name'];\n\
    }\n\nprint_r($result);\n</code>\n<|/ a tags=arrays,php |>\n<| a dscore=0 |>\n\
    <code>\n$array = array(\n    array('id' => 1, 'name' => 'John'),\n    array('id'\
    \ => 2, 'name' => 'Jane'),\n    array('id' => 3, 'name' => 'Jack'),\n    array('id'\
    \ => 4, 'name' => 'Jill'),\n    array('id' => 5, 'name' => 'Jack')\n);\n\n$result\
    \ = array();\nforeach ($array as $key => $value) {\n    $result[$value['id']]\
    \ = $value['name'];\n}\n\nprint_r($result);\n</code>\n<|/ a \nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpat8j07c9.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $r = array();\n  foreach ($l as $e) {\n    $r[] = $i++;\n  }\n  return $r;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1261zgzb.php:21\n\
    Stack trace:\n#0 /tmp/tmp1261zgzb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1261zgzb.php\
    \ on line 21\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = [];\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $ret = array();\n  foreach ($l as $e) {\n    $ret[] = $e + $i;\n    $i++;\n\
    \  }\n  return $ret;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsiadyoyl.php:22\n\
    Stack trace:\n#0 /tmp/tmpsiadyoyl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsiadyoyl.php\
    \ on line 22\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work if you have duplicate keys.\
    \ e.g. `array(\"a\" => 1, \"a\" => 2)` will result in `array(\"a\" => 2)`\n<|/\
    \ c |>\n<| c |>\n: That's not true. `array_merge` will merge the arrays, not overwrite\
    \ them.\n<|/ c |>\n<| c |>\n: Yes, I know. My point was that `array_merge` doesn't\
    \ work if you have duplicate keys. `array_merge` will merge the arrays, not overwrite\
    \ them.\n<|/ c |>\n<| c |>\n: Yes, I know. My point was that `array_merge` doesn't\
    \ work if you have duplicate keys. `array_merge` will merge the arrays, not overwrite\
    \ them.\n<|/ c |>\n<| c |>\n: Yes, I know. My point was that `array_merge` doesn't\
    \ work if you have duplicate keys. `array_merge` will merge the arrays, not overwrite\
    \ them.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n$array = array(\"a\" => 1, \"b\"\
    \ => 2, \"c\" => 3);\n$array = array_merge($array, array(\"a\" => 4, \"b\" =>\
    \ 5, \"c\" => 6));\n</code>\n<|/ a tags=arrays,php |>\n<| c |>\nThis doesn't work\
    \ if you have duplicate keys. e.g. `array(\"a\" => 1, \"a\" => 2)` will result\
    \ in `array(\"a\" => 2)`\n<|/ c |>\n<| c |>\nThis doesn't work if you have duplicate\
    \ keys. e.g. `array(\"a\" => 1, \"a\" => 2)` will result in `array(\"a\" => 2)`\n\
    <|/ c |>\n<| c |>\nThis doesn't work if you have duplicate keys. e.g. `array(\"\
    a\" => 1, \"a\" => 2)` will result in `array(\"a\" => 2)`\n<|/ c |>\n<| a dscore=5\
    \ |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3);\n$array = array_merge($array,\
    \ array(\"a\" => 4, \"b\" => 5, \"c\" => 6));\n</code>\n<|/ a tags=arrays,php\
    \ |>\n<| c |>\nThis doesn't work if you have duplicate keys. e.g. `array(\"\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpfm6ywwly.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work if you have a key that is a string.\
    \ For example, if you have an array with keys `\"0\"` and `\"1\"`, then `array_values`\
    \ will convert them to `0` and `1` instead of `'0'` and `'1'`.\n<|/ c |>\n<| c\
    \ |>\n: That's not true. `array_values` will convert them to a string if they\
    \ have no numerical keys. Try it yourself.\n<|/ c |>\n<| c |>\n: I tested it myself\
    \ and you're right. My mistake.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n$array =\
    \ array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4);\n$array = array_values($array);\n\
    </code>\n<|/ a tags=php,arrays |>\n<| c |>\nThis doesn't work if you have a key\
    \ that is a string. For example, if you have an array with keys `\"0\"` and `\"\
    1\"`, then `array_values` will convert them to `0` and `1` instead of `'0'` and\
    \ `'1'`.\n<|/ c |>\n<| a tags=php,arrays |>\n<code>\n$array = array(\"a\" => 1,\
    \ \"b\" => 2, \"c\" => 3, \"d\" => 4);\n$array = array_values($array);\n</code>\n\
    <|/ a dscore=2 |>\n<| c |>\nThis doesn't work if you have a key that is a string.\
    \ For example, if you have an array with keys `\"0\"` and `\"1\"`, then `array_values`\
    \ will convert them to `0` and `1` instead of `'0'` and `'1'`.\n<|/ c |>\n<| a\
    \ dscore=1 |>\n<code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\"\
    \ => 4);\n$array = array_values($array);\n</code>\n<|/ a tags=php,arrays |>\n\
    <| c |>\nThis doesn't work if you have a key that is a string. For example, if\
    \ you have an array with keys `\"0\"` and `\"1\"`, then `array_values` will convert\
    \ them to `0` and `1` instead of `'0'` and `'1'`.\n<|/ c |>\n<| a dscore=1 |>\n\
    <code>\n$array = array(\"a\" => 1, \"b\" => 2, \"c\" => 3, \"d\" => 4);\n$array\
    \ = array_values(\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmpkkwvadrp.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 1;\n\
    \  $r = array();\n  foreach ($l as $e) {\n    $r[] = $i++;\n  }\n  return $r;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1261zgzb.php:21\n\
    Stack trace:\n#0 /tmp/tmp1261zgzb.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp1261zgzb.php\
    \ on line 21\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k] = $v + 1;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n</code>\n\
    <|/ a dscore=5 |>\n<| c |>\nThis should be the accepted answer. Simple and effective.\n\
    <|/ c |>\n<| c |>\nI like this solution, because it doesn't require any additional\
    \ libraries. I added a small example to my answer.\n<|/ c |>\n<| c |>\nI like\
    \ this solution as well, because it doesn't require any additional libraries.\
    \ I added a small example to my answer.\n<|/ c |>\n<| c |>\nI like this solution\
    \ as well, because it doesn't require any additional libraries. I added a small\
    \ example to my answer.\n<|/ c |>\n<| c |>\nI like this solution as well, because\
    \ it doesn't require any additional libraries. I added a small example to my answer.\n\
    <|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array = array(1, 2, 3, 4, 5);\n$array[]\
    \ = array_shift($array);\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis solution will\
    \ remove the first element from the array and add it to the end of the array.\
    \ Not what was asked for.\n<|/ c |>\n<| c |>\nThis solution will remove the first\
    \ element from the array and add it to the end of the array. Not what was asked\
    \ for.\n<|/ c |>\n<| c |>\nThis solution will remove the first element from the\
    \ array and add it to the end of the array. Not what was asked for.\n<|/ c |>\n\
    <| c |>\nThis solution will remove the first element from the array and add it\
    \ to the end of the array. Not what was asked for.\n<|/ c |>\n<| c |>\nThis solution\
    \ will remove the first element from the array and add it to the end of the array.\
    \ Not what was asked for.\n<|/ c |>\n<| a tags=arrays,php |>\n<code>\n$array =\
    \ array(1, 2, 3, 4, 5);\n$array[] = array_shift($array);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nThis solution will remove the first element from the array and\
    \ add it to the end of the array. Not what was asked for.\n<|/ c |>\n<| c |>\n\
    This solution will remove the first element from the array and add it to the end\
    \ of the array. Not what was asked for.\n<|/ c |>\n<| a dscore=5 |>\n<code>\n\
    $array = array(1, 2, 3, 4, 5);\n$array[] = array_shift($array);\n</code>\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "<", expecting end of file in /tmp/tmp49x2gv9c.php
    on line 14

    '
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hc2av13.php:20\n\
    Stack trace:\n#0 /tmp/tmp2hc2av13.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2hc2av13.php\
    \ on line 20\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = [];\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 255
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $k => $v) {\n    $r[$k + 1] = $v;\n  }\n  return $r;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdj0ucez_.php:21\n\
    Stack trace:\n#0 /tmp/tmpdj0ucez_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdj0ucez_.php\
    \ on line 21\n"
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653
- exit_code: 0
  program: "<?php\n// Return list with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $e) {\n    $r[] = $e + 1;\n  }\n  return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730653

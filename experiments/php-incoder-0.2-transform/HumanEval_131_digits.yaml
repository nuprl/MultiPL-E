name: HumanEval_131_digits
language: php
prompt: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
  // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n//\
  \ >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n"
tests: "function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
  \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
  \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
  \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $n = (int) $n;\n  $product = 1;\n  for ($i = 0; $i < $n; $i++) {\n\
    \    $product *= $n % 2;\n    $n = $n / 2;\n  }\n  return $product;\n}\n", " \
    \ $product = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n    $product *= $n %\
    \ 10;\n    $n = $n / 10;\n  }\n  return $product;\n}\n", "  $product = 1;\n  for\
    \ ($i = 0; $i < strlen($n); $i++) {\n    $product *= $n[$i] % 2;\n  }\n  return\
    \ $product;\n}\n", "  $n = (int) $n;\n  if ($n <= 0) return 0;\n  $product = 1;\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $product *= $i % 2 ? 3 : 1;\n  }\n  return\
    \ $product;\n}\n", "  $product = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n\
    \    $product *= $n[$i] % 2;\n  }\n  return $product;\n}\n", "  $n = (int) $n;\n\
    \  if ($n <= 0) return 0;\n  $product = 1;\n  for ($i = 0; $i < $n; $i++) {\n\
    \    $product *= $i % 2 ? 3 : 1;\n  }\n  return $product;\n}\n", "  $n = (int)\
    \ $n;\n  if ($n <= 0) return 0;\n  $product = 1;\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    $product *= $i % 2 ? 3 : 1;\n  }\n  return $product;\n}\n", "    if ($n\
    \ <= 0) return 0;\n    $n = (int) $n;\n    if ($n <= 9) return $n * $n;\n    $n\
    \ = (int) floor($n / 10);\n    $odd = $n % 2;\n    return ($odd ? $n : 0);\n}\n",
  "  $product = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $product *= $i % 2 ? 3 :\
    \ 1;\n  }\n  return $product;\n}\n", "  $n = (int) $n;\n  if ($n <= 0) return\
    \ 0;\n  $product = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $product *= $i % 2\
    \ ? 3 : 1;\n  }\n  return $product;\n}\n", "  $product = 1;\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $product *= $i % 2 ? 3 : 1;\n  }\n  return $product;\n}\n",
  "  $n = (int) $n;\n  if ($n <= 0) return 0;\n  $product = 1;\n  for ($i = 0; $i\
    \ < $n; $i++) {\n    $product *= $i % 2 ? 3 : 1;\n  }\n  return $product;\n}\n",
  "  $product = 1;\n  for ($i = 0; $i < $n; $i++) {\n    $product *= $i % 2 ? 3 :\
    \ 1;\n  }\n  return $product;\n}\n", "  $product = 1;\n  for ($i = 0; $i < $n;\
    \ $i++) {\n    $product *= $i % 2 ? 3 : 1;\n  }\n  return $product;\n}\n", " \
    \   $product = 1;\n    $digits = str_split($n);\n    foreach ($digits as $digit)\
    \ {\n        if ($digit % 2 === 0) {\n            $product *= $digit;\n      \
    \  } else {\n            return 0;\n        }\n    }\n    return $product;\n}\n",
  "  $product = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n    $product *= $n[$i]\
    \ % 2;\n  }\n  return $product;\n}\n", "    $n = (int) $n;\n    if ($n == 0) {\n\
    \        return 0;\n    }\n    $product = 1;\n    while ($n > 0) {\n        $product\
    \ *= ($n % 10);\n        $n = (int) ($n / 10);\n    }\n    return $product;\n\
    }\n", "  $n = (int) $n;\n  if ($n <= 0) {\n    return 0;\n  }\n  $product = 1;\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $product *= $i % 2 ? 3 : 1;\n  }\n  return\
    \ $product;\n}\n", "  $n = (int) $n;\n  if ($n == 0) {\n    return 0;\n  }\n \
    \ $digits = 1;\n  for ($i = 1; $i < $n; $i++) {\n    $digits *= $i % 2 ? 3 : 1;\n\
    \  }\n  return $digits;\n}\n", "  $product = 1;\n  for ($i = 0; $i < strlen($n);\
    \ $i++) {\n    $product *= (isset($n[$i]) && $n[$i] % 2 ? $n[$i] - 1 : 0);\n \
    \ }\n  return $product;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

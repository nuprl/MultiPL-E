name: HumanEval_108_count_nums
language: php
prompt: "<?php\n// Write a function count_nums which takes an array of integers and\
  \ returns\n// the number of elements which has a sum of digits > 0.\n// If a number\
  \ is negative, then its first signed digit will be negative:\n// e.g. -123 has signed\
  \ digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>> count_nums(array(-1,\
  \ 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n// 3\nfunction count_nums($arr)\
  \ {\n"
tests: "function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0, 1,\
  \ 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    foreach ($arr as $num) {\n        if ($num < 0)\
    \ {\n            $num = abs($num);\n            $sign = '-';\n        } else {\n\
    \            $sign = '';\n        }\n        $sum += $num % 10;\n    }\n    return\
    \ $sum;\n}\n", "    $result = 0;\n    foreach ($arr as $num) {\n        if ($num\
    \ < 0) {\n            $num = abs($num);\n            $sign = substr($num, -1);\n\
    \            $num = substr($num, 0, -1);\n        } else {\n            $sign\
    \ = '';\n        }\n        $result += $num < 10 ? $num : $num - 9;\n    }\n \
    \   return $result;\n}\n", "    $sum = 0;\n    foreach ($arr as $num) {\n    \
    \    if ($num < 0) {\n            $sum += abs($num);\n        } else {\n     \
    \       $sum += $num;\n        }\n    }\n    return $sum;\n}\n", "    $sum = 0;\n\
    \    foreach ($arr as $num) {\n        if ($num < 0) {\n            $num *= -1;\n\
    \        }\n        $sum += $num;\n    }\n    return $sum;\n}\n", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $count += $num > 0 ? 1 : 0;\n  \
    \  }\n    return $count;\n}\n", "  $count = 0;\n  foreach ($arr as $num) {\n \
    \   if ($num < 0) {\n      $num *= -1;\n      $digit = abs($num % 10);\n     \
    \ if ($digit > 0) {\n        $count += $digit - 1;\n      }\n    } else {\n  \
    \    $count += $num;\n    }\n  }\n  return $count;\n}\n", "    $sum = 0;\n   \
    \ foreach ($arr as $num) {\n        if ($num < 0) {\n            $sum -= $num\
    \ % 10;\n            $num = abs($num);\n        }\n        $sum += $num % 10;\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n", "    $result = 0;\n    foreach ($arr as $num) {\n        $result += $num\
    \ > 0 ? $num : -$num;\n    }\n    return $result;\n}\n", "    $sum = 0;\n    foreach\
    \ ($arr as $num) {\n        if ($num < 0) {\n            $sum -= $num;\n     \
    \   } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n", "  $sum = 0;\n  foreach ($arr as $num) {\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n", "    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n\
    \    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n", "    $sum = 0;\n    foreach ($arr as $num) {\n        $sum += $num;\n  \
    \  }\n    return $sum;\n}\n", "  $sum = 0;\n  foreach ($arr as $num) {\n    $sum\
    \ += $num;\n  }\n  return $sum;\n}\n", "    $sum = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum\
    \ += $num;\n    }\n    return $sum;\n}\n", "  $sum = 0;\n  foreach ($arr as $num)\
    \ {\n    if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum +=\
    \ $num;\n    }\n  }\n  return $sum;\n}\n", "    $sum = 0;\n    foreach ($arr as\
    \ $num) {\n        if ($num < 0) {\n            $num *= -1;\n        }\n     \
    \   $sum += $num;\n    }\n    return $sum;\n}\n", "    $sum = 0;\n    foreach\
    \ ($arr as $num) {\n        $sum += $num;\n    }\n    return $sum;\n}\n", "  $n\
    \ = 0;\n  foreach ($arr as $a) {\n    if ($a < 0) {\n      $a += 10;\n    }\n\
    \    $n = $n * 10 + $a;\n  }\n  return $n;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

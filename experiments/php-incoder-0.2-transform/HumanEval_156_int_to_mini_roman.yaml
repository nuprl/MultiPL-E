name: HumanEval_156_int_to_mini_roman
language: php
prompt: "<?php\n// Given a positive integer, obtain its roman numeral equivalent as\
  \ a string,\n// and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n\
  // Examples:\n// >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n\
  // \"clii\"\n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunction int_to_mini_roman($number)\
  \ {\n"
tests: "function candidate(...$args) {\n    return int_to_mini_roman(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(19) !== \"xix\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(152) !== \"clii\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(251) !== \"ccli\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(426) !== \"cdxxvi\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(500) !== \"d\") { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(1) !== \"i\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(4) !== \"iv\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(43) !== \"xliii\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(90) !== \"xc\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(94) !== \"xciv\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(532) !== \"dxxxii\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(900) !== \"cm\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(994) !== \"cmxciv\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(1000) !== \"m\") { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["  $roman = '';\n  $roman_numerals = array('', 'I', 'II', 'III', 'IV',\
    \ 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI',\
    \ 'XVII', 'XVIII', 'XIX');\n  for ($i = 0; $i < $number; $i++) {\n    $roman .=\
    \ $roman_numerals[$i];\n  }\n  return strtolower($roman);\n}\n", "  $roman = '';\n\
    \  $roman_numerals = array('', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII',\
    \ 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX');\n\
    \  $roman_numerals_length = count($roman_numerals);\n  for ($i = 0; $i < $roman_numerals_length;\
    \ $i++) {\n    $roman .= $roman_numerals[$number%$roman_numerals_length];\n  \
    \  $number = floor($number/$roman_numerals_length);\n  }\n  return strtolower($roman);\n\
    }\n", "  $roman = '';\n  $num = $number;\n  while ($num > 0) {\n    $roman .=\
    \ roman_numeral($num % 10);\n    $num = (int) ($num / 10);\n  }\n  return strtolower($roman);\n\
    }\n", "  $roman = '';\n  for ($i = 1; $i <= 1000; $i++) {\n    $roman .= roman_numeral($number,\
    \ $i);\n  }\n  return strtolower($roman);\n}\n", "    $roman = '';\n    $roman_numerals\
    \ = array('M' => 1000, 'CM' => 900, 'D' => 500, 'CD' => 400, 'C' => 100, 'XC'\
    \ => 90, 'L' => 50, 'XL' => 40, 'X' => 10, 'IX' => 9, 'V' => 5, 'IV' => 4, 'I'\
    \ => 1);\n    foreach ($roman_numerals as $roman => $numeral) {\n        $numeral\
    \ *= $number;\n        if ($numeral >= 1000) {\n            $numeral /= 100;\n\
    \            $roman .= $numeral;\n        } else {\n            $roman .= $numeral;\n\
    \        }\n    }\n    return strtolower($roman);\n}\n", "  $roman = '';\n  $num\
    \ = $number;\n  while ($num > 0) {\n    $roman .= roman_numeral($num % 10);\n\
    \    $num = ($num / 10);\n  }\n  return strtolower($roman);\n}\n", "  $roman =\
    \ '';\n  for ($i = 0; $i < $number; $i++) {\n    $roman .= roman($i);\n  }\n \
    \ return strtolower($roman);\n}\n", "  $roman = '';\n  for ($i = 1; $i <= 1000;\
    \ $i++) {\n    $roman .= roman_numeral($number, $i);\n  }\n  return strtolower($roman);\n\
    }\n", "  $roman = '';\n  $roman_numerals = array('', 'I', 'II', 'III', 'IV', 'V',\
    \ 'VI', 'VII', 'VIII', 'IX');\n  for ($i = 0; $i < $number; $i++) {\n    $roman\
    \ .= $roman_numerals[$i];\n  }\n  return strtolower($roman);\n}\n", "  $roman\
    \ = '';\n  $roman_numerals = array('', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII',\
    \ 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII',\
    \ 'XIX');\n  for ($i = 0; $i < $number; $i++) {\n    $roman .= $roman_numerals[$i];\n\
    \  }\n  return strtolower($roman);\n}\n", "    $roman = '';\n    $num = $number;\n\
    \    $num -= $num % 10;\n    $num = $num / 10;\n    while ($num > 0) {\n     \
    \   $roman .= roman($num % 10);\n        $num = $num / 10;\n    }\n    return\
    \ strtolower($roman);\n}\n", "  $roman = '';\n  for ($i = 1; $i <= 1000; $i++)\
    \ {\n    $roman .= roman($number);\n    $number = floor($number / $i);\n  }\n\
    \  return strtolower($roman);\n}\n", "  $roman = '';\n  for ($i = 1; $i <= 1000;\
    \ $i++) {\n    $roman .= roman_numeral($number, $i);\n  }\n  return strtolower($roman);\n\
    }\n", "  $roman = '';\n  for ($i = 0; $i < $number; $i++) {\n    $roman .= roman($i);\n\
    \  }\n  return strtolower($roman);\n}\n", "  $roman = '';\n  $roman_numerals =\
    \ array(\n    1 => 'i',\n    5 => 'v',\n    10 => 'x',\n    50 => 'l',\n    100\
    \ => 'c',\n    500 => 'd',\n    1000 => 'm',\n    10000 => 'b',\n    100000 =>\
    \ 'k',\n    1000000 => 'y'\n  );\n  foreach ($roman_numerals as $roman => $numeral)\
    \ {\n    if ($number >= $numeral) {\n      $number = $number - $numeral;\n   \
    \   $roman .= $numeral;\n      break;\n    }\n  }\n  return $roman;\n}\n", " \
    \ $roman = '';\n  for ($i = 1; $i <= 1000; $i++) {\n    $roman .= roman_numeral($number,\
    \ $i);\n  }\n  return strtolower($roman);\n}\n", "  $roman = '';\n  $num = $number;\n\
    \  while (true) {\n    $remainder = $num % 10;\n    $num = ($num - $remainder)\
    \ / 10;\n    $roman .= $remainder == 0 ? $romans[$num] : romans[$num];\n    if\
    \ ($num == 0) {\n      break;\n    }\n  }\n  return $roman;\n}\n", "  $roman =\
    \ '';\n  $num = $number;\n  while (true) {\n    $remainder = $num % 10;\n    $num\
    \ = ($num - $remainder) / 10;\n    $roman .= $remainder == 0 ? '' : $remainder\
    \ == 1 ? 'i' : 'v';\n    if ($num == 0) {\n      break;\n    }\n  }\n  return\
    \ strtolower($roman);\n}\n", "  $roman = '';\n  $num = $number;\n  while (true)\
    \ {\n    if ($num >= 1000) {\n      $roman .= 'M';\n      $num -= 1000;\n    }\
    \ else {\n      $roman .= 'C';\n    }\n    if ($num >= 500) {\n      $roman .=\
    \ 'D';\n      $num -= 500;\n    } else {\n      $roman .= 'L';\n    }\n    if\
    \ ($num >= 100) {\n      $roman .= 'X';\n      $num -= 100;\n    } else {\n  \
    \    $roman .= 'V';\n    }\n    if ($num >= 50) {\n      $roman .= 'I';\n    \
    \  $num -= 50;\n    } else {\n      $roman .= 'I';\n    }\n    if ($num >= 10)\
    \ {\n      $roman .= 'X';\n      $num -= 10;\n    } else {\n      $roman .= 'L';\n\
    \    }\n    if ($num >= 5) {\n      $roman .= 'C';\n      $num -= 5;\n    } else\
    \ {\n      $roman .= 'C';\n    }\n    if ($num >= 1) {\n      $roman .= 'M';\n\
    \      $num -= 1;\n    } else {\n      break;\n    }\n  }\n  return $roman;\n\
    }\n", "  $roman = '';\n  $roman_numerals = array(\n    1 => 'I',\n    5 => 'V',\n\
    \    10 => 'X',\n    40 => 'L',\n    100 => 'C',\n    400 => 'D',\n    1000 =>\
    \ 'M',\n  );\n  foreach ($roman_numerals as $roman => $numeral) {\n    if ($number\
    \ >= $roman) {\n      $roman_numerals[$roman] = $numeral;\n      $number = $number\
    \ - $roman;\n    }\n  }\n  $roman_numerals[1000] = 'M';\n  foreach ($roman_numerals\
    \ as $roman => $numeral) {\n    if ($number >= $roman) {\n      $roman_numerals[$roman]\
    \ = $numeral;\n      $number = $number - $roman;\n    }\n  }\n  $roman_numerals[4000]\
    \ = 'D';\n  foreach ($roman_numerals as $roman => $numeral) {\n    if ($number\
    \ >= $roman) {\n      $roman_numerals[$roman] = $numeral;\n      $number = $number\
    \ - $roman;\n    }\n  }\n  $roman_numerals[10000] = 'C';\n  foreach ($roman_numerals\
    \ as $roman => $numeral) {\n    if ($number >= $roman) {\n      $roman_numerals[$roman]\
    \ = $numeral;\n      $number = $number - $roman;\n    }\n  }\n  $roman_numerals[100000]\
    \ = 'L';\n  foreach ($roman_numerals as $roman => $numeral) {\n    if ($number\
    \ >= $roman) {\n      $roman_numerals[$roman] = $numeral;\n      $number = $number\
    \ - $roman;\n    }\n  }\n  $roman_numerals[1000000] = 'X';\n  foreach ($roman_numerals\
    \ as $roman => $numeral) {\n    if ($number >= $roman) {\n      $roman_numerals[$roman]\
    \ = $numeral;\n      $number = $number - $roman;\n    }\n  }\n  $roman_numerals[10000000]\
    \ = 'V';\n  foreach ($roman_numerals as $roman => $numeral) {\n    if ($number\
    \ >= $roman) {\n      $roman_numerals[$roman] = $numeral;\n      $number = $number\
    \ - $roman;\n    }\n  }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

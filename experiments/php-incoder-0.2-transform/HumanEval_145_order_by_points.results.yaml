language: php
name: HumanEval_145_order_by_points
results:
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ return array_map(function($num) use ($sums) {\n    return $nums[$num];\n  },\
    \ array_keys($nums, $sums));\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujmi1nt1.php:23\n\
    Stack trace:\n#0 /tmp/tmpujmi1nt1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpujmi1nt1.php\
    \ on line 23\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ arsort($sums);\n  return array_map(function($num) use ($sums) {\n    return\
    \ $sums - $num;\n  }, $nums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: arsort() expects parameter 1 to be array, int given in /tmp/tmp6lua8zhp.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lua8zhp.php:24\n\
    Stack trace:\n#0 /tmp/tmp6lua8zhp.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6lua8zhp.php\
    \ on line 24\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ arsort($nums);\n  return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xji9soi.php:22\n\
    Stack trace:\n#0 /tmp/tmp5xji9soi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5xji9soi.php\
    \ on line 22\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_map(function($num)\
    \ { return $num % 10; }, $nums);\n  sort($sums);\n  return array_map(function($sum)\
    \ { return $nums[$sum]; }, $sums);\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyayx73is.php:22\n\
    Stack trace:\n#0 /tmp/tmpyayx73is.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyayx73is.php\
    \ on line 22\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_map(function($num)\
    \ {\n    return $num * 10 + $num;\n  }, $nums);\n  asort($sums);\n  return array_map(function($num)\
    \ {\n    return $num / 10;\n  }, $sums);\n}\n</code>\n<|/ a dscore=1 |>\n<| a\
    \ |>\n<code>\n<?php\n$numbers = array(\n    1 => 1,\n    2 => 2,\n    3 => 3,\n\
    \    4 => 4,\n    5 => 5,\n    6 => 6,\n    7 => 7,\n    8 => 8,\n    9 => 9,\n\
    \    10 => 10,\n    11 => 11,\n    12 => 12,\n    13 => 13,\n    14 => 14,\n \
    \   15 => 15,\n    16 => 16,\n    17 => 17,\n    18 => 18,\n    19 => 19,\n  \
    \  20 => 20,\n    21 => 21,\n    22 => 22,\n    23 => 23,\n    24 => 24,\n   \
    \ 25 => 25,\n    26 => 26,\n    27 => 27,\n    28 => 28,\n    29 => 29,\n    30\
    \ => 30,\n    31 => 31,\n    32 => 32,\n    33 => 33,\n    34 => 34,\n    35 =>\
    \ 35,\n    36 => 36,\n    37 => 37,\n    38 => 38,\n    39 => 39,\n    40 => 40,\n\
    \    41 => 41,\n    42 => 42,\n    43 => 43,\n    44 => 44,\n    45 => 45,\n \
    \   46 => 46,\n    47 => 47,\n    48 => 48,\n    49 => 49,\n    50 => 50,\n  \
    \  51 => 51,\n    52 => 52,\n    53 => 53,\n    54 => 54,\n    55 => 55,\n   \
    \ 56 => 56,\n    57 => 57,\n    58 => 58,\n    59 => 59,\n    60 => 60,\n    61\
    \ => 61,\n    62 => 62,\n    63 => 63,\n    64 => 64,\n    65 => 65,\n    66 =>\
    \ 66,\n    67 => 67,\n    68 => 68,\n    69 => 69,\n    70 => 70,\n    71 => 71,\n\
    \    72 => 72,\n    73 => 73,\n    74 => 74,\n    75 => 75,\n    76\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpp0ex_7br.php on line 20

    '
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_map(function($num)\
    \ {\n    return $num * log10($num);\n  }, $nums);\n  asort($sums);\n  return array_map(function($num)\
    \ {\n    return $num / log10($num);\n  }, $sums);\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0ou8a33.php:26\n\
    Stack trace:\n#0 /tmp/tmpq0ou8a33.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpq0ou8a33.php\
    \ on line 26\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array_sum($nums);\n\
    \    $sorted = array();\n    foreach ($nums as $i => $num) {\n        $sorted[$i]\
    \ = $num;\n    }\n    asort($sorted);\n    foreach ($sorted as $i => $num) {\n\
    \        $sorted[$i] = $sums[$i];\n    }\n    return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp482ybr_2.php:29\n\
    Stack trace:\n#0 /tmp/tmp482ybr_2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp482ybr_2.php\
    \ on line 29\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ arsort($nums);\n  return array_map(function ($num) use ($sums) {\n    return\
    \ $sums - $num;\n  }, $nums);\n}\n</code>\n<|/ a tags=php,arrays,sorting |>\n\
    <| c |>\nThis doesn't seem to work. `order_by_points(array(1, 11, -1, -11, -12))`\
    \ returns `array(-1, -11, 1, -12, 11)` instead of `array(-1, -11, -12, 1, 11)`.\n\
    <|/ c |>\n<| c |>\nI tested it on PHP 5.3.10 and it works as expected. `order_by_points(array(1,\
    \ 11, -1, -11, -12))` returns `array(-1, -11, -12, 1, 11)`.\n<|/ c |>\n<| c |>\n\
    I tested it on PHP 5.3.10 and it works as expected. `order_by_points(array(1,\
    \ 11, -1, -11, -12))` returns `array(-1, -11, -12, 1, 11)`.\n<|/ c |>\n<| c |>\n\
    I tested it on PHP 5.3.10 and it works as expected. `order_by_points(array(1,\
    \ 11, -1, -11, -12))` returns `array(-1, -11, -12, 1, 11)`.\n<|/ c |>\n<| c |>\n\
    I tested it on PHP 5.3.10 and it works as expected. `order_by_points(array(1,\
    \ 11, -1, -11, -12))` returns `array(-1, -11, -12, 1, 11)`.\n<|/ c |>\n<| a |>\n\
    <code>\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp_9vv6r1v.php on line 18

    '
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ arsort($sums);\n  return array_map(function($n) use ($sums) {\n    return $sums[$n];\n\
    \  }, $nums);\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work for negative numbers.\
    \ `order_by_points([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpb8laqz0s.php on line 18

    '
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sorted = array();\n    foreach\
    \ ($nums as $num) {\n        $digits = str_split($num);\n        $sum = 0;\n \
    \       foreach ($digits as $digit) {\n            $sum += intval($digit);\n \
    \       }\n        $sorted[] = $sum;\n    }\n    array_multisort($sorted, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5esd0coq.php:30\n\
    Stack trace:\n#0 /tmp/tmp5esd0coq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5esd0coq.php\
    \ on line 30\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sorted = array();\n    $sums\
    \ = array();\n    foreach ($nums as $num) {\n        $sums[$num] = 0;\n    }\n\
    \    foreach ($sums as $num => $sum) {\n        $sorted[] = $num;\n    }\n   \
    \ foreach ($sums as $num => $sum) {\n        $sorted[] = $num;\n    }\n    return\
    \ $sorted;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhv7mlsq.php:31\n\
    Stack trace:\n#0 /tmp/tmpdhv7mlsq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdhv7mlsq.php\
    \ on line 31\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ arsort($nums);\n  return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xji9soi.php:22\n\
    Stack trace:\n#0 /tmp/tmp5xji9soi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5xji9soi.php\
    \ on line 22\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_map(function($num)\
    \ {\n    return $num * log10($num);\n  }, $nums);\n  asort($sums);\n  $nums =\
    \ array_map(function($sum) use ($nums) {\n    return $nums[$sum];\n  }, $sums);\n\
    \  return $nums;\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n<| c |>\nThis\
    \ doesn't work for negative numbers, it sorts them in descending order. `order_by_points(array(-2,\
    \ -1, -10, -20, -100, -200))` returns `array(-100, -200, -20, -10, -1, -2)`\n\
    <|/ c |>\n<| c |>\n: I fixed the bug. Thanks for pointing it out.\n<|/ c |>\n\
    <| c |>\n: I added a version that works with negative numbers as well.\n<|/ c\
    \ |>\n<| c |>\n: I added a version that works with negative numbers as well.\n\
    <|/ c |>\n<| c |>\n: I added a version that works with negative numbers as well.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp2tjp2j2d.php on line 21

    '
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ $order = array_keys($nums, $sums);\n  return array_intersect_key($nums, array_flip($order));\n\
    }\n</code>\n<|/ a tags=php,arrays,sorting |>\n<| c |>\nThis doesn't work for me.\
    \ `order_by_points([1,11,-1,-11, -12])` returns `array(-12, -11, 1, 11, -1)`\n\
    <|/ c |>\n<| c |>\nI tested it and it works fine. `order_by_points([1,11,-1,-11,\
    \ -12])` returns `array(-1, -11, 1, -12, 11)`\n<|/ c |>\n<| c |>\nI tested it\
    \ again and it works fine. `order_by_points([1,11,-1,-11, -12])` returns `array(-1,\
    \ -11, 1, -12, 11)`\n<|/ c |>\n<| c |>\nI tested it again and it works fine. `order_by_points([1,11,-1,-11,\
    \ -12])` returns `array(-1, -11, 1, -12, 11)`\n<|/ c |>\n<| c |>\nI tested it\
    \ again and it works fine. `order_by_points([1,11,-1,-11, -12])` returns `array(-1,\
    \ -11, 1, -12, 11)`\n<|/ c |>\n<| a tags=php,arrays,sorting |>\n<code>\n$array\
    \ = array(1,11,-1,-11, -12);\n$sums = array_sum($array);\n$order = array_keys($array,\
    \ $sums);\n$result = array_intersect_key($array, array_flip($order));\n</code>\n\
    <|/ a dscore=4 |>\n<| c |>\nThis doesn't work for me. `order_by_points([1,11,-1,-11,\
    \ -12])` returns `array(-12, -11, 1, 11, -1)`\n<|/ c |>\n<| c |>\nI tested it\
    \ and it works fine. `order_by_points([1,11,-1,-11, -12])` returns `array(-1,\
    \ -11, 1, -12, 11)`\n<|/ c |>\n<| c |>\nI tested it again and it works fine. `order_by_points([1,11,-1,-11,\
    \ -12])` returns `array(-1, -11, 1, -12, 11)`\n<|/ c |>\n<| c |>\nI tested it\
    \ again and it works fine. `order_by_points([1,11,-1,-11, -12])` returns `array(-1,\
    \ -11, 1, -12, 11)`\n<|/ c |>\n<| c |>\nI tested it again and it works fine. `order_by_points([1,11,-1,-11,\
    \ -12\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpdtjn_pi2.php on line 16

    '
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array_map(function($num)\
    \ { return $num % 10; }, $nums);\n    asort($sums);\n    return array_map(function($num)\
    \ { return $num % 10; }, $nums);\n}\n</code>\n<|/ a tags=php,sorting,arrays |>\n\
    <| c |>\nI like your answer but I think it can be simplified a bit. Instead of\
    \ using array_map to sum each digit, just use array_sum. Also, instead of using\
    \ array_map to sort the sums, just use array_multisort. Also, instead of using\
    \ array_map to sort the original numbers, just use array_multisort. Also, instead\
    \ of using array_map to sort the sums, just use array_multisort. Also, instead\
    \ of using array_map to sort the original numbers, just use array_multisort. Also,\
    \ instead of using array_map to sort the sums, just use array_multisort. Also,\
    \ instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the original numbers, just use array_multisort.\
    \ Also, instead of using array_map to sort the sums, just use array_multisort.\
    \ Also, instead of using array_map to sort the \nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmp86x8nqyf.php on line 16

    '
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ asort($nums);\n  return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposyrlr_0.php:22\n\
    Stack trace:\n#0 /tmp/tmposyrlr_0.php(30): test()\n#1 {main}\n  thrown in /tmp/tmposyrlr_0.php\
    \ on line 22\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array_sum($nums);\n\
    \    $order = array_keys($nums, $sums);\n    return array_intersect_key($nums,\
    \ $order);\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9cl65ev.php:22\n\
    Stack trace:\n#0 /tmp/tmpf9cl65ev.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpf9cl65ev.php\
    \ on line 22\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sorted = array();\n    $sums\
    \ = array();\n    foreach ($nums as $num) {\n        $sums[$num] = 0;\n    }\n\
    \    foreach ($nums as $num) {\n        $sums[$num] += $num;\n    }\n    foreach\
    \ ($sums as $num => $sum) {\n        $sorted[] = $nums[$sum];\n    }\n    return\
    \ $sorted;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47a49k1y.php:31\n\
    Stack trace:\n#0 /tmp/tmp47a49k1y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp47a49k1y.php\
    \ on line 31\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array_sum($nums);\n\
    \    $order = array_keys($nums, $sums);\n    return array_values($nums, $order);\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: array_values() expects exactly 1 parameter, 2 given in /tmp/tmpsl06hj_p.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsl06hj_p.php:22\n\
    Stack trace:\n#0 /tmp/tmpsl06hj_p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsl06hj_p.php\
    \ on line 22\n"
  timestamp: 1659730801
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array_sum($nums);\n \
    \ return array_map(function($num) use ($sums) {\n    return $nums[$sums - $num];\n\
    \  }, $nums);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=php,arrays,sorting |>\n\
    <code>\n<?php\n$arr = [\n    1 => [\n        'name' => 'a',\n        'points'\
    \ => 1,\n    ],\n    2 => [\n        'name' => 'b',\n        'points' => 2,\n\
    \    ],\n    3 => [\n        'name' => 'c',\n        'points' => 3,\n    ],\n\
    \    4 => [\n        'name' => 'd',\n        'points' => 4,\n    ],\n    5 =>\
    \ [\n        'name' => 'e',\n        'points' => 5,\n    ],\n    6 => [\n    \
    \    'name' => 'f',\n        'points' => 6,\n    ],\n    7 => [\n        'name'\
    \ => 'g',\n        'points' => 7,\n    ],\n    8 => [\n        'name' => 'h',\n\
    \        'points' => 8,\n    ],\n    9 => [\n        'name' => 'i',\n        'points'\
    \ => 9,\n    ],\n    10 => [\n        'name' => 'j',\n        'points' => 10,\n\
    \    ],\n    11 => [\n        'name' => 'k',\n        'points' => 11,\n    ],\n\
    \    12 => [\n        'name' => 'l',\n        'points' => 12,\n    ],\n    13\
    \ => [\n        'name' => 'm',\n        'points' => 13,\n    ],\n    14 => [\n\
    \        'name' => 'n',\n        'points' => 14,\n    ],\n    15 => [\n      \
    \  'name' => 'o',\n        'points' => 15,\n    ],\n    16 => [\n        'name'\
    \ => 'p',\n        'points' => 16,\n    ],\n    17 => [\n        'name' => 'q',\n\
    \        'points' => 17,\n    ],\n    18 => [\n        'name' => 'r',\n      \
    \  'points' => 18,\n    ],\n    19 => [\n        'name' => 's',\n        'points'\
    \ => 19,\n    ],\n    20 => [\n        'name' => 't',\n        'points' => 20,\n\
    \    ],\n    21 => [\n        'name' => 'u',\n        'points' => 21,\n    ],\n\
    \    22 => [\n        'name' => 'v',\n        'points' => 22,\n    ],\n    23\
    \ => [\n        'name' => 'w',\n        'points' => 23,\n    ],\n    24 => [\n\
    \        'name' => 'x',\n        'points' => 24,\n    ],\n    25 => \nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpje3vqtma.php on line 17

    '
  timestamp: 1659730801

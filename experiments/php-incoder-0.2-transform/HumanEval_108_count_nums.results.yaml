language: php
name: HumanEval_108_count_nums
results:
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = '-';\n\
    \        } else {\n            $sign = '';\n        }\n        $sum += $num %\
    \ 10;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3agptuou.php:32\n\
    Stack trace:\n#0 /tmp/tmp3agptuou.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3agptuou.php\
    \ on line 32\n"
  timestamp: 1659730784
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n            $sign\
    \ = substr($num, -1);\n            $num = substr($num, 0, -1);\n        } else\
    \ {\n            $sign = '';\n        }\n        $result += $num < 10 ? $num :\
    \ $num - 9;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpx4_yk8du.php on line\
    \ 22\n\nWarning: A non-numeric value encountered in /tmp/tmpx4_yk8du.php on line\
    \ 22\n\nWarning: A non-numeric value encountered in /tmp/tmpx4_yk8du.php on line\
    \ 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx4_yk8du.php:34\n\
    Stack trace:\n#0 /tmp/tmpx4_yk8du.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx4_yk8du.php\
    \ on line 34\n"
  timestamp: 1659730784
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum += abs($num);\n        } else {\n \
    \           $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzn9vfbx_.php:30\n\
    Stack trace:\n#0 /tmp/tmpzn9vfbx_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzn9vfbx_.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $count += $num > 0 ? 1 : 0;\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihgpbhun.php:30\n\
    Stack trace:\n#0 /tmp/tmpihgpbhun.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpihgpbhun.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n      $digit = abs($num % 10);\n    \
    \  if ($digit > 0) {\n        $count += $digit - 1;\n      }\n    } else {\n \
    \     $count += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmb4w13sa.php:34\n\
    Stack trace:\n#0 /tmp/tmpmb4w13sa.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmb4w13sa.php\
    \ on line 34\n"
  timestamp: 1659730784
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num % 10;\n            $num = abs($num);\n\
    \        }\n        $sum += $num % 10;\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsj85g7wb.php:30\n\
    Stack trace:\n#0 /tmp/tmpsj85g7wb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsj85g7wb.php\
    \ on line 30\n"
  timestamp: 1659730784
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        $result += $num > 0 ? $num : -$num;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrz4m9p7.php:26\n\
    Stack trace:\n#0 /tmp/tmpzrz4m9p7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzrz4m9p7.php\
    \ on line 26\n"
  timestamp: 1659730784
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum += $num;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_43tsn.php:30\n\
    Stack trace:\n#0 /tmp/tmpsh_43tsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh_43tsn.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n = $n * 10 + $a;\n  }\n  return $n;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ypj28m3.php:29\n\
    Stack trace:\n#0 /tmp/tmp_ypj28m3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_ypj28m3.php\
    \ on line 29\n"
  timestamp: 1659730784
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum\
    \ += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptia97ei3.php:26\n\
    Stack trace:\n#0 /tmp/tmptia97ei3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptia97ei3.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ floor($num / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70gwluy_.php:30\n\
    Stack trace:\n#0 /tmp/tmp70gwluy_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp70gwluy_.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function ($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj8nzkbg.php:28\n\
    Stack trace:\n#0 /tmp/tmpmj8nzkbg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmj8nzkbg.php\
    \ on line 28\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4esoxmb.php:29\n\
    Stack trace:\n#0 /tmp/tmpw4esoxmb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw4esoxmb.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += intval($num);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9roqxxv.php:34\n\
    Stack trace:\n#0 /tmp/tmph9roqxxv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph9roqxxv.php\
    \ on line 34\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $count++;\n\
    \        }\n        $count += $num % 10;\n        $num /= 10;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8labw9j7.php:31\n\
    Stack trace:\n#0 /tmp/tmp8labw9j7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8labw9j7.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $firstDigit\
    \ = $num % 10;\n            $num = $num / 10;\n            if ($num < 0) {\n \
    \               $num *= -1;\n                $firstDigit *= -1;\n            }\n\
    \            $count += $firstDigit > 0 ? 1 : 0;\n        } else {\n          \
    \  $count += $num > 0 ? 1 : 0;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyyhgahog.php:37\n\
    Stack trace:\n#0 /tmp/tmpyyhgahog.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyyhgahog.php\
    \ on line 37\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += intval($num) * pow(10, strlen($sign));\n  }\n  return $sum;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpks1x5dyq.php:34\n\
    Stack trace:\n#0 /tmp/tmpks1x5dyq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpks1x5dyq.php\
    \ on line 34\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = ($num < 0) ? '-'\
    \ : '';\n      $num = abs($num);\n    }\n    $count += $num;\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr0b9j773.php:31\n\
    Stack trace:\n#0 /tmp/tmpr0b9j773.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpr0b9j773.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num >= 0) {\n            $count += $num;\n        } else {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnke5hy8.php:30\n\
    Stack trace:\n#0 /tmp/tmplnke5hy8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplnke5hy8.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += $num * pow(10, strlen($sign));\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string *\
    \ int in /tmp/tmp12ng5gut.php:22\nStack trace:\n#0 /tmp/tmp12ng5gut.php(28): count_nums(Array)\n\
    #1 /tmp/tmp12ng5gut.php(33): candidate(Array)\n#2 /tmp/tmp12ng5gut.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp12ng5gut.php on line 22\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $v) {\n    if\
    \ ($v < 0) {\n      $v = abs($v);\n      $n = $v < 0 ? $v : $n - $v;\n    } else\
    \ {\n      $n = $n + $v;\n    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl9rwndf.php:31\n\
    Stack trace:\n#0 /tmp/tmpyl9rwndf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyl9rwndf.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n    }\n    $count += $num % 10;\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslcyq0s1.php:29\n\
    Stack trace:\n#0 /tmp/tmpslcyq0s1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpslcyq0s1.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n      $sign\
    \ = '';\n    }\n    $sum += intval($n) / 10;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpql7rhkam.php:32\n\
    Stack trace:\n#0 /tmp/tmpql7rhkam.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpql7rhkam.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $count++;\n\
    \        }\n        $count += $num % 10;\n        $num /= 10;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8labw9j7.php:31\n\
    Stack trace:\n#0 /tmp/tmp8labw9j7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8labw9j7.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = -1;\n\
    \        } else {\n            $sign = 1;\n        }\n        $sum += $num * pow(10,\
    \ abs(floor(log10($num))));\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvagsj4qi.php:32\n\
    Stack trace:\n#0 /tmp/tmpvagsj4qi.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvagsj4qi.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = -1;\n    } else {\n\
    \      $sign = 1;\n    }\n    $sum += $num * pow(10, strlen($num) - 1);\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs4hltaq.php:32\n\
    Stack trace:\n#0 /tmp/tmpcs4hltaq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcs4hltaq.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function ($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj8nzkbg.php:28\n\
    Stack trace:\n#0 /tmp/tmpmj8nzkbg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmj8nzkbg.php\
    \ on line 28\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a = -$a;\n    }\n    $n = $n * 10 + $a;\n  }\n  return $n;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp85tbijrp.php:29\n\
    Stack trace:\n#0 /tmp/tmp85tbijrp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp85tbijrp.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $count += $num\
    \ < 0 ? 1 : 0;\n        } else {\n            $count += $num < 10 ? 1 : 0;\n \
    \       }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n  \
    \  return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2rmq60a.php:31\n\
    Stack trace:\n#0 /tmp/tmpo2rmq60a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo2rmq60a.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num > 0) {\n            $result += $num % 10;\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbv3gwpm.php:29\n\
    Stack trace:\n#0 /tmp/tmptbv3gwpm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptbv3gwpm.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = $n * -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmponuwjsy2.php:29\n\
    Stack trace:\n#0 /tmp/tmponuwjsy2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmponuwjsy2.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n            $sign\
    \ = substr($num, -1);\n            $num = substr($num, 0, -1);\n        } else\
    \ {\n            $sign = 1;\n        }\n        $result += $num * $sign;\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string *\
    \ string in /tmp/tmpdifqdtb3.php:22\nStack trace:\n#0 /tmp/tmpdifqdtb3.php(28):\
    \ count_nums(Array)\n#1 /tmp/tmpdifqdtb3.php(33): candidate(Array)\n#2 /tmp/tmpdifqdtb3.php(42):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpdifqdtb3.php on line 22\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num % 10);\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa41pzov_.php:32\n\
    Stack trace:\n#0 /tmp/tmpa41pzov_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa41pzov_.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxr07eytm.php:28\n\
    Stack trace:\n#0 /tmp/tmpxr07eytm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxr07eytm.php\
    \ on line 28\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = -1;\n    } else {\n\
    \      $sign = 1;\n    }\n    $sum += $num * pow(10, strlen($num) - 1);\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs4hltaq.php:32\n\
    Stack trace:\n#0 /tmp/tmpcs4hltaq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcs4hltaq.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = -1;\n    } else {\n\
    \      $sign = 1;\n    }\n    $sum += $num * pow(10, strlen($num) - 1);\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs4hltaq.php:32\n\
    Stack trace:\n#0 /tmp/tmpcs4hltaq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcs4hltaq.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num >= 0) {\n            $sum += $num;\n        } else {\n     \
    \       $sum += $num % 10;\n        }\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_ecsxh4.php:30\n\
    Stack trace:\n#0 /tmp/tmpj_ecsxh4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj_ecsxh4.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = -1;\n    } else {\n\
    \      $sign = 1;\n    }\n    $sum += $num * pow(10, strlen($num) - 1);\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs4hltaq.php:32\n\
    Stack trace:\n#0 /tmp/tmpcs4hltaq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcs4hltaq.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = 1;\n    }\n  \
    \  $sum += $num;\n    if ($sum > 9) {\n      $sum = 0;\n    }\n    if ($sum >\
    \ 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $sum in /tmp/tmpxhy41zyq.php on line 22\n\
    \nFatal error: Uncaught TypeError: Unsupported operand types: null + string in\
    \ /tmp/tmpxhy41zyq.php:22\nStack trace:\n#0 /tmp/tmpxhy41zyq.php(34): count_nums(Array)\n\
    #1 /tmp/tmpxhy41zyq.php(39): candidate(Array)\n#2 /tmp/tmpxhy41zyq.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxhy41zyq.php on line 22\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ floor($num);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuw3nkgi7.php:30\n\
    Stack trace:\n#0 /tmp/tmpuw3nkgi7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuw3nkgi7.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfk38bl6.php:41\n\
    Stack trace:\n#0 /tmp/tmpsfk38bl6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpsfk38bl6.php\
    \ on line 41\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = -1;\n\
    \        } else {\n            $sign = 1;\n        }\n        $sum += $num * pow(10,\
    \ strlen($num) - 1);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpux8yymzu.php:32\n\
    Stack trace:\n#0 /tmp/tmpux8yymzu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpux8yymzu.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n += $a > 9 ? 1 : 0;\n  }\n  return\
    \ $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq_6d014t.php:30\n\
    Stack trace:\n#0 /tmp/tmpq_6d014t.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpq_6d014t.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4esoxmb.php:29\n\
    Stack trace:\n#0 /tmp/tmpw4esoxmb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw4esoxmb.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n      $num *= -1;\n    }\n    $sum +=\
    \ $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehokw9ig.php:31\n\
    Stack trace:\n#0 /tmp/tmpehokw9ig.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpehokw9ig.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n      $num *= -1;\n    }\n    $sum +=\
    \ $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehokw9ig.php:31\n\
    Stack trace:\n#0 /tmp/tmpehokw9ig.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpehokw9ig.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = $n * -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmponuwjsy2.php:29\n\
    Stack trace:\n#0 /tmp/tmponuwjsy2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmponuwjsy2.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum -= $num;\n    } else {\n      $sum += $num;\n \
    \   }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0965w0_.php:30\n\
    Stack trace:\n#0 /tmp/tmp_0965w0_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_0965w0_.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n      $digit = abs($num);\n      if ($num\
    \ > 0) {\n        $count += $digit > 0 ? $digit : -$digit;\n      } else {\n \
    \       $count += $digit > 0 ? $digit : -$digit;\n      }\n    } else {\n    \
    \  $count += $num;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lsf1yyu.php:36\n\
    Stack trace:\n#0 /tmp/tmp8lsf1yyu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8lsf1yyu.php\
    \ on line 36\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = -1;\n    } else {\n\
    \      $sign = 1;\n    }\n    $sum += $num * pow(10, strlen($num) - 1);\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs4hltaq.php:32\n\
    Stack trace:\n#0 /tmp/tmpcs4hltaq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcs4hltaq.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $num) {\n    $n\
    \ += $num;\n  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpue7vf_4y.php:26\n\
    Stack trace:\n#0 /tmp/tmpue7vf_4y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpue7vf_4y.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function ($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj8nzkbg.php:28\n\
    Stack trace:\n#0 /tmp/tmpmj8nzkbg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmj8nzkbg.php\
    \ on line 28\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4esoxmb.php:29\n\
    Stack trace:\n#0 /tmp/tmpw4esoxmb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw4esoxmb.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $v) {\n    if\
    \ ($v < 0) {\n      $v = abs($v);\n      $n++;\n    }\n    $n = $n * 10 + $v;\n\
    \  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpemp25lp1.php:30\n\
    Stack trace:\n#0 /tmp/tmpemp25lp1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpemp25lp1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n            $sign\
    \ = '-';\n        } else {\n            $sign = '';\n        }\n        $digits\
    \ = str_split($num);\n        foreach ($digits as $digit) {\n            if ($digit\
    \ > 0) {\n                $count++;\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoh_exd01.php:37\n\
    Stack trace:\n#0 /tmp/tmpoh_exd01.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpoh_exd01.php\
    \ on line 37\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n    }\n    $sum += $num;\n  }\n \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphspbbpqv.php:29\n\
    Stack trace:\n#0 /tmp/tmphspbbpqv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphspbbpqv.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n    }\n    $sum += $num;\n  }\n \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphspbbpqv.php:29\n\
    Stack trace:\n#0 /tmp/tmphspbbpqv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphspbbpqv.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num / 10) * intval($num % 10);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfiukrpno.php:33\n\
    Stack trace:\n#0 /tmp/tmpfiukrpno.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfiukrpno.php\
    \ on line 33\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a = -$a;\n    }\n    $n = $a + $n;\n  }\n  return $n;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2njq2w4.php:29\n\
    Stack trace:\n#0 /tmp/tmpy2njq2w4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy2njq2w4.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num >= 0) {\n            $count += $num;\n        } else {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnke5hy8.php:30\n\
    Stack trace:\n#0 /tmp/tmplnke5hy8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplnke5hy8.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num > 0) {\n      $count += $num % 10;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzw31byi.php:29\n\
    Stack trace:\n#0 /tmp/tmpkzw31byi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkzw31byi.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function ($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj8nzkbg.php:28\n\
    Stack trace:\n#0 /tmp/tmpmj8nzkbg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmj8nzkbg.php\
    \ on line 28\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n    }\n    $sum += $num;\n  }\n \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphspbbpqv.php:29\n\
    Stack trace:\n#0 /tmp/tmphspbbpqv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphspbbpqv.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum -= $n % 10;\n    } else {\n    \
    \  $sum += $n % 10;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3dh40t3d.php:31\n\
    Stack trace:\n#0 /tmp/tmp3dh40t3d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3dh40t3d.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num / 10) * intval($num % 10);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfiukrpno.php:33\n\
    Stack trace:\n#0 /tmp/tmpfiukrpno.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfiukrpno.php\
    \ on line 33\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum += $num;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_43tsn.php:30\n\
    Stack trace:\n#0 /tmp/tmpsh_43tsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh_43tsn.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $v) {\n    if\
    \ ($v < 0) {\n      $v = abs($v);\n      $n = $v < 0 ? $v : $v - 10;\n    } else\
    \ {\n      $n = $v + 10;\n    }\n    if ($n < 10) {\n      $n = 0;\n    }\n  }\n\
    \  return $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpki_twg17.php:34\n\
    Stack trace:\n#0 /tmp/tmpki_twg17.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpki_twg17.php\
    \ on line 34\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n      $num *= -1;\n    }\n    $sum +=\
    \ floor($num / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7m23wdwu.php:30\n\
    Stack trace:\n#0 /tmp/tmp7m23wdwu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7m23wdwu.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num / 10) * intval($num % 10);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfiukrpno.php:33\n\
    Stack trace:\n#0 /tmp/tmpfiukrpno.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfiukrpno.php\
    \ on line 33\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum += $num;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_43tsn.php:30\n\
    Stack trace:\n#0 /tmp/tmpsh_43tsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh_43tsn.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum += $num;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_43tsn.php:30\n\
    Stack trace:\n#0 /tmp/tmpsh_43tsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh_43tsn.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sign = -1;\n    } else {\n     \
    \ $sign = 1;\n    }\n    $sum += $num % 10;\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwo9pao33.php:32\n\
    Stack trace:\n#0 /tmp/tmpwo9pao33.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwo9pao33.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n    }\n    $sum += $num;\n  }\n \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphspbbpqv.php:29\n\
    Stack trace:\n#0 /tmp/tmphspbbpqv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphspbbpqv.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num >= 0) {\n      $count += $num;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikuikezw.php:29\n\
    Stack trace:\n#0 /tmp/tmpikuikezw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpikuikezw.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $n) {\n  \
    \  if ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n    \
    \  $sign = '';\n    }\n    $count += intval($n) / 10;\n  }\n  return $sign ==\
    \ ''\n    ? $count\n    : $sign == '-'\n      ? -$count\n      : $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Unparenthesized `a ? b : c ? d : e` is not supported. Use either
    `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmps09dkrd0.php on line
    23

    '
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = substr($num,\
    \ -1);\n            $num = substr($num, 0, -1);\n        } else {\n          \
    \  $sign = 1;\n        }\n        $sum += $num * $sign;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string *\
    \ string in /tmp/tmpirw40shu.php:22\nStack trace:\n#0 /tmp/tmpirw40shu.php(28):\
    \ count_nums(Array)\n#1 /tmp/tmpirw40shu.php(33): candidate(Array)\n#2 /tmp/tmpirw40shu.php(42):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpirw40shu.php on line 22\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num < 0 ? -$num : $num;\n\
    \    } else {\n      $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2h_ic265.php:31\n\
    Stack trace:\n#0 /tmp/tmp2h_ic265.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2h_ic265.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $n) {\n\
    \        if ($n < 0) {\n            $n = abs($n);\n            $sign = '-';\n\
    \        } else {\n            $sign = '';\n        }\n        $sum += $n * (int)strlen($sign);\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq19uw8hk.php:32\n\
    Stack trace:\n#0 /tmp/tmpq19uw8hk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpq19uw8hk.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num >= 0) {\n            $count += $num;\n        } else {\n\
    \            $count += $num % 10;\n            $count += $num / 10;\n        }\n\
    \    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggbvc3wa.php:31\n\
    Stack trace:\n#0 /tmp/tmpggbvc3wa.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpggbvc3wa.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n    } else {\n      $sum += $num % 10;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjrp6dov.php:30\n\
    Stack trace:\n#0 /tmp/tmpwjrp6dov.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwjrp6dov.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $n) {\n    $n\
    \ += $n % 10;\n  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw728mbnv.php:27\n\
    Stack trace:\n#0 /tmp/tmpw728mbnv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpw728mbnv.php\
    \ on line 27\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num < 0 ? -$num : $num;\n    } else {\n   \
    \   $sum += $num;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqxq80_f.php:30\n\
    Stack trace:\n#0 /tmp/tmpyqxq80_f.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyqxq80_f.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num >= 0) {\n      $count += $num;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikuikezw.php:29\n\
    Stack trace:\n#0 /tmp/tmpikuikezw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpikuikezw.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n      $digit = floor($num / 10);\n  \
    \    $num -= $digit * 10;\n    } else {\n      $digit = 0;\n    }\n    $count\
    \ += $digit > 0 ? $digit : 0;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprk2sc9lh.php:34\n\
    Stack trace:\n#0 /tmp/tmprk2sc9lh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprk2sc9lh.php\
    \ on line 34\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num > 0) {\n      $count += $num;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6joe8qy6.php:29\n\
    Stack trace:\n#0 /tmp/tmp6joe8qy6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6joe8qy6.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = -1;\n    } else {\n\
    \      $sign = 1;\n    }\n    $sum += $num * pow(10, count($arr) - $sign);\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sds72bm.php:32\n\
    Stack trace:\n#0 /tmp/tmp_sds72bm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_sds72bm.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num / 10) * intval($num % 10);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfiukrpno.php:33\n\
    Stack trace:\n#0 /tmp/tmpfiukrpno.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfiukrpno.php\
    \ on line 33\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n      $sign\
    \ = '';\n    }\n    $sum += intval($n) / pow(10, strlen($n) - 1);\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ujie9_r.php:32\n\
    Stack trace:\n#0 /tmp/tmp4ujie9_r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4ujie9_r.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $v) {\n    if\
    \ ($v < 0) {\n      $v = abs($v);\n      $n++;\n    }\n    $n += $v % 10;\n  }\n\
    \  return $n;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpszkt4ncc.php:30\n\
    Stack trace:\n#0 /tmp/tmpszkt4ncc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpszkt4ncc.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num >= 0) {\n            $count += $num;\n        } else {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnke5hy8.php:30\n\
    Stack trace:\n#0 /tmp/tmplnke5hy8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplnke5hy8.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n      $num *= -1;\n    }\n    $sum +=\
    \ $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehokw9ig.php:31\n\
    Stack trace:\n#0 /tmp/tmpehokw9ig.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpehokw9ig.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n      $sign\
    \ = '';\n    }\n    $sum += $n % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnswwkxsn.php:32\n\
    Stack trace:\n#0 /tmp/tmpnswwkxsn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnswwkxsn.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    $n\
    \ += $a < 0 ? -$a : abs($a);\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy46ag_jn.php:26\n\
    Stack trace:\n#0 /tmp/tmpy46ag_jn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpy46ag_jn.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num >= 0) {\n      $count += $num;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikuikezw.php:29\n\
    Stack trace:\n#0 /tmp/tmpikuikezw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpikuikezw.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n      $sign\
    \ = '';\n    }\n    $sum += $n % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnswwkxsn.php:32\n\
    Stack trace:\n#0 /tmp/tmpnswwkxsn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnswwkxsn.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum\
    \ += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptia97ei3.php:26\n\
    Stack trace:\n#0 /tmp/tmptia97ei3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptia97ei3.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum -= $num;\n        } else {\n      \
    \      $sum += $num;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46hoa_ye.php:30\n\
    Stack trace:\n#0 /tmp/tmp46hoa_ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp46hoa_ye.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    $n\
    \ += $a < 0 ? $a : abs($a) % 10;\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkfhhs9c.php:26\n\
    Stack trace:\n#0 /tmp/tmpmkfhhs9c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmkfhhs9c.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        $sum += $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt89cybra.php:26\n\
    Stack trace:\n#0 /tmp/tmpt89cybra.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt89cybra.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ floor($num / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70gwluy_.php:30\n\
    Stack trace:\n#0 /tmp/tmp70gwluy_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp70gwluy_.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum -= $n / 10;\n    } else {\n    \
    \  $sum += $n;\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngh89d7f.php:31\n\
    Stack trace:\n#0 /tmp/tmpngh89d7f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpngh89d7f.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $v) {\n    if\
    \ ($v < 0) {\n      $v = abs($v);\n      $n = $v < 0 ? $v : $v - 10;\n    } else\
    \ {\n      $n = $v + 10;\n    }\n    if ($n % 10 == 0) $n++;\n  }\n  return $n;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwy812cu8.php:32\n\
    Stack trace:\n#0 /tmp/tmpwy812cu8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwy812cu8.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        $result += (abs($num) % 10 > 0);\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3cvn532.php:26\n\
    Stack trace:\n#0 /tmp/tmpv3cvn532.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv3cvn532.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n        }\n        $sum +=\
    \ $num;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8s1ypuis.php:29\n\
    Stack trace:\n#0 /tmp/tmp8s1ypuis.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8s1ypuis.php\
    \ on line 29\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a = -$a;\n    }\n    $n = $a + $n;\n  }\n  return $n;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2njq2w4.php:29\n\
    Stack trace:\n#0 /tmp/tmpy2njq2w4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy2njq2w4.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n    }\n    $sum += $num;\n  }\n \
    \ return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphspbbpqv.php:29\n\
    Stack trace:\n#0 /tmp/tmphspbbpqv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphspbbpqv.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum\
    \ += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptia97ei3.php:26\n\
    Stack trace:\n#0 /tmp/tmptia97ei3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptia97ei3.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = abs($n);\n      $sum += $n / 10;\n      $n %= 10;\n \
    \   }\n    $sum += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwruyax8b.php:31\n\
    Stack trace:\n#0 /tmp/tmpwruyax8b.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwruyax8b.php\
    \ on line 31\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += abs($num);\n    } else {\n      $sum += $num;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsh_43tsn.php:30\n\
    Stack trace:\n#0 /tmp/tmpsh_43tsn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh_43tsn.php\
    \ on line 30\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num > 0) {\n      $count += $num % 10;\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzw31byi.php:29\n\
    Stack trace:\n#0 /tmp/tmpkzw31byi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkzw31byi.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n        }\n        $count\
    \ += $num % 10;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnn2m83h.php:29\n\
    Stack trace:\n#0 /tmp/tmpqnn2m83h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqnn2m83h.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $n) {\n  \
    \  if ($n < 0) {\n      $n = abs($n);\n      $sign = '-';\n    } else {\n    \
    \  $sign = '';\n    }\n    $count += $n % 10;\n    $n = $n / 10;\n  }\n  return\
    \ $sign + $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $sign in /tmp/tmpop0ku54b.php on line 24\n\
    \nFatal error: Uncaught TypeError: Unsupported operand types: string + int in\
    \ /tmp/tmpop0ku54b.php:24\nStack trace:\n#0 /tmp/tmpop0ku54b.php(28): count_nums(Array)\n\
    #1 /tmp/tmpop0ku54b.php(33): candidate(Array)\n#2 /tmp/tmpop0ku54b.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpop0ku54b.php on line 24\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    $count += $num > 0 ? 1 : 0;\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9ootktm.php:30\n\
    Stack trace:\n#0 /tmp/tmpg9ootktm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpg9ootktm.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = $n * -1;\n    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezss7b10.php:29\n\
    Stack trace:\n#0 /tmp/tmpezss7b10.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpezss7b10.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num > 0) {\n      $count += $num;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6joe8qy6.php:29\n\
    Stack trace:\n#0 /tmp/tmp6joe8qy6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6joe8qy6.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function ($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj8nzkbg.php:28\n\
    Stack trace:\n#0 /tmp/tmpmj8nzkbg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmj8nzkbg.php\
    \ on line 28\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $n = 0;\n  foreach ($arr as $a) {\n    if\
    \ ($a < 0) {\n      $a += 10;\n    }\n    $n = $a + $n;\n  }\n  return $n;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp53_u_4_2.php:29\n\
    Stack trace:\n#0 /tmp/tmp53_u_4_2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp53_u_4_2.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n        }\n        $count\
    \ += $num % 10;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnn2m83h.php:29\n\
    Stack trace:\n#0 /tmp/tmpqnn2m83h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqnn2m83h.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num >= 0) {\n            $count += $num;\n        } else {\n\
    \            $count += $num % 10;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplnke5hy8.php:30\n\
    Stack trace:\n#0 /tmp/tmplnke5hy8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplnke5hy8.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n        }\n        $count\
    \ += $num % 10;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnn2m83h.php:29\n\
    Stack trace:\n#0 /tmp/tmpqnn2m83h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqnn2m83h.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $n) {\n\
    \        if ($n < 0) {\n            $n = abs($n);\n            $sign = '-';\n\
    \        } else {\n            $sign = '';\n        }\n        $sum += $n % 10;\n\
    \        $n = $n / 10;\n    }\n    return $sign == ''\n        ? $sum\n      \
    \  : $sum + count_nums(str_split($sign));\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $sign in /tmp/tmpc97ewnzr.php on line 24\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc97ewnzr.php:35\nStack\
    \ trace:\n#0 /tmp/tmpc97ewnzr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc97ewnzr.php\
    \ on line 35\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num / 10) * intval($num % 10);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfiukrpno.php:33\n\
    Stack trace:\n#0 /tmp/tmpfiukrpno.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfiukrpno.php\
    \ on line 33\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = 0;\n    }\n  \
    \  $sum += $num * pow(10, strlen($num) - strlen($sign));\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string *\
    \ float in /tmp/tmpef0h9j50.php:22\nStack trace:\n#0 /tmp/tmpef0h9j50.php(28):\
    \ count_nums(Array)\n#1 /tmp/tmpef0h9j50.php(33): candidate(Array)\n#2 /tmp/tmpef0h9j50.php(42):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpef0h9j50.php on line 22\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n            $sign\
    \ = '-';\n        } else {\n            $sign = '';\n        }\n        $count\
    \ += $num % 10;\n        $num = floor($num / 10);\n    }\n    return $sign ==\
    \ ''\n        ? $count\n        : $count + count_nums(array($sign));\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $sign in /tmp/tmpn7_oa799.php on line 24\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn7_oa799.php:35\nStack\
    \ trace:\n#0 /tmp/tmpn7_oa799.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpn7_oa799.php\
    \ on line 35\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $digits = str_split($num);\n    foreach ($digits as $digit) {\n      if ($digit\
    \ > 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfk38bl6.php:41\n\
    Stack trace:\n#0 /tmp/tmpsfk38bl6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpsfk38bl6.php\
    \ on line 41\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n    }\n    $sum += $num;\n  }\n  return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4esoxmb.php:29\n\
    Stack trace:\n#0 /tmp/tmpw4esoxmb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw4esoxmb.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $sum += $num < 0 ? -$num : $num;\n     \
    \   } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrgm42cb.php:30\n\
    Stack trace:\n#0 /tmp/tmpvrgm42cb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvrgm42cb.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num < 0) {\n      $num *= -1;\n      $digit = substr($num, strlen($num)\
    \ - 1);\n      if ($digit < 0) {\n        $count += $digit * -1;\n      } else\
    \ {\n        $count += $digit;\n      }\n    } else {\n      $count += $num;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsg9lv0oj.php:36\n\
    Stack trace:\n#0 /tmp/tmpsg9lv0oj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsg9lv0oj.php\
    \ on line 36\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $result = 0;\n    foreach ($arr as $num)\
    \ {\n        $result += (is_numeric($num)) ? $num : count_nums($num);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8phl2rnk.php:26\n\
    Stack trace:\n#0 /tmp/tmp8phl2rnk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8phl2rnk.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    if\
    \ ($n < 0) {\n      $n = $n * -1;\n    }\n    $sum += $n;\n  }\n  return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmponuwjsy2.php:29\n\
    Stack trace:\n#0 /tmp/tmponuwjsy2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmponuwjsy2.php\
    \ on line 29\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $n) {\n    $sum\
    \ += $n;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptia97ei3.php:26\n\
    Stack trace:\n#0 /tmp/tmptia97ei3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptia97ei3.php\
    \ on line 26\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ $num % 10;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb6jd8i1.php:30\n\
    Stack trace:\n#0 /tmp/tmptb6jd8i1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptb6jd8i1.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  $sum += $num;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv1y16hio.php:26\n\
    Stack trace:\n#0 /tmp/tmpv1y16hio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv1y16hio.php\
    \ on line 26\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num = abs($num);\n            $sign = '-';\n\
    \        } else {\n            $sign = '';\n        }\n        $sum += $num %\
    \ 10;\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3agptuou.php:32\n\
    Stack trace:\n#0 /tmp/tmp3agptuou.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3agptuou.php\
    \ on line 32\n"
  timestamp: 1659730784
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $sum += $num;\n    } else {\n      $sum += $num % 10;\n\
    \    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjrp6dov.php:30\n\
    Stack trace:\n#0 /tmp/tmpwjrp6dov.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwjrp6dov.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  return count(array_filter($arr, function($num)\
    \ {\n    return $num > 0;\n  }));\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxr07eytm.php:28\n\
    Stack trace:\n#0 /tmp/tmpxr07eytm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxr07eytm.php\
    \ on line 28\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = '-';\n    } else {\n\
    \      $sign = '';\n    }\n    $sum += intval($num);\n  }\n  return $sum;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpix5kajfj.php:32\n\
    Stack trace:\n#0 /tmp/tmpix5kajfj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpix5kajfj.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $sign = '-';\n\
    \        } else {\n            $sign = '';\n        }\n        $count += intval($num\
    \ / 10) + intval($num % 10);\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9tmscxh.php:32\n\
    Stack trace:\n#0 /tmp/tmph9tmscxh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmph9tmscxh.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $sum = 0;\n    foreach ($arr as $num) {\n\
    \        if ($num < 0) {\n            $num *= -1;\n            $sum += $num;\n\
    \        } else {\n            $sum += $num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdizqruu.php:31\n\
    Stack trace:\n#0 /tmp/tmpqdizqruu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqdizqruu.php\
    \ on line 31\n"
  timestamp: 1659730733
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num = abs($num);\n      $sign = substr($num, -1);\n\
    \      $num = substr($num, 0, -1);\n    } else {\n      $sign = '';\n    }\n \
    \   $sum += intval($num) * pow(10, strlen($sign));\n  }\n  return $sum;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpks1x5dyq.php:34\n\
    Stack trace:\n#0 /tmp/tmpks1x5dyq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpks1x5dyq.php\
    \ on line 34\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num *= -1;\n            $count += $num\
    \ < 0 ? 1 : 0;\n        } else {\n            $count += $num < 0 ? 1 : 0;\n  \
    \      }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt8p5uvfl.php:32\n\
    Stack trace:\n#0 /tmp/tmpt8p5uvfl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt8p5uvfl.php\
    \ on line 32\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $sum = 0;\n  foreach ($arr as $num) {\n  \
    \  if ($num < 0) {\n      $num *= -1;\n      $sum += $num;\n    }\n    $sum +=\
    \ floor($num / 10);\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n\
    \    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70gwluy_.php:30\n\
    Stack trace:\n#0 /tmp/tmp70gwluy_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp70gwluy_.php\
    \ on line 30\n"
  timestamp: 1659823964
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = abs($num);\n        }\n     \
    \   $count += $num % 10;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfz06x3u_.php:29\n\
    Stack trace:\n#0 /tmp/tmpfz06x3u_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfz06x3u_.php\
    \ on line 29\n"
  timestamp: 1659823964

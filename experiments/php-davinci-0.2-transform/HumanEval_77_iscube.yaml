name: HumanEval_77_iscube
language: php
prompt: "<?php\n// Write a function that takes an integer a and returns True \n//\
  \ if this ingeger is a cube of some integer number.\n// Note: you may assume the\
  \ input is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
  // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
  // true\n// >>> iscube(180)\n// false\nfunction iscube($a) {\n"
tests: "function candidate(...$args) {\n    return iscube(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1) !== true) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(2) !== false) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(-1) !== true) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(64) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(180) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(1000) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(0) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1729)\
  \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t$b = abs($a);\n\t$c = round(pow($b,\
    \ 1/3));\n\tif ($c * $c * $c == $b) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n", "    $b = $a;\n    while ($b > 0) {\n        if ($b == 1) {\n          \
    \  return true;\n        }\n        if ($b % 3 != 0) {\n            return false;\n\
    \        }\n        $b = $b / 3;\n    }\n    return true;\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    $c\
    \ = pow($a, 1/3);\n    if (is_int($c)) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "    if ($a == 0) {\n \
    \       return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n   \
    \ $b = round(pow($a, 1/3));\n    if ($b * $b * $b == $a) {\n        return true;\n\
    \    }\n    return false;\n}\n", "    if ($a == 0) {\n        return true;\n \
    \   }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i\
    \ * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n\
    \        }\n        $i++;\n    }\n    return false;\n}\n", "    if ($a == 0) {\n\
    \        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n  \
    \  for ($i = 1; $i < $a; $i++) {\n        if ($i * $i * $i == $a) {\n        \
    \    return true;\n        }\n    }\n    return false;\n}\n", "    if ($a == 0)\
    \ {\n        return true;\n    } elseif ($a < 0) {\n        $a = -$a;\n    }\n\
    \    $b = round(pow($a, 1/3));\n    if ($b * $b * $b == $a) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n", "\t$b = $a;\n\t$c =\
    \ 0;\n\twhile ($b > 0) {\n\t\t$c++;\n\t\t$b = $b / 2;\n\t}\n\t$d = pow(2, $c);\n\
    \tif ($d == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "    return $a == pow(round(pow($a, 1/3)), 3);\n}\n\necho iscube(1) . \"\
    \\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$cube\
    \ = pow($a, 1/3);\n\tif(is_int($cube)) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\n\
    echo iscube(0);\necho iscube(180);", "    if ($a == 0) {\n        return true;\n\
    \    }\n    $b = abs($a);\n    $c = round(pow($b, 1/3));\n    if ($c * $c * $c\
    \ == $b) {\n        return true;\n    }\n    return false;\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "  return\
    \ $a == 0 ? true : $a == 1 ? true : $a == -1 ? true : $a == 8 ? true : false;\n\
    }\n", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n  \
    \      $a = -$a;\n    }\n    $root = round(pow($a, 1/3));\n    return $root *\
    \ $root * $root == $a;\n}\n", "\t$result = false;\n\tif ($a == 0) {\n\t\t$result\
    \ = true;\n\t} else {\n\t\t$i = 1;\n\t\twhile ($i * $i * $i <= abs($a)) {\n\t\t\
    \tif ($i * $i * $i == abs($a)) {\n\t\t\t\t$result = true;\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tfor ($i = 1; $i <=\
    \ $a; $i++) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\
    \treturn false;\n}\n", "    if ($a == 0) {\n        return true;\n    }\n    if\
    \ ($a < 0) {\n        $a = -$a;\n    }\n    $x = 1;\n    while ($x * $x * $x <\
    \ $a) {\n        $x++;\n    }\n    if ($x * $x * $x == $a) {\n        return true;\n\
    \    }\n    return false;\n}\n", "    if ($a == 0) {\n        return true;\n \
    \   }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i\
    \ * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n\
    \        }\n        $i++;\n    }\n    return false;\n}\n\necho iscube(1) . PHP_EOL;\n\
    echo iscube(2) . PHP_EOL;\necho iscube(-1) . PHP_EOL;\necho iscube(64) . PHP_EOL;\n\
    echo iscube(0) . PHP_EOL;\necho iscube(180) . PHP_EOL;", "\t$b = $a;\n\t$c = 0;\n\
    \twhile ($b > 0) {\n\t\t$c++;\n\t\t$b = $b / 2;\n\t}\n\tif ($c % 3 == 0) {\n\t\
    \treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "   \
    \ $cube = $a * $a * $a;\n    if ($cube == $a) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";\n", "\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\
    \t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\n", "    $cube = round(pow($a, 1/3));\n    return $cube * $cube * $cube == $a;\n\
    }\n", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\t$c = sqrt($b);\n\t\tif\
    \ ($c == round($c)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i *\
    \ $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\
    \\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b =\
    \ sqrt($a);\n\t$c = pow($b, 3);\n\tif ($c == $a) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho \"<br>\";\necho iscube(2);\n\
    echo \"<br>\";\necho iscube(-1);\necho \"<br>\";\necho iscube(64);\necho \"<br>\"\
    ;\necho iscube(0);\necho \"<br>\";\necho iscube(180);\necho \"<br>\";", "\t$b\
    \ = sqrt($a);\n\tif ($b == round($b)) {\n\t\t$c = sqrt($b);\n\t\tif ($c == round($c))\
    \ {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\
    \\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a\
    \ < 0) {\n\t\t$a = -$a;\n\t}\n\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t$i =\
    \ 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == $a)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "\tif ($a == 0) {\n\t\treturn\
    \ true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b = 1;\n\twhile ($b * $b\
    \ * $b < $a) {\n\t\t$b++;\n\t}\n\tif ($b * $b * $b == $a) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n", "  if ($a == 0) {\n    return true;\n  }\n  if ($a\
    \ < 0) {\n    $a = -$a;\n  }\n  $b = 1;\n  while ($b * $b * $b < $a) {\n    $b++;\n\
    \  }\n  if ($b * $b * $b == $a) {\n    return true;\n  }\n  return false;\n}\n",
  "    return $a == pow(round(pow($a, 1/3)), 3);\n}\n\necho iscube(1) . PHP_EOL;\n\
    echo iscube(2) . PHP_EOL;\necho iscube(-1) . PHP_EOL;\necho iscube(64) . PHP_EOL;\n\
    echo iscube(0) . PHP_EOL;\necho iscube(180) . PHP_EOL;", "    $b = $a;\n    $c\
    \ = 0;\n    while ($b > 0) {\n        $b = $b - 1;\n        $c = $c + 1;\n   \
    \ }\n    $d = $c * $c * $c;\n    if ($d == $a) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n", "    if ($a < 0) {\n        $a =\
    \ -$a;\n    }\n    if ($a == 0) {\n        return true;\n    }\n    $i = 1;\n\
    \    while ($i * $i * $i < $a) {\n        $i++;\n    }\n    if ($i * $i * $i ==\
    \ $a) {\n        return true;\n    } else {\n        return false;\n    }\n}\n",
  "    $b = pow($a, 1/3);\n    if (is_int($b)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n", "    if ($a ==\
    \ 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n  \
    \  }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n", "    $cube = round(pow($a, 1/3));\n    return $cube * $cube *\
    \ $cube == $a;\n}\n", "\t$cube = pow($a, 1/3);\n\tif (is_int($cube)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1) . \"\\n\";\n\
    echo iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\\
    n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0)\
    \ {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$x = 1;\n\t\
    $y = 1;\n\twhile ($x < $a) {\n\t\t$x = $x + $y;\n\t\t$y = $y + 2;\n\t}\n\tif ($x\
    \ == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}", "\t$i = 0;\n\twhile ($i\
    \ * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$c = pow($a, 1/3);\n\tif (is_int($c))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1);\n\
    echo iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "\t$i = 0;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\treturn $i * $i * $i\
    \ == $a;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\t$c = sqrt($b);\n\tif ($c == round($c)) {\n\
    \t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\\
    n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) .\
    \ \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tfor ($i\
    \ = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn true;\n\t\
    \t}\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\
    \\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    $b = sqrt($a);\n    $c = pow($b,\
    \ 3);\n    if ($c == $a) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho\
    \ iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\"\
    ;\necho iscube(180) . \"\\n\";", "\t$b = $a;\n\t$c = 0;\n\twhile ($b > 0) {\n\t\
    \t$b = $b - $c;\n\t\t$c++;\n\t}\n\tif ($b == 0) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\
    \\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return\
    \ true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n   \
    \ while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n          \
    \  return true;\n        }\n        $i++;\n    }\n    return false;\n}\n", " \
    \   if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a\
    \ = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i\
    \ * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n   \
    \ }\n    return false;\n}\n", "\t$b = 0;\n\twhile ($b * $b * $b < abs($a)) {\n\
    \t\t$b++;\n\t}\n\tif ($b * $b * $b != abs($a)) {\n\t\treturn false;\n\t} else\
    \ {\n\t\treturn true;\n\t}\n}\n\necho iscube(1) . PHP_EOL;\necho iscube(2) . PHP_EOL;\n\
    echo iscube(-1) . PHP_EOL;\necho iscube(64) . PHP_EOL;\necho iscube(0) . PHP_EOL;\n\
    echo iscube(180) . PHP_EOL;", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b = round(pow($a,\
    \ 1/3));\n\tif ($b * $b * $b == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\n", "    $c = pow($a, 1/3);\n    if (is_int($c)) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\necho iscube(1);\necho\
    \ iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "    $b = $a;\n    $c = 0;\n    while ($b > 0) {\n        $c++;\n        $b = $b\
    \ / 2;\n    }\n    $c = pow(2, $c);\n    $b = $c;\n    while ($b < $a) {\n   \
    \     $b = $b * 2;\n    }\n    if ($b == $a) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n", "    $b = $a;\n    $c = 0;\n    while\
    \ ($b > 0) {\n        $c++;\n        $b = $b / 2;\n    }\n    if ($c % 3 == 0)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\t$c = sqrt($b);\n\t\tif\
    \ ($c == round($c)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\
    echo iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\"\
    ;\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\
    \\n\";\n", "\t$b = pow($a, 1/3);\n\tif ($b == round($b)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";\n", "    if ($a == 0) {\n        return\
    \ true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n   \
    \ while ($i * $i * $i < $a) {\n        $i++;\n    }\n    if ($i * $i * $i == $a)\
    \ {\n        return true;\n    }\n    return false;\n}\n", "    if ($a == 0) {\n\
    \        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n  \
    \  $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a)\
    \ {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n", "    if ($a < 0) {\n        $a = -$a;\n    }\n    if ($a == 0) {\n     \
    \   return true;\n    }\n    $i = 1;\n    while ($i*$i*$i < $a) {\n        $i++;\n\
    \    }\n    if ($i*$i*$i == $a) {\n        return true;\n    }\n    return false;\n\
    }\n", "\t$b = sqrt($a);\n\tif (is_int($b)) {\n\t\treturn true;\n\t} else {\n\t\
    \treturn false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\n\
    echo iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\\
    n\";\necho iscube(180) . \"\\n\";", "    $cube = pow($a, 1/3);\n    if (is_int($cube))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\necho\
    \ iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1);\necho iscube(2);\necho\
    \ iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "    $cube\
    \ = round(pow($a, 1/3));\n    return $cube * $cube * $cube == $a;\n}\n\necho iscube(1)\
    \ . PHP_EOL;\necho iscube(2) . PHP_EOL;\necho iscube(-1) . PHP_EOL;\necho iscube(64)\
    \ . PHP_EOL;\necho iscube(0) . PHP_EOL;\necho iscube(180) . PHP_EOL;", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$a = abs($a);\n\t$i = 1;\n\twhile ($i*$i*$i < $a) {\n\t\t$i++;\n\
    \t}\n\tif ($i*$i*$i == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n", "\t$b = sqrt($a);\n\tif (is_int($b)) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) .\
    \ \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b))\
    \ {\n\t\t$c = sqrt($b);\n\t\tif ($c == round($c)) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\"\
    ;\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\
    \\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return true;\n\
    \    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $b = 1;\n    while ($b\
    \ * $b * $b < $a) {\n        $b++;\n    }\n    if ($b * $b * $b == $a) {\n   \
    \     return true;\n    }\n    return false;\n}\n", "\t$b = $a;\n\t$c = 0;\n\t\
    while ($b > 0) {\n\t\t$c += $b % 10;\n\t\t$b = floor($b / 10);\n\t}\n\tif ($c\
    \ % 3 == 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho\
    \ iscube(1) . PHP_EOL;\necho iscube(2) . PHP_EOL;\necho iscube(-1) . PHP_EOL;\n\
    echo iscube(64) . PHP_EOL;\necho iscube(0) . PHP_EOL;\necho iscube(180) . PHP_EOL;",
  "    $result = false;\n    if ($a == 0) {\n        $result = true;\n    } elseif\
    \ ($a > 0) {\n        $result = is_int(pow($a, 1/3));\n    } else {\n        $result\
    \ = is_int(pow(abs($a), 1/3));\n    }\n    return $result;\n}\n", "\t$i = 1;\n\
    \twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\
    \treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1);\necho\
    \ iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);",
  "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a\
    \ = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i\
    \ * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n   \
    \ }\n    return false;\n}\n", "    if ($a == 0) {\n        return true;\n    }\n\
    \    if ($a < 0) {\n        $a = -$a;\n    }\n    for ($i = 1; $i <= $a; $i++)\
    \ {\n        if ($i * $i * $i == $a) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n", "    if ($a == 0) {\n        return true;\n \
    \   }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 0;\n    while ($i\
    \ * $i * $i < $a) {\n        $i++;\n    }\n    if ($i * $i * $i == $a) {\n   \
    \     return true;\n    }\n    return false;\n}\n", "\tif ($a == 0) {\n\t\treturn\
    \ true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$b = round(pow($a, 1/3));\n\
    \tif ($b * $b * $b == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n \
    \       $a = -$a;\n    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n     \
    \   $x++;\n    }\n    if ($x * $x * $x == $a) {\n        return true;\n    }\n\
    \    return false;\n}\n", "    if ($a == 0) {\n        return true;\n    }\n \
    \   if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i *\
    \ $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n \
    \       }\n        $i++;\n    }\n    return false;\n}\n", "    if ($a == 0) {\n\
    \        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n  \
    \  $b = 1;\n    while ($b * $b * $b < $a) {\n        $b++;\n    }\n    if ($b\
    \ * $b * $b == $a) {\n        return true;\n    }\n    return false;\n}\n", " \
    \   if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a\
    \ = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i\
    \ * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n   \
    \ }\n    return false;\n}\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t$a =\
    \ abs($a);\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i\
    \ * $i * $i == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n",
  "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a\
    \ = -$a;\n    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n        $x += 1;\n\
    \    }\n    if ($x * $x * $x == $a) {\n        return true;\n    }\n    return\
    \ false;\n}\n", "    $cube = round(pow($a, 1/3));\n    if ($cube * $cube * $cube\
    \ == $a) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1);\necho iscube(2);\necho\
    \ iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif\
    \ ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    $result\
    \ = false;\n    if ($a == 0) {\n        $result = true;\n    } elseif ($a > 0)\
    \ {\n        $result = is_int(pow($a, 1/3));\n    } else {\n        $result =\
    \ is_int(pow(abs($a), 1/3));\n    }\n    return $result;\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $b = 1;\n    while ($b * $b * $b < $a) {\n        $b++;\n    }\n \
    \   if ($b * $b * $b == $a) {\n        return true;\n    }\n    return false;\n\
    }\n", "\t$c = 0;\n\twhile ($c * $c * $c < abs($a)) {\n\t\t$c++;\n\t}\n\tif ($c\
    \ * $c * $c != abs($a)) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t\
    }\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$c = pow($a, 1/3);\n\tif ($c == round($c)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return\
    \ true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $b = 1;\n   \
    \ while ($b * $b * $b < $a) {\n        $b++;\n    }\n    if ($b * $b * $b == $a)\
    \ {\n        return true;\n    }\n    return false;\n}\n", "    if ($a == 0) {\n\
    \        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n  \
    \  $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a)\
    \ {\n            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n  \
    \      $a = -$a;\n    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n      \
    \  $x++;\n    }\n    if ($x * $x * $x == $a) {\n        return true;\n    }\n\
    \    return false;\n}\n", "\t$cube = 0;\n\t$i = 0;\n\twhile ($cube < $a) {\n\t\
    \t$i++;\n\t\t$cube = $i * $i * $i;\n\t}\n\tif ($cube == $a) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$c = pow($a, 1/3);\n\tif (is_int($c))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) .\
    \ \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b =\
    \ sqrt($a);\n\t$c = sqrt($b);\n\tif ($c == floor($c)) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return\
    \ true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n   \
    \ while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n          \
    \  return true;\n        }\n        $i++;\n    }\n    return false;\n}\n\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n \
    \       $a = -$a;\n    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n     \
    \   $x++;\n    }\n    if ($x * $x * $x == $a) {\n        return true;\n    }\n\
    \    return false;\n}\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t$i = 1;\n\
    \twhile ($i * $i * $i < abs($a)) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == abs($a))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\n\
    echo iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\\
    n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    $b = $a;\n\
    \    if ($a < 0) {\n        $b = -$a;\n    }\n    $c = round(pow($b, 1/3));\n\
    \    if (pow($c, 3) == $b) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "    if ($a == 0) {\n        return true;\n    }\n    if\
    \ ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <=\
    \ $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n       \
    \ }\n        $i++;\n    }\n    return false;\n}\n", "    if ($a == 0) {\n    \
    \    return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i\
    \ = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n\
    \            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i *\
    \ $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "\t$b = sqrt($a);\n\
    \t$c = pow($b, 3);\n\tif ($c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a <\
    \ 0) {\n        $a = -$a;\n    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n\
    \        $x++;\n    }\n    if ($x * $x * $x == $a) {\n        return true;\n \
    \   }\n    return false;\n}\n", "    if ($a == 0) {\n        return true;\n  \
    \  }\n    if ($a < 0) {\n        $a = abs($a);\n    }\n    $b = pow($a, 1/3);\n\
    \    if ($b == round($b)) {\n        return true;\n    }\n    return false;\n\
    }\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\
    \\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";\n", "    if ($a < 0) {\n        $a = -$a;\n    }\n    if ($a == 0)\
    \ {\n        return true;\n    }\n    $i = 1;\n    while ($i * $i * $i < $a) {\n\
    \        $i++;\n    }\n    if ($i * $i * $i == $a) {\n        return true;\n \
    \   }\n    return false;\n}\n", "    if ($a == 0) {\n        return true;\n  \
    \  }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $x = 1;\n    while ($x\
    \ * $x * $x < $a) {\n        $x++;\n    }\n    if ($x * $x * $x == $a) {\n   \
    \     return true;\n    }\n    return false;\n}\n", "    if ($a == 0) {\n    \
    \    return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i\
    \ = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n\
    \            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\t$b = 1;\n\twhile ($b * $b * $b < $a) {\n\t\t$b++;\n\t}\n\tif ($b * $b *\
    \ $b == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\
    \\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n        $x++;\n    }\n \
    \   if ($x * $x * $x == $a) {\n        return true;\n    }\n    return false;\n\
    }\n", "\t$result = false;\n\tif ($a == 0) {\n\t\t$result = true;\n\t} else {\n\
    \t\t$i = 1;\n\t\twhile ($i*$i*$i <= abs($a)) {\n\t\t\tif ($i*$i*$i == abs($a))\
    \ {\n\t\t\t\t$result = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\
    }\n\treturn $result;\n}\n", "    if ($a == 0) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i * $i * $i <= abs($a)) {\n        if ($i * $i * $i\
    \ == abs($a)) {\n            return true;\n        }\n        $i++;\n    }\n \
    \   return false;\n}\n", "\t$b = $a;\n\tif ($a < 0) {\n\t\t$b = -$a;\n\t}\n\t\
    $c = round(pow($b, 1/3));\n\tif ($c * $c * $c == $b) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n", "    if ($a == 0) {\n        return true;\n    }\n    if\
    \ ($a < 0) {\n        $a = -$a;\n    }\n    for ($i = 1; $i <= $a; $i++) {\n \
    \       if ($i * $i * $i == $a) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n", "    if ($a == 0) {\n        return true;\n    }\n \
    \   if ($a < 0) {\n        $a = -$a;\n    }\n    $x = 1;\n    while ($x * $x *\
    \ $x < $a) {\n        $x++;\n    }\n    if ($x * $x * $x == $a) {\n        return\
    \ true;\n    }\n    return false;\n}\n", "    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    if ($a == 0) {\n        return true;\n    }\n    $i = 1;\n    while\
    \ ($i * $i * $i < $a) {\n        $i++;\n    }\n    if ($i * $i * $i == $a) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n", "\tif\
    \ ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    $x = 1;\n\twhile ($x * $x * $x < $a) {\n\t\t$x++;\n\t}\n\tif ($x * $x * $x ==\
    \ $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\"\
    ;\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\
    \\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\
    \tif (is_int($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    \necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "\t$b = sqrt($a);\n\tif (is_int($b)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    $i = 1;\n    while ($i * $i *\
    \ $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n \
    \       }\n        $i++;\n    }\n    return false;\n}\n", "\t$b = sqrt($a);\n\t\
    if ($b == round($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n\
    }\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\
    \\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif\
    \ ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "    $b\
    \ = pow($a, 1/3);\n    if (is_int($b)) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\
    \t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a)\
    \ {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\n", "\t$b = sqrt($a);\n\tif ($b * $b * $b == $a) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    $b = pow($a, 1/3);\n    if (is_int($b))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n \
    \       $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n    \
    \    if ($i * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n\
    \    }\n    return false;\n}\n", "\t$b = $a;\n\twhile ($b > 0) {\n\t\tif ($b %\
    \ 3 == 0) {\n\t\t\t$b = $b / 3;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\treturn true;\n}\n\necho iscube(1) ? \"true\\n\" : \"false\\n\";\necho iscube(2)\
    \ ? \"true\\n\" : \"false\\n\";\necho iscube(-1) ? \"true\\n\" : \"false\\n\"\
    ;\necho iscube(64) ? \"true\\n\" : \"false\\n\";\necho iscube(0) ? \"true\\n\"\
    \ : \"false\\n\";\necho iscube(180) ? \"true\\n\" : \"false\\n\";", "\t$b = sqrt($a);\n\
    \t$c = pow($b, 3);\n\tif ($c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho iscube(1);\necho \"\\n\";\necho iscube(2);\necho \"\\n\"\
    ;\necho iscube(-1);\necho \"\\n\";\necho iscube(64);\necho \"\\n\";\necho iscube(0);\n\
    echo \"\\n\";\necho iscube(180);\necho \"\\n\";", "    if ($a == 0) {\n      \
    \  return true;\n    }\n    $b = abs($a);\n    $c = round(pow($b, 1/3));\n   \
    \ if ($c * $c * $c == $b) {\n        return true;\n    }\n    return false;\n\
    }\n", "    if ($a < 0) {\n        $a = -$a;\n    }\n    if ($a == 0) {\n     \
    \   return true;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n     \
    \   if ($i * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n\
    \    }\n    return false;\n}\n", "\t$b = $a;\n\t$c = 0;\n\twhile ($b > 0) {\n\t\
    \t$c++;\n\t\t$b = $b / 2;\n\t}\n\t$c = pow(2, $c);\n\tif ($c * $c * $c == $a)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) .\
    \ \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b =\
    \ $a;\n\tif ($a < 0) {\n\t\t$b = -$a;\n\t}\n\tif ($b == 0) {\n\t\treturn true;\n\
    \t}\n\t$c = 1;\n\twhile ($c * $c * $c < $b) {\n\t\t$c++;\n\t}\n\tif ($c * $c *\
    \ $c == $b) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "    if ($a < 0)\
    \ {\n        $a = -$a;\n    }\n    if ($a == 0) {\n        return true;\n    }\n\
    \    $i = 1;\n    while ($i * $i * $i < $a) {\n        $i++;\n    }\n    if ($i\
    \ * $i * $i == $a) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif\
    \ ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n", "    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i\
    \ * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n   \
    \ }\n    return false;\n}\n", "    $c = pow($a, 1/3);\n    if (is_int($c)) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\necho iscube(64);",
  "    $b = sqrt($a);\n    if ($b == round($b)) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\n\
    echo iscube(64);\necho iscube(0);\necho iscube(180);", "\tif ($a == 0) {\n\t\t\
    return true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i\
    \ * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n", "    if ($a == 0) {\n        return true;\n    }\n\
    \    if ($a < 0) {\n        $a = -$a;\n    }\n    $b = round(pow($a, 1/3));\n\
    \    return $b * $b * $b == $a;\n}\n", "\tif ($a == 0) {\n\t\treturn true;\n\t\
    }\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a)\
    \ {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\n", "\t$b = sqrt($a);\n\t$c = sqrt($b);\n\tif (is_int($c)) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho iscube(1) . \"\\n\"\
    ;\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\
    \\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$c = sqrt($a);\n\
    \tif ($c * $c * $c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n\
    \        $a = -$a;\n    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n    \
    \    $x++;\n    }\n    if ($x * $x * $x == $a) {\n        return true;\n    }\n\
    \    return false;\n}\n", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tif ($a == 0)\
    \ {\n\t\treturn true;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\
    \t}\n\tif ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n",
  "\t$b = $a;\n\t$c = 0;\n\twhile ($b > 0) {\n\t\t$c++;\n\t\t$b = $b - $c;\n\t}\n\t\
    if ($b == 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n", "\t\
    if ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    $b = 1;\n\twhile ($b * $b * $b < $a) {\n\t\t$b++;\n\t}\n\tif ($b * $b * $b ==\
    \ $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "  return is_int(cbrt($a));\n\
    }\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\
    \\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a <\
    \ 0) {\n        $a = -$a;\n    }\n    $i = 0;\n    while ($i * $i * $i < $a) {\n\
    \        $i++;\n    }\n    if ($i * $i * $i == $a) {\n        return true;\n \
    \   }\n    return false;\n}\n\n$a = 1;\necho iscube($a);\necho \"\\n\";\n$a =\
    \ 2;\necho iscube($a);\necho \"\\n\";\n$a = -1;\necho iscube($a);\necho \"\\n\"\
    ;\n$a = 64;\necho iscube($a);\necho \"\\n\";\n$a = 0;\necho iscube($a);\necho\
    \ \"\\n\";\n$a = 180;\necho iscube($a);\necho \"\\n\";", "\t$b = pow($a, 1/3);\n\
    \tif (is_int($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    echo iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho iscube(0);\n\
    echo iscube(180);", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\t$c = sqrt($b);\n\
    \t\tif ($c == round($c)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\
    \\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$b = $a;\n\t$c = 0;\n\twhile ($b > 0) {\n\t\t$c++;\n\t\t$b =\
    \ $b - $c;\n\t}\n\tif ($b == 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\necho iscube(1) . PHP_EOL;\necho iscube(2) . PHP_EOL;\necho iscube(-1)\
    \ . PHP_EOL;\necho iscube(64) . PHP_EOL;\necho iscube(0) . PHP_EOL;\necho iscube(180)\
    \ . PHP_EOL;", "    if ($a == 0) {\n        return true;\n    }\n    if ($a <\
    \ 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i < $a) {\n\
    \        $i++;\n    }\n    if ($i * $i * $i == $a) {\n        return true;\n \
    \   }\n    return false;\n}\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif\
    \ ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\
    \t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tif ($a == 0) {\n\t\treturn true;\n\
    \t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i *\
    \ $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "\tif ($a == 0) {\n\
    \t\treturn true;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < abs($a)) {\n\t\t$i++;\n\
    \t}\n\tif ($i * $i * $i == abs($a)) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "    $i = 1;\n    while ($i * $i * $i <= $a)\
    \ {\n        if ($i * $i * $i == $a) {\n            return true;\n        }\n\
    \        $i++;\n    }\n    return false;\n}\n\necho iscube(1) . \"\\n\";\necho\
    \ iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\"\
    ;\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$i = 1;\n\twhile\
    \ ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\treturn $i * $i * $i == $a;\n}\n\necho\
    \ iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\n\
    echo iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\\
    n\";", "  return $a == pow(round(pow($a, 1/3)), 3);\n}\n", "\t$b = pow($a, 1/3);\n\
    \tif ($b == round($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "    if ($a < 0) {\n        $a = -$a;\n    }\n    if ($a == 0)\
    \ {\n        return true;\n    }\n    $i = 1;\n    while ($i * $i * $i < $a) {\n\
    \        $i++;\n    }\n    if ($i * $i * $i == $a) {\n        return true;\n \
    \   } else {\n        return false;\n    }\n}\n", "    if ($a == 0) {\n      \
    \  return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $x =\
    \ 1;\n    while ($x * $x * $x < $a) {\n        $x++;\n    }\n    if ($x * $x *\
    \ $x == $a) {\n        return true;\n    }\n    return false;\n}\n", "    $b =\
    \ sqrt($a);\n    if ($b == round($b)) {\n        $c = sqrt($b);\n        if ($c\
    \ == round($c)) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n  \
    \      $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n     \
    \   if ($i * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n\
    \    }\n    return false;\n}\n", "    if ($a == 0) {\n        return true;\n \
    \   }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $b = round(pow($a, 1/3));\n\
    \    return ($b * $b * $b == $a);\n}\n", "    return $a == pow(round(pow($a, 1/3)),\
    \ 3);\n}\n", "\treturn ($a == 0 || $a == 1) ? true : (pow($a, 1/3) == floor(pow($a,\
    \ 1/3)));\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\t$cube = 0;\n\t$i = 0;\n\twhile ($cube < $a) {\n\t\t$i++;\n\t\
    \t$cube = $i * $i * $i;\n\t}\n\tif ($cube == $a) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\n\necho iscube(1) . PHP_EOL;\necho iscube(2) .\
    \ PHP_EOL;\necho iscube(-1) . PHP_EOL;\necho iscube(64) . PHP_EOL;\necho iscube(0)\
    \ . PHP_EOL;\necho iscube(180) . PHP_EOL;", "\t$b = sqrt($a);\n\t$c = $b * $b\
    \ * $b;\n\tif ($c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho iscube(1);\necho iscube(2);\necho iscube(-1);\necho iscube(64);\necho\
    \ iscube(0);\necho iscube(180);", "    if ($a == 0) {\n        return true;\n\
    \    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i\
    \ * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n\
    \        }\n        $i++;\n    }\n    return false;\n}\n", "    $cube = pow($a,\
    \ 1/3);\n    if (is_int($cube)) {\n        return true;\n    } else {\n      \
    \  return false;\n    }\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\\
    n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) .\
    \ \"\\n\";\necho iscube(180) . \"\\n\";", "    $b = sqrt($a);\n    if ($b == round($b))\
    \ {\n        $c = sqrt($b);\n        if ($c == round($c)) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n", "    if ($a == 0) {\n    \
    \    return true;\n    }\n    $b = abs($a);\n    $c = round(pow($b, 1/3));\n \
    \   if ($c * $c * $c == $b) {\n        return true;\n    }\n    return false;\n\
    }\n", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n  \
    \      $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n     \
    \   if ($i * $i * $i == $a) {\n            return true;\n        }\n        $i++;\n\
    \    }\n    return false;\n}\n", "\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tif ($a\
    \ == 0) {\n\t\treturn true;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\
    \t$i++;\n\t}\n\tif ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n", "    if ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n  \
    \      $a = -$a;\n    }\n    $x = 1;\n    while ($x * $x * $x < $a) {\n      \
    \  $x++;\n    }\n    if ($x * $x * $x == $a) {\n        return true;\n    }\n\
    \    return false;\n}\n", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\t$c\
    \ = sqrt($b);\n\t\tif ($c == round($c)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\
    return false;\n}\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\
    \t\t$a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\
    \tif ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "\t\
    if ($a < 0) {\n\t\t$a = -$a;\n\t}\n\tif ($a == 0) {\n\t\treturn true;\n\t}\n\t\
    $b = 1;\n\twhile ($b * $b * $b < $a) {\n\t\t$b++;\n\t}\n\tif ($b * $b * $b ==\
    \ $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "\t$b = pow($a, 1/3);\n\
    \tif (is_int($b)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    echo iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\"\
    ;\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\
    \\n\";", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\t$c = sqrt($b);\n\t\t\
    if ($c == round($c)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\
    echo iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\"\
    ;\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\
    \\n\";", "\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i *\
    \ $i * $i == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\
    echo iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\"\
    ;\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\
    \\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\t$root = round(pow($a, 1/3));\n\treturn $root * $root * $root == $a;\n}\n",
  "    if ($a == 0) {\n        return true;\n    }\n    $b = abs($a);\n    $c = pow($b,\
    \ 1/3);\n    if (is_int($c)) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "    if ($a == 0) {\n        return true;\n    }\n    if\
    \ ($a < 0) {\n        $a = -$a;\n    }\n    $i = 1;\n    while ($i * $i * $i <=\
    \ $a) {\n        if ($i * $i * $i == $a) {\n            return true;\n       \
    \ }\n        $i++;\n    }\n    return false;\n}\n", "    if ($a == 0) {\n    \
    \    return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $i\
    \ = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i == $a) {\n\
    \            return true;\n        }\n        $i++;\n    }\n    return false;\n\
    }\n", "    if ($a == 0) {\n        return true;\n    }\n    $b = abs($a);\n  \
    \  $c = round(pow($b, 1/3));\n    if ($c * $c * $c == $b) {\n        return true;\n\
    \    }\n    return false;\n}\n", "\t$b = $a;\n\twhile ($b > 0) {\n\t\tif ($b %\
    \ 3 == 0) {\n\t\t\treturn true;\n\t\t}\n\t\t$b = $b - 1;\n\t}\n\treturn false;\n\
    }\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\\
    n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "    if ($a == 0) {\n        return true;\n    }\n    if ($a <\
    \ 0) {\n        $a = -$a;\n    }\n    $b = round(pow($a, 1/3));\n    return $b\
    \ * $b * $b == $a;\n}\n", "\t$b = sqrt($a);\n\tif ($b == round($b)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho iscube(1) . \"\\n\";\n\
    echo iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\\
    n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a ==\
    \ 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n  \
    \  }\n    $b = round(pow($a, 1/3));\n    if ($b * $b * $b == $a) {\n        return\
    \ true;\n    }\n    return false;\n}\n", "    if ($a == 0) {\n        return true;\n\
    \    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $b = round(pow($a, 1/3));\n\
    \    if ($b * $b * $b == $a) {\n        return true;\n    }\n    return false;\n\
    }\n", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\
    \t}\n\tfor ($i = 1; $i <= $a; $i++) {\n\t\tif ($i * $i * $i == $a) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t}\n\treturn false;\n}\n", "\tif ($a == 0) {\n\t\treturn true;\n\
    \t}\n\t$b = abs($a);\n\t$c = round(pow($b, 1/3));\n\tif ($c * $c * $c == $b) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "    if ($a == 0) {\n        return\
    \ true;\n    }\n    $b = abs($a);\n    $c = round(pow($b, 1/3));\n    if ($c *\
    \ $c * $c == $b) {\n        return true;\n    }\n    return false;\n}\n", "\t\
    if ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t$a = -$a;\n\t}\n\t\
    $i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif ($i * $i * $i ==\
    \ $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "    $cube = pow($a, 1/3);\n\
    \    if (is_int($cube)) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\necho iscube(1) . PHP_EOL;\necho iscube(2) . PHP_EOL;\necho\
    \ iscube(-1) . PHP_EOL;\necho iscube(64) . PHP_EOL;\necho iscube(0) . PHP_EOL;\n\
    echo iscube(180) . PHP_EOL;", "    $b = pow($a, 1/3);\n    if (is_int($b)) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b =\
    \ $a;\n\twhile ($b > 0) {\n\t\tif ($b == 1) {\n\t\t\treturn true;\n\t\t}\n\t\t\
    $b = $b / 3;\n\t}\n\treturn false;\n}\necho iscube(1) . \"\\n\";\necho iscube(2)\
    \ . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0)\
    \ . \"\\n\";\necho iscube(180) . \"\\n\";", "\t$b = sqrt($a);\n\t$c = $b * $b\
    \ * $b;\n\tif ($c == $a) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\n\necho iscube(1) . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1)\
    \ . \"\\n\";\necho iscube(64) . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180)\
    \ . \"\\n\";", "\tif ($a == 0) {\n\t\treturn true;\n\t}\n\tif ($a < 0) {\n\t\t\
    $a = -$a;\n\t}\n\t$i = 1;\n\twhile ($i * $i * $i < $a) {\n\t\t$i++;\n\t}\n\tif\
    \ ($i * $i * $i == $a) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "    if\
    \ ($a == 0) {\n        return true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n\
    \    }\n    $i = 1;\n    while ($i * $i * $i <= $a) {\n        if ($i * $i * $i\
    \ == $a) {\n            return true;\n        }\n        $i++;\n    }\n    return\
    \ false;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

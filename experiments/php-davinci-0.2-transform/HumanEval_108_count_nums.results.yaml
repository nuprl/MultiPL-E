language: php
name: HumanEval_108_count_nums
results:
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    $sum = 0;\n    if ($num < 0) {\n      $sum += abs($num) % 10;\n      $num\
    \ = abs($num) / 10;\n    }\n    while ($num > 0) {\n      $sum += $num % 10;\n\
    \      $num = $num / 10;\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbtezq1r.php:37\n\
    Stack trace:\n#0 /tmp/tmpfbtezq1r.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpfbtezq1r.php\
    \ on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    $sum = 0;\n    if ($num < 0) {\n      $sum += abs($num) % 10;\n      $num\
    \ = abs($num) / 10;\n    }\n    while ($num > 0) {\n      $sum += $num % 10;\n\
    \      $num = $num / 10;\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbtezq1r.php:37\n\
    Stack trace:\n#0 /tmp/tmpfbtezq1r.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpfbtezq1r.php\
    \ on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkhf6c2kk.php:34\n\
    Stack trace:\n#0 /tmp/tmpkhf6c2kk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkhf6c2kk.php\
    \ on line 34\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n      $sum += $num\
    \ % 10;\n      $num = floor($num / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvka1fwv.php:34\n\
    Stack trace:\n#0 /tmp/tmpdvka1fwv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdvka1fwv.php\
    \ on line 34\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n \
    \           $sum = -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pe7lu3v.php:37\n\
    Stack trace:\n#0 /tmp/tmp0pe7lu3v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0pe7lu3v.php\
    \ on line 37\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    $sum = 0;\n    if ($num < 0) {\n      $sum += $num * -1;\n    } else {\n\
    \      $sum += $num;\n    }\n    while ($sum > 0) {\n      $sum -= $sum % 10;\n\
    \      $sum /= 10;\n    }\n    if ($sum != 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy1mkaxwh.php:39\n\
    Stack trace:\n#0 /tmp/tmpy1mkaxwh.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpy1mkaxwh.php\
    \ on line 39\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphi0s_c1b.php:33\n\
    Stack trace:\n#0 /tmp/tmphi0s_c1b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphi0s_c1b.php\
    \ on line 33\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    $sum = 0;\n    if ($num < 0) {\n      $num = $num * -1;\n      $sum += $num\
    \ % 10;\n      $num = $num / 10;\n    }\n    while ($num > 0) {\n      $sum +=\
    \ $num % 10;\n      $num = $num / 10;\n    }\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2z2m7fe.php:38\n\
    Stack trace:\n#0 /tmp/tmpi2z2m7fe.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpi2z2m7fe.php\
    \ on line 38\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n \
    \           $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtgvnj5l.php:37\n\
    Stack trace:\n#0 /tmp/tmpxtgvnj5l.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxtgvnj5l.php\
    \ on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n \
    \           $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxtgvnj5l.php:37\n\
    Stack trace:\n#0 /tmp/tmpxtgvnj5l.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxtgvnj5l.php\
    \ on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $sum += abs($num)\
    \ % 10;\n            $num = abs($num) / 10;\n        }\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = $num / 10;\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjq2za0ow.php:37\n\
    Stack trace:\n#0 /tmp/tmpjq2za0ow.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjq2za0ow.php\
    \ on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $num = $num * -1;\n\
    \            $sum += $num % 10;\n            $num = $num / 10;\n        }\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ $num / 10;\n        }\n        if ($sum > 0) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55k404ak.php:37\n\
    Stack trace:\n#0 /tmp/tmp55k404ak.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp55k404ak.php\
    \ on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkhf6c2kk.php:34\n\
    Stack trace:\n#0 /tmp/tmpkhf6c2kk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkhf6c2kk.php\
    \ on line 34\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqz6n0oj.php:33\n\
    Stack trace:\n#0 /tmp/tmpoqz6n0oj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpoqz6n0oj.php\
    \ on line 33\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $sum += abs($num)\
    \ % 10;\n            $num = abs($num) / 10;\n        }\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = $num / 10;\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u2r_jot.php:36\n\
    Stack trace:\n#0 /tmp/tmp6u2r_jot.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6u2r_jot.php\
    \ on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n \
    \           $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = intval($num / 10);\n        }\n        if\
    \ ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm5c5gj4p.php:37\n\
    Stack trace:\n#0 /tmp/tmpm5c5gj4p.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpm5c5gj4p.php\
    \ on line 37\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $sum += $num * -1;\n\
    \        } else {\n            $sum += $num;\n        }\n        while ($sum >\
    \ 0) {\n            $sum -= $sum % 10;\n            $sum /= 10;\n        }\n \
    \       if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgef_38tu.php:39\n\
    Stack trace:\n#0 /tmp/tmpgef_38tu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpgef_38tu.php\
    \ on line 39\n"
  timestamp: 1659730681
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n  $count = 0;\n  foreach ($arr as $num) {\n\
    \    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n      $sum += $num\
    \ % 10;\n      $num = floor($num / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvka1fwv.php:34\n\
    Stack trace:\n#0 /tmp/tmpdvka1fwv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdvka1fwv.php\
    \ on line 34\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkhf6c2kk.php:34\n\
    Stack trace:\n#0 /tmp/tmpkhf6c2kk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkhf6c2kk.php\
    \ on line 34\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>>\
    \ count_nums(array(-1, 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n//\
    \ 3\nfunction count_nums($arr) {\n    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n \
    \           $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ev51kls.php:36\n\
    Stack trace:\n#0 /tmp/tmp0ev51kls.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0ev51kls.php\
    \ on line 36\n"
  timestamp: 1659730626

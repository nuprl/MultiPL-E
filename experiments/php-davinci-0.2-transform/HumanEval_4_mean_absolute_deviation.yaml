name: HumanEval_4_mean_absolute_deviation
language: php
prompt: "<?php\n// For a given list of input numbers, calculate Mean Absolute Deviation\n\
  // around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute\
  \ difference between each\n// element and a centerpoint (mean in this case):\n//\
  \ MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0,\
  \ 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n"
tests: "function candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
  \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
  \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\n\
  test();"
completions: ["    $mean = mean($numbers);\n    $absolute_deviations = array();\n\
    \    foreach ($numbers as $number) {\n        $absolute_deviations[] = abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\n", "    $mean =\
    \ mean($numbers);\n    $absolute_deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n    }\n\
    \    return mean($absolute_deviations);\n}\n", "    $mean = array_sum($numbers)\
    \ / count($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return array_sum($deviations)\
    \ / count($deviations);\n}\n", "  $mean = mean($numbers);\n  $deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n\
    \  }\n  return mean($deviations);\n}\n", "    $mean = mean($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return mean($absolute_deviations);\n}\n",
  "  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n  foreach\
    \ ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n  }\n  return\
    \ array_sum($deviations) / count($deviations);\n}\n", "    $mean = mean($numbers);\n\
    \    $absolute_deviations = array();\n    foreach ($numbers as $number) {\n  \
    \      $absolute_deviations[] = abs($number - $mean);\n    }\n    return mean($absolute_deviations);\n\
    }\n", "\t$mean = mean($numbers);\n\t$absolute_deviations = array();\n\tforeach\
    \ ($numbers as $number) {\n\t\t$absolute_deviations[] = abs($number - $mean);\n\
    \t}\n\treturn mean($absolute_deviations);\n}\n", "  $mean = mean($numbers);\n\
    \  $deviations = array();\n  foreach ($numbers as $number) {\n    $deviations[]\
    \ = abs($number - $mean);\n  }\n  return mean($deviations);\n}\n", "    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n", "    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $deviations[] = abs($number - $mean);\n   \
    \ }\n    return array_sum($deviations) / count($deviations);\n}\n", "    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $number)\
    \ {\n        $deviations[] = abs($number - $mean);\n    }\n    return mean($deviations);\n\
    }\n", "    $mean = mean($numbers);\n    $absolute_deviations = array();\n    foreach\
    \ ($numbers as $number) {\n        $absolute_deviations[] = abs($number - $mean);\n\
    \    }\n    return mean($absolute_deviations);\n}\n", "    $mean = mean($numbers);\n\
    \    $absolute_deviations = array();\n    foreach ($numbers as $number) {\n  \
    \      $absolute_deviations[] = abs($number - $mean);\n    }\n    return mean($absolute_deviations);\n\
    }\n", "    $mean = mean($numbers);\n    $deviation = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviation[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviation);\n}\n", "    $mean = mean($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return mean($absolute_deviations);\n}\n",
  "  $mean = array_sum($numbers) / count($numbers);\n  $deviations = array();\n  foreach\
    \ ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n  }\n  return\
    \ array_sum($deviations) / count($deviations);\n}\n", "  $mean = array_sum($numbers)\
    \ / count($numbers);\n  $deviations = array();\n  foreach ($numbers as $number)\
    \ {\n    $deviations[] = abs($number - $mean);\n  }\n  return array_sum($deviations)\
    \ / count($deviations);\n}\n", "    $mean = mean($numbers);\n    $absolute_deviations\
    \ = array();\n    foreach ($numbers as $number) {\n        $absolute_deviations[]\
    \ = abs($number - $mean);\n    }\n    return mean($absolute_deviations);\n}\n",
  "    $mean = mean($numbers);\n    $deviations = array();\n    foreach ($numbers\
    \ as $number) {\n        $deviations[] = abs($number - $mean);\n    }\n    return\
    \ mean($deviations);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

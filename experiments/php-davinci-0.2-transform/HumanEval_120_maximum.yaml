name: HumanEval_120_maximum
language: php
prompt: "<?php\n// Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
  \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
  // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
  \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
  \ will be in the range of [1, 1000].\n// 2. The elements in the array will be in\
  \ the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
  \ $k) {\n"
tests: "function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2)\
  \ !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
  \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20, 123))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123, 20,\
  \ 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8, 0,\
  \ 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !== array(-10,\
  \ 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2,\
  \ 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $result = [];\n    $i = 0;\n    while ($i < $k) {\n        $max\
    \ = -1000;\n        $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $maxIndex = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        unset($arr[$maxIndex]);\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $count = count($arr);\n    if ($count < $k) {\n\
    \        return $result;\n    }\n    $max = $arr[0];\n    $min = $arr[0];\n  \
    \  for ($i = 0; $i < $count; $i++) {\n        if ($arr[$i] > $max) {\n       \
    \     $max = $arr[$i];\n        }\n        if ($arr[$i] < $min) {\n          \
    \  $min = $arr[$i];\n        }\n    }\n    $bucket = [];\n    $bucket_count =\
    \ $max - $min + 1;\n    for ($i = 0; $i < $bucket_count; $i++) {\n        $bucket[$i]\
    \ = 0;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        $bucket[$arr[$i]\
    \ - $min]++;\n    }\n    $index = 0;\n    for ($i = $bucket_count - 1; $i >= 0;\
    \ $i--) {\n        while ($bucket[$i] > 0) {\n            $arr[$index++] = $i\
    \ + $min;\n            $bucket[$i]--;\n        }\n    }\n    for ($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\n\
    $arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = [4, -4, 4];\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);",
  "    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n\
    \        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n  \
    \          if ($arr[$j] > $max) {\n                $max = $arr[$j];\n        \
    \        $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$max_index]);\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $len = count($arr);\n    if ($k > $len) {\n        return $result;\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i];\n        $index\
    \ = $i;\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        $arr[$index] = $arr[$i];\n\
    \        $arr[$i] = $max;\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n\
    $k = 3;\nvar_dump(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nvar_dump(maximum($arr,\
    \ $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nvar_dump(maximum($arr, $k));",
  "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n \
    \       $index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n       \
    \     if ($arr[$j] > $max) {\n                $max = $arr[$j];\n             \
    \   $index = $j;\n            }\n        }\n        array_push($result, $max);\n\
    \        unset($arr[$index]);\n        $arr = array_values($arr);\n    }\n   \
    \ return $result;\n}\n", "    $result = array();\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = -1000;\n        $maxIndex = -1;\n        for ($j = 0; $j <\
    \ count($arr); $j++) {\n            if ($arr[$j] > $max) {\n                $max\
    \ = $arr[$j];\n                $maxIndex = $j;\n            }\n        }\n   \
    \     $result[] = $max;\n        unset($arr[$maxIndex]);\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $arr = array_unique($arr);\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    for ($i = 0; $i < $k; $i++) {\n        $result[]\
    \ = $arr[$i];\n    }\n    return $result;\n}\n", "    $result = array();\n   \
    \ $i = 0;\n    $j = 0;\n    $len = count($arr);\n    while ($i < $k) {\n     \
    \   $max = $arr[$j];\n        $index = $j;\n        for ($j; $j < $len; $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $index = $j;\n            }\n        }\n        $result[$i] = $max;\n\
    \        $i++;\n        $j = $index + 1;\n    }\n    return $result;\n}\n\n$arr\
    \ = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2, 1, 2, -1,\
    \ -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result = [];\n    $max\
    \ = -1000;\n    $max_index = 0;\n    for ($i = 0; $i < $k; $i++) {\n        for\
    \ ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n   \
    \             $max = $arr[$j];\n                $max_index = $j;\n           \
    \ }\n        }\n        $result[] = $max;\n        $arr[$max_index] = -1000;\n\
    \        $max = -1000;\n    }\n    return $result;\n}", "    $result = [];\n \
    \   $count = 0;\n    $i = 0;\n    $j = 0;\n    while ($count < $k) {\n       \
    \ if ($arr[$i] > $arr[$j]) {\n            $result[] = $arr[$i];\n            $i++;\n\
    \        } else {\n            $result[] = $arr[$j];\n            $j++;\n    \
    \    }\n        $count++;\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n\
    $k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));",
  "    $result = array();\n    $count = count($arr);\n    if ($count == 0) {\n   \
    \     return $result;\n    }\n    if ($count == 1) {\n        return $arr;\n \
    \   }\n    if ($k == 0) {\n        return $result;\n    }\n    if ($k == 1) {\n\
    \        $max = $arr[0];\n        for ($i = 1; $i < $count; $i++) {\n        \
    \    if ($arr[$i] > $max) {\n                $max = $arr[$i];\n            }\n\
    \        }\n        $result[] = $max;\n        return $result;\n    }\n    if\
    \ ($k == $count) {\n        sort($arr);\n        return $arr;\n    }\n    $result\
    \ = array_slice($arr, 0, $k);\n    sort($result);\n    for ($i = $k; $i < $count;\
    \ $i++) {\n        if ($arr[$i] > $result[0]) {\n            $result[0] = $arr[$i];\n\
    \            sort($result);\n        }\n    }\n    return $result;\n}\n", "  \
    \  $result = array();\n    $size = count($arr);\n    if ($size == 0) {\n     \
    \   return $result;\n    }\n    if ($k == 0) {\n        return $result;\n    }\n\
    \    if ($k > $size) {\n        return $result;\n    }\n    for ($i = 0; $i <\
    \ $k; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    for ($i = $k; $i <\
    \ $size; $i++) {\n        $min = $result[0];\n        $min_index = 0;\n      \
    \  for ($j = 1; $j < $k; $j++) {\n            if ($result[$j] < $min) {\n    \
    \            $min = $result[$j];\n                $min_index = $j;\n         \
    \   }\n        }\n        if ($arr[$i] > $min) {\n            $result[$min_index]\
    \ = $arr[$i];\n        }\n    }\n    return $result;\n}\n\n$arr = array(-3, -4,\
    \ 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr =\
    \ array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = array();\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\n\n\
    $arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 0;\n$result = maximum($arr, $k);\n\
    print_r($result);\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 8;\n$result =\
    \ maximum($arr, $k);\nprint_r($result);", "    $result = array();\n    $max =\
    \ -1000;\n    $max_index = 0;\n    for ($i = 0; $i < $k; $i++) {\n        for\
    \ ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n   \
    \             $max = $arr[$j];\n                $max_index = $j;\n           \
    \ }\n        }\n        $result[] = $max;\n        $arr[$max_index] = -1001;\n\
    \        $max = -1000;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $count = count($arr);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    if ($k == 0) {\n        return $result;\n    }\n    if ($k > $count)\
    \ {\n        return $arr;\n    }\n    $result = array_slice($arr, 0, $k);\n  \
    \  sort($result);\n    for ($i = $k; $i < $count; $i++) {\n        if ($arr[$i]\
    \ > $result[0]) {\n            $result[0] = $arr[$i];\n            sort($result);\n\
    \        }\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result\
    \ = maximum($arr, $k);\nvar_dump($result);\n\n$arr = [4, -4, 4];\n$k = 2;\n$result\
    \ = maximum($arr, $k);\nvar_dump($result);\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n\
    $k = 1;\n$result = maximum($arr, $k);\nvar_dump($result);", "    $result = array();\n\
    \    $max = array();\n    $max_index = array();\n    $max_count = 0;\n    $arr_count\
    \ = count($arr);\n    for ($i = 0; $i < $arr_count; $i++) {\n        if ($max_count\
    \ < $k) {\n            $max[] = $arr[$i];\n            $max_index[] = $i;\n  \
    \          $max_count++;\n        } else {\n            $min = min($max);\n  \
    \          $min_index = array_search($min, $max);\n            if ($arr[$i] >\
    \ $min) {\n                $max[$min_index] = $arr[$i];\n                $max_index[$min_index]\
    \ = $i;\n            }\n        }\n    }\n    sort($max_index);\n    foreach ($max_index\
    \ as $index) {\n        $result[] = $arr[$index];\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $i = 0;\n    while ($i < $k) {\n        $max\
    \ = -1000;\n        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $max_index = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        unset($arr[$max_index]);\n        $i++;\n    }\n    return $result;\n\
    }\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2,\
    \ 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", "\tif ($k == 0) return\
    \ array();\n\tif ($k == 1) return array(max($arr));\n\t$result = array();\n\t\
    $max = max($arr);\n\t$result[] = $max;\n\t$arr = array_diff($arr, array($max));\n\
    \treturn array_merge($result, maximum($arr, $k - 1));\n}\n\n$arr = array(-3, -4,\
    \ 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr =\
    \ array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);",
  "    $result = array();\n    $length = count($arr);\n    if ($k > $length) {\n \
    \       return $result;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = $arr[$i];\n    }\n    for ($i = $k; $i < $length; $i++) {\n        $min =\
    \ $result[0];\n        $minIndex = 0;\n        for ($j = 1; $j < $k; $j++) {\n\
    \            if ($result[$j] < $min) {\n                $min = $result[$j];\n\
    \                $minIndex = $j;\n            }\n        }\n        if ($arr[$i]\
    \ > $min) {\n            $result[$minIndex] = $arr[$i];\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\n\
    $result = maximum($arr, $k);\nprint_r($result);\necho \"\\n\";\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\necho \"\\\
    n\";\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\necho \"\\n\";", "    $result = array();\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        $max = -1000;\n        $index = -1;\n       \
    \ for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n\
    \                $max = $arr[$j];\n                $index = $j;\n            }\n\
    \        }\n        $result[] = $max;\n        unset($arr[$index]);\n    }\n \
    \   return $result;\n}\n", "    $result = array();\n    $max = $arr[0];\n    $max_index\
    \ = 0;\n    for ($i = 0; $i < $k; $i++) {\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $max_index = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        $arr[$max_index] = -1000;\n        $max = -1000;\n    }\n \
    \   return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $count = count($arr);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        if (count($result) < $k) {\n            $result[] = $arr[$i];\n\
    \        } else {\n            $min = min($result);\n            if ($arr[$i]\
    \ > $min) {\n                $result = array_diff($result, array($min));\n   \
    \             $result[] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $length = count($arr);\n    if ($k > $length) {\n\
    \        return $result;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = $arr[$i];\n        $index = $i;\n        for ($j = $i + 1; $j < $length; $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        $arr[$index] = $arr[$i];\n        $arr[$i] = $max;\n    }\n    return\
    \ $result;\n}\n", "    $result = array();\n    $count = count($arr);\n    if ($count\
    \ == 0) {\n        return $result;\n    }\n    if ($count <= $k) {\n        return\
    \ $arr;\n    }\n    $result = array_slice($arr, 0, $k);\n    for ($i = $k; $i\
    \ < $count; $i++) {\n        $max = max($result);\n        if ($arr[$i] > $max)\
    \ {\n            $index = array_search($max, $result);\n            $result[$index]\
    \ = $arr[$i];\n        }\n    }\n    sort($result);\n    return $result;\n}\n",
  "    $result = array();\n    $i = 0;\n    while ($i < $k) {\n        $max = -1000;\n\
    \        $index = 0;\n        for ($j = 0; $j < count($arr); $j++) {\n       \
    \     if ($arr[$j] > $max) {\n                $max = $arr[$j];\n             \
    \   $index = $j;\n            }\n        }\n        $result[] = $max;\n      \
    \  unset($arr[$index]);\n        $i++;\n    }\n    return $result;\n}\n\n$arr\
    \ = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2, 1, 2, -1,\
    \ -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result = array();\n  \
    \  for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $max_index =\
    \ -1;\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $max_index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        unset($arr[$max_index]);\n\
    \    }\n    return $result;\n}\n", "    $n = count($arr);\n    if ($k >= $n) {\n\
    \        return $arr;\n    }\n    $heap = array();\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $heap[] = $arr[$i];\n    }\n    for ($i = $k / 2 - 1; $i >=\
    \ 0; $i--) {\n        heapify($heap, $i, $k);\n    }\n    for ($i = $k; $i < $n;\
    \ $i++) {\n        if ($arr[$i] > $heap[0]) {\n            $heap[0] = $arr[$i];\n\
    \            heapify($heap, 0, $k);\n        }\n    }\n    return $heap;\n}",
  "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n \
    \       $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n    \
    \        if ($arr[$j] > $max) {\n                $max = $arr[$j];\n          \
    \      $maxIndex = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        array_splice($arr, $maxIndex, 1);\n    }\n    return $result;\n}\n",
  "    $result = array();\n    for ($i = 0; $i < count($arr); $i++) {\n        if\
    \ (count($result) < $k) {\n            array_push($result, $arr[$i]);\n      \
    \  } else {\n            $min = $result[0];\n            $index = 0;\n       \
    \     for ($j = 1; $j < count($result); $j++) {\n                if ($result[$j]\
    \ < $min) {\n                    $min = $result[$j];\n                    $index\
    \ = $j;\n                }\n            }\n            if ($arr[$i] > $min) {\n\
    \                $result[$index] = $arr[$i];\n            }\n        }\n    }\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $result[] = $arr[$i];\n        if (count($result) > $k) {\n     \
    \       sort($result);\n            array_shift($result);\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n", "    $result = array();\n    $len\
    \ = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        if (count($result)\
    \ < $k) {\n            $result[] = $arr[$i];\n        } else {\n            $min\
    \ = min($result);\n            if ($arr[$i] > $min) {\n                $index\
    \ = array_search($min, $result);\n                $result[$index] = $arr[$i];\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\necho \"\\n\"\
    ;\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\necho \"\\\
    n\";\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));\necho \"\\n\";", "    $result = [];\n    $count = count($arr);\n    if\
    \ ($count < $k) {\n        return $result;\n    }\n    $max = max($arr);\n   \
    \ $min = min($arr);\n    $bucket = array_fill($min, $max - $min + 1, 0);\n   \
    \ for ($i = 0; $i < $count; $i++) {\n        $bucket[$arr[$i]]++;\n    }\n   \
    \ for ($i = $max; $i >= $min; $i--) {\n        while ($bucket[$i] > 0) {\n   \
    \         $result[] = $i;\n            $bucket[$i]--;\n            $k--;\n   \
    \         if ($k == 0) {\n                return $result;\n            }\n   \
    \     }\n    }\n    return $result;\n}\n", "    $result = [];\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $max = -1000;\n        $maxIndex = 0;\n        for\
    \ ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n   \
    \             $max = $arr[$j];\n                $maxIndex = $j;\n            }\n\
    \        }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n    }\n\
    \    return $result;\n}\n", "    $result = array();\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $max = -1000;\n        $index = -1;\n        for ($j = 0; $j\
    \ < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n               \
    \ $max = $arr[$j];\n                $index = $j;\n            }\n        }\n \
    \       $result[] = $max;\n        unset($arr[$index]);\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[0];\n\
    \        $maxIndex = 0;\n        for ($j = 0; $j < count($arr); $j++) {\n    \
    \        if ($arr[$j] > $max) {\n                $max = $arr[$j];\n          \
    \      $maxIndex = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$maxIndex]);\n        $arr = array_values($arr);\n    }\n\
    \    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result\
    \ = array();\n    $max = max($arr);\n    $min = min($arr);\n    $max_count = 0;\n\
    \    $min_count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ == $max) {\n            $max_count++;\n        }\n        if ($arr[$i] == $min)\
    \ {\n            $min_count++;\n        }\n    }\n    if ($k > $max_count) {\n\
    \        $k = $max_count;\n    }\n    if ($k > $min_count) {\n        $k = $min_count;\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[] = $max;\n    }\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $i = 0;\n    while ($i < $k) {\n        $max = -1000;\n\
    \        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n  \
    \          if ($arr[$j] > $max) {\n                $max = $arr[$j];\n        \
    \        $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$max_index]);\n        $i++;\n    }\n    return $result;\n\
    }\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2,\
    \ 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result = [];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $maxIndex =\
    \ -1;\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $maxIndex = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $length = count($arr);\n\
    \    if ($k > $length) {\n        return $result;\n    }\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $max = $arr[$i];\n        $maxIndex = $i;\n        for\
    \ ($j = $i + 1; $j < $length; $j++) {\n            if ($arr[$j] > $max) {\n  \
    \              $max = $arr[$j];\n                $maxIndex = $j;\n           \
    \ }\n        }\n        $result[] = $max;\n        $arr[$maxIndex] = $arr[$i];\n\
    \        $arr[$i] = $max;\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n\
    $k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = [4, -4, 4];\n\
    $k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = [-3, 2, 1,\
    \ 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);", " \
    \   $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n\
    \        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n  \
    \          if ($arr[$j] > $max) {\n                $max = $arr[$j];\n        \
    \        $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$max_index]);\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    $count = count($arr);\n    if ($count < $k) {\n        return\
    \ $result;\n    }\n    $result = array_slice($arr, 0, $k);\n    sort($result);\n\
    \    for ($i = $k; $i < $count; $i++) {\n        if ($arr[$i] > $result[0]) {\n\
    \            $result[0] = $arr[$i];\n            sort($result);\n        }\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $count = count($arr);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    if ($k == 0) {\n\
    \        return $result;\n    }\n    if ($k >= $count) {\n        return $arr;\n\
    \    }\n    $result = array_slice($arr, 0, $k);\n    sort($result);\n    for ($i\
    \ = $k; $i < $count; $i++) {\n        $j = $k - 1;\n        while ($j >= 0 &&\
    \ $result[$j] < $arr[$i]) {\n            $j--;\n        }\n        if ($j < $k\
    \ - 1) {\n            $result[$j + 1] = $arr[$i];\n            sort($result);\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    $count =\
    \ count($arr);\n    $i = 0;\n    while ($i < $k) {\n        $max = $arr[0];\n\
    \        $index = 0;\n        for ($j = 0; $j < $count; $j++) {\n            if\
    \ ($arr[$j] > $max) {\n                $max = $arr[$j];\n                $index\
    \ = $j;\n            }\n        }\n        $result[] = $max;\n        unset($arr[$index]);\n\
    \        $arr = array_values($arr);\n        $count--;\n        $i++;\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $count = count($arr);\n  \
    \  if ($count < $k) {\n        return $result;\n    }\n    $result = array_slice($arr,\
    \ 0, $k);\n    for ($i = $k; $i < $count; $i++) {\n        $result = insert($result,\
    \ $arr[$i]);\n    }\n    return $result;\n}\n", "    $n = count($arr);\n    $result\
    \ = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[0];\n   \
    \     $max_index = 0;\n        for ($j = 1; $j < $n - $i; $j++) {\n          \
    \  if ($arr[$j] > $max) {\n                $max = $arr[$j];\n                $max_index\
    \ = $j;\n            }\n        }\n        $result[] = $max;\n        array_splice($arr,\
    \ $max_index, 1);\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    $count = count($arr);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    if ($count == 1) {\n        return $arr;\n    }\n    $max = $arr[0];\n\
    \    $min = $arr[0];\n    for ($i = 1; $i < $count; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n        if ($arr[$i] < $min)\
    \ {\n            $min = $arr[$i];\n        }\n    }\n    $bucket = array();\n\
    \    $bucket_count = $max - $min + 1;\n    for ($i = 0; $i < $bucket_count; $i++)\
    \ {\n        $bucket[$i] = 0;\n    }\n    for ($i = 0; $i < $count; $i++) {\n\
    \        $bucket[$arr[$i] - $min]++;\n    }\n    for ($i = $bucket_count - 1;\
    \ $i >= 0; $i--) {\n        while ($bucket[$i] > 0) {\n            $result[] =\
    \ $i + $min;\n            $bucket[$i]--;\n            if (count($result) == $k)\
    \ {\n                return $result;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\n$result = maximum($arr, $k);\n\
    print_r($result);\necho \"\\n\";\n\n$arr = array(4, -4, 4);\n$k = 2;\n$result\
    \ = maximum($arr, $k);\nprint_r($result);\necho \"\\n\";\n\n$arr = array(-3, 2,\
    \ 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    echo \"\\n\";", "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n      \
    \  $max = -1000;\n        $maxIndex = -1;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $maxIndex = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n\n\
    $arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n\
    $k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k =\
    \ 1;\nprint_r(maximum($arr, $k));", "    $result = array();\n    $len = count($arr);\n\
    \    if ($k > $len) {\n        return $result;\n    }\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $max = $arr[$i];\n        $maxIndex = $i;\n        for ($j\
    \ = $i + 1; $j < $len; $j++) {\n            if ($arr[$j] > $max) {\n         \
    \       $max = $arr[$j];\n                $maxIndex = $j;\n            }\n   \
    \     }\n        $result[] = $max;\n        $arr[$maxIndex] = $arr[$i];\n    \
    \    $arr[$i] = $max;\n    }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n\
    $k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));", "    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n       \
    \ $max = -1000;\n        $max_index = -1;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $max_index = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        unset($arr[$max_index]);\n    }\n    return $result;\n}\n",
  "    $result = array();\n    $length = count($arr);\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        if (count($result) < $k) {\n            $result[] = $arr[$i];\n\
    \        } else {\n            $min = $result[0];\n            $index = 0;\n \
    \           for ($j = 1; $j < $k; $j++) {\n                if ($result[$j] < $min)\
    \ {\n                    $min = $result[$j];\n                    $index = $j;\n\
    \                }\n            }\n            if ($arr[$i] > $min) {\n      \
    \          $result[$index] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\necho \"\\n\";\n\n$arr = array(4, -4, 4);\n$k = 2;\n\
    $result = maximum($arr, $k);\nprint_r($result);\necho \"\\n\";\n\n$arr = array(-3,\
    \ 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    echo \"\\n\";", "\t$n = count($arr);\n\tif ($k == 0) {\n\t\treturn array();\n\t\
    }\n\tif ($k == $n) {\n\t\treturn $arr;\n\t}\n\t$result = array();\n\tfor ($i =\
    \ 0; $i < $k; $i++) {\n\t\t$max = -1000;\n\t\t$max_index = -1;\n\t\tfor ($j =\
    \ 0; $j < $n; $j++) {\n\t\t\tif ($arr[$j] > $max) {\n\t\t\t\t$max = $arr[$j];\n\
    \t\t\t\t$max_index = $j;\n\t\t\t}\n\t\t}\n\t\t$result[] = $max;\n\t\t$arr[$max_index]\
    \ = -1001;\n\t}\n\treturn $result;\n}\n", "    $result = array();\n    $count\
    \ = count($arr);\n    if ($count < $k) {\n        return $result;\n    }\n   \
    \ $max = $arr[0];\n    for ($i = 1; $i < $count; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n    }\n    $bucket = array_fill(0,\
    \ $max + 1, 0);\n    for ($i = 0; $i < $count; $i++) {\n        $bucket[$arr[$i]]++;\n\
    \    }\n    for ($i = $max; $i >= 0; $i--) {\n        while ($bucket[$i] > 0)\
    \ {\n            $result[] = $i;\n            $bucket[$i]--;\n            if (count($result)\
    \ == $k) {\n                return $result;\n            }\n        }\n    }\n\
    \    return $result;\n}\n", "    $result = array();\n    $count = count($arr);\n\
    \    if ($count < $k) {\n        return $result;\n    }\n    $max = $arr[0];\n\
    \    $min = $arr[0];\n    for ($i = 0; $i < $count; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n        }\n        if ($arr[$i] < $min)\
    \ {\n            $min = $arr[$i];\n        }\n    }\n    $bucket = array_fill($min,\
    \ $max - $min + 1, 0);\n    for ($i = 0; $i < $count; $i++) {\n        $bucket[$arr[$i]]++;\n\
    \    }\n    for ($i = $max; $i >= $min; $i--) {\n        while ($bucket[$i] >\
    \ 0) {\n            $result[] = $i;\n            $bucket[$i]--;\n            if\
    \ (count($result) == $k) {\n                return $result;\n            }\n \
    \       }\n    }\n    return $result;\n}\n", "    $result = array();\n    $count\
    \ = count($arr);\n    for ($i = 0; $i < $count; $i++) {\n        if (count($result)\
    \ < $k) {\n            $result[] = $arr[$i];\n        } else {\n            $min\
    \ = min($result);\n            if ($arr[$i] > $min) {\n                $result[array_search($min,\
    \ $result)] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = array();\n    $max = $arr[0];\n   \
    \ $maxIndex = 0;\n    for ($i = 0; $i < $k; $i++) {\n        for ($j = 0; $j <\
    \ count($arr); $j++) {\n            if ($arr[$j] > $max) {\n                $max\
    \ = $arr[$j];\n                $maxIndex = $j;\n            }\n        }\n   \
    \     $result[] = $max;\n        $arr[$maxIndex] = -1000000;\n        $max = -1000000;\n\
    \    }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $len = count($arr);\n    if ($k > $len) {\n      \
    \  return $result;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n\
    \        $maxIndex = -1;\n        for ($j = 0; $j < $len; $j++) {\n          \
    \  if ($arr[$j] > $max) {\n                $max = $arr[$j];\n                $maxIndex\
    \ = $j;\n            }\n        }\n        $result[] = $max;\n        $arr[$maxIndex]\
    \ = -1000;\n    }\n    return $result;\n}\n", "    $result = array();\n    $i\
    \ = 0;\n    while ($i < $k) {\n        $max = -1000;\n        $max_index = -1;\n\
    \        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max)\
    \ {\n                $max = $arr[$j];\n                $max_index = $j;\n    \
    \        }\n        }\n        $result[] = $max;\n        unset($arr[$max_index]);\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    $result = array();\n  \
    \  for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $max_index =\
    \ -1;\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $max_index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        unset($arr[$max_index]);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $count = count($arr);\n\
    \    if ($count < $k) {\n        return $result;\n    }\n    $i = 0;\n    while\
    \ ($i < $k) {\n        $result[] = $arr[$i];\n        $i++;\n    }\n    $j = $k\
    \ - 1;\n    while ($j > 0) {\n        $t = $j;\n        while ($t < $k) {\n  \
    \          if ($result[$t] < $result[$j - 1]) {\n                $temp = $result[$t];\n\
    \                $result[$t] = $result[$j - 1];\n                $result[$j -\
    \ 1] = $temp;\n            }\n            $t++;\n        }\n        $j--;\n  \
    \  }\n    $i = $k;\n    while ($i < $count) {\n        $j = 0;\n        while\
    \ ($j < $k) {\n            if ($result[$j] < $arr[$i]) {\n                $temp\
    \ = $result[$j];\n                $result[$j] = $arr[$i];\n                $arr[$i]\
    \ = $temp;\n            }\n            $j++;\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $max\
    \ = array();\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if (count($max) < $k) {\n            $max[] = $arr[$i];\n        } else\
    \ {\n            $min = min($max);\n            if ($min < $arr[$i]) {\n     \
    \           $max[array_search($min, $max)] = $arr[$i];\n            }\n      \
    \  }\n    }\n    sort($max);\n    return $max;\n}\n\n$arr = array(-3, -4, 5);\n\
    $k = 3;\nprint_r(maximum($arr, $k));\necho \"\\n\";\n\n$arr = array(4, -4, 4);\n\
    $k = 2;\nprint_r(maximum($arr, $k));\necho \"\\n\";\n\n$arr = array(-3, 2, 1,\
    \ 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));\necho \"\\n\";", "    $result\
    \ = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[0];\n   \
    \     $max_index = 0;\n        for ($j = 0; $j < count($arr); $j++) {\n      \
    \      if ($arr[$j] > $max) {\n                $max = $arr[$j];\n            \
    \    $max_index = $j;\n            }\n        }\n        $result[] = $max;\n \
    \       unset($arr[$max_index]);\n        $arr = array_values($arr);\n    }\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n\
    \        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n  \
    \          if ($arr[$j] > $max) {\n                $max = $arr[$j];\n        \
    \        $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$max_index]);\n    }\n    return $result;\n}\n", "    $max\
    \ = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max[$i] = $arr[$i];\n\
    \    }\n    for ($i = $k; $i < count($arr); $i++) {\n        for ($j = 0; $j <\
    \ $k; $j++) {\n            if ($arr[$i] > $max[$j]) {\n                $max[$j]\
    \ = $arr[$i];\n                break;\n            }\n        }\n    }\n    sort($max);\n\
    \    return $max;\n}\n", "    $result = array();\n    $count = 0;\n    $i = 0;\n\
    \    while ($count < $k) {\n        $max = $arr[$i];\n        $index = $i;\n \
    \       for ($j = $i; $j < count($arr); $j++) {\n            if ($arr[$j] > $max)\
    \ {\n                $max = $arr[$j];\n                $index = $j;\n        \
    \    }\n        }\n        $result[] = $max;\n        $count++;\n        $i =\
    \ $index + 1;\n    }\n    return $result;\n}\n", "    $result = array();\n   \
    \ $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = $arr[$i];\n        $max_index = $i;\n        for ($j = $i; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $max_index = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        $arr[$max_index] = $arr[$i];\n        $arr[$i] = $max;\n  \
    \  }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $count = count($arr);\n    if ($count == 0) {\n  \
    \      return $result;\n    }\n    if ($count == 1) {\n        $result[] = $arr[0];\n\
    \        return $result;\n    }\n    $result = array_slice($arr, 0, $k);\n   \
    \ sort($result);\n    for ($i = $k; $i < $count; $i++) {\n        $j = $k - 1;\n\
    \        while ($j >= 0 && $result[$j] < $arr[$i]) {\n            $j--;\n    \
    \    }\n        if ($j < $k - 1) {\n            array_splice($result, $j + 1,\
    \ 0, $arr[$i]);\n            array_pop($result);\n        }\n    }\n    return\
    \ $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\
    \n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3,\
    \ 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result =\
    \ [];\n    $count = count($arr);\n    for ($i = 0; $i < $count; $i++) {\n    \
    \    if (count($result) < $k) {\n            $result[] = $arr[$i];\n        }\
    \ else {\n            $min = $result[0];\n            $minIndex = 0;\n       \
    \     for ($j = 1; $j < $k; $j++) {\n                if ($result[$j] < $min) {\n\
    \                    $min = $result[$j];\n                    $minIndex = $j;\n\
    \                }\n            }\n            if ($arr[$i] > $min) {\n      \
    \          $result[$minIndex] = $arr[$i];\n            }\n        }\n    }\n \
    \   return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);", "    $result = array();\n    $count = 0;\n    $i =\
    \ 0;\n    while ($count < $k) {\n        if ($arr[$i] > $arr[$i + 1]) {\n    \
    \        $result[] = $arr[$i];\n            $count++;\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    $i = 0;\n    while\
    \ ($i < $k) {\n        $max = -1001;\n        $index = 0;\n        for ($j = 0;\
    \ $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n            \
    \    $max = $arr[$j];\n                $index = $j;\n            }\n        }\n\
    \        $result[] = $max;\n        unset($arr[$index]);\n        $i++;\n    }\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n\
    \        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n  \
    \          if ($arr[$j] > $max) {\n                $max = $arr[$j];\n        \
    \        $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$max_index]);\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    $len = count($arr);\n    if ($k > $len) {\n        return $result;\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i];\n        $index\
    \ = $i;\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        $arr[$index] = $arr[$i];\n\
    \        $arr[$i] = $max;\n    }\n    return $result;\n}\n\n$arr = array(-3, -4,\
    \ 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr =\
    \ array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);",
  "    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[0];\n\
    \        $max_index = 0;\n        for ($j = 0; $j < count($arr); $j++) {\n   \
    \         if ($arr[$j] > $max) {\n                $max = $arr[$j];\n         \
    \       $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        array_splice($arr, $max_index, 1);\n    }\n    return $result;\n}\n",
  "    $arr = array_unique($arr);\n    $arr = array_values($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_slice($arr, 0, $k);\n    return $arr;\n}\n", "    $result =\
    \ array();\n    $count = count($arr);\n    for ($i = 0; $i < $count; $i++) {\n\
    \        $result[] = $arr[$i];\n        if (count($result) > $k) {\n         \
    \   sort($result);\n            array_shift($result);\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = [];\n    $count = count($arr);\n    if ($count < $k) {\n       \
    \ return $result;\n    }\n    $max = $arr[0];\n    for ($i = 1; $i < $count; $i++)\
    \ {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n        }\n\
    \    }\n    $result[] = $max;\n    for ($i = 1; $i < $k; $i++) {\n        $max\
    \ = $arr[0];\n        for ($j = 1; $j < $count; $j++) {\n            if ($arr[$j]\
    \ > $max && !in_array($arr[$j], $result)) {\n                $max = $arr[$j];\n\
    \            }\n        }\n        $result[] = $max;\n    }\n    return $result;\n\
    }\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    echo \"\\n\";\n\n$arr = [4, -4, 4];\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    echo \"\\n\";\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\necho \"\\n\";", "    $result = array();\n    $max =\
    \ -1000;\n    $max_index = -1;\n    for ($i = 0; $i < $k; $i++) {\n        for\
    \ ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n   \
    \             $max = $arr[$j];\n                $max_index = $j;\n           \
    \ }\n        }\n        $result[] = $max;\n        $arr[$max_index] = -1001;\n\
    \        $max = -1000;\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $max_index\
    \ = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $max_index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        unset($arr[$max_index]);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $arr = array_unique($arr);\n\
    \    sort($arr);\n    $arr = array_reverse($arr);\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\n$arr = [-3,\
    \ -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));", "    $result = array();\n  \
    \  $len = count($arr);\n    if ($k > $len) {\n        return $result;\n    }\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i];\n        $index =\
    \ $i;\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        $arr[$index] = $arr[$i];\n\
    \        $arr[$i] = $max;\n    }\n    return $result;\n}\n\n$arr = array(-3, -4,\
    \ 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr =\
    \ array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);",
  "    $result = array();\n    $count = count($arr);\n    if ($count == 0) {\n   \
    \     return $result;\n    }\n    if ($count == 1) {\n        return $arr;\n \
    \   }\n    if ($k == 0) {\n        return $result;\n    }\n    if ($k == 1) {\n\
    \        $max = $arr[0];\n        for ($i = 1; $i < $count; $i++) {\n        \
    \    if ($arr[$i] > $max) {\n                $max = $arr[$i];\n            }\n\
    \        }\n        $result[] = $max;\n        return $result;\n    }\n    if\
    \ ($k == $count) {\n        return $arr;\n    }\n    $result = array_slice($arr,\
    \ 0, $k);\n    $result = heapSort($result);\n    for ($i = $k; $i < $count; $i++)\
    \ {\n        if ($arr[$i] > $result[0]) {\n            $result[0] = $arr[$i];\n\
    \            $result = heapSort($result);\n        }\n    }\n    return $result;\n\
    }", "    $max = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max[$i]\
    \ = $arr[$i];\n    }\n    for ($i = $k; $i < count($arr); $i++) {\n        $max\
    \ = insert($max, $arr[$i]);\n    }\n    return $max;\n}\n", "    $result = array();\n\
    \    $count = 0;\n    $i = 0;\n    while ($count < $k) {\n        if ($arr[$i]\
    \ > $arr[$i+1]) {\n            $result[] = $arr[$i];\n            $count++;\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\n$arr = array(-3, -4,\
    \ 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr =\
    \ array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);",
  "    $result = [];\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n \
    \       $result[] = $arr[$i];\n        $j = count($result) - 1;\n        while\
    \ ($j > 0 && $result[$j] > $result[$j - 1]) {\n            $temp = $result[$j];\n\
    \            $result[$j] = $result[$j - 1];\n            $result[$j - 1] = $temp;\n\
    \            $j--;\n        }\n        if (count($result) > $k) {\n          \
    \  array_shift($result);\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    $max = -1000;\n    $max_index = 0;\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $max_index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        $arr[$max_index]\
    \ = -1001;\n        $max = -1000;\n    }\n    return $result;\n}\n\n$arr = array(-3,\
    \ -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\necho \"\\n\";\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\necho \"\\n\";\n\n$arr = array(-3,\
    \ 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));\necho \"\\n\";",
  "    $result = array();\n    $max = array();\n    $max_index = array();\n    $max_index_count\
    \ = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n\
    \    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n \
    \   $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count\
    \ = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n\
    \    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n \
    \   $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count\
    \ = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n\
    \    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n \
    \   $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count\
    \ = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n\
    \    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n \
    \   $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count\
    \ = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n    $max_count = 0;\n\
    \    $max_index_count = 0;\n    $max_count = 0;\n    $max_index_count = 0;\n \
    \   $max_count = 0;\n    $max_index_count =", "    $result = array();\n    $n\
    \ = count($arr);\n    for ($i = 0; $i < $n; $i++) {\n        if ($i < $k) {\n\
    \            $result[] = $arr[$i];\n        } else {\n            $min = min($result);\n\
    \            if ($arr[$i] > $min) {\n                $result[array_search($min,\
    \ $result)] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $n = count($arr);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $result[] = $arr[$i];\n        if (count($result) > $k) {\n     \
    \       sort($result);\n            array_shift($result);\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k =\
    \ 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));", "    $result = [];\n    $count = count($arr);\n    if ($count == 0)\
    \ {\n        return $result;\n    }\n    if ($k == 0) {\n        return $result;\n\
    \    }\n    if ($k > $count) {\n        return $arr;\n    }\n    $result = array_slice($arr,\
    \ 0, $k);\n    sort($result);\n    for ($i = $k; $i < $count; $i++) {\n      \
    \  if ($arr[$i] > $result[0]) {\n            $result[0] = $arr[$i];\n        \
    \    sort($result);\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    $max = 0;\n    $max_index = 0;\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i];\n        $max_index = $i;\n        for ($j = $i\
    \ + 1; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n       \
    \         $max = $arr[$j];\n                $max_index = $j;\n            }\n\
    \        }\n        $result[] = $max;\n        $arr[$max_index] = $arr[$i];\n\
    \        $arr[$i] = $max;\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    $count = count($arr);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    if ($count == 1) {\n        return $arr;\n    }\n    if ($k == 0)\
    \ {\n        return $result;\n    }\n    if ($k == 1) {\n        $max = $arr[0];\n\
    \        for ($i = 1; $i < $count; $i++) {\n            if ($arr[$i] > $max) {\n\
    \                $max = $arr[$i];\n            }\n        }\n        $result[]\
    \ = $max;\n        return $result;\n    }\n    for ($i = 0; $i < $k; $i++) {\n\
    \        $result[] = $arr[$i];\n    }\n    for ($i = $k; $i < $count; $i++) {\n\
    \        $min = $result[0];\n        $minIndex = 0;\n        for ($j = 1; $j <\
    \ $k; $j++) {\n            if ($result[$j] < $min) {\n                $min = $result[$j];\n\
    \                $minIndex = $j;\n            }\n        }\n        if ($arr[$i]\
    \ > $min) {\n            $result[$minIndex] = $arr[$i];\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\n\
    $result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(4, -4, 4);\n$k\
    \ = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(-3, 2,\
    \ 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);",
  "    $result = array();\n    $max = -1000;\n    $max_index = -1;\n    for ($i =\
    \ 0; $i < $k; $i++) {\n        for ($j = 0; $j < count($arr); $j++) {\n      \
    \      if ($arr[$j] > $max) {\n                $max = $arr[$j];\n            \
    \    $max_index = $j;\n            }\n        }\n        $result[] = $max;\n \
    \       $arr[$max_index] = -1001;\n        $max = -1000;\n    }\n    return $result;\n\
    }\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2,\
    \ 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result = [];\n\
    \    $count = count($arr);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    if ($k == 0) {\n        return $result;\n    }\n    if ($k > $count)\
    \ {\n        return $arr;\n    }\n    $result = array_slice($arr, 0, $k);\n  \
    \  sort($result);\n    for ($i = $k; $i < $count; $i++) {\n        if ($arr[$i]\
    \ > $result[0]) {\n            $result[0] = $arr[$i];\n            sort($result);\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    $i = 0;\n\
    \    while ($i < $k) {\n        $max = -1000;\n        $maxIndex = -1;\n     \
    \   for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n\
    \                $max = $arr[$j];\n                $maxIndex = $j;\n         \
    \   }\n        }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n\
    \        $i++;\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\n\
    print_r(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));",
  "    $result = array();\n    $max = $arr[0];\n    $max_index = 0;\n    for ($i =\
    \ 0; $i < $k; $i++) {\n        for ($j = 0; $j < count($arr); $j++) {\n      \
    \      if ($arr[$j] > $max) {\n                $max = $arr[$j];\n            \
    \    $max_index = $j;\n            }\n        }\n        $result[] = $max;\n \
    \       $arr[$max_index] = -1000;\n        $max = -1000;\n    }\n    return $result;\n\
    }\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2,\
    \ 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", "    $len = count($arr);\n\
    \    if ($len < $k) {\n        return $arr;\n    }\n    $res = array();\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $res[] = $arr[$i];\n    }\n    for ($i =\
    \ $k; $i < $len; $i++) {\n        $j = $k - 1;\n        while ($j >= 0 && $res[$j]\
    \ < $arr[$i]) {\n            $j--;\n        }\n        if ($j < $k - 1) {\n  \
    \          for ($m = $k - 1; $m > $j; $m--) {\n                $res[$m] = $res[$m\
    \ - 1];\n            }\n            $res[$j + 1] = $arr[$i];\n        }\n    }\n\
    \    return $res;\n}\n", "    $result = array();\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = -1000;\n        $maxIndex = -1;\n        for ($j = 0; $j <\
    \ count($arr); $j++) {\n            if ($arr[$j] > $max) {\n                $max\
    \ = $arr[$j];\n                $maxIndex = $j;\n            }\n        }\n   \
    \     $result[] = $max;\n        unset($arr[$maxIndex]);\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n\
    \        $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n   \
    \         if ($arr[$j] > $max) {\n                $max = $arr[$j];\n         \
    \       $maxIndex = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n\n$arr = [-3,\
    \ -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n$k = 2;\n\
    print_r(maximum($arr, $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));", "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = -1000;\n        $index = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$index]);\n    }\n    return $result;\n}\n\n$arr = [-3, -4,\
    \ 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));",
  "    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n\
    \        $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n   \
    \         if ($arr[$j] > $max) {\n                $max = $arr[$j];\n         \
    \       $maxIndex = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    $count = count($arr);\n    for ($i = 0; $i < $count; $i++) {\n\
    \        $result[] = $arr[$i];\n        if (count($result) > $k) {\n         \
    \   sort($result);\n            array_shift($result);\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = array();\n    $count = count($arr);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        if ($i < $k) {\n            $result[]\
    \ = $arr[$i];\n        } else {\n            $min = min($result);\n          \
    \  if ($arr[$i] > $min) {\n                $key = array_search($min, $result);\n\
    \                $result[$key] = $arr[$i];\n            }\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k =\
    \ 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));", "    $result = [];\n    $count = count($arr);\n    if ($count == 0)\
    \ {\n        return $result;\n    }\n    if ($k == 0) {\n        return $result;\n\
    \    }\n    if ($k >= $count) {\n        return $arr;\n    }\n    $result = array_slice($arr,\
    \ 0, $k);\n    sort($result);\n    for ($i = $k; $i < $count; $i++) {\n      \
    \  $n = $arr[$i];\n        if ($n > $result[0]) {\n            $result[0] = $n;\n\
    \            sort($result);\n        }\n    }\n    return $result;\n}\n", "  \
    \  $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = -INF;\n  \
    \      $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n     \
    \       if ($arr[$j] > $max) {\n                $max = $arr[$j];\n           \
    \     $maxIndex = $j;\n            }\n        }\n        $result[] = $max;\n \
    \       unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n     \
    \   $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n        \
    \    if ($arr[$j] > $max) {\n                $max = $arr[$j];\n              \
    \  $maxIndex = $j;\n            }\n        }\n        $result[] = $max;\n    \
    \    unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n", "    $max = array();\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max[] = max($arr);\n        $arr\
    \ = array_diff($arr, array(max($arr)));\n    }\n    return $max;\n}\n", "    $result\
    \ = [];\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n      \
    \  if (count($result) < $k) {\n            array_push($result, $arr[$i]);\n  \
    \      } else {\n            $min = min($result);\n            if ($min < $arr[$i])\
    \ {\n                $index = array_search($min, $result);\n                $result[$index]\
    \ = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n\
    $arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = [-3, 2, 1,\
    \ 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result = array();\n\
    \    $len = count($arr);\n    if ($k > $len) {\n        return $result;\n    }\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $result[$i] = $arr[$i];\n    }\n \
    \   for ($i = $k; $i < $len; $i++) {\n        $min = $result[0];\n        $minIndex\
    \ = 0;\n        for ($j = 1; $j < $k; $j++) {\n            if ($result[$j] < $min)\
    \ {\n                $min = $result[$j];\n                $minIndex = $j;\n  \
    \          }\n        }\n        if ($arr[$i] > $min) {\n            $result[$minIndex]\
    \ = $arr[$i];\n        }\n    }\n    return $result;\n}\n\n$arr = array(-3, -4,\
    \ 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\necho \"\\n\"\
    ;\n\n$arr = array(4, -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    echo \"\\n\";\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\necho \"\\n\";", "    $result = array();\n    $count\
    \ = count($arr);\n    if ($count < $k) {\n        return $result;\n    }\n   \
    \ $result = array_slice($arr, 0, $k);\n    for ($i = $k; $i < $count; $i++) {\n\
    \        $result = insert($result, $arr[$i]);\n    }\n    return $result;\n}\n",
  "    $n = count($arr);\n    if ($k == 0) {\n        return array();\n    }\n   \
    \ if ($k == $n) {\n        return $arr;\n    }\n    $result = array();\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    for ($i\
    \ = $k; $i < $n; $i++) {\n        $max = max($result);\n        if ($arr[$i] >\
    \ $max) {\n            $index = array_search($max, $result);\n            $result[$index]\
    \ = $arr[$i];\n        }\n    }\n    return $result;\n}\n\n$arr = array(-3, -4,\
    \ 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr =\
    \ array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);",
  "    $result = [];\n    $arr = array_unique($arr);\n    rsort($arr);\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $i = 0;\n    while ($i < $k) {\n        $max\
    \ = -1000;\n        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $max_index = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        unset($arr[$max_index]);\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $i = 0;\n    while ($i < $k) {\n        $max\
    \ = -1001;\n        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $max_index = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        unset($arr[$max_index]);\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $count = count($arr);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        if ($i < $k) {\n            $result[] = $arr[$i];\n       \
    \ } else {\n            $min = min($result);\n            if ($arr[$i] > $min)\
    \ {\n                $result[array_search($min, $result)] = $arr[$i];\n      \
    \      }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n$arr\
    \ = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n\
    $k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k =\
    \ 1;\nprint_r(maximum($arr, $k));", "    $result = [];\n    for ($i = 0; $i <\
    \ $k; $i++) {\n        $max = $arr[0];\n        $maxIndex = 0;\n        for ($j\
    \ = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n       \
    \         $max = $arr[$j];\n                $maxIndex = $j;\n            }\n \
    \       }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n      \
    \  $arr = array_values($arr);\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $count = 0;\n    $i = 0;\n    while ($count < $k) {\n        $max\
    \ = $arr[$i];\n        $max_index = $i;\n        for ($j = $i; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $max_index = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        $i = $max_index + 1;\n        $count++;\n    }\n    return\
    \ $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n\
    $arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = [-3, 2, 1,\
    \ 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result = array();\n\
    \    $len = count($arr);\n    if ($k > $len) {\n        return $result;\n    }\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i];\n        $index =\
    \ $i;\n        for ($j = $i + 1; $j < $len; $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        $arr[$index] = $arr[$i];\n\
    \        $arr[$i] = $max;\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    $size = count($arr);\n    if ($size == 0) {\n        return $result;\n  \
    \  }\n    if ($k == 0) {\n        return $result;\n    }\n    if ($k >= $size)\
    \ {\n        return $arr;\n    }\n    $min = $arr[0];\n    $max = $arr[0];\n \
    \   for ($i = 0; $i < $size; $i++) {\n        if ($arr[$i] < $min) {\n       \
    \     $min = $arr[$i];\n        }\n        if ($arr[$i] > $max) {\n          \
    \  $max = $arr[$i];\n        }\n    }\n    $bucket = array();\n    for ($i = 0;\
    \ $i < $size; $i++) {\n        $bucket[$i] = array();\n    }\n    $range = $max\
    \ - $min;\n    for ($i = 0; $i < $size; $i++) {\n        $index = ($arr[$i] -\
    \ $min) * ($size - 1) / $range;\n        array_push($bucket[$index], $arr[$i]);\n\
    \    }\n    for ($i = 0; $i < $size; $i++) {\n        sort($bucket[$i]);\n   \
    \ }\n    for ($i = $size - 1; $i >= 0; $i--) {\n        for ($j = count($bucket[$i])\
    \ - 1; $j >= 0; $j--) {\n            array_push($result, $bucket[$i][$j]);\n \
    \           if (count($result) == $k) {\n                return $result;\n   \
    \         }\n        }\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    foreach ($arr as $value) {\n        if (count($result) < $k) {\n        \
    \    $result[] = $value;\n        } else {\n            $min = min($result);\n\
    \            if ($value > $min) {\n                $result[array_search($min,\
    \ $result)] = $value;\n            }\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n", "    $result = array();\n    if (count($arr) == 0)\
    \ {\n        return $result;\n    }\n    $result = array_slice($arr, 0, $k);\n\
    \    sort($result);\n    for ($i = $k; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ > $result[0]) {\n            $result[0] = $arr[$i];\n            sort($result);\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    $count =\
    \ count($arr);\n    if ($count == 0) {\n        return $result;\n    }\n    if\
    \ ($k == 0) {\n        return $result;\n    }\n    if ($k > $count) {\n      \
    \  return $arr;\n    }\n    $result = array_slice($arr, 0, $k);\n    sort($result);\n\
    \    for ($i = $k; $i < $count; $i++) {\n        if ($arr[$i] > $result[0]) {\n\
    \            $result[0] = $arr[$i];\n            sort($result);\n        }\n \
    \   }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\n\n$arr = [4, -4, 4];\n$k = 2;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result\
    \ = maximum($arr, $k);\nprint_r($result);", "    $result = [];\n    for ($i =\
    \ 0; $i < count($arr); $i++) {\n        if (count($result) < $k) {\n         \
    \   $result[] = $arr[$i];\n        } else {\n            $min = min($result);\n\
    \            if ($arr[$i] > $min) {\n                $result[array_search($min,\
    \ $result)] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result\
    \ = [];\n    $max = $arr[0];\n    $maxIndex = 0;\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $maxIndex = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n\
    \        $arr = array_values($arr);\n        $max = $arr[0];\n        $maxIndex\
    \ = 0;\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result\
    \ = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n     \
    \   $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n       \
    \     if ($arr[$j] > $max) {\n                $max = $arr[$j];\n             \
    \   $max_index = $j;\n            }\n        }\n        $result[] = $max;\n  \
    \      unset($arr[$max_index]);\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    $i = 0;\n    while ($i < $k) {\n        $max = -1000;\n    \
    \    $index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n          \
    \  if ($arr[$j] > $max) {\n                $max = $arr[$j];\n                $index\
    \ = $j;\n            }\n        }\n        $result[] = $max;\n        unset($arr[$index]);\n\
    \        $i++;\n    }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k\
    \ = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));", "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = $arr[0];\n        $max_index = 0;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $max_index = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        array_splice($arr, $max_index, 1);\n    }\n    return $result;\n\
    }\n", "    $max = array();\n    for ($i = 0; $i < count($arr); $i++) {\n     \
    \   if (count($max) < $k) {\n            $max[] = $arr[$i];\n        } else {\n\
    \            $max = array_slice($max, 0, $k);\n            $max[] = $arr[$i];\n\
    \            $max = array_unique($max);\n            sort($max);\n        }\n\
    \    }\n    return array_slice($max, 0, $k);\n}\n", "    $result = [];\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $maxIndex = -1;\n\
    \        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max)\
    \ {\n                $max = $arr[$j];\n                $maxIndex = $j;\n     \
    \       }\n        }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    $size = count($arr);\n\
    \    if ($size == 0) {\n        return $result;\n    }\n    if ($k == 0) {\n \
    \       return $result;\n    }\n    if ($k > $size) {\n        return $result;\n\
    \    }\n    $result = array_slice($arr, 0, $k);\n    sort($result);\n    for ($i\
    \ = $k; $i < $size; $i++) {\n        if ($arr[$i] > $result[0]) {\n          \
    \  $result[0] = $arr[$i];\n            sort($result);\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = array();\n    $count = 0;\n    for ($i = 0; $i\
    \ < count($arr); $i++) {\n        if ($count < $k) {\n            $result[] =\
    \ $arr[$i];\n            $count++;\n        } else {\n            $min = min($result);\n\
    \            if ($arr[$i] > $min) {\n                $index = array_search($min,\
    \ $result);\n                $result[$index] = $arr[$i];\n            }\n    \
    \    }\n    }\n    sort($result);\n    return $result;\n}\n\n$arr = array(-3,\
    \ -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k\
    \ = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n\
    $k = 1;\nprint_r(maximum($arr, $k));", "    $result = [];\n    $count = count($arr);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        $result[] = $arr[$i];\n      \
    \  if (count($result) > $k) {\n            sort($result);\n            array_shift($result);\n\
    \        }\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));", "    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n       \
    \ $max = -1000;\n        $maxIndex = -1;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $maxIndex = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n",
  "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n \
    \       $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n    \
    \        if ($arr[$j] > $max) {\n                $max = $arr[$j];\n          \
    \      $maxIndex = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $index\
    \ = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        unset($arr[$index]);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $arr = array_unique($arr);\n\
    \    sort($arr);\n    $arr = array_reverse($arr);\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n", "    $max\
    \ = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max[] = max($arr);\n    \
    \    $arr = array_diff($arr, [max($arr)]);\n    }\n    return $max;\n}\n", " \
    \   $result = array();\n    $count = count($arr);\n    if ($count == 0) {\n  \
    \      return $result;\n    }\n    if ($count == 1) {\n        return $arr;\n\
    \    }\n    $max = $arr[0];\n    $min = $arr[0];\n    for ($i = 1; $i < $count;\
    \ $i++) {\n        if ($arr[$i] > $max) {\n            $max = $arr[$i];\n    \
    \    }\n        if ($arr[$i] < $min) {\n            $min = $arr[$i];\n       \
    \ }\n    }\n    $bucket = array();\n    for ($i = 0; $i < $count; $i++) {\n  \
    \      $index = ($arr[$i] - $min) * ($count - 1) / ($max - $min);\n        $bucket[$index][]\
    \ = $arr[$i];\n    }\n    $index = $count - 1;\n    while ($k > 0) {\n       \
    \ if (isset($bucket[$index])) {\n            $result = array_merge($result, $bucket[$index]);\n\
    \            $k -= count($bucket[$index]);\n        }\n        $index--;\n   \
    \ }\n    return $result;\n}\n", "    $arr = array_unique($arr);\n    rsort($arr);\n\
    \    return array_slice($arr, 0, $k);\n}\n", "    $result = array();\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $max_index = -1;\n\
    \        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max)\
    \ {\n                $max = $arr[$j];\n                $max_index = $j;\n    \
    \        }\n        }\n        $result[] = $max;\n        unset($arr[$max_index]);\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    if ($k > count($arr))\
    \ {\n        return $result;\n    }\n    $result = array_slice($arr, 0, $k);\n\
    \    sort($result);\n    for ($i = $k; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ > $result[0]) {\n            $result[0] = $arr[$i];\n            sort($result);\n\
    \        }\n    }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\n\
    print_r(maximum($arr, $k));\necho \"\\n\";\n\n$arr = array(4, -4, 4);\n$k = 2;\n\
    print_r(maximum($arr, $k));\necho \"\\n\";\n\n$arr = array(-3, 2, 1, 2, -1, -2,\
    \ 1);\n$k = 1;\nprint_r(maximum($arr, $k));\necho \"\\n\";", "    $result = [];\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $index = -1;\n\
    \        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max)\
    \ {\n                $max = $arr[$j];\n                $index = $j;\n        \
    \    }\n        }\n        $result[] = $max;\n        unset($arr[$index]);\n \
    \   }\n    return $result;\n}\n", "    $result = array();\n    if ($k == 0) {\n\
    \        return $result;\n    }\n    $len = count($arr);\n    if ($k >= $len)\
    \ {\n        return $arr;\n    }\n    $result = array_slice($arr, 0, $k);\n  \
    \  sort($result);\n    for ($i = $k; $i < $len; $i++) {\n        if ($arr[$i]\
    \ > $result[0]) {\n            $result[0] = $arr[$i];\n            sort($result);\n\
    \        }\n    }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\n\
    echo json_encode(maximum($arr, $k)) . PHP_EOL;\n\n$arr = array(4, -4, 4);\n$k\
    \ = 2;\necho json_encode(maximum($arr, $k)) . PHP_EOL;\n\n$arr = array(-3, 2,\
    \ 1, 2, -1, -2, 1);\n$k = 1;\necho json_encode(maximum($arr, $k)) . PHP_EOL;",
  "    $result = [];\n    $count = count($arr);\n    if ($count === 0) {\n       \
    \ return $result;\n    }\n    if ($k === 0) {\n        return $result;\n    }\n\
    \    if ($k >= $count) {\n        return $arr;\n    }\n    $max = $arr[0];\n \
    \   $maxIndex = 0;\n    for ($i = 1; $i < $count; $i++) {\n        if ($arr[$i]\
    \ > $max) {\n            $max = $arr[$i];\n            $maxIndex = $i;\n     \
    \   }\n    }\n    $result[] = $max;\n    $result = array_merge($result, maximum(array_slice($arr,\
    \ 0, $maxIndex), $k - 1));\n    $result = array_merge($result, maximum(array_slice($arr,\
    \ $maxIndex + 1), $k - 1));\n    return $result;\n}\n", "    $result = array();\n\
    \    for ($i = 0; $i < count($arr); $i++) {\n        if (count($result) < $k)\
    \ {\n            $result[] = $arr[$i];\n        } else {\n            $min = min($result);\n\
    \            if ($arr[$i] > $min) {\n                $result[array_search($min,\
    \ $result)] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = array();\n    $len = count($arr);\n\
    \    if ($k == 0) {\n        return $result;\n    }\n    if ($k == $len) {\n \
    \       return $arr;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $max =\
    \ $arr[$i];\n        $maxIndex = $i;\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $maxIndex = $j;\n            }\n        }\n        $arr[$maxIndex]\
    \ = $arr[$i];\n        $arr[$i] = $max;\n        $result[] = $max;\n    }\n  \
    \  return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $count = count($arr);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = $arr[$i];\n        if (count($result) > $k) {\n\
    \            sort($result);\n            array_shift($result);\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n", "    $result = array();\n\
    \    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $result[]\
    \ = $arr[$i];\n        if (count($result) > $k) {\n            sort($result);\n\
    \            array_shift($result);\n        }\n    }\n    sort($result);\n   \
    \ return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", " \
    \   $result = array();\n    $count = count($arr);\n    if ($count == 0) {\n  \
    \      return $result;\n    }\n    if ($count == 1) {\n        return $arr;\n\
    \    }\n    if ($k == 0) {\n        return $result;\n    }\n    if ($k == 1) {\n\
    \        $max = $arr[0];\n        for ($i = 1; $i < $count; $i++) {\n        \
    \    if ($arr[$i] > $max) {\n                $max = $arr[$i];\n            }\n\
    \        }\n        $result[] = $max;\n        return $result;\n    }\n    if\
    \ ($k >= $count) {\n        return $arr;\n    }\n    $result = array_slice($arr,\
    \ 0, $k);\n    $min = min($result);\n    for ($i = $k; $i < $count; $i++) {\n\
    \        if ($arr[$i] > $min) {\n            $result[array_search($min, $result)]\
    \ = $arr[$i];\n            $min = min($result);\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = [];\n    $length = count($arr);\n \
    \   if ($k > $length) {\n        return $result;\n    }\n    for ($i = 0; $i <\
    \ $k; $i++) {\n        $max = $arr[$i];\n        $maxIndex = $i;\n        for\
    \ ($j = $i + 1; $j < $length; $j++) {\n            if ($arr[$j] > $max) {\n  \
    \              $max = $arr[$j];\n                $maxIndex = $j;\n           \
    \ }\n        }\n        $temp = $arr[$i];\n        $arr[$i] = $max;\n        $arr[$maxIndex]\
    \ = $temp;\n        $result[] = $max;\n    }\n    return $result;\n}\n\n$arr =\
    \ [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n$k\
    \ = 2;\nprint_r(maximum($arr, $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k =\
    \ 1;\nprint_r(maximum($arr, $k));", "    $result = array();\n    $i = 0;\n   \
    \ $j = 0;\n    $n = count($arr);\n    while ($i < $k) {\n        $max = $arr[$j];\n\
    \        $index = $j;\n        for ($j; $j < $n; $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $index = $j;\n\
    \            }\n        }\n        $result[$i] = $max;\n        $i++;\n      \
    \  $j = $index + 1;\n    }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n\
    $k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));", "    $result = array();\n    $i = 0;\n    while ($i < $k) {\n      \
    \  $max = -1000;\n        $max_index = -1;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $max_index = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        unset($arr[$max_index]);\n        $i++;\n    }\n    return\
    \ $result;\n}\n", "    $max = array();\n    for ($i = 0; $i < $k; $i++) {\n  \
    \      $max[] = $arr[$i];\n    }\n    for ($i = $k; $i < count($arr); $i++) {\n\
    \        for ($j = 0; $j < $k; $j++) {\n            if ($arr[$i] > $max[$j]) {\n\
    \                array_splice($max, $j, 0, $arr[$i]);\n                array_pop($max);\n\
    \                break;\n            }\n        }\n    }\n    return $max;\n}\n",
  "    $result = array();\n    $count = count($arr);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $result[] = $arr[$i];\n        if (count($result) > $k) {\n\
    \            sort($result);\n            array_shift($result);\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $maxIndex = -1;\n\
    \        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max)\
    \ {\n                $max = $arr[$j];\n                $maxIndex = $j;\n     \
    \       }\n        }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n\
    \    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\necho implode(\"\
    , \", maximum($arr, $k));\necho \"\\n\";\n\n$arr = [4, -4, 4];\n$k = 2;\necho\
    \ implode(\", \", maximum($arr, $k));\necho \"\\n\";\n\n$arr = [-3, 2, 1, 2, -1,\
    \ -2, 1];\n$k = 1;\necho implode(\", \", maximum($arr, $k));\necho \"\\n\";",
  "    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n\
    \        $index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n      \
    \      if ($arr[$j] > $max) {\n                $max = $arr[$j];\n            \
    \    $index = $j;\n            }\n        }\n        $result[] = $max;\n     \
    \   unset($arr[$index]);\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    $count = count($arr);\n    if ($count == 0) {\n        return $result;\n\
    \    }\n    if ($count <= $k) {\n        sort($arr);\n        return $arr;\n \
    \   }\n    $result = array_slice($arr, 0, $k);\n    sort($result);\n    for ($i\
    \ = $k; $i < $count; $i++) {\n        if ($arr[$i] > $result[0]) {\n         \
    \   $result[0] = $arr[$i];\n            sort($result);\n        }\n    }\n   \
    \ return $result;\n}\n", "    $result = array();\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = -1000;\n        $max_index = -1;\n        for ($j = 0; $j\
    \ < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n               \
    \ $max = $arr[$j];\n                $max_index = $j;\n            }\n        }\n\
    \        $result[] = $max;\n        unset($arr[$max_index]);\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n    \
    \    $max = $arr[0];\n        $index = 0;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$index]);\n        $arr = array_values($arr);\n    }\n   \
    \ return $result;\n}\n", "    $result = [];\n    foreach ($arr as $value) {\n\
    \        if (count($result) < $k) {\n            $result[] = $value;\n       \
    \ } else {\n            $min = min($result);\n            if ($value > $min) {\n\
    \                $result[array_search($min, $result)] = $value;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$arr = [-3, -4,\
    \ 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));",
  "    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n \
    \       $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n    \
    \        if ($arr[$j] > $max) {\n                $max = $arr[$j];\n          \
    \      $maxIndex = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    $max = 0;\n    $maxIndex = 0;\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i];\n        $maxIndex = $i;\n        for ($j = $i;\
    \ $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n            \
    \    $max = $arr[$j];\n                $maxIndex = $j;\n            }\n      \
    \  }\n        $result[] = $max;\n        $temp = $arr[$i];\n        $arr[$i] =\
    \ $max;\n        $arr[$maxIndex] = $temp;\n    }\n    return $result;\n}\n\n$arr\
    \ = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2, 1, 2, -1,\
    \ -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result = [];\n    $size\
    \ = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        $result[] = $arr[$i];\n\
    \        $result = sort($result);\n        if (count($result) > $k) {\n      \
    \      array_shift($result);\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = array();\n    foreach ($arr as $num) {\n        if (count($result)\
    \ < $k) {\n            $result[] = $num;\n        } else {\n            $min =\
    \ min($result);\n            if ($num > $min) {\n                $index = array_search($min,\
    \ $result);\n                $result[$index] = $num;\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n  \
    \  $i = 0;\n    while ($i < $k) {\n        $max = max($arr);\n        $result[]\
    \ = $max;\n        $key = array_search($max, $arr);\n        unset($arr[$key]);\n\
    \        $i++;\n    }\n    return $result;\n}\n", "    $result = [];\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $max = -1000;\n        $maxIndex = -1;\n\
    \        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max)\
    \ {\n                $max = $arr[$j];\n                $maxIndex = $j;\n     \
    \       }\n        }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $max = $arr[0];\n        $maxIndex = 0;\n        for ($j =\
    \ 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n         \
    \       $max = $arr[$j];\n                $maxIndex = $j;\n            }\n   \
    \     }\n        $result[] = $max;\n        array_splice($arr, $maxIndex, 1);\n\
    \    }\n    return $result;\n}\n", "    $n = count($arr);\n    if ($k == $n) {\n\
    \        return $arr;\n    }\n    $res = array();\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = -1000;\n        $index = -1;\n        for ($j = 0; $j < $n;\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $index = $j;\n            }\n        }\n        array_push($res,\
    \ $max);\n        $arr[$index] = -1000;\n    }\n    return $res;\n}\n", "    $result\
    \ = [];\n    for ($i = 0; $i < count($arr); $i++) {\n        if (count($result)\
    \ < $k) {\n            $result[] = $arr[$i];\n        } else {\n            $min\
    \ = min($result);\n            if ($arr[$i] > $min) {\n                $result[array_search($min,\
    \ $result)] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = array();\n    $count = count($arr);\n\
    \    if ($count == 0) {\n        return $result;\n    }\n    if ($count == 1)\
    \ {\n        return $arr;\n    }\n    if ($k == 0) {\n        return $result;\n\
    \    }\n    if ($k == 1) {\n        return array(max($arr));\n    }\n    $result\
    \ = array_slice($arr, 0, $k);\n    sort($result);\n    for ($i = $k; $i < $count;\
    \ $i++) {\n        if ($arr[$i] > $result[0]) {\n            $result[0] = $arr[$i];\n\
    \            sort($result);\n        }\n    }\n    return $result;\n}\n", "  \
    \  $len = count($arr);\n    if ($len == 0) {\n        return array();\n    }\n\
    \    if ($k == 0) {\n        return array();\n    }\n    if ($k > $len) {\n  \
    \      return $arr;\n    }\n    $res = array();\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $res[] = $arr[$i];\n    }\n    $res = heapSort($res);\n    for ($i\
    \ = $k; $i < $len; $i++) {\n        if ($arr[$i] > $res[0]) {\n            $res[0]\
    \ = $arr[$i];\n            $res = heapSort($res);\n        }\n    }\n    return\
    \ $res;\n}\n", "    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n  \
    \      $max = -1000;\n        $index = -1;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$index]);\n    }\n    return $result;\n}\n\n$arr = array(-3,\
    \ -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k\
    \ = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n\
    $k = 1;\nprint_r(maximum($arr, $k));", "    $result = [];\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $max = -1000;\n        $maxIndex = -1;\n        for ($j\
    \ = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n       \
    \         $max = $arr[$j];\n                $maxIndex = $j;\n            }\n \
    \       }\n        array_push($result, $max);\n        array_splice($arr, $maxIndex,\
    \ 1);\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result\
    \ = array();\n    $count = count($arr);\n    for ($i = 0; $i < $count; $i++) {\n\
    \        $result[] = $arr[$i];\n        $result = sort_array($result);\n     \
    \   if (count($result) > $k) {\n            array_shift($result);\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    $count = count($arr);\n\
    \    if ($count < $k) {\n        return $result;\n    }\n    $min = min($arr);\n\
    \    $max = max($arr);\n    $bucket = array_fill($min, $max - $min + 1, 0);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        $bucket[$arr[$i]]++;\n    }\n\
    \    for ($i = $max; $i >= $min; $i--) {\n        if ($bucket[$i] > 0) {\n   \
    \         $result[] = $i;\n            $k--;\n            if ($k == 0) {\n   \
    \             break;\n            }\n        }\n    }\n    return $result;\n}",
  "    $result = array();\n    $count = count($arr);\n    if ($count < $k) {\n   \
    \     return $result;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $result[$i]\
    \ = $arr[$i];\n    }\n    for ($i = $k; $i < $count; $i++) {\n        $max = $result[0];\n\
    \        $maxIndex = 0;\n        for ($j = 1; $j < $k; $j++) {\n            if\
    \ ($result[$j] > $max) {\n                $max = $result[$j];\n              \
    \  $maxIndex = $j;\n            }\n        }\n        if ($arr[$i] < $max) {\n\
    \            $result[$maxIndex] = $arr[$i];\n        }\n    }\n    return $result;\n\
    }\n\n$arr = array(-3, -4, 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = array(4, -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\n\
    print_r($result);", "    $result = array();\n    $len = count($arr);\n    if ($k\
    \ > $len) {\n        return $result;\n    }\n    $result = $arr;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n      \
    \      if ($result[$i] < $result[$j]) {\n                $temp = $result[$i];\n\
    \                $result[$i] = $result[$j];\n                $result[$j] = $temp;\n\
    \            }\n        }\n    }\n    return array_slice($result, 0, $k);\n}\n\
    \n$arr = array(-3, -4, 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = array(4, -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\n\
    print_r($result);", "    $result = [];\n    $length = count($arr);\n    if ($k\
    \ > $length) {\n        return $result;\n    }\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $max = $arr[$i];\n        $maxIndex = $i;\n        for ($j = $i +\
    \ 1; $j < $length; $j++) {\n            if ($arr[$j] > $max) {\n             \
    \   $max = $arr[$j];\n                $maxIndex = $j;\n            }\n       \
    \ }\n        $temp = $arr[$i];\n        $arr[$i] = $max;\n        $arr[$maxIndex]\
    \ = $temp;\n        $result[] = $max;\n    }\n    return $result;\n}\n", "   \
    \ $result = array();\n    $length = count($arr);\n    if ($k > $length) {\n  \
    \      return $result;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = $arr[$i];\n        $maxIndex = $i;\n        for ($j = $i + 1; $j < $length;\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $maxIndex = $j;\n            }\n        }\n        $temp = $arr[$i];\n\
    \        $arr[$i] = $max;\n        $arr[$maxIndex] = $temp;\n        $result[]\
    \ = $max;\n    }\n    return $result;\n}\n", "    $result = [];\n    $count =\
    \ count($arr);\n    if ($count == 0) {\n        return $result;\n    }\n    if\
    \ ($k == 0) {\n        return $result;\n    }\n    if ($k >= $count) {\n     \
    \   return $arr;\n    }\n    $result = array_slice($arr, 0, $k);\n    sort($result);\n\
    \    for ($i = $k; $i < $count; $i++) {\n        if ($arr[$i] > $result[0]) {\n\
    \            $result[0] = $arr[$i];\n            sort($result);\n        }\n \
    \   }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\n\n$arr = [4, -4, 4];\n$k = 2;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result\
    \ = maximum($arr, $k);\nprint_r($result);", "    $result = [];\n    $count = count($arr);\n\
    \    if ($count < $k) {\n        return $result;\n    }\n    $result = array_slice($arr,\
    \ 0, $k);\n    for ($i = $k; $i < $count; $i++) {\n        $result = insert($result,\
    \ $arr[$i]);\n    }\n    return $result;\n}\n", "    $result = [];\n    $arr =\
    \ array_unique($arr);\n    sort($arr);\n    $arr = array_reverse($arr);\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $i = 0;\n    while ($i < $k) {\n   \
    \     $max = -1001;\n        $max_index = -1;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $max_index = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        unset($arr[$max_index]);\n        $i++;\n    }\n    return\
    \ $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n\
    $arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = [-3, 2, 1,\
    \ 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result = array();\n\
    \    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[0];\n        $max_index\
    \ = 0;\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $max_index = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        unset($arr[$max_index]);\n\
    \        $arr = array_values($arr);\n    }\n    return $result;\n}\n\n$arr = array(-3,\
    \ -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k\
    \ = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n\
    $k = 1;\nprint_r(maximum($arr, $k));", "    $result = array();\n    $max = max($arr);\n\
    \    $min = min($arr);\n    $max_count = 0;\n    $min_count = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == $max) {\n          \
    \  $max_count++;\n        }\n        if ($arr[$i] == $min) {\n            $min_count++;\n\
    \        }\n    }\n    if ($k <= $max_count) {\n        for ($i = 0; $i < $k;\
    \ $i++) {\n            $result[] = $max;\n        }\n    } else {\n        for\
    \ ($i = 0; $i < $max_count; $i++) {\n            $result[] = $max;\n        }\n\
    \        for ($i = 0; $i < $k - $max_count; $i++) {\n            $result[] = $min;\n\
    \        }\n    }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\n\
    print_r(maximum($arr, $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));", "    $result = [];\n    $count = count($arr);\n    if ($count == 0)\
    \ {\n        return $result;\n    }\n    $i = 0;\n    while ($i < $k) {\n    \
    \    $max = $arr[$i];\n        $index = $i;\n        for ($j = $i; $j < $count;\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        $arr[$index] = $arr[$i];\n        $arr[$i] = $max;\n        $i++;\n \
    \   }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\n\n$arr = [4, -4, 4];\n$k = 2;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result\
    \ = maximum($arr, $k);\nprint_r($result);", "    $result = array();\n    $size\
    \ = count($arr);\n    for ($i = 0; $i < $size; $i++) {\n        if (count($result)\
    \ < $k) {\n            $result[] = $arr[$i];\n        } else {\n            $min\
    \ = min($result);\n            if ($arr[$i] > $min) {\n                $result[array_search($min,\
    \ $result)] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\necho \"\\n\";\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr,\
    \ $k));\necho \"\\n\";\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr,\
    \ $k));\necho \"\\n\";", "    $result = array();\n    $i = 0;\n    while ($i <\
    \ $k) {\n        $max = -1000;\n        $index = -1;\n        for ($j = 0; $j\
    \ < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n               \
    \ $max = $arr[$j];\n                $index = $j;\n            }\n        }\n \
    \       $result[] = $max;\n        unset($arr[$index]);\n        $i++;\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $count = count($arr);\n  \
    \  if ($count == 0) {\n        return $result;\n    }\n    if ($k == 0) {\n  \
    \      return $result;\n    }\n    if ($k > $count) {\n        return $arr;\n\
    \    }\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[$i];\n        $index\
    \ = $i;\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $index = $j;\n\
    \            }\n        }\n        $temp = $arr[$i];\n        $arr[$i] = $arr[$index];\n\
    \        $arr[$index] = $temp;\n        $result[] = $arr[$i];\n    }\n    return\
    \ $result;\n}\n", "    $result = array();\n    $max = 0;\n    $max_index = 0;\n\
    \    $count = 0;\n    while ($count < $k) {\n        $max = $arr[0];\n       \
    \ $max_index = 0;\n        for ($i = 0; $i < count($arr); $i++) {\n          \
    \  if ($arr[$i] > $max) {\n                $max = $arr[$i];\n                $max_index\
    \ = $i;\n            }\n        }\n        array_push($result, $max);\n      \
    \  unset($arr[$max_index]);\n        $arr = array_values($arr);\n        $count++;\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    for ($i = 0; $i\
    \ < $k; $i++) {\n        $max = -1001;\n        $max_index = -1;\n        for\
    \ ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n   \
    \             $max = $arr[$j];\n                $max_index = $j;\n           \
    \ }\n        }\n        $result[] = $max;\n        unset($arr[$max_index]);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $arr = array_unique($arr);\n\
    \    sort($arr);\n    $arr = array_reverse($arr);\n    for ($i = 0; $i < $k; $i++)\
    \ {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $arr = array_unique($arr);\n    $arr = array_values($arr);\n    $len\
    \ = count($arr);\n    if ($k > $len) {\n        return $arr;\n    }\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        $max = $arr[0];\n        $maxIndex = 0;\n   \
    \     for ($j = 1; $j < $len - $i; $j++) {\n            if ($arr[$j] > $max) {\n\
    \                $max = $arr[$j];\n                $maxIndex = $j;\n         \
    \   }\n        }\n        $result[] = $max;\n        array_splice($arr, $maxIndex,\
    \ 1);\n    }\n    return $result;\n}\n", "    $result = array();\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        $max = -1000;\n        $maxIndex = -1;\n    \
    \    for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j] > $max)\
    \ {\n                $max = $arr[$j];\n                $maxIndex = $j;\n     \
    \       }\n        }\n        $result[] = $max;\n        unset($arr[$maxIndex]);\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $count = count($arr);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        if (count($result) < $k) {\n \
    \           $result[] = $arr[$i];\n        } else {\n            $min = min($result);\n\
    \            if ($arr[$i] > $min) {\n                $result[array_search($min,\
    \ $result)] = $arr[$i];\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = [];\n    $count = count($arr);\n  \
    \  if ($count < $k) {\n        return $result;\n    }\n    $result = array_slice($arr,\
    \ 0, $k);\n    sort($result);\n    for ($i = $k; $i < $count; $i++) {\n      \
    \  $current = $arr[$i];\n        $min = $result[0];\n        if ($current > $min)\
    \ {\n            $result[0] = $current;\n            sort($result);\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    for ($i = 0; $i < $k;\
    \ $i++) {\n        $max = $arr[0];\n        $index = 0;\n        for ($j = 0;\
    \ $j < count($arr); $j++) {\n            if ($arr[$j] > $max) {\n            \
    \    $max = $arr[$j];\n                $index = $j;\n            }\n        }\n\
    \        $result[] = $max;\n        unset($arr[$index]);\n        $arr = array_values($arr);\n\
    \    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));", "    $result = array();\n    $i = 0;\n    while ($i < $k) {\n      \
    \  $max = -1000;\n        $maxIndex = -1;\n        for ($j = 0; $j < count($arr);\
    \ $j++) {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n\
    \                $maxIndex = $j;\n            }\n        }\n        $result[]\
    \ = $max;\n        unset($arr[$maxIndex]);\n        $i++;\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $count = count($arr);\n    if ($count == 0)\
    \ {\n        return $result;\n    }\n    if ($count == 1) {\n        return $arr;\n\
    \    }\n    if ($k == 0) {\n        return $result;\n    }\n    if ($k == 1) {\n\
    \        $max = $arr[0];\n        for ($i = 1; $i < $count; $i++) {\n        \
    \    if ($arr[$i] > $max) {\n                $max = $arr[$i];\n            }\n\
    \        }\n        $result[] = $max;\n        return $result;\n    }\n    $result\
    \ = array_slice($arr, 0, $k);\n    sort($result);\n    for ($i = $k; $i < $count;\
    \ $i++) {\n        if ($arr[$i] > $result[0]) {\n            $result[0] = $arr[$i];\n\
    \            sort($result);\n        }\n    }\n    return $result;\n}\n", "  \
    \  $result = [];\n    $i = 0;\n    while ($i < $k) {\n        $max = $arr[0];\n\
    \        $max_index = 0;\n        for ($j = 0; $j < count($arr); $j++) {\n   \
    \         if ($arr[$j] > $max) {\n                $max = $arr[$j];\n         \
    \       $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$max_index]);\n        $arr = array_values($arr);\n      \
    \  $i++;\n    }\n    return $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = [4, -4, 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\nprint_r(maximum($arr, $k));", "    $result\
    \ = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max = $arr[0];\n        $maxIndex\
    \ = 0;\n        for ($j = 0; $j < count($arr); $j++) {\n            if ($arr[$j]\
    \ > $max) {\n                $max = $arr[$j];\n                $maxIndex = $j;\n\
    \            }\n        }\n        $result[] = $max;\n        array_splice($arr,\
    \ $maxIndex, 1);\n    }\n    return $result;\n}\n", "    $result = [];\n    $count\
    \ = count($arr);\n    for ($i = 0; $i < $count; $i++) {\n        $result[] = $arr[$i];\n\
    \        if (count($result) > $k) {\n            sort($result);\n            array_shift($result);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n", "    $result\
    \ = [];\n    $count = count($arr);\n    for ($i = 0; $i < $count; $i++) {\n  \
    \      if (count($result) < $k) {\n            $result[] = $arr[$i];\n       \
    \ } else {\n            $min = min($result);\n            if ($arr[$i] > $min)\
    \ {\n                $result[array_search($min, $result)] = $arr[$i];\n      \
    \      }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n$arr\
    \ = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n\
    $arr = [4, -4, 4];\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_159_eat
language: php
prompt: "<?php\n// You're a hungry rabbit, and you already have eaten a certain number\
  \ of carrots,\n// but now you need to eat more carrots to complete the day's meals.\n\
  // you should return an array of [ total number of eaten carrots after your meals,\n\
  // the number of carrots left after your meals ]\n// if there are not enough remaining\
  \ carrots, you will eat all remaining carrots, but will still be hungry.\n// Example:\n\
  // >>> eat(5, 6, 10)\n// array(11, 4)\n// >>> eat(4, 8, 9)\n// array(12, 1)\n//\
  \ >>> eat(1, 10, 10)\n// array(11, 0)\n// >>> eat(2, 11, 5)\n// array(7, 0)\n//\
  \ Variables:\n// @number : integer\n// the number of carrots that you have eaten.\n\
  // @need : integer\n// the number of carrots that you need to eat.\n// @remaining\
  \ : integer\n// the number of remaining carrots thet exist in stock\n// Constrain:\n\
  // * 0 <= number <= 1000\n// * 0 <= need <= 1000\n// * 0 <= remaining <= 1000\n\
  // Have fun :)\nfunction eat($number, $need, $remaining) {\n"
tests: "function candidate(...$args) {\n    return eat(...$args);\n}\n\nfunction test():\
  \ void {\n    if (candidate(5, 6, 10) !== array(11, 4)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 8, 9) !== array(12, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 10, 10) !== array(11, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 11, 5) !== array(7, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 5, 7) !== array(9, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 5, 1) !== array(5, 0)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["  $total = $number + $need;\n  $left = $remaining - $need;\n  if ($left\
    \ < 0) {\n    $total = $total + $left;\n    $left = 0;\n  }\n  return [$total,\
    \ $left];\n}\n", "  $total = $number + $need;\n  $remaining = $remaining - $need;\n\
    \  if ($remaining < 0) {\n    $remaining = 0;\n  }\n  return [$total, $remaining];\n\
    }\n", "  $eaten = $number + $need;\n  $remaining = $remaining - $need;\n  if ($remaining\
    \ < 0) {\n    $remaining = 0;\n  }\n  return [$eaten, $remaining];\n}\n", "  $total\
    \ = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining +\
    \ $number;\n    $remaining = 0;\n  } else {\n    $remaining = $remaining - $total;\n\
    \  }\n  return [$total, $remaining];\n}", "  $total = $number + $need;\n  $left\
    \ = $remaining - $need;\n  if ($left < 0) {\n    $left = 0;\n  }\n  return [$total,\
    \ $left];\n}\n\necho json_encode(eat(5, 6, 10));\necho json_encode(eat(4, 8, 9));\n\
    echo json_encode(eat(1, 10, 10));\necho json_encode(eat(2, 11, 5));", "  $total\
    \ = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining +\
    \ $number;\n    $remaining = 0;\n  } else {\n    $remaining = $remaining - $total;\n\
    \  }\n  return [$total, $remaining];\n}", "  $total = $number + $need;\n  if ($total\
    \ > $remaining) {\n    $total = $remaining + $number;\n    $remaining = 0;\n \
    \ } else {\n    $remaining = $remaining - $total;\n  }\n  return [$total, $remaining];\n\
    }\n", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total =\
    \ $remaining + $number;\n    $remaining = 0;\n  } else {\n    $remaining = $remaining\
    \ - $total;\n  }\n  return [$total, $remaining];\n}\n", "  $total = $number +\
    \ $need;\n  if ($total > $remaining) {\n    $total = $remaining + $number;\n \
    \   $remaining = 0;\n  } else {\n    $remaining = $remaining - $total;\n  }\n\
    \  return [$total, $remaining];\n}", "  $total = $number + $need;\n  if ($total\
    \ > $remaining) {\n    $total = $remaining + $number;\n    $remaining = 0;\n \
    \ } else {\n    $remaining = $remaining - $total;\n  }\n  return [$total, $remaining];\n\
    }\n", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total =\
    \ $remaining + $number;\n    $remaining = 0;\n  } else {\n    $remaining = $remaining\
    \ - $total;\n  }\n  return [$total, $remaining];\n}\n", "  $total = $number +\
    \ $need;\n  if ($total > $remaining) {\n    $total = $remaining + $number;\n \
    \   $remaining = 0;\n  } else {\n    $remaining = $remaining - $total;\n  }\n\
    \  return [$total, $remaining];\n}", "  $eaten = $number + $need;\n  $remaining\
    \ = $remaining - $need;\n  if ($remaining < 0) {\n    $remaining = 0;\n  }\n \
    \ return [$eaten, $remaining];\n}\n", "  $total = $number + $need;\n  if ($total\
    \ > $remaining) {\n    $total = $remaining + $number;\n    $remaining = 0;\n \
    \ } else {\n    $remaining = $remaining - $total;\n  }\n  return [$total, $remaining];\n\
    }", "  $total = $number + $need;\n  if ($total > $remaining) {\n    $total = $remaining\
    \ + $number;\n    $remaining = 0;\n  } else {\n    $remaining = $remaining - $total;\n\
    \  }\n  return [$total, $remaining];\n}\n", "  $total = $number + $need;\n  if\
    \ ($total > $remaining) {\n    $total = $remaining + $number;\n    $remaining\
    \ = 0;\n  } else {\n    $remaining = $remaining - $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "  $total = $number + $need;\n  $left = $remaining - $need;\n\
    \  if ($total > $remaining) {\n    $total = $remaining;\n    $left = 0;\n  }\n\
    \  return [$total, $left];\n}\n", "  $total = $number + $need;\n  if ($total >\
    \ $remaining) {\n    $total = $remaining + $number;\n    $remaining = 0;\n  }\
    \ else {\n    $remaining = $remaining - $total;\n  }\n  return [$total, $remaining];\n\
    }\n", "  $total = $number + $need;\n  $left = $remaining - $need;\n  if ($left\
    \ < 0) {\n    $left = 0;\n  }\n  return [$total, $left];\n}\n", "  $eaten = $number\
    \ + $need;\n  $remaining = $remaining - $need;\n  if ($remaining < 0) {\n    $remaining\
    \ = 0;\n  }\n  return [$eaten, $remaining];\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

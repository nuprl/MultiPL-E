name: HumanEval_48_is_palindrome
language: php
prompt: "<?php\n// Checks if given string is a palindrome\n// >>> is_palindrome(\"\
  \")\n// true\n// >>> is_palindrome(\"aba\")\n// true\n// >>> is_palindrome(\"aaaaa\"\
  )\n// true\n// >>> is_palindrome(\"zbcd\")\n// false\nfunction is_palindrome($text)\
  \ {\n"
tests: "function candidate(...$args) {\n    return is_palindrome(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"aba\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"aaaaa\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"zbcd\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"xywyx\") !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"xywyz\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"xywzx\") !== false) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/',\
    \ '', $text);\n    return $text == strrev($text);\n}\n", "  $text = strtolower($text);\n\
    \  $text = preg_replace('/[^a-z]/', '', $text);\n  $text_len = strlen($text);\n\
    \  for ($i = 0; $i < $text_len / 2; $i++) {\n    if ($text[$i] != $text[$text_len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n", "    return\
    \ $text == strrev($text);\n}\n", "    $text = strtolower($text);\n    $text =\
    \ preg_replace('/[^a-z]/', '', $text);\n    $text_len = strlen($text);\n    $text_half\
    \ = floor($text_len / 2);\n    $text_first_half = substr($text, 0, $text_half);\n\
    \    $text_second_half = substr($text, $text_half + ($text_len % 2));\n    $text_second_half\
    \ = strrev($text_second_half);\n    return $text_first_half == $text_second_half;\n\
    }\n", "    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    $text_len = strlen($text);\n    for ($i = 0; $i < $text_len / 2;\
    \ $i++) {\n        if ($text[$i] != $text[$text_len - $i - 1]) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\n", "    $text = strtolower($text);\n\
    \    $text = preg_replace('/[^a-z]/', '', $text);\n    $text_len = strlen($text);\n\
    \    $half_len = floor($text_len / 2);\n    for ($i = 0; $i < $half_len; $i++)\
    \ {\n        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "\t$text = strtolower($text);\n\
    \t$text = str_replace(\" \", \"\", $text);\n\t$text = str_replace(\".\", \"\"\
    , $text);\n\t$text = str_replace(\",\", \"\", $text);\n\t$text = str_replace(\"\
    !\", \"\", $text);\n\t$text = str_replace(\"?\", \"\", $text);\n\t$text = str_replace(\"\
    ;\", \"\", $text);\n\t$text = str_replace(\":\", \"\", $text);\n\t$text = str_replace(\"\
    -\", \"\", $text);\n\t$text = str_replace(\"_\", \"\", $text);\n\t$text = str_replace(\"\
    (\", \"\", $text);\n\t$text = str_replace(\")\", \"\", $text);\n\t$text = str_replace(\"\
    [\", \"\", $text);\n\t$text = str_replace(\"]\", \"\", $text);\n\t$text = str_replace(\"\
    {\", \"\", $text);\n\t$text = str_replace(\"}\", \"\", $text);\n\t$text = str_replace(\"\
    '\", \"\", $text);\n\t$text = str_replace(\"\\\"\", \"\", $text);\n\t$text = str_replace(\"\
    /\", \"\", $text);\n\t$text = str_replace(\"\\\\\", \"\", $text);\n\t$text = str_replace(\"\
    |\", \"\", $text);\n\t$text = str_replace(\"+\", \"\", $text);\n\t$text = str_replace(\"\
    =\", \"\", $text);\n\t$text = str_replace(\"*\", \"\", $text);\n\t$text = str_replace(\"\
    &\", \"\", $text);\n\t$text = str_replace(\"^\", \"\", $text);\n\t$text = str_replace(\"\
    %\", \"\", $text);\n\t$text = str_replace(\"$\", \"\", $text);\n\t$text = str_replace(\"\
    #\", \"\", $text);\n\t$text = str_replace(\"@\", \"\", $text);\n\t$text = str_replace(\"\
    ~\", \"\", $text);\n\t$text = str_replace(\"`\", \"\", $text);\n\t$text = str_replace",
  "    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n\
    \    $text_length = strlen($text);\n    $half_length = floor($text_length / 2);\n\
    \    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    $text_length = strlen($text);\n    for ($i = 0; $i < $text_length\
    \ / 2; $i++) {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n", "    $text\
    \ = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '', $text);\n   \
    \ $text_length = strlen($text);\n    for ($i = 0; $i < $text_length / 2; $i++)\
    \ {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    $text = strtolower($text);\n\
    \    $text = preg_replace('/[^a-z]/', '', $text);\n    $text_len = strlen($text);\n\
    \    $half_len = floor($text_len / 2);\n    for ($i = 0; $i < $half_len; $i++)\
    \ {\n        if ($text[$i] != $text[$text_len - $i - 1]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    $text = strtolower($text);\n\
    \    $text = preg_replace('/[^a-z]/', '', $text);\n    $text_length = strlen($text);\n\
    \    for ($i = 0; $i < $text_length / 2; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/', '',\
    \ $text);\n    return $text == strrev($text);\n}\n", "    $text = strtolower($text);\n\
    \    $text = preg_replace('/[^a-z]/', '', $text);\n    $text_length = strlen($text);\n\
    \    for ($i = 0; $i < $text_length / 2; $i++) {\n        if ($text[$i] != $text[$text_length\
    \ - $i - 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    $text = strtolower($text);\n    $text = str_replace(' ', '', $text);\n\
    \    $text = str_replace('.', '', $text);\n    $text = str_replace(',', '', $text);\n\
    \    $text = str_replace('!', '', $text);\n    $text = str_replace('?', '', $text);\n\
    \    $text = str_replace('-', '', $text);\n    $text = str_replace('_', '', $text);\n\
    \    $text = str_replace('(', '', $text);\n    $text = str_replace(')', '', $text);\n\
    \    $text = str_replace('[', '', $text);\n    $text = str_replace(']', '', $text);\n\
    \    $text = str_replace('{', '', $text);\n    $text = str_replace('}', '', $text);\n\
    \    $text = str_replace('\"', '', $text);\n    $text = str_replace(\"'\", '',\
    \ $text);\n    $text = str_replace(';', '', $text);\n    $text = str_replace(':',\
    \ '', $text);\n    $text = str_replace('/', '', $text);\n    $text = str_replace('\\\
    \\', '', $text);\n    $text = str_replace('|', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text =", "    $text = strtolower($text);\n    $text = preg_replace('/[^a-z]/',\
    \ '', $text);\n    $text_length = strlen($text);\n    $half_length = floor($text_length\
    \ / 2);\n    for ($i = 0; $i < $half_length; $i++) {\n        if ($text[$i] !=\
    \ $text[$text_length - $i - 1]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n", "    $text = strtolower($text);\n    $text = str_replace('\
    \ ', '', $text);\n    $text_len = strlen($text);\n    $half_len = floor($text_len\
    \ / 2);\n    $is_palindrome = true;\n    for ($i = 0; $i < $half_len; $i++) {\n\
    \        if ($text[$i] != $text[$text_len - $i - 1]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome;\n\
    }\n", "    $text = strtolower($text);\n    $text = str_replace(\" \", \"\", $text);\n\
    \    $text = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\",\
    \ \"\", $text);\n    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"\
    ?\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text =\
    \ str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n\
    \    $text = str_replace(\"_\", \"\", $text);\n    $text = str_replace(\";\",\
    \ \"\", $text);\n    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\"\
    (\", \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text =\
    \ str_replace(\"[\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n\
    \    $text = str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\",\
    \ \"\", $text);\n    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\
    \\\\\", \"\", $text);\n    $text = str_replace(\"+\", \"\", $text);\n    $text\
    \ = str_replace(\"=\", \"\", $text);\n    $text = str_replace(\"*\", \"\", $text);\n\
    \    $text = str_replace(\"&\", \"\", $text);\n    $text = str_replace(\"^\",\
    \ \"\", $text);\n    $text = str_replace(\"%\", \"\", $text);\n    $text = str_replace(\"\
    $\", \"\", $text);\n    $text = str_replace(\"#\", \"\", $text);\n    $text =\
    \ str_replace(\"@\", \"\", $text);\n    $text = str_replace(\"~\", \"\", $text);\n\
    \    $text = str_replace(\"`\", \"\", $text);\n    $text = str_replace(\"|\",\
    \ \"\", $text);\n    $text = str_replace", "    $text = strtolower($text);\n \
    \   $text = preg_replace('/[^a-z0-9]/', '', $text);\n    $text_length = strlen($text);\n\
    \    $text_half_length = floor($text_length / 2);\n    for ($i = 0; $i < $text_half_length;\
    \ $i++) {\n        if ($text[$i] != $text[$text_length - $i - 1]) {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n", "    $text = strtolower($text);\n\
    \    $text = str_replace(' ', '', $text);\n    $text = str_replace('.', '', $text);\n\
    \    $text = str_replace(',', '', $text);\n    $text = str_replace('!', '', $text);\n\
    \    $text = str_replace('?', '', $text);\n    $text = str_replace('-', '', $text);\n\
    \    $text = str_replace('_', '', $text);\n    $text = str_replace('(', '', $text);\n\
    \    $text = str_replace(')', '', $text);\n    $text = str_replace('[', '', $text);\n\
    \    $text = str_replace(']', '', $text);\n    $text = str_replace('{', '', $text);\n\
    \    $text = str_replace('}', '', $text);\n    $text = str_replace('/', '', $text);\n\
    \    $text = str_replace('\\\\', '', $text);\n    $text = str_replace('\"', '',\
    \ $text);\n    $text = str_replace(\"'\", '', $text);\n    $text = str_replace(';',\
    \ '', $text);\n    $text = str_replace(':', '', $text);\n    $text = str_replace('+',\
    \ '', $text);\n    $text = str_replace('=', '', $text);\n    $text = str_replace('*',\
    \ '', $text);\n    $text = str_replace('&', '', $text);\n    $text = str_replace('^',\
    \ '', $text);\n    $text = str_replace('%', '', $text);\n    $text = str_replace('$',\
    \ '', $text);\n    $text = str_replace('#', '', $text);\n    $text = str_replace('@',\
    \ '', $text);\n    $text = str_replace('~', '', $text);\n    $text = str_replace('`',\
    \ '', $text);\n    $text = str_replace('<', '', $text);\n    $text ="]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

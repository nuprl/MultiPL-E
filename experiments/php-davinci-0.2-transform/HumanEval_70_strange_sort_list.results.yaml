language: php
name: HumanEval_70_strange_sort_list
results:
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (empty($lst)) {\n        return $lst;\n  \
    \  }\n    sort($lst);\n    $res = array();\n    $i = 0;\n    $j = count($lst)\
    \ - 1;\n    while ($i <= $j) {\n        $res[] = $lst[$i];\n        $i++;\n  \
    \      if ($i <= $j) {\n            $res[] = $lst[$j];\n            $j--;\n  \
    \      }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5)) !==\
    \ array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5,\
    \ 5, 0, 2, 2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(111111))\
    \ !== array(111111)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfw3_b23y.php:43\n\
    Stack trace:\n#0 /tmp/tmpfw3_b23y.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpfw3_b23y.php\
    \ on line 43\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfw3_b23y.php:43\n\
    Stack trace:\n#0 /tmp/tmpfw3_b23y.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpfw3_b23y.php\
    \ on line 43\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    // Your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeazqymo0.php:21\n\
    Stack trace:\n#0 /tmp/tmpeazqymo0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeazqymo0.php\
    \ on line 21\n"
  timestamp: 1659730696
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  if (empty($lst)) {\n    return $lst;\n  }\n  sort($lst);\n\
    \  $result = array();\n  $i = 0;\n  $j = count($lst) - 1;\n  while ($i <= $j)\
    \ {\n    $result[] = $lst[$i];\n    if ($i != $j) {\n      $result[] = $lst[$j];\n\
    \    }\n    $i++;\n    $j--;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 3\n)\n\n\
    Array\n(\n    [0] => 5\n    [1] => 5\n    [2] => 5\n    [3] => 5\n    [4] => 5\n\
    \    [5] => 5\n    [6] => 5\n    [7] => 5\n)\n\n\nWarning: min(): Array must contain\
    \ at least one element in /tmp/tmpxy6ondvi.php on line 14\n\nWarning: max(): Array\
    \ must contain at least one element in /tmp/tmpxy6ondvi.php on line 15\nArray\n\
    (\n    [0] => \n    [1] => \n)\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpxy6ondvi.php:52\nStack trace:\n#0 /tmp/tmpxy6ondvi.php(62): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxy6ondvi.php on line 52\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $sorted_lst = array();\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $sorted_lst[] = $min;\n    $sorted_lst[] = $max;\n\
    \    $lst = array_diff($lst, array($min, $max));\n    while (count($lst) > 0)\
    \ {\n        $min = min($lst);\n        $max = max($lst);\n        $sorted_lst[]\
    \ = $min;\n        $sorted_lst[] = $max;\n        $lst = array_diff($lst, array($min,\
    \ $max));\n    }\n    return $sorted_lst;\n}\n\nfunction candidate(...$args) {\n\
    \    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1o248e1.php:35\n\
    Stack trace:\n#0 /tmp/tmpu1o248e1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpu1o248e1.php\
    \ on line 35\n"
  timestamp: 1659730696
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            unset($lst[array_search($min,\
    \ $lst)]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            unset($lst[array_search($max, $lst)]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 25


    Warning: min(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 21


    Warning: min(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 21


    Warning: max(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 25


    Warning: max(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 25


    Warning: min(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 15


    Warning: max(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 25


    Warning: max(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 25


    Warning: min(): Array must contain at least one element in /tmp/tmp5pa5sgjf.php
    on line 21

    '
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    $lst_count = count($lst);\n    if ($lst_count > 0) {\n        $result = array_merge($result,\
    \ strange_sort_list($lst));\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtx51jo0.php:36\n\
    Stack trace:\n#0 /tmp/tmpmtx51jo0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmtx51jo0.php\
    \ on line 36\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    if (count($lst) == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    if (count($lst) == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    if (count($lst) == 0) {\n        return $result;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_\n\
    function candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4,\
    \ 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmpmrqdvmxw.php on line 59

    '
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    $count = count($lst);\n    for ($i = 0; $i < $count; $i++) {\n        $min\
    \ = min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: min(): Array must contain at least one element in /tmp/tmpi9c1dxvm.php\
    \ on line 25\n\nWarning: max(): Array must contain at least one element in /tmp/tmpi9c1dxvm.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi9c1dxvm.php:43\n\
    Stack trace:\n#0 /tmp/tmpi9c1dxvm.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpi9c1dxvm.php\
    \ on line 43\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfw3_b23y.php:43\n\
    Stack trace:\n#0 /tmp/tmpfw3_b23y.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpfw3_b23y.php\
    \ on line 43\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    while(count($lst) > 0) {\n     \
    \   $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3g5g52v.php:35\n\
    Stack trace:\n#0 /tmp/tmpl3g5g52v.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl3g5g52v.php\
    \ on line 35\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp5s4j0ad5.php on line 19

    '
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    while (count($lst) > 0) {\n    \
    \    $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1i_to6_x.php:35\n\
    Stack trace:\n#0 /tmp/tmp1i_to6_x.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1i_to6_x.php\
    \ on line 35\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    while (count($lst) > 0) {\n    \
    \    $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return strange_sort_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
    \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
    \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1i_to6_x.php:35\n\
    Stack trace:\n#0 /tmp/tmp1i_to6_x.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1i_to6_x.php\
    \ on line 35\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index] = $max;\n\
    \    $lst[$max_index] = $min;\n    return $lst;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr63u406.php:30\n\
    Stack trace:\n#0 /tmp/tmpwr63u406.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwr63u406.php\
    \ on line 30\n"
  timestamp: 1659730696
- exit_code: 0
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    $min = min($lst);\n    $max = max($lst);\n  \
    \  $result = array();\n    $i = 0;\n    while (count($lst) > 0) {\n        if\
    \ ($i % 2 == 0) {\n            $result[] = $min;\n            $min_key = array_search($min,\
    \ $lst);\n            unset($lst[$min_key]);\n            $min = min($lst);\n\
    \        } else {\n            $result[] = $max;\n            $max_key = array_search($max,\
    \ $lst);\n            unset($lst[$max_key]);\n            $max = max($lst);\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return strange_sort_list(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6,\
    \ 8, 7)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 5, 5,\
    \ 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: max(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 22


    Warning: min(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 22


    Warning: max(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 13


    Warning: max(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 14


    Warning: max(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 27


    Warning: max(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 27


    Warning: min(): Array must contain at least one element in /tmp/tmpxq9l18fk.php
    on line 22

    '
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n    if (count($lst) == 0) {\n        return $lst;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $new_lst = array();\n\
    \    $new_lst[] = $min;\n    $new_lst[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    $lst = array_values($lst);\n    while (count($lst) > 0) {\n   \
    \     $min = min($lst);\n        $max = max($lst);\n        $new_lst[] = $min;\n\
    \        $new_lst[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \        $lst = array_values($lst);\n    }\n    return $new_lst;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqvsy34p.php:40\n\
    Stack trace:\n#0 /tmp/tmpwqvsy34p.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpwqvsy34p.php\
    \ on line 40\n"
  timestamp: 1659730696
- exit_code: 255
  program: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
    \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
    \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
    \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
    // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction\
    \ strange_sort_list($lst) {\n  $sorted = array();\n  $min = min($lst);\n  $max\
    \ = max($lst);\n  $sorted[] = $min;\n  $sorted[] = $max;\n  $lst = array_diff($lst,\
    \ array($min, $max));\n  while (count($lst) > 0) {\n    $min = min($lst);\n  \
    \  $max = max($lst);\n    $sorted[] = $min;\n    $sorted[] = $max;\n    $lst =\
    \ array_diff($lst, array($min, $max));\n  }\n  return $sorted;\n}\n\nfunction\
    \ candidate(...$args) {\n    return strange_sort_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7,\
    \ 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1)) !==\
    \ array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
    \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp398rpd62.php:35\n\
    Stack trace:\n#0 /tmp/tmp398rpd62.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp398rpd62.php\
    \ on line 35\n"
  timestamp: 1659730696

language: php
name: HumanEval_116_sort_array
results:
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $num) {\n    if ($num < 0) {\n      $zeros[] = $num;\n    } else {\n      $ones[]\
    \ = $num;\n    }\n  }\n  usort($ones, function($a, $b) {\n    $a_ones = substr_count(decbin($a),\
    \ '1');\n    $b_ones = substr_count(decbin($b), '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a - $b;\n    }\n    return $a_ones - $b_ones;\n  });\n  sort($zeros);\n\
    \  return array_merge($ones, $zeros);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2ce4hjg.php:40\n\
    Stack trace:\n#0 /tmp/tmpt2ce4hjg.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpt2ce4hjg.php\
    \ on line 40\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a_ones = substr_count($a[1], '1');\n        $b_ones = substr_count($b[1],\
    \ '1');\n        if ($a_ones == $b_ones) {\n            return $a[0] - $b[0];\n\
    \        }\n        return $a_ones - $b_ones;\n    });\n    return array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q_3kn5t.php:35\n\
    Stack trace:\n#0 /tmp/tmp1q_3kn5t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1q_3kn5t.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    $ones =\
    \ substr_count(decbin($num), '1');\n    return [$num, $ones];\n  }, $arr);\n \
    \ usort($arr, function($a, $b) {\n    if ($a[1] == $b[1]) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a[1] - $b[1];\n  });\n  return array_map(function($item)\
    \ {\n    return $item[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84jr72bv.php:34\n\
    Stack trace:\n#0 /tmp/tmp84jr72bv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp84jr72bv.php\
    \ on line 34\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $binary = decbin($value);\n    $count = substr_count($binary,\
    \ '1');\n    if ($count === 0) {\n      $zeros[] = $value;\n    } else {\n   \
    \   $ones[$count][] = $value;\n    }\n  }\n  ksort($ones);\n  $result = [];\n\
    \  foreach ($ones as $key => $value) {\n    sort($value);\n    $result = array_merge($result,\
    \ $value);\n  }\n  sort($zeros);\n  $result = array_merge($result, $zeros);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0111az2.php:41\n\
    Stack trace:\n#0 /tmp/tmpm0111az2.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpm0111az2.php\
    \ on line 41\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($i) {\n    return [$i,\
    \ decbin($i)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($i) {\n    return $i[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphm4zol7c.php:35\n\
    Stack trace:\n#0 /tmp/tmphm4zol7c.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphm4zol7c.php\
    \ on line 35\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfadk9mk2.php:35\n\
    Stack trace:\n#0 /tmp/tmpfadk9mk2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfadk9mk2.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($x) {\n        return\
    \ [$x, decbin($x)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a_ones = substr_count($a[1], '1');\n        $b_ones = substr_count($b[1],\
    \ '1');\n        if ($a_ones == $b_ones) {\n            return $a[0] - $b[0];\n\
    \        }\n        return $a_ones - $b_ones;\n    });\n    return array_map(function($x)\
    \ {\n        return $x[0];\n    }, $arr);\n}\n\n$arr = array(1, 5, 2, 3, 4);\n\
    print_r(sort_array($arr));\n\n$arr = array(-2, -3, -4, -5, -6);\nprint_r(sort_array($arr));\n\
    \n$arr = array(1, 0, 2, 3, 4);\nprint_r(sort_array($arr));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -4\n    [2] => -5\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 4\n    [4] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27x3m30q.php:43\n\
    Stack trace:\n#0 /tmp/tmp27x3m30q.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp27x3m30q.php\
    \ on line 43\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $num) {\n    $binary = decbin($num);\n    $count = substr_count($binary, '1');\n\
    \    if ($count == 0) {\n      $zeros[] = $num;\n    } else {\n      $ones[$count][]\
    \ = $num;\n    }\n  }\n  ksort($ones);\n  $sorted = [];\n  foreach ($ones as $key\
    \ => $value) {\n    sort($value);\n    $sorted = array_merge($sorted, $value);\n\
    \  }\n  sort($zeros);\n  return array_merge($sorted, $zeros);\n}\n\n$arr = [1,\
    \ 5, 2, 3, 4];\nprint_r(sort_array($arr));\n\n$arr = [-2, -3, -4, -5, -6];\nprint_r(sort_array($arr));\n\
    \n$arr = [1, 0, 2, 3, 4];\nprint_r(sort_array($arr));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -4\n    [2] => -5\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3]\
    \ => 3\n    [4] => 0\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptorm58v7.php:48\n\
    Stack trace:\n#0 /tmp/tmptorm58v7.php(57): test()\n#1 {main}\n  thrown in /tmp/tmptorm58v7.php\
    \ on line 48\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    $ones = substr_count(decbin($x),\
    \ '1');\n    return [$x, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($x) {\n    return $x[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgs3vjry.php:34\n\
    Stack trace:\n#0 /tmp/tmpjgs3vjry.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjgs3vjry.php\
    \ on line 34\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfadk9mk2.php:35\n\
    Stack trace:\n#0 /tmp/tmpfadk9mk2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfadk9mk2.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $ones[$key] = substr_count(decbin($value), '1');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfa9ktsk1.php:27\n\
    Stack trace:\n#0 /tmp/tmpfa9ktsk1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfa9ktsk1.php\
    \ on line 27\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_replace('0', '', $a);\n    $b = str_replace('0',\
    \ '', $b);\n    if (strlen($a) == strlen($b)) {\n      return $a < $b ? -1 : 1;\n\
    \    }\n    return strlen($a) < strlen($b) ? -1 : 1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55gz2rr9.php:36\n\
    Stack trace:\n#0 /tmp/tmp55gz2rr9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp55gz2rr9.php\
    \ on line 36\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    $a = $a['1'] ?? 0;\n    $b = $b['1'] ??\
    \ 0;\n    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    \  return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php\
    \ on line 26\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpw8h48cdw.php on line 26\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpw8h48cdw.php on line 26\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpw8h48cdw.php on line 26\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8h48cdw.php:41\n\
    Stack trace:\n#0 /tmp/tmpw8h48cdw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpw8h48cdw.php\
    \ on line 41\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n),\
    \ '1');\n    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] === $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdyru7k9f.php:34\n\
    Stack trace:\n#0 /tmp/tmpdyru7k9f.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdyru7k9f.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbe46g2g.php:35\n\
    Stack trace:\n#0 /tmp/tmpvbe46g2g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvbe46g2g.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr_ones = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $arr_ones[$key] = substr_count(decbin($value), '1');\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t_qie_0.php:27\n\
    Stack trace:\n#0 /tmp/tmp_t_qie_0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_t_qie_0.php\
    \ on line 27\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $number) {\n    $binary = decbin($number);\n    $count = substr_count($binary,\
    \ '1');\n    if ($count > 0) {\n      $ones[$number] = $count;\n    } else {\n\
    \      $zeros[] = $number;\n    }\n  }\n  asort($ones);\n  return array_merge(array_keys($ones),\
    \ $zeros);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppx_zegtd.php:33\n\
    Stack trace:\n#0 /tmp/tmppx_zegtd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppx_zegtd.php\
    \ on line 33\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [decbin($n),\
    \ $n];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[0];\n    $b\
    \ = $b[0];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    if ($a[1] == $b[1]) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a[1] - $b[1];\n  });\n  $arr = array_map(function($n)\
    \ {\n    return $n[1];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpldaqpy63.php on line 24\n\n\
    Warning: Undefined array key 0 in /tmp/tmpldaqpy63.php on line 24\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpldaqpy63.php:40\nStack trace:\n\
    #0 /tmp/tmpldaqpy63.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpldaqpy63.php\
    \ on line 40\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a = $a[1];\n        $b = $b[1];\n        $a = str_replace('0', '', $a);\n\
    \        $b = str_replace('0', '', $b);\n        if (strlen($a) == strlen($b))\
    \ {\n            return $a > $b ? 1 : -1;\n        }\n        return strlen($a)\
    \ > strlen($b) ? 1 : -1;\n    });\n    return array_map(function($n) {\n     \
    \   return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppndroiv.php:36\n\
    Stack trace:\n#0 /tmp/tmpppndroiv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpppndroiv.php\
    \ on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n),\
    \ '1');\n    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    return $a[1] == $b[1] ? $a[0] - $b[0] : $a[1] - $b[1];\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylxjhvoq.php:31\n\
    Stack trace:\n#0 /tmp/tmpylxjhvoq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpylxjhvoq.php\
    \ on line 31\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $num) {\n    $binary = decbin($num);\n    if (substr_count($binary, '1') > 0)\
    \ {\n      $ones[$num] = substr_count($binary, '1');\n    } else {\n      $zeros[]\
    \ = $num;\n    }\n  }\n  asort($ones);\n  $result = array_merge(array_keys($ones),\
    \ $zeros);\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpft3x7fgw.php:33\n\
    Stack trace:\n#0 /tmp/tmpft3x7fgw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpft3x7fgw.php\
    \ on line 33\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a_ones = substr_count($a[1], '1');\n        $b_ones = substr_count($b[1],\
    \ '1');\n        if ($a_ones == $b_ones) {\n            return $a[0] - $b[0];\n\
    \        }\n        return $a_ones - $b_ones;\n    });\n    return array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q_3kn5t.php:35\n\
    Stack trace:\n#0 /tmp/tmp1q_3kn5t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1q_3kn5t.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a == $b) {\n      return $a[0] - $b[0];\n \
    \   }\n    return $a - $b;\n  });\n  $arr = array_map(function($x) {\n    return\
    \ $x[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpimlxqfs1.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpimlxqfs1.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpimlxqfs1.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpimlxqfs1.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpimlxqfs1.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpimlxqfs1.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimlxqfs1.php:39\n\
    Stack trace:\n#0 /tmp/tmpimlxqfs1.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpimlxqfs1.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $num) {\n    $binary = decbin($num);\n    $count = substr_count($binary, '1');\n\
    \    if ($count > 0) {\n      $ones[$count][] = $num;\n    } else {\n      $zeros[]\
    \ = $num;\n    }\n  }\n  ksort($ones);\n  $result = [];\n  foreach ($ones as $count\
    \ => $nums) {\n    sort($nums);\n    $result = array_merge($result, $nums);\n\
    \  }\n  sort($zeros);\n  $result = array_merge($result, $zeros);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3fk41m22.php:41\n\
    Stack trace:\n#0 /tmp/tmp3fk41m22.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp3fk41m22.php\
    \ on line 41\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($i) {\n    return [$i,\
    \ decbin($i)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($i) {\n    return $i[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsytxm6v1.php:35\n\
    Stack trace:\n#0 /tmp/tmpsytxm6v1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsytxm6v1.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n),\
    \ '1');\n    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    return $a[1] == $b[1] ? $a[0] - $b[0] : $a[1] - $b[1];\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpylxjhvoq.php:31\n\
    Stack trace:\n#0 /tmp/tmpylxjhvoq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpylxjhvoq.php\
    \ on line 31\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($num)\
    \ {\n    return $num[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpca26v6s5.php:35\n\
    Stack trace:\n#0 /tmp/tmpca26v6s5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpca26v6s5.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $ones = [];\n    $zeros = [];\n    foreach ($arr\
    \ as $key => $value) {\n        $binary = decbin($value);\n        $count = substr_count($binary,\
    \ '1');\n        if ($count > 0) {\n            $ones[$key] = $value;\n      \
    \  } else {\n            $zeros[$key] = $value;\n        }\n    }\n    asort($ones);\n\
    \    asort($zeros);\n    return array_merge($zeros, $ones);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wdbj0c6.php:34\n\
    Stack trace:\n#0 /tmp/tmp7wdbj0c6.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7wdbj0c6.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($a) {\n    return $a[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp811rqf1_.php:35\n\
    Stack trace:\n#0 /tmp/tmp811rqf1_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp811rqf1_.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = str_split($a[1]);\n\
    \    $b = str_split($b[1]);\n    $a = array_reduce($a, function($c, $v) {\n  \
    \    return $c + (int)$v;\n    }, 0);\n    $b = array_reduce($b, function($c,\
    \ $v) {\n      return $c + (int)$v;\n    }, 0);\n    if ($a === $b) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a - $b;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpac4ni8w3.php\
    \ on line 26\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpac4ni8w3.php on line 26\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpac4ni8w3.php on line 26\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpac4ni8w3.php on line 26\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpac4ni8w3.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpac4ni8w3.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpac4ni8w3.php:40\n\
    Stack trace:\n#0 /tmp/tmpac4ni8w3.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpac4ni8w3.php\
    \ on line 40\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $key => $value) {\n    if ($value < 0) {\n      $zeros[] = $value;\n    } else\
    \ {\n      $ones[] = $value;\n    }\n  }\n  $ones = array_map(function($n) {\n\
    \    return [$n, decbin($n)];\n  }, $ones);\n  usort($ones, function($a, $b) {\n\
    \    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n\
    \    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a_ones - $b_ones;\n  });\n  $ones = array_map(function($n) {\n    return $n[0];\n\
    \  }, $ones);\n  return array_merge($ones, $zeros);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuhp4biy0.php:45\n\
    Stack trace:\n#0 /tmp/tmpuhp4biy0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpuhp4biy0.php\
    \ on line 45\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($el) {\n    return [$el,\
    \ decbin($el)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a === $b) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a - $b;\n  });\n  $arr = array_map(function($el) {\n    return\
    \ $el[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpdaro9lpe.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpdaro9lpe.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpdaro9lpe.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpdaro9lpe.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpdaro9lpe.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpdaro9lpe.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdaro9lpe.php:39\n\
    Stack trace:\n#0 /tmp/tmpdaro9lpe.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpdaro9lpe.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a_ones = substr_count($a, '1');\n    $b_ones = substr_count($b,\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a < $b ? -1 : 1;\n    }\n\
    \    return $a_ones < $b_ones ? -1 : 1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_rt3krog.php:37\n\
    Stack trace:\n#0 /tmp/tmp_rt3krog.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_rt3krog.php\
    \ on line 37\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $ones[$key] = substr_count(decbin($value), '1');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfa9ktsk1.php:27\n\
    Stack trace:\n#0 /tmp/tmpfa9ktsk1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfa9ktsk1.php\
    \ on line 27\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a1 = substr_count($a[1], '1');\n        $b1 = substr_count($b[1], '1');\n\
    \        if ($a1 == $b1) {\n            return $a[0] - $b[0];\n        }\n   \
    \     return $a1 - $b1;\n    });\n    return array_map(function($n) {\n      \
    \  return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a4gtqmx.php:35\n\
    Stack trace:\n#0 /tmp/tmp1a4gtqmx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1a4gtqmx.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n),\
    \ '1');\n    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkrjzgsb.php:34\n\
    Stack trace:\n#0 /tmp/tmptkrjzgsb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptkrjzgsb.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n),\
    \ '1');\n    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkrjzgsb.php:34\n\
    Stack trace:\n#0 /tmp/tmptkrjzgsb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptkrjzgsb.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\necho implode(', ', sort_array([1, 5, 2, 3, 4])) . \"\\n\";\necho implode(',\
    \ ', sort_array([-2, -3, -4, -5, -6])) . \"\\n\";\necho implode(', ', sort_array([1,\
    \ 0, 2, 3, 4])) . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpuh8tk907.php:38\nStack trace:\n#0 /tmp/tmpuh8tk907.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuh8tk907.php on line 38\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [decbin($n),\
    \ $n];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[0];\n    $b\
    \ = $b[0];\n    $a = str_replace('0', '', $a);\n    $b = str_replace('0', '',\
    \ $b);\n    if (strlen($a) == strlen($b)) {\n      return $a[0] - $b[0];\n   \
    \ }\n    return strlen($a) - strlen($b);\n  });\n  return array_map(function($n)\
    \ {\n    return $n[1];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7oxy9_n.php:36\n\
    Stack trace:\n#0 /tmp/tmpl7oxy9_n.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpl7oxy9_n.php\
    \ on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($x)\
    \ {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjo01v7l.php:35\n\
    Stack trace:\n#0 /tmp/tmpnjo01v7l.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnjo01v7l.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = substr_count($a, '1');\n    $b = substr_count($b, '1');\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpakcjt8ox.php\
    \ on line 22\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpakcjt8ox.php on line 22\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpakcjt8ox.php on line 22\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpakcjt8ox.php on line 22\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpakcjt8ox.php on\
    \ line 22\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpakcjt8ox.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpakcjt8ox.php:36\n\
    Stack trace:\n#0 /tmp/tmpakcjt8ox.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpakcjt8ox.php\
    \ on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nprint_r(sort_array([1, 5, 2, 3, 4]));\nprint_r(sort_array([-2, -3, -4, -5,\
    \ -6]));\nprint_r(sort_array([1, 0, 2, 3, 4]));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -4\n    [2] => -5\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 4\n    [4] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyv7hsg5j.php:38\n\
    Stack trace:\n#0 /tmp/tmpyv7hsg5j.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpyv7hsg5j.php\
    \ on line 38\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    if ($a[1] == $b[1]) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a[1] - $b[1];\n  });\n  $arr = array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpwzbieatp.php on line 24\n\n\
    Warning: Undefined array key 0 in /tmp/tmpwzbieatp.php on line 24\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpwzbieatp.php:40\nStack trace:\n\
    #0 /tmp/tmpwzbieatp.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpwzbieatp.php\
    \ on line 40\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $num) {\n    $binary = decbin($num);\n    $count = substr_count($binary, '1');\n\
    \    if ($count > 0) {\n      $ones[$count][] = $num;\n    } else {\n      $zeros[]\
    \ = $num;\n    }\n  }\n  ksort($ones);\n  foreach ($ones as $key => $value) {\n\
    \    sort($ones[$key]);\n  }\n  $ones = array_merge(...$ones);\n  sort($zeros);\n\
    \  return array_merge($zeros, $ones);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuoy_b34p.php:39\n\
    Stack trace:\n#0 /tmp/tmpuoy_b34p.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpuoy_b34p.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n),\
    \ '1');\n    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkrjzgsb.php:34\n\
    Stack trace:\n#0 /tmp/tmptkrjzgsb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptkrjzgsb.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    $a = $a['1'] ?? 0;\n    $b = $b['1'] ??\
    \ 0;\n    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    \  return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php\
    \ on line 26\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpw8h48cdw.php on line 26\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpw8h48cdw.php on line 26\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpw8h48cdw.php on line 26\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8h48cdw.php:41\n\
    Stack trace:\n#0 /tmp/tmpw8h48cdw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpw8h48cdw.php\
    \ on line 41\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbe46g2g.php:35\n\
    Stack trace:\n#0 /tmp/tmpvbe46g2g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvbe46g2g.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $ones[$key] = substr_count(decbin($value), '1');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfa9ktsk1.php:27\n\
    Stack trace:\n#0 /tmp/tmpfa9ktsk1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfa9ktsk1.php\
    \ on line 27\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a === $b) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a - $b;\n  });\n  $arr = array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp46l2dgy6.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp46l2dgy6.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp46l2dgy6.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp46l2dgy6.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp46l2dgy6.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp46l2dgy6.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46l2dgy6.php:39\n\
    Stack trace:\n#0 /tmp/tmp46l2dgy6.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp46l2dgy6.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfadk9mk2.php:35\n\
    Stack trace:\n#0 /tmp/tmpfadk9mk2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfadk9mk2.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $sorted = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $sorted[$key] = decbin($value);\n  }\n  asort($sorted);\n  foreach ($sorted\
    \ as $key => $value) {\n    $sorted[$key] = bindec($value);\n  }\n  return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptejrp491.php:29\n\
    Stack trace:\n#0 /tmp/tmptejrp491.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptejrp491.php\
    \ on line 29\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if (substr_count($a[1],\
    \ '1') == substr_count($b[1], '1')) {\n      return $a[0] - $b[0];\n    }\n  \
    \  return substr_count($a[1], '1') - substr_count($b[1], '1');\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5xcmx0xg.php:33\n\
    Stack trace:\n#0 /tmp/tmp5xcmx0xg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5xcmx0xg.php\
    \ on line 33\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($a) {\n    return [$a,\
    \ decbin($a)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) return $a[0]\
    \ - $b[0];\n    return $a1 - $b1;\n  });\n  return array_map(function($a) {\n\
    \    return $a[0];\n  }, $arr);\n}\n\necho implode(', ', sort_array([1, 5, 2,\
    \ 3, 4])), \"\\n\";\necho implode(', ', sort_array([-2, -3, -4, -5, -6])), \"\\\
    n\";\necho implode(', ', sort_array([1, 0, 2, 3, 4])), \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmppuj49rt4.php:36\nStack trace:\n#0 /tmp/tmppuj49rt4.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppuj49rt4.php on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a_ones = substr_count($a[1], '1');\n        $b_ones = substr_count($b[1],\
    \ '1');\n        if ($a_ones == $b_ones) {\n            return $a[0] - $b[0];\n\
    \        }\n        return $a_ones - $b_ones;\n    });\n    return array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q_3kn5t.php:35\n\
    Stack trace:\n#0 /tmp/tmp1q_3kn5t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1q_3kn5t.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $binary = decbin($value);\n    $ones[$binary] = $value;\n\
    \    $zeros[$binary] = $value;\n  }\n  ksort($ones);\n  krsort($zeros);\n  $result\
    \ = array_merge($ones, $zeros);\n  return array_values($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqfm_p2r.php:31\n\
    Stack trace:\n#0 /tmp/tmpjqfm_p2r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjqfm_p2r.php\
    \ on line 31\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    $a = $a['1'] ?? 0;\n    $b = $b['1'] ??\
    \ 0;\n    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    \  return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php\
    \ on line 26\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpw8h48cdw.php on line 26\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpw8h48cdw.php on line 26\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpw8h48cdw.php on line 26\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpw8h48cdw.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8h48cdw.php:41\n\
    Stack trace:\n#0 /tmp/tmpw8h48cdw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpw8h48cdw.php\
    \ on line 41\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    $ones = substr_count(decbin($x),\
    \ '1');\n    return [$x, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($x) {\n    return $x[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgs3vjry.php:34\n\
    Stack trace:\n#0 /tmp/tmpjgs3vjry.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjgs3vjry.php\
    \ on line 34\n"
  timestamp: 1659730567
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $binary = decbin($value);\n    $count = substr_count($binary,\
    \ '1');\n    if ($count == 0) {\n      $zeros[] = $value;\n    } else {\n    \
    \  $ones[$count][] = $value;\n    }\n  }\n  ksort($ones);\n  $result = [];\n \
    \ foreach ($ones as $key => $value) {\n    sort($value);\n    $result = array_merge($result,\
    \ $value);\n  }\n  sort($zeros);\n  $result = array_merge($result, $zeros);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_jba08.php:41\n\
    Stack trace:\n#0 /tmp/tmpw8_jba08.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpw8_jba08.php\
    \ on line 41\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($v) {\n        return\
    \ [$v, decbin($v)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a = $a[1];\n        $b = $b[1];\n        $a = str_replace('0', '', $a);\n\
    \        $b = str_replace('0', '', $b);\n        if (strlen($a) == strlen($b))\
    \ {\n            return $a - $b;\n        }\n        return strlen($a) - strlen($b);\n\
    \    });\n    return array_map(function($v) {\n        return $v[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpac9oevvx.php:36\n\
    Stack trace:\n#0 /tmp/tmpac9oevvx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpac9oevvx.php\
    \ on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr_ones = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $arr_ones[$key] = substr_count(decbin($value), '1');\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t_qie_0.php:27\n\
    Stack trace:\n#0 /tmp/tmp_t_qie_0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_t_qie_0.php\
    \ on line 27\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a === $b) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a - $b;\n  });\n  $arr = array_map(function($num) {\n    return\
    \ $num[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp5rgdhf0m.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp5rgdhf0m.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp5rgdhf0m.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp5rgdhf0m.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp5rgdhf0m.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp5rgdhf0m.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rgdhf0m.php:39\n\
    Stack trace:\n#0 /tmp/tmp5rgdhf0m.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp5rgdhf0m.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_replace('0', '', $a);\n    $b = str_replace('0',\
    \ '', $b);\n    if (strlen($a) == strlen($b)) {\n      return $a < $b ? -1 : 1;\n\
    \    }\n    return strlen($a) < strlen($b) ? -1 : 1;\n  });\n  return array_map(function($x)\
    \ {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu12b1c7x.php:36\n\
    Stack trace:\n#0 /tmp/tmpu12b1c7x.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpu12b1c7x.php\
    \ on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($a) {\n    return [$a,\
    \ decbin($a)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($a) {\n    return $a[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp27u5mc2h.php:35\n\
    Stack trace:\n#0 /tmp/tmp27u5mc2h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp27u5mc2h.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  // your code here\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_haktax.php:20\n\
    Stack trace:\n#0 /tmp/tmpm_haktax.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpm_haktax.php\
    \ on line 20\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($x)\
    \ {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnjo01v7l.php:35\n\
    Stack trace:\n#0 /tmp/tmpnjo01v7l.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnjo01v7l.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $binary = decbin($value);\n    $ones[$key] = substr_count($binary,\
    \ '1');\n    $zeros[$key] = substr_count($binary, '0');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $zeros, SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveop9c0x.php:30\n\
    Stack trace:\n#0 /tmp/tmpveop9c0x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpveop9c0x.php\
    \ on line 30\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 === $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0c188w3r.php:35\n\
    Stack trace:\n#0 /tmp/tmp0c188w3r.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0c188w3r.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $binary = decbin($value);\n    $ones[$key] = substr_count($binary,\
    \ '1');\n    $zeros[$key] = substr_count($binary, '0');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $zeros, SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveop9c0x.php:30\n\
    Stack trace:\n#0 /tmp/tmpveop9c0x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpveop9c0x.php\
    \ on line 30\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a === $b) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a - $b;\n  });\n  $arr = array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n  return $arr;\n}\n\n$arr = array(1, 5, 2, 3, 4);\nvar_dump(sort_array($arr));\n\
    $arr = array(-2, -3, -4, -5, -6);\nvar_dump(sort_array($arr));\n$arr = array(1,\
    \ 0, 2, 3, 4);\nvar_dump(sort_array($arr));\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpr0yl7v2p.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpr0yl7v2p.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpr0yl7v2p.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpr0yl7v2p.php\
    \ on line 24\narray(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(4)\n\
    \  [3]=>\n  int(5)\n  [4]=>\n  int(3)\n}\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\
    \nWarning: Trying to access array offset on value of type int in /tmp/tmpr0yl7v2p.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpr0yl7v2p.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpr0yl7v2p.php on line 24\narray(5)\
    \ {\n  [0]=>\n  int(-4)\n  [1]=>\n  int(-6)\n  [2]=>\n  int(-2)\n  [3]=>\n  int(-3)\n\
    \  [4]=>\n  int(-5)\n}\n\nWarning: Trying to access array offset on value of type\
    \ int in /tmp/tmpr0yl7v2p.php on line 24\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\
    \nWarning: Trying to access array offset on value of type int in /tmp/tmpr0yl7v2p.php\
    \ on line 24\narray(5) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n\
    \  [3]=>\n  int(4)\n  [4]=>\n  int(3)\n}\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmpr0yl7v2p.php on line 24\n\
    \nWarning: Trying to a"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($num)\
    \ {\n    return $num[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpca26v6s5.php:35\n\
    Stack trace:\n#0 /tmp/tmpca26v6s5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpca26v6s5.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr_ones = [];\n  $arr_dec = [];\n  foreach ($arr\
    \ as $key => $value) {\n    $arr_ones[$key] = substr_count(decbin($value), '1');\n\
    \    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones, SORT_ASC, $arr_dec,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72mx4b2c.php:29\n\
    Stack trace:\n#0 /tmp/tmp72mx4b2c.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp72mx4b2c.php\
    \ on line 29\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 === $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0c188w3r.php:35\n\
    Stack trace:\n#0 /tmp/tmp0c188w3r.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0c188w3r.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $ones[$key] = substr_count(decbin($value), '1');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfa9ktsk1.php:27\n\
    Stack trace:\n#0 /tmp/tmpfa9ktsk1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfa9ktsk1.php\
    \ on line 27\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_filter($a,\
    \ function($n) {\n      return $n == 1;\n    });\n    $b = array_filter($b, function($n)\
    \ {\n      return $n == 1;\n    });\n    $a = count($a);\n    $b = count($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpik_dakn1.php\
    \ on line 30\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpik_dakn1.php on line 30\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpik_dakn1.php on line 30\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpik_dakn1.php on line 30\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpik_dakn1.php on\
    \ line 30\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpik_dakn1.php\
    \ on line 30\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpik_dakn1.php:45\n\
    Stack trace:\n#0 /tmp/tmpik_dakn1.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpik_dakn1.php\
    \ on line 45\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr1 = [];\n  $arr2 = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $arr1[$key] = decbin($value);\n    $arr2[$key] = $value;\n\
    \  }\n  array_multisort(array_map('strlen', $arr1), SORT_ASC, $arr1, $arr2);\n\
    \  return $arr2;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpybxztqeh.php:28\n\
    Stack trace:\n#0 /tmp/tmpybxztqeh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpybxztqeh.php\
    \ on line 28\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [decbin($n),\
    \ $n];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[0];\n    $b\
    \ = $b[0];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a === $b) {\n      return $a[1] - $b[1];\n\
    \    }\n    return $a - $b;\n  });\n  $arr = array_map(function($n) {\n    return\
    \ $n[1];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpzqefl_l5.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpzqefl_l5.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpzqefl_l5.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpzqefl_l5.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpzqefl_l5.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpzqefl_l5.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqefl_l5.php:39\n\
    Stack trace:\n#0 /tmp/tmpzqefl_l5.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpzqefl_l5.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $new_arr = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $new_arr[$key] = decbin($value);\n  }\n  asort($new_arr);\n  foreach\
    \ ($new_arr as $key => $value) {\n    $new_arr[$key] = bindec($value);\n  }\n\
    \  return $new_arr;\n}\n\necho sort_array([1, 5, 2, 3, 4]);\necho sort_array([-2,\
    \ -3, -4, -5, -6]);\necho sort_array([1, 0, 2, 3, 4]);\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpw_pyiuyq.php on line 24\n\
    Array\nWarning: Array to string conversion in /tmp/tmpw_pyiuyq.php on line 25\n\
    Array\nWarning: Array to string conversion in /tmp/tmpw_pyiuyq.php on line 26\n\
    Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw_pyiuyq.php:32\n\
    Stack trace:\n#0 /tmp/tmpw_pyiuyq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpw_pyiuyq.php\
    \ on line 32\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    $ones =\
    \ substr_count(decbin($num), '1');\n    return [$num, $ones];\n  }, $arr);\n \
    \ usort($arr, function($a, $b) {\n    if ($a[1] === $b[1]) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a[1] - $b[1];\n  });\n  return array_map(function($num)\
    \ {\n    return $num[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpco6prjl4.php:34\n\
    Stack trace:\n#0 /tmp/tmpco6prjl4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpco6prjl4.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\necho implode(', ', sort_array([1, 5, 2, 3, 4])) . \"\\n\";\necho implode(',\
    \ ', sort_array([-2, -3, -4, -5, -6])) . \"\\n\";\necho implode(', ', sort_array([1,\
    \ 0, 2, 3, 4])) . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpuh8tk907.php:38\nStack trace:\n#0 /tmp/tmpuh8tk907.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuh8tk907.php on line 38\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = substr_count($a, '1');\n    $b = substr_count($b, '1');\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmplc6q7g54.php\
    \ on line 22\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmplc6q7g54.php on line 22\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmplc6q7g54.php on line 22\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmplc6q7g54.php on line 22\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmplc6q7g54.php on\
    \ line 22\n\nWarning: Trying to access array offset on value of type int in /tmp/tmplc6q7g54.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplc6q7g54.php:36\n\
    Stack trace:\n#0 /tmp/tmplc6q7g54.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplc6q7g54.php\
    \ on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbe46g2g.php:35\n\
    Stack trace:\n#0 /tmp/tmpvbe46g2g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvbe46g2g.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbe46g2g.php:35\n\
    Stack trace:\n#0 /tmp/tmpvbe46g2g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvbe46g2g.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map('decbin', $arr);\n  $arr = array_map('strlen',\
    \ $arr);\n  $arr = array_map('intval', $arr);\n  $arr = array_flip($arr);\n  ksort($arr);\n\
    \  $arr = array_flip($arr);\n  $arr = array_map('intval', $arr);\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2o1mtgt.php:28\n\
    Stack trace:\n#0 /tmp/tmpw2o1mtgt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw2o1mtgt.php\
    \ on line 28\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbe46g2g.php:35\n\
    Stack trace:\n#0 /tmp/tmpvbe46g2g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvbe46g2g.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a_ones = substr_count($a[1], '1');\n        $b_ones = substr_count($b[1],\
    \ '1');\n        if ($a_ones == $b_ones) {\n            return $a[0] - $b[0];\n\
    \        }\n        return $a_ones - $b_ones;\n    });\n    return array_map(function($a)\
    \ {\n        return $a[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurhi57kf.php:35\n\
    Stack trace:\n#0 /tmp/tmpurhi57kf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpurhi57kf.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    if ($a['1'] == $b['1']) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a['1'] - $b['1'];\n  });\n  $arr = array_map(function($x)\
    \ {\n    return $x[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpteqvly2q.php on line 24\n\n\
    Warning: Undefined array key 0 in /tmp/tmpteqvly2q.php on line 24\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpteqvly2q.php:40\nStack trace:\n\
    #0 /tmp/tmpteqvly2q.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpteqvly2q.php\
    \ on line 40\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($v) {\n    return [$v,\
    \ decbin($v)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6xfmou3_.php:35\n\
    Stack trace:\n#0 /tmp/tmp6xfmou3_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6xfmou3_.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($e) {\n    return [$e,\
    \ decbin($e)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_replace('0', '', $a);\n    $b = str_replace('0',\
    \ '', $b);\n    if (strlen($a) === strlen($b)) {\n      return $a - $b;\n    }\n\
    \    return strlen($a) - strlen($b);\n  });\n  return array_map(function($e) {\n\
    \    return $e[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuxwpdttg.php:36\n\
    Stack trace:\n#0 /tmp/tmpuxwpdttg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpuxwpdttg.php\
    \ on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n),\
    \ '1');\n    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] === $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdyru7k9f.php:34\n\
    Stack trace:\n#0 /tmp/tmpdyru7k9f.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdyru7k9f.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $ones = [];\n    foreach ($arr as $key => $value)\
    \ {\n        $ones[$key] = substr_count(decbin($value), '1');\n    }\n    array_multisort($ones,\
    \ SORT_ASC, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n  \
    \  return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cqoiz3x.php:27\n\
    Stack trace:\n#0 /tmp/tmp9cqoiz3x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9cqoiz3x.php\
    \ on line 27\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($a) {\n    return [$a,\
    \ decbin($a)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a == $b) {\n      return $a[0] - $b[0];\n \
    \   }\n    return $a - $b;\n  });\n  $arr = array_map(function($a) {\n    return\
    \ $a[0];\n  }, $arr);\n  return $arr;\n}\n\necho sort_array([1, 5, 2, 3, 4]) .\
    \ \"\\n\";\necho sort_array([-2, -3, -4, -5, -6]) . \"\\n\";\necho sort_array([1,\
    \ 0, 2, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Array to string conversion in /tmp/tmpsgwqhsz7.php on line 34

    Array


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Array to string conversion in /tmp/tmpsgwqhsz7.php on line 35

    Array


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Array to string conversion in /tmp/tmpsgwqhsz7.php on line 36

    Array


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    on line 24


    Warning: Trying to access array offset on value of type int in /tmp/tmpsgwqhsz7.php
    o'
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $result = [];\n  $ones = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $ones[$key] = substr_count(decbin($value), '1');\n  }\n\
    \  asort($ones);\n  foreach ($ones as $key => $value) {\n    $result[] = $arr[$key];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nzz_u2x.php:30\n\
    Stack trace:\n#0 /tmp/tmp_nzz_u2x.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_nzz_u2x.php\
    \ on line 30\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $result = [];\n  $ones = [];\n  $zeros = [];\n\
    \  foreach ($arr as $key => $value) {\n    $binary = decbin($value);\n    if (substr_count($binary,\
    \ '1') > 0) {\n      $ones[$key] = substr_count($binary, '1');\n    } else {\n\
    \      $zeros[$key] = $value;\n    }\n  }\n  asort($ones);\n  foreach ($ones as\
    \ $key => $value) {\n    $result[] = $arr[$key];\n  }\n  foreach ($zeros as $key\
    \ => $value) {\n    $result[] = $value;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpswrkfhyv.php:39\n\
    Stack trace:\n#0 /tmp/tmpswrkfhyv.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpswrkfhyv.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a_ones = substr_count($a[1], '1');\n        $b_ones = substr_count($b[1],\
    \ '1');\n        if ($a_ones == $b_ones) {\n            return $a[0] - $b[0];\n\
    \        }\n        return $a_ones - $b_ones;\n    });\n    return array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1q_3kn5t.php:35\n\
    Stack trace:\n#0 /tmp/tmp1q_3kn5t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1q_3kn5t.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a_ones = substr_count($a[1], '1');\n        $b_ones = substr_count($b[1],\
    \ '1');\n        if ($a_ones === $b_ones) {\n            return $a[0] - $b[0];\n\
    \        }\n        return $a_ones - $b_ones;\n    });\n    return array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgna_eh16.php:35\n\
    Stack trace:\n#0 /tmp/tmpgna_eh16.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgna_eh16.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($val) {\n    return [$val,\
    \ decbin($val)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($val) {\n    return $val[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vhx3fv5.php:35\n\
    Stack trace:\n#0 /tmp/tmp8vhx3fv5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8vhx3fv5.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($v) {\n    return [$v,\
    \ decbin($v)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($v)\
    \ {\n    return $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnpwx0yje.php:35\n\
    Stack trace:\n#0 /tmp/tmpnpwx0yje.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnpwx0yje.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n),\
    \ '1');\n    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkrjzgsb.php:34\n\
    Stack trace:\n#0 /tmp/tmptkrjzgsb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptkrjzgsb.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a == $b) {\n      return $a[0] - $b[0];\n \
    \   }\n    return $a - $b;\n  });\n  $arr = array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmplevphkjs.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmplevphkjs.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmplevphkjs.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmplevphkjs.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmplevphkjs.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmplevphkjs.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplevphkjs.php:39\n\
    Stack trace:\n#0 /tmp/tmplevphkjs.php(49): test()\n#1 {main}\n  thrown in /tmp/tmplevphkjs.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbe46g2g.php:35\n\
    Stack trace:\n#0 /tmp/tmpvbe46g2g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpvbe46g2g.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $sorted = [];\n  foreach ($arr as $num) {\n   \
    \ $sorted[decbin($num)][] = $num;\n  }\n  ksort($sorted);\n  $result = [];\n \
    \ foreach ($sorted as $key => $value) {\n    foreach ($value as $num) {\n    \
    \  $result[] = $num;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpopace5b_.php:32\n\
    Stack trace:\n#0 /tmp/tmpopace5b_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpopace5b_.php\
    \ on line 32\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [\n\
    \      'dec' => $n,\n      'bin' => decbin($n)\n    ];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a['bin'], '1');\n    $b_ones\
    \ = substr_count($b['bin'], '1');\n    if ($a_ones == $b_ones) {\n      return\
    \ $a['dec'] - $b['dec'];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n['dec'];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb053rzy.php:38\n\
    Stack trace:\n#0 /tmp/tmptb053rzy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmptb053rzy.php\
    \ on line 38\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $aOnes = substr_count($a[1],\
    \ '1');\n    $bOnes = substr_count($b[1], '1');\n    if ($aOnes === $bOnes) {\n\
    \      return $a[0] - $b[0];\n    }\n    return $aOnes - $bOnes;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp36qjgd3.php:35\n\
    Stack trace:\n#0 /tmp/tmpp36qjgd3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpp36qjgd3.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho\
    \ implode(', ', sort_array([1, 5, 2, 3, 4])) . PHP_EOL;\necho implode(', ', sort_array([-2,\
    \ -3, -4, -5, -6])) . PHP_EOL;\necho implode(', ', sort_array([1, 0, 2, 3, 4]))\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3vkxfbox.php:38\nStack trace:\n#0 /tmp/tmp3vkxfbox.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3vkxfbox.php on line 38\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_filter($a,\
    \ function($n) {\n      return $n === '1';\n    });\n    $b = array_filter($b,\
    \ function($n) {\n      return $n === '1';\n    });\n    $a = count($a);\n   \
    \ $b = count($b);\n    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n\
    \    return $a - $b;\n  });\n  $arr = array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpeb81y5qi.php\
    \ on line 30\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpeb81y5qi.php on line 30\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpeb81y5qi.php on line 30\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpeb81y5qi.php on line 30\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpeb81y5qi.php on\
    \ line 30\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpeb81y5qi.php\
    \ on line 30\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeb81y5qi.php:45\n\
    Stack trace:\n#0 /tmp/tmpeb81y5qi.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpeb81y5qi.php\
    \ on line 45\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $sorted = [];\n  foreach ($arr as $num) {\n   \
    \ $sorted[decbin($num)][] = $num;\n  }\n  ksort($sorted);\n  $result = [];\n \
    \ foreach ($sorted as $key => $value) {\n    sort($value);\n    $result = array_merge($result,\
    \ $value);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkefplp9t.php:31\n\
    Stack trace:\n#0 /tmp/tmpkefplp9t.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkefplp9t.php\
    \ on line 31\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $ones = [];\n    foreach ($arr as $key => $value)\
    \ {\n        $ones[$key] = substr_count(decbin($value), '1');\n    }\n    array_multisort($ones,\
    \ SORT_ASC, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n  \
    \  return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cqoiz3x.php:27\n\
    Stack trace:\n#0 /tmp/tmp9cqoiz3x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9cqoiz3x.php\
    \ on line 27\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  foreach ($arr as $num) {\n    $ones[]\
    \ = substr_count(decbin($num), '1');\n  }\n  array_multisort($ones, $arr);\n \
    \ return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpljv_pkm0.php:27\n\
    Stack trace:\n#0 /tmp/tmpljv_pkm0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpljv_pkm0.php\
    \ on line 27\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $ones = substr_count($a[1],\
    \ '1') - substr_count($b[1], '1');\n    return $ones ? $ones : $a[0] - $b[0];\n\
    \  });\n  return array_column($arr, 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmawuu070.php:29\n\
    Stack trace:\n#0 /tmp/tmpmawuu070.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmawuu070.php\
    \ on line 29\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a === $b) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a - $b;\n  });\n  $arr = array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp46l2dgy6.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp46l2dgy6.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp46l2dgy6.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp46l2dgy6.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp46l2dgy6.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp46l2dgy6.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46l2dgy6.php:39\n\
    Stack trace:\n#0 /tmp/tmp46l2dgy6.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp46l2dgy6.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_replace('0', '', $a);\n    $b = str_replace('0',\
    \ '', $b);\n    if (strlen($a) == strlen($b)) {\n      return $a[0] > $b[0] ?\
    \ 1 : -1;\n    }\n    return strlen($a) > strlen($b) ? 1 : -1;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgci_fe79.php:36\n\
    Stack trace:\n#0 /tmp/tmpgci_fe79.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgci_fe79.php\
    \ on line 36\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    $ones = substr_count(decbin($x),\
    \ '1');\n    return [$x, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] === $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($x) {\n    return $x[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpovb7n6bh.php:34\n\
    Stack trace:\n#0 /tmp/tmpovb7n6bh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpovb7n6bh.php\
    \ on line 34\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj89p1xzi.php:35\n\
    Stack trace:\n#0 /tmp/tmpj89p1xzi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj89p1xzi.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($v) {\n    return [$v,\
    \ decbin($v)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec1sgb64.php:35\n\
    Stack trace:\n#0 /tmp/tmpec1sgb64.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpec1sgb64.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($v) {\n    return [$v,\
    \ decbin($v)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 === $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($v)\
    \ {\n    return $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7b8cql2j.php:35\n\
    Stack trace:\n#0 /tmp/tmp7b8cql2j.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7b8cql2j.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    $a = $a['1'] ?? 0;\n    $b = $b['1'] ??\
    \ 0;\n    if ($a === $b) {\n      return $a[0] <=> $b[0];\n    }\n    return $a\
    \ <=> $b;\n  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    \  return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpzrlhylnt.php\
    \ on line 26\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpzrlhylnt.php on line 26\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpzrlhylnt.php on line 26\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpzrlhylnt.php on line 26\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpzrlhylnt.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpzrlhylnt.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzrlhylnt.php:41\n\
    Stack trace:\n#0 /tmp/tmpzrlhylnt.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpzrlhylnt.php\
    \ on line 41\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a_ones = substr_count($a[1], '1');\n        $b_ones = substr_count($b[1],\
    \ '1');\n        if ($a_ones === $b_ones) {\n            return $a[0] - $b[0];\n\
    \        }\n        return $a_ones - $b_ones;\n    });\n    return array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgna_eh16.php:35\n\
    Stack trace:\n#0 /tmp/tmpgna_eh16.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgna_eh16.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $binary = decbin($value);\n    $ones[$key] = substr_count($binary,\
    \ '1');\n    $zeros[$key] = substr_count($binary, '0');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $zeros, SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpveop9c0x.php:30\n\
    Stack trace:\n#0 /tmp/tmpveop9c0x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpveop9c0x.php\
    \ on line 30\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho\
    \ implode(', ', sort_array([1, 5, 2, 3, 4])) . \"\\n\";\necho implode(', ', sort_array([-2,\
    \ -3, -4, -5, -6])) . \"\\n\";\necho implode(', ', sort_array([1, 0, 2, 3, 4]))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpr4elksup.php:38\nStack trace:\n#0 /tmp/tmpr4elksup.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpr4elksup.php on line 38\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $result = [];\n  $ones = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $ones[$key] = substr_count(decbin($value), '1');\n  }\n\
    \  asort($ones);\n  foreach ($ones as $key => $value) {\n    $result[] = $arr[$key];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nzz_u2x.php:30\n\
    Stack trace:\n#0 /tmp/tmp_nzz_u2x.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_nzz_u2x.php\
    \ on line 30\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n    $arr = array_map(function($n) {\n        return\
    \ [$n, decbin($n)];\n    }, $arr);\n    usort($arr, function($a, $b) {\n     \
    \   $a1 = substr_count($a[1], '1');\n        $b1 = substr_count($b[1], '1');\n\
    \        if ($a1 == $b1) {\n            return $a[0] - $b[0];\n        }\n   \
    \     return $a1 - $b1;\n    });\n    return array_map(function($n) {\n      \
    \  return $n[0];\n    }, $arr);\n}\n\nvar_dump(sort_array([1, 5, 2, 3, 4]));\n\
    var_dump(sort_array([-2, -3, -4, -5, -6]));\nvar_dump(sort_array([1, 0, 2, 3,\
    \ 4]));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(4)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(5)\n}\narray(5) {\n  [0]=>\n  int(-6)\n  [1]=>\n\
    \  int(-4)\n  [2]=>\n  int(-5)\n  [3]=>\n  int(-3)\n  [4]=>\n  int(-2)\n}\narray(5)\
    \ {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n  [3]=>\n  int(4)\n\
    \  [4]=>\n  int(3)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuayfkkf2.php:38\n\
    Stack trace:\n#0 /tmp/tmpuayfkkf2.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpuayfkkf2.php\
    \ on line 38\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($v) {\n    return [$v,\
    \ decbin($v)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec1sgb64.php:35\n\
    Stack trace:\n#0 /tmp/tmpec1sgb64.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpec1sgb64.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($x) {\n    return [$x,\
    \ decbin($x)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfadk9mk2.php:35\n\
    Stack trace:\n#0 /tmp/tmpfadk9mk2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfadk9mk2.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  $zeros = [];\n  foreach ($arr as\
    \ $key => $value) {\n    $binary = decbin($value);\n    $count = substr_count($binary,\
    \ '1');\n    if ($count == 0) {\n      $zeros[] = $value;\n    } else {\n    \
    \  $ones[$count][] = $value;\n    }\n  }\n  ksort($ones);\n  $result = [];\n \
    \ foreach ($ones as $key => $value) {\n    sort($value);\n    $result = array_merge($result,\
    \ $value);\n  }\n  sort($zeros);\n  $result = array_merge($result, $zeros);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8_jba08.php:41\n\
    Stack trace:\n#0 /tmp/tmpw8_jba08.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpw8_jba08.php\
    \ on line 41\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = array();\n  foreach ($arr as $key => $value)\
    \ {\n    $ones[$key] = substr_count(decbin($value), '1');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkg6bygeb.php:27\n\
    Stack trace:\n#0 /tmp/tmpkg6bygeb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkg6bygeb.php\
    \ on line 27\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($num) {\n    return [$num,\
    \ decbin($num)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones =\
    \ substr_count($a[1], '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones\
    \ === $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n\
    \  });\n  return array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrti8gh2.php:35\n\
    Stack trace:\n#0 /tmp/tmpnrti8gh2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnrti8gh2.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n\
    \    $b = array_sum($b);\n    if ($a == $b) {\n      return $a[0] - $b[0];\n \
    \   }\n    return $a - $b;\n  });\n  $arr = array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmplevphkjs.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmplevphkjs.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmplevphkjs.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmplevphkjs.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmplevphkjs.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmplevphkjs.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplevphkjs.php:39\n\
    Stack trace:\n#0 /tmp/tmplevphkjs.php(49): test()\n#1 {main}\n  thrown in /tmp/tmplevphkjs.php\
    \ on line 39\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($a) {\n    return [$a,\
    \ decbin($a)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($a) {\n    return $a[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3drc_0o4.php:35\n\
    Stack trace:\n#0 /tmp/tmp3drc_0o4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3drc_0o4.php\
    \ on line 35\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptj4umhwx.php:35\n\
    Stack trace:\n#0 /tmp/tmptj4umhwx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptj4umhwx.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjupfebcs.php:35\n\
    Stack trace:\n#0 /tmp/tmpjupfebcs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjupfebcs.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a = $a[1];\n\
    \    $b = $b[1];\n    $a_ones = substr_count($a, '1');\n    $b_ones = substr_count($b,\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a > $b ? 1 : -1;\n    }\n\
    \    return $a_ones > $b_ones ? 1 : -1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3x1qq0mo.php:37\n\
    Stack trace:\n#0 /tmp/tmp3x1qq0mo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3x1qq0mo.php\
    \ on line 37\n"
  timestamp: 1659794696
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $arr = array_map(function($n) {\n    return [$n,\
    \ decbin($n)];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1],\
    \ '1');\n    $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones)\
    \ {\n      return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoc8bes_a.php:35\n\
    Stack trace:\n#0 /tmp/tmpoc8bes_a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpoc8bes_a.php\
    \ on line 35\n"
  timestamp: 1659730505
- exit_code: 255
  program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array(array(1, 5, 2, 3, 4))\n// array(1,\
    \ 2, 3, 4, 5)\n// >>> sort_array(array(-2, -3, -4, -5, -6))\n// array(-6, -5,\
    \ -4, -3, -2)\n// >>> sort_array(array(1, 0, 2, 3, 4))\n// array(0, 1, 2, 3, 4)\n\
    function sort_array($arr) {\n  $ones = [];\n  foreach ($arr as $key => $value)\
    \ {\n    $ones[$key] = substr_count(decbin($value), '1');\n  }\n  array_multisort($ones,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfa9ktsk1.php:27\n\
    Stack trace:\n#0 /tmp/tmpfa9ktsk1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfa9ktsk1.php\
    \ on line 27\n"
  timestamp: 1659730505

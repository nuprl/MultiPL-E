language: php
name: HumanEval_78_hex_key
results:
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $hex = str_split(strtoupper($num));\n\
    \    $hex = array_map(function($v) {\n        return hexdec($v);\n    }, $hex);\n\
    \    $count = 0;\n    foreach ($hex as $v) {\n        if (in_array($v, $primes))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730745
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730688
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730688
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $hex_primes = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $hex_primes++;\n        }\n    }\n    return $hex_primes;\n\
    }\n\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730745
- exit_code: 255
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        $char = $num[$i];\n    \
    \    if (in_array($char, $primes)) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\"\
    ) . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n2\n2\n4\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp54qo604i.php:44\n\
    Stack trace:\n#0 /tmp/tmp54qo604i.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp54qo604i.php\
    \ on line 44\n"
  timestamp: 1659730745
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    4

    6

    2

    '
  timestamp: 1659730688
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    4

    6

    2

    '
  timestamp: 1659730688
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n \
    \       '2' => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n \
    \       '6' => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n \
    \       'A' => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n\
    \        'E' => 14,\n        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7,\
    \ 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n   \
    \     if (in_array($hex[$num[$i]], $primes)) {\n            $count++;\n      \
    \  }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AB\")\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1077E\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ABED1A33\"\
    ) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"2020\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\"\
    ) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730688
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $hex_digits =\
    \ array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n    $hex_digits_str\
    \ = array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D',\
    \ 'E', 'F');\n    $hex_digits_str_to_num = array_combine($hex_digits_str, $hex_digits);\n\
    \    $num_arr = str_split($num);\n    $num_arr_num = array_map(function($item)\
    \ use ($hex_digits_str_to_num) {\n        return $hex_digits_str_to_num[$item];\n\
    \    }, $num_arr);\n    $count = 0;\n    foreach ($num_arr_num as $item) {\n \
    \       if (in_array($item, $primes)) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730745
- exit_code: 255
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $hex = str_split(strtoupper($num));\n\
    \    $count = 0;\n    foreach ($hex as $digit) {\n        if (in_array($digit,\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n2\n2\n4\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4bh8j9u.php:44\n\
    Stack trace:\n#0 /tmp/tmpb4bh8j9u.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpb4bh8j9u.php\
    \ on line 44\n"
  timestamp: 1659730688
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $hex = [0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\n    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($num); $i++) {\n        if (in_array($hex[hexdec($num[$i])], $primes))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho hex_key(\"\
    AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\"\
    ) . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    4

    6

    2

    '
  timestamp: 1659730745
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $hex_primes = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $hex_primes++;\n        }\n    }\n    return $hex_primes;\n\
    }\n\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730745
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $hex = array(\n        '0', '1', '2', '3', '4', '5', '6',\
    \ '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'\n    );\n    $primes = array(\n\
    \        '2', '3', '5', '7', 'B', 'D'\n    );\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $primes)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730745
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    $num\
    \ = str_split($num);\n    foreach ($num as $n) {\n        if (in_array(hexdec($n),\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730688
- exit_code: 255
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n  $primes = [2, 3, 5, 7, 11, 13];\n  $count = 0;\n  $num =\
    \ str_split($num);\n  foreach ($num as $digit) {\n    if (in_array($digit, $primes))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho hex_key(\"AB\")\
    \ . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") .\
    \ \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n2\n2\n4\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpawqk1add.php:45\n\
    Stack trace:\n#0 /tmp/tmpawqk1add.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpawqk1add.php\
    \ on line 45\n"
  timestamp: 1659730745
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $hex_primes = [2, 3, 5, 7, 11, 13];\n    $hex_digits =\
    \ str_split(strtoupper($num));\n    $count = 0;\n    foreach ($hex_digits as $digit)\
    \ {\n        if (in_array(hexdec($digit), $hex_primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730688
- exit_code: 255
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $primes = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($hex[array_search($num[$i],\
    \ $hex)], $primes)) {\n                $count++;\n            }\n        }\n \
    \   }\n    return $count;\n}\n\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"\
    1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n2\n2\n4\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiamu5jpc.php:47\n\
    Stack trace:\n#0 /tmp/tmpiamu5jpc.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpiamu5jpc.php\
    \ on line 47\n"
  timestamp: 1659730688
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $hex = [\n        '0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9',\n        'A', 'B', 'C', 'D', 'E', 'F'\n    ];\n    $primes = [2, 3,\
    \ 5, 7, 11, 13];\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n\
    \        if (in_array($num[$i], $hex)) {\n            if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\n\necho hex_key(\"AB\");\necho \"<br>\";\necho hex_key(\"\
    1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"\
    123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"2020\");\necho \"<br>\";\n\
    function candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2<br>4<br>6<br>2<br>
  timestamp: 1659730745
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    $num\
    \ = str_split($num);\n    foreach ($num as $key => $value) {\n        if (in_array(hexdec($value),\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730745
- exit_code: 0
  program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// >>> hex_key(\"AB\")\n//\
    \ 1\n// >>> hex_key(\"1077E\")\n// 2\n// >>> hex_key(\"ABED1A33\")\n// 4\n// >>>\
    \ hex_key(\"123456789ABCDEF0\")\n// 6\n// >>> hex_key(\"2020\")\n// 2\nfunction\
    \ hex_key($num) {\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    4

    6

    2

    '
  timestamp: 1659730688

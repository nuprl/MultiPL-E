name: HumanEval_111_histogram
language: php
prompt: "<?php\n// Given a string representing a space separated lowercase letters,\
  \ return a dictionary\n// of the letter with the most repetition and containing\
  \ the corresponding count.\n// If several letters have the same occurrence, return\
  \ all of them.\n// Example:\n// >>> histogram(\"a b c\")\n// array(\"a\" => 1, \"\
  b\" => 1, \"c\" => 1)\n// >>> histogram(\"a b b a\")\n// array(\"a\" => 2, \"b\"\
  \ => 2)\n// >>> histogram(\"a b c a b\")\n// array(\"a\" => 2, \"b\" => 2)\n// >>>\
  \ histogram(\"b b b b a\")\n// array(\"b\" => 4)\n// >>> histogram(\"\")\n// array()\n\
  function histogram($test) {\n"
tests: "function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\"\
  ) !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
  \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"\
  r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $letters = explode(\" \", $test);\n    $count = array_count_values($letters);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $histogram)) {\n \
    \           $histogram[$value]++;\n        } else {\n            $histogram[$value]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n\
    \            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$letters = explode(\" \", $test);\n\t$counts = array();\n\tforeach ($letters\
    \ as $letter) {\n\t\tif (array_key_exists($letter, $counts)) {\n\t\t\t$counts[$letter]\
    \ += 1;\n\t\t} else {\n\t\t\t$counts[$letter] = 1;\n\t\t}\n\t}\n\t$max = max($counts);\n\
    \t$max_letters = array();\n\tforeach ($counts as $letter => $count) {\n\t\tif\
    \ ($count == $max) {\n\t\t\t$max_letters[$letter] = $count;\n\t\t}\n\t}\n\treturn\
    \ $max_letters;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "    $letters = explode(\" \", $test);\n    $letterCount\
    \ = array();\n    foreach ($letters as $letter) {\n        if (isset($letterCount[$letter]))\
    \ {\n            $letterCount[$letter]++;\n        } else {\n            $letterCount[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($letterCount);\n    $maxLetters = array();\n\
    \    foreach ($letterCount as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $maxLetters[$letter] = $count;\n        }\n    }\n    return\
    \ $maxLetters;\n}\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n\
    \    foreach ($test as $letter) {\n        if (!array_key_exists($letter, $histogram))\
    \ {\n            $histogram[$letter] = 1;\n        } else {\n            $histogram[$letter]++;\n\
    \        }\n    }\n    $max = max($histogram);\n    $max_letters = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}", "    $letters = explode(\" \", $test);\n    $count = array_count_values($letters);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $key => $value) {\n        if\
    \ (array_key_exists($value, $histogram)) {\n            $histogram[$value]++;\n\
    \        } else {\n            $histogram[$value] = 1;\n        }\n    }\n   \
    \ return $histogram;\n}\n\n$test = \"a b c\";\n$test2 = \"a b b a\";\n$test3 =\
    \ \"a b c a b\";\n$test4 = \"b b b b a\";\n$test5 = \"\";\n\necho \"Test 1: \"\
    \ . $test . \"\\n\";\nprint_r(histogram($test));\necho \"Test 2: \" . $test2 .\
    \ \"\\n\";\nprint_r(histogram($test2));\necho \"Test 3: \" . $test3 . \"\\n\"\
    ;\nprint_r(histogram($test3));\necho \"Test 4: \" . $test4 . \"\\n\";\nprint_r(histogram($test4));\n\
    echo \"Test 5: \" . $test5 . \"\\n\";\nprint_r(histogram($test5));\n", "\t$test\
    \ = explode(\" \", $test);\n\t$result = array();\n\tforeach ($test as $key =>\
    \ $value) {\n\t\tif (isset($result[$value])) {\n\t\t\t$result[$value]++;\n\t\t\
    } else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\t$max = max($result);\n\tforeach\
    \ ($result as $key => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($result[$key]);\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "    $test = explode(\" \", $test);\n   \
    \ $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n", "    $array = explode(\"\
    \ \", $test);\n    $count = array_count_values($array);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "\t$letters = explode(\" \", $test);\n\t$counts =\
    \ array();\n\tforeach ($letters as $letter) {\n\t\tif (isset($counts[$letter]))\
    \ {\n\t\t\t$counts[$letter]++;\n\t\t} else {\n\t\t\t$counts[$letter] = 1;\n\t\t\
    }\n\t}\n\t$max = 0;\n\tforeach ($counts as $count) {\n\t\tif ($count > $max) {\n\
    \t\t\t$max = $count;\n\t\t}\n\t}\n\t$result = array();\n\tforeach ($counts as\
    \ $letter => $count) {\n\t\tif ($count == $max) {\n\t\t\t$result[$letter] = $count;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "    $test = explode(\" \", $test);\n   \
    \ $count = array_count_values($test);\n    $max = max($count);\n    $result =\
    \ array();\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = explode(\" \", $test);\n    $count = array_count_values($letters);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $letters = explode(\" \", $test);\n  $counts = array();\n  foreach ($letters\
    \ as $letter) {\n    if (array_key_exists($letter, $counts)) {\n      $counts[$letter]\
    \ += 1;\n    } else {\n      $counts[$letter] = 1;\n    }\n  }\n  $max = max($counts);\n\
    \  $max_letters = array();\n  foreach ($counts as $letter => $count) {\n    if\
    \ ($count == $max) {\n      $max_letters[$letter] = $count;\n    }\n  }\n  return\
    \ $max_letters;\n}\n", "    $letters = explode(\" \", $test);\n    $counts = array();\n\
    \    foreach ($letters as $letter) {\n        if (!isset($counts[$letter])) {\n\
    \            $counts[$letter] = 0;\n        }\n        $counts[$letter]++;\n \
    \   }\n    $max = max($counts);\n    $max_letters = array();\n    foreach ($counts\
    \ as $letter => $count) {\n        if ($count == $max) {\n            $max_letters[$letter]\
    \ = $count;\n        }\n    }\n    return $max_letters;\n}\n", "  $test = explode(\"\
    \ \", $test);\n  $test = array_count_values($test);\n  $max = max($test);\n  $result\
    \ = array();\n  foreach ($test as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n", "    $test\
    \ = explode(\" \", $test);\n    $count = array_count_values($test);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $result = array();\n    $max = 0;\n    foreach ($test as $value) {\n      \
    \  if (!isset($result[$value])) {\n            $result[$value] = 1;\n        }\
    \ else {\n            $result[$value]++;\n        }\n        if ($result[$value]\
    \ > $max) {\n            $max = $result[$value];\n        }\n    }\n    foreach\
    \ ($result as $key => $value) {\n        if ($value < $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}", "    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (isset($result[$value]))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n", "    $letters = explode(\"\
    \ \", $test);\n    $count = array_count_values($letters);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \"\
    , $test);\n    $result = array();\n    foreach ($test as $value) {\n        if\
    \ (array_key_exists($value, $result)) {\n            $result[$value]++;\n    \
    \    } else {\n            $result[$value] = 1;\n        }\n    }\n    $max =\
    \ max($result);\n    $max_keys = array_keys($result, $max);\n    $result = array_intersect_key($result,\
    \ array_flip($max_keys));\n    return $result;\n}\n", "  $test = explode(\" \"\
    , $test);\n  $result = array();\n  foreach ($test as $key => $value) {\n    if\
    \ (array_key_exists($value, $result)) {\n      $result[$value]++;\n    } else\
    \ {\n      $result[$value] = 1;\n    }\n  }\n  $max = max($result);\n  foreach\
    \ ($result as $key => $value) {\n    if ($value < $max) {\n      unset($result[$key]);\n\
    \    }\n  }\n  return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    echo \"\\n\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"\\n\"\
    ;\n$test = \"a b c a b\";\nprint_r(histogram($test));\necho \"\\n\";\n$test =\
    \ \"b b b b a\";\nprint_r(histogram($test));\necho \"\\n\";\n$test = \"\";\nprint_r(histogram($test));\n\
    echo \"\\n\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $letters = explode(\" \", $test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array();\n    foreach ($counts as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = explode(\" \", $test);\n    $count = array_count_values($letters);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $result)) {\n            $result[$letter] += 1;\n        } else {\n        \
    \    $result[$letter] = 1;\n        }\n    }\n    return $result;\n}\n", "   \
    \ $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test as\
    \ $value) {\n        if (!isset($result[$value])) {\n            $result[$value]\
    \ = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n \
    \   $max = max($result);\n    $max_keys = array_keys($result, $max);\n    $result\
    \ = array_intersect_key($result, array_flip($max_keys));\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $key => $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $test = explode(\" \", $test);\n  $result = array();\n  foreach ($test\
    \ as $letter) {\n    if (isset($result[$letter])) {\n      $result[$letter] +=\
    \ 1;\n    } else {\n      $result[$letter] = 1;\n    }\n  }\n  return $result;\n\
    }\n\n$test = \"a b c\";\n$test2 = \"a b b a\";\n$test3 = \"a b c a b\";\n$test4\
    \ = \"b b b b a\";\n$test5 = \"\";\n\nprint_r(histogram($test));\nprint_r(histogram($test2));\n\
    print_r(histogram($test3));\nprint_r(histogram($test4));\nprint_r(histogram($test5));",
  "\t$test = str_replace(\" \", \"\", $test);\n\t$letters = str_split($test);\n\t\
    $count = array_count_values($letters);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $test = explode(\" \",\
    \ $test);\n    $count = array_count_values($test);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count =\
    \ array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "  $array = explode(\" \", $test);\n  $histogram = array();\n  foreach ($array as\
    \ $value) {\n    if (array_key_exists($value, $histogram)) {\n      $histogram[$value]\
    \ += 1;\n    } else {\n      $histogram[$value] = 1;\n    }\n  }\n  $max = max($histogram);\n\
    \  $result = array();\n  foreach ($histogram as $key => $value) {\n    if ($value\
    \ == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $key => $value) {\n        if (!isset($result[$value])) {\n            $result[$value]\
    \ = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n \
    \   return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $key => $value) {\n        if\
    \ (array_key_exists($value, $histogram)) {\n            $histogram[$value] +=\
    \ 1;\n        } else {\n            $histogram[$value] = 1;\n        }\n    }\n\
    \    $max = max($histogram);\n    $result = array();\n    foreach ($histogram\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $test = explode(\"\
    \ \", $test);\n    $result = array();\n    foreach ($test as $value) {\n     \
    \   if (array_key_exists($value, $result)) {\n            $result[$value] += 1;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = explode(\" \", $test);\n    $counts = array_count_values($letters);\n\
    \    $max = max($counts);\n    $result = array();\n    foreach ($counts as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $letter) {\n        if (array_key_exists($letter, $histogram)) {\n\
    \            $histogram[$letter] += 1;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $max_letters = array();\n\
    \    foreach ($histogram as $letter => $count) {\n        if ($count == $max)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}\n", "    $letters = explode(\" \", $test);\n    $counts = array_count_values($letters);\n\
    \    $max = max($counts);\n    $result = array();\n    foreach ($counts as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "    $histogram = [];\n    $letters = explode(\" \", $test);\n\
    \    foreach ($letters as $letter) {\n        if (array_key_exists($letter, $histogram))\
    \ {\n            $histogram[$letter] += 1;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n", "    $arr = explode(\"\
    \ \", $test);\n    $count = array_count_values($arr);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if (isset($result[$value]))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "  $letters = explode(\" \", $test);\n  $count = array_count_values($letters);\n\
    \  $max = max($count);\n  $max_letters = array();\n  foreach ($count as $key =>\
    \ $value) {\n    if ($value == $max) {\n      $max_letters[$key] = $value;\n \
    \   }\n  }\n  return $max_letters;\n}\n", "    $arr = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $histogram)) {\n            $histogram[$value]++;\n        } else {\n      \
    \      $histogram[$value] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}", "    $array = explode(\" \", $test);\n    $counts\
    \ = array_count_values($array);\n    $max = max($counts);\n    $result = array();\n\
    \    foreach ($counts as $key => $value) {\n        if ($value == $max) {\n  \
    \          $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach ($test\
    \ as $letter) {\n        if (array_key_exists($letter, $histogram)) {\n      \
    \      $histogram[$letter] += 1;\n        } else {\n            $histogram[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n\
    \            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = explode(\" \", $test);\n    $count = array_count_values($letters);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n",
  "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n  $max\
    \ = max($count);\n  $result = array();\n  foreach ($count as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $test = explode(\" \", $test);\n    foreach ($test as $value) {\n\
    \        if (array_key_exists($value, $result)) {\n            $result[$value]\
    \ += 1;\n        } else {\n            $result[$value] = 1;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $result =\
    \ array();\n    foreach ($test as $value) {\n        if (!isset($result[$value]))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$test = explode(\" \", $test);\n\t$test = array_count_values($test);\n\
    \tarsort($test);\n\t$test = array_slice($test, 0, 1, true);\n\treturn $test;\n\
    }\n", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $value) {\n        if (isset($result[$value])) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $test = explode(\" \", $test);\n  $result = array();\n  foreach\
    \ ($test as $key => $value) {\n    if (array_key_exists($value, $result)) {\n\
    \      $result[$value] += 1;\n    } else {\n      $result[$value] = 1;\n    }\n\
    \  }\n  return $result;\n}\n", "    $arr = explode(\" \", $test);\n    $hist =\
    \ array();\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $hist)) {\n            $hist[$value]++;\n        } else {\n            $hist[$value]\
    \ = 1;\n        }\n    }\n    return $hist;\n}\n", "    $test = explode(\" \"\
    , $test);\n    $result = array();\n    foreach ($test as $key => $value) {\n \
    \       if (array_key_exists($value, $result)) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    $max\
    \ = max($result);\n    $result = array_filter($result, function ($value) use ($max)\
    \ {\n        return $value == $max;\n    });\n    return $result;\n}\n", "\t$test\
    \ = explode(\" \", $test);\n\t$histogram = array();\n\tforeach ($test as $value)\
    \ {\n\t\tif (isset($histogram[$value])) {\n\t\t\t$histogram[$value]++;\n\t\t}\
    \ else {\n\t\t\t$histogram[$value] = 1;\n\t\t}\n\t}\n\t$max = max($histogram);\n\
    \t$result = array();\n\tforeach ($histogram as $key => $value) {\n\t\tif ($value\
    \ == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n  \
    \  $max = max($test);\n    foreach ($test as $key => $value) {\n        if ($value\
    \ != $max) {\n            unset($test[$key]);\n        }\n    }\n    return $test;\n\
    }", "    $result = [];\n    $test = explode(\" \", $test);\n    foreach ($test\
    \ as $value) {\n        if (isset($result[$value])) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = explode(\" \", $test);\n    $counts = array_count_values($letters);\n\
    \    $max = max($counts);\n    $result = array();\n    foreach ($counts as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    foreach ($count as $key => $value) {\n        if\
    \ ($value != $max) {\n            unset($count[$key]);\n        }\n    }\n   \
    \ return $count;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}", "    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$letters = explode(\" \", $test);\n\t$counts = array();\n\tforeach ($letters\
    \ as $letter) {\n\t\tif (array_key_exists($letter, $counts)) {\n\t\t\t$counts[$letter]++;\n\
    \t\t} else {\n\t\t\t$counts[$letter] = 1;\n\t\t}\n\t}\n\t$max = max($counts);\n\
    \t$max_letters = array();\n\tforeach ($counts as $letter => $count) {\n\t\tif\
    \ ($count == $max) {\n\t\t\t$max_letters[$letter] = $count;\n\t\t}\n\t}\n\treturn\
    \ $max_letters;\n}\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $histogram))\
    \ {\n            $histogram[$value]++;\n        } else {\n            $histogram[$value]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n\
    \            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $max = 0;\n    $max_letters = array();\n\
    \    $letters = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $letters)) {\n            $letters[$letter]++;\n        } else {\n         \
    \   $letters[$letter] = 1;\n        }\n        if ($letters[$letter] > $max) {\n\
    \            $max = $letters[$letter];\n            $max_letters = array($letter\
    \ => $max);\n        } elseif ($letters[$letter] == $max) {\n            $max_letters[$letter]\
    \ = $max;\n        }\n    }\n    return $max_letters;\n}", "    $letters = explode(\"\
    \ \", $test);\n    $counts = array();\n    foreach ($letters as $letter) {\n \
    \       if (array_key_exists($letter, $counts)) {\n            $counts[$letter]++;\n\
    \        } else {\n            $counts[$letter] = 1;\n        }\n    }\n    $max\
    \ = max($counts);\n    $result = array();\n    foreach ($counts as $letter =>\
    \ $count) {\n        if ($count == $max) {\n            $result[$letter] = $count;\n\
    \        }\n    }\n    return $result;\n}", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $max_letters = array();\n    foreach ($histogram as $letter => $count) {\n\
    \        if ($count == $max) {\n            $max_letters[$letter] = $count;\n\
    \        }\n    }\n    return $max_letters;\n}", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $key => $value) {\n        if\
    \ (array_key_exists($value, $histogram)) {\n            $histogram[$value]++;\n\
    \        } else {\n            $histogram[$value] = 1;\n        }\n    }\n   \
    \ return $histogram;\n}\n", "  $array = explode(\" \", $test);\n  $count = array_count_values($array);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "  $array = explode(\" \", $test);\n  $array = array_count_values($array);\n\
    \  arsort($array);\n  $max = max($array);\n  $result = array();\n  foreach ($array\
    \ as $key => $value) {\n    if ($value == $max) {\n      $result[$key] = $value;\n\
    \    }\n  }\n  return $result;\n}\n", "  $test = explode(\" \", $test);\n  $test\
    \ = array_count_values($test);\n  $max = max($test);\n  $result = array();\n \
    \ foreach ($test as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "    $letters = explode(\" \"\
    , $test);\n    $letter_count = array();\n    foreach ($letters as $letter) {\n\
    \        if (array_key_exists($letter, $letter_count)) {\n            $letter_count[$letter]\
    \ += 1;\n        } else {\n            $letter_count[$letter] = 1;\n        }\n\
    \    }\n    $max_count = max($letter_count);\n    $max_letters = array();\n  \
    \  foreach ($letter_count as $letter => $count) {\n        if ($count == $max_count)\
    \ {\n            $max_letters[$letter] = $count;\n        }\n    }\n    return\
    \ $max_letters;\n}", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $counts = array_count_values($letters);\n    $max = max($counts);\n    $result\
    \ = array();\n    foreach ($counts as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (!array_key_exists($value,\
    \ $result)) {\n            $result[$value] = 1;\n        } else {\n          \
    \  $result[$value] += 1;\n        }\n    }\n    return $result;\n}\n", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    $max\
    \ = max($result);\n    $result = array_filter($result, function ($value) use ($max)\
    \ {\n        return $value == $max;\n    });\n    return $result;\n}\n", "   \
    \ $arr = explode(\" \", $test);\n    $count = array_count_values($arr);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $key\
    \ => $value) {\n        if (array_key_exists($value, $result)) {\n           \
    \ $result[$value]++;\n        } else {\n            $result[$value] = 1;\n   \
    \     }\n    }\n    return $result;\n}\n", "    $test = str_replace(\" \", \"\"\
    , $test);\n    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    foreach ($test as $key => $value) {\n        if ($value\
    \ < $max) {\n            unset($test[$key]);\n        }\n    }\n    return $test;\n\
    }\n", "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $letters = explode(\" \", $test);\n    $letter_count =\
    \ array();\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $letter_count)) {\n            $letter_count[$letter]++;\n        } else {\n\
    \            $letter_count[$letter] = 1;\n        }\n    }\n    $max_count = max($letter_count);\n\
    \    $max_letters = array();\n    foreach ($letter_count as $letter => $count)\
    \ {\n        if ($count == $max_count) {\n            $max_letters[$letter] =\
    \ $count;\n        }\n    }\n    return $max_letters;\n}\n", "    $letters = explode(\"\
    \ \", $test);\n    $counts = array_count_values($letters);\n    $max = max($counts);\n\
    \    $result = array();\n    foreach ($counts as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $letters = explode(\" \", $test);\n    $counts\
    \ = array_count_values($letters);\n    $max = max($counts);\n    $result = array();\n\
    \    foreach ($counts as $key => $value) {\n        if ($value == $max) {\n  \
    \          $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $value) {\n        if (!array_key_exists($value, $result)) {\n          \
    \  $result[$value] = 1;\n        } else {\n            $result[$value]++;\n  \
    \      }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $array = explode(\" \", $test);\n\
    \  $count = array_count_values($array);\n  $max = max($count);\n  $result = array();\n\
    \  foreach ($count as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "    $array = explode(\" \"\
    , $test);\n    $count = array_count_values($array);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count =\
    \ array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $letters = explode(\" \", $test);\n    $count = array_count_values($letters);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (isset($counts[$letter]))\
    \ {\n            $counts[$letter] += 1;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n\
    \    foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $key => $value) {\n        if (!array_key_exists($value, $result))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]\
    \ += 1;\n        }\n    }\n    return $result;\n}\n", "    $test = explode(\"\
    \ \", $test);\n    $result = array();\n    foreach ($test as $value) {\n     \
    \   if (array_key_exists($value, $result)) {\n            $result[$value] += 1;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $histogram)) {\n \
    \           $histogram[$value]++;\n        } else {\n            $histogram[$value]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n\
    \            $result[$key] = $value;\n        }\n    }\n    return $result;\n}",
  "    $test = explode(\" \", $test);\n    $histogram = array();\n    foreach ($test\
    \ as $key => $value) {\n        if (array_key_exists($value, $histogram)) {\n\
    \            $histogram[$value] += 1;\n        } else {\n            $histogram[$value]\
    \ = 1;\n        }\n    }\n    return $histogram;\n}\n", "    $test = explode(\"\
    \ \", $test);\n    $test = array_count_values($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $test = str_replace(\" \", \"\", $test);\n  $test = str_split($test);\n\
    \  $test = array_count_values($test);\n  $max = max($test);\n  $result = array();\n\
    \  foreach ($test as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "    $letters = explode(\" \"\
    , $test);\n    $count = array_count_values($letters);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $array = explode(\" \", $test);\n    $count =\
    \ array_count_values($array);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $value) {\n        if (array_key_exists($value, $result)) {\n           \
    \ $result[$value] += 1;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $letters = explode(\" \", $test);\n    $counts = array_count_values($letters);\n\
    \    $max = max($counts);\n    $result = array();\n    foreach ($counts as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    $max = max($result);\n    $result\
    \ = array_filter($result, function ($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n", "    $letters = explode(\" \"\
    , $test);\n    $counts = array_count_values($letters);\n    $max = max($counts);\n\
    \    $result = array();\n    foreach ($counts as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count =\
    \ array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n\
    print_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $key => $value) {\n        if (array_key_exists($value, $result)) {\n   \
    \         $result[$value]++;\n        } else {\n            $result[$value] =\
    \ 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $letters = explode(\" \", $test);\n\
    \  $count = array_count_values($letters);\n  $max = max($count);\n  $result =\
    \ array();\n  foreach ($count as $key => $value) {\n    if ($value == $max) {\n\
    \      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n", "    $test\
    \ = explode(\" \", $test);\n    $count = array_count_values($test);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $result = array();\n    $test =\
    \ explode(\" \", $test);\n    $max = 0;\n    foreach ($test as $value) {\n   \
    \     if (isset($result[$value])) {\n            $result[$value]++;\n        }\
    \ else {\n            $result[$value] = 1;\n        }\n        if ($result[$value]\
    \ > $max) {\n            $max = $result[$value];\n        }\n    }\n    foreach\
    \ ($result as $key => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }", "\t$test = explode(\" \", $test);\n\t$test = array_count_values($test);\n\t\
    $max = max($test);\n\t$result = array();\n\tforeach ($test as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $array = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($array as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "    $test\
    \ = explode(\" \", $test);\n    $histogram = array();\n    foreach ($test as $letter)\
    \ {\n        if (!isset($histogram[$letter])) {\n            $histogram[$letter]\
    \ = 1;\n        } else {\n            $histogram[$letter] += 1;\n        }\n \
    \   }\n    return $histogram;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $letterCount = array();\n    foreach ($letters as $letter) {\n        if\
    \ (array_key_exists($letter, $letterCount)) {\n            $letterCount[$letter]++;\n\
    \        } else {\n            $letterCount[$letter] = 1;\n        }\n    }\n\
    \    $max = max($letterCount);\n    $maxLetters = array();\n    foreach ($letterCount\
    \ as $letter => $count) {\n        if ($count == $max) {\n            $maxLetters[$letter]\
    \ = $count;\n        }\n    }\n    return $maxLetters;\n}\n", "    $letters =\
    \ explode(\" \", $test);\n    $count = array_count_values($letters);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}", "    $letters = explode(\" \", $test);\n\
    \    $count = array_count_values($letters);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $arr = explode(\" \", $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "  $letters = explode(\" \", $test);\n\
    \  $counts = array();\n  foreach ($letters as $letter) {\n    if (array_key_exists($letter,\
    \ $counts)) {\n      $counts[$letter]++;\n    } else {\n      $counts[$letter]\
    \ = 1;\n    }\n  }\n  $max = max($counts);\n  $max_letters = array();\n  foreach\
    \ ($counts as $letter => $count) {\n    if ($count == $max) {\n      $max_letters[$letter]\
    \ = $count;\n    }\n  }\n  return $max_letters;\n}\n", "    $test = explode(\"\
    \ \", $test);\n    $result = array();\n    foreach ($test as $value) {\n     \
    \   if (array_key_exists($value, $result)) {\n            $result[$value] += 1;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    $max\
    \ = max($result);\n    foreach ($result as $key => $value) {\n        if ($value\
    \ != $max) {\n            unset($result[$key]);\n        }\n    }\n    return\
    \ $result;\n}\n", "    $letters = explode(\" \", $test);\n    $counts = array_count_values($letters);\n\
    \    arsort($counts);\n    $max = max($counts);\n    $result = array();\n    foreach\
    \ ($counts as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\necho \"histogram(\\\"\
    a b c\\\")\\n\";\nprint_r(histogram(\"a b c\"));\necho \"histogram(\\\"a b b a\\\
    \")\\n\";\nprint_r(histogram(\"a b b a\"));\necho \"histogram(\\\"a b c a b\\\"\
    )\\n\";\nprint_r(histogram(\"a b c a b\"));\necho \"histogram(\\\"b b b b a\\\"\
    )\\n\";\nprint_r(histogram(\"b b b b a\"));\necho \"histogram(\\\"\\\")\\n\";\n\
    print_r(histogram(\"\"));", "    $arr = explode(\" \", $test);\n    $count = array_count_values($arr);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $key => $value) {\n        if (!isset($result[$value])) {\n      \
    \      $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "  $letters = explode(\" \", $test);\n  $count = array_count_values($letters);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n", "    $test = str_replace(\" \", \"\", $test);\n    $test = str_split($test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $test = explode(\" \", $test);\n  $result = array();\n  foreach ($test\
    \ as $key => $value) {\n    if (array_key_exists($value, $result)) {\n      $result[$value]\
    \ += 1;\n    } else {\n      $result[$value] = 1;\n    }\n  }\n  return $result;\n\
    }\n", "    $letters = explode(\" \", $test);\n    $counts = array_count_values($letters);\n\
    \    $max = max($counts);\n    $result = array();\n    foreach ($counts as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n  \
    \          $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}", "    $test = str_replace(' ', '', $test);\n    $test\
    \ = str_split($test);\n    $test = array_count_values($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $array = explode(\" \", $test);\n    $count = array_count_values($array);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    $max = max($result);\n    $result\
    \ = array_filter($result, function ($value) use ($max) {\n        return $value\
    \ == $max;\n    });\n    return $result;\n}\n", "    $test = str_replace(\" \"\
    , \"\", $test);\n    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}", "    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "  $letters = explode(\" \", $test);\n  $letter_count = array();\n  foreach\
    \ ($letters as $letter) {\n    if (array_key_exists($letter, $letter_count)) {\n\
    \      $letter_count[$letter] += 1;\n    } else {\n      $letter_count[$letter]\
    \ = 1;\n    }\n  }\n  $max_count = max($letter_count);\n  $max_letters = array();\n\
    \  foreach ($letter_count as $letter => $count) {\n    if ($count == $max_count)\
    \ {\n      $max_letters[$letter] = $count;\n    }\n  }\n  return $max_letters;\n\
    }\n", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}", "    $letters = explode(\" \", $test);\n\
    \    $letter_count = array();\n    foreach ($letters as $letter) {\n        if\
    \ (array_key_exists($letter, $letter_count)) {\n            $letter_count[$letter]++;\n\
    \        } else {\n            $letter_count[$letter] = 1;\n        }\n    }\n\
    \    $max_count = max($letter_count);\n    $max_letters = array();\n    foreach\
    \ ($letter_count as $letter => $count) {\n        if ($count == $max_count) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }", "    $arr = explode(\" \", $test);\n    $result = array();\n    foreach ($arr\
    \ as $value) {\n        if (!array_key_exists($value, $result)) {\n          \
    \  $result[$value] = 1;\n        } else {\n            $result[$value]++;\n  \
    \      }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}\n",
  "  $test = str_replace(' ', '', $test);\n  $test = str_split($test);\n  $test =\
    \ array_count_values($test);\n  $max = max($test);\n  $result = array();\n  foreach\
    \ ($test as $key => $value) {\n    if ($value == $max) {\n      $result[$key]\
    \ = $value;\n    }\n  }\n  return $result;\n}\n", "    $test = explode(\" \",\
    \ $test);\n    $counts = array_count_values($test);\n    arsort($counts);\n  \
    \  $max = max($counts);\n    $result = array();\n    foreach ($counts as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    foreach\
    \ ($count as $key => $value) {\n        if ($value != $max) {\n            unset($count[$key]);\n\
    \        }\n    }\n    return $count;\n}\n", "    $histogram = array();\n    $letters\
    \ = explode(\" \", $test);\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}\n", "    $result = [];\n    $test = explode(\" \"\
    , $test);\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]\
    \ += 1;\n        } else {\n            $result[$value] = 1;\n        }\n    }\n\
    \    $max = max($result);\n    $result = array_filter($result, function ($value)\
    \ use ($max) {\n        return $value == $max;\n    });\n    return $result;\n\
    }\n", "    $letters = explode(\" \", $test);\n    $counts = array();\n    foreach\
    \ ($letters as $letter) {\n        if (array_key_exists($letter, $counts)) {\n\
    \            $counts[$letter] += 1;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n\
    \    foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n", "    $result = array();\n    $test = explode(\" \", $test);\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $result)) {\n    \
    \        $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    foreach ($result as $key\
    \ => $value) {\n        if ($value != $max) {\n            unset($result[$key]);\n\
    \        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $histogram = array();\n    foreach ($test as $letter) {\n        if (array_key_exists($letter,\
    \ $histogram)) {\n            $histogram[$letter]++;\n        } else {\n     \
    \       $histogram[$letter] = 1;\n        }\n    }\n    $max = max($histogram);\n\
    \    $result = array();\n    foreach ($histogram as $key => $value) {\n      \
    \  if ($value == $max) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}", "    $test = explode(\" \", $test);\n    $result\
    \ = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "    $letters\
    \ = explode(\" \", $test);\n    $count = array_count_values($letters);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $letters = explode(\" \", $test);\n\
    \    $counts = array();\n    foreach ($letters as $letter) {\n        if (isset($counts[$letter]))\
    \ {\n            $counts[$letter]++;\n        } else {\n            $counts[$letter]\
    \ = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters = array();\n\
    \    foreach ($counts as $letter => $count) {\n        if ($count == $max) {\n\
    \            $max_letters[$letter] = $count;\n        }\n    }\n    return $max_letters;\n\
    }\n", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $value) {\n        if (array_key_exists($value, $result)) {\n    \
    \        $result[$value] += 1;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \"\
    , $test);\n    $counts = array_count_values($test);\n    $max = max($counts);\n\
    \    $result = array();\n    foreach ($counts as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "    $array = explode(\" \", $test);\n    $result\
    \ = array();\n    foreach ($array as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "  $test\
    \ = explode(\" \", $test);\n  $count = array_count_values($test);\n  $max = max($count);\n\
    \  $result = array();\n  foreach ($count as $key => $value) {\n    if ($value\
    \ == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n  \
    \  $max = max($test);\n    $result = array();\n    foreach ($test as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "    $test = str_replace(' ', '', $test);\n    $test = str_split($test);\n\
    \    $result = [];\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n", "    $words\
    \ = explode(\" \", $test);\n    $counts = array_count_values($words);\n    $max\
    \ = max($counts);\n    $result = array();\n    foreach ($counts as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n", "    $test = explode(\" \"\
    , $test);\n    $count = array_count_values($test);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n", "  $array = explode(\" \", $test);\n  $count = array_count_values($array);\n\
    \  $max = max($count);\n  $result = array();\n  foreach ($count as $key => $value)\
    \ {\n    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"\
    ));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\n\
    print_r(histogram(\"\"));", "\t$result = array();\n\t$test = explode(\" \", $test);\n\
    \tforeach ($test as $key => $value) {\n\t\tif (array_key_exists($value, $result))\
    \ {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] = 1;\n\t\t\
    }\n\t}\n\tarsort($result);\n\t$max = reset($result);\n\tforeach ($result as $key\
    \ => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($result[$key]);\n\t\t}\n\
    \t}\n\treturn $result;\n}\n", "    $letters = explode(\" \", $test);\n    $counts\
    \ = array();\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $counts)) {\n            $counts[$letter] += 1;\n        } else {\n        \
    \    $counts[$letter] = 1;\n        }\n    }\n    $max = max($counts);\n    $max_letters\
    \ = array();\n    foreach ($counts as $letter => $count) {\n        if ($count\
    \ == $max) {\n            $max_letters[$letter] = $count;\n        }\n    }\n\
    \    return $max_letters;\n}", "    $test = explode(\" \", $test);\n    $count\
    \ = array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n",
  "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $value) {\n        if (array_key_exists($value, $result)) {\n           \
    \ $result[$value] += 1;\n        } else {\n            $result[$value] = 1;\n\
    \        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n", "    $letters = explode(\" \", $test);\n    $counts\
    \ = array();\n    foreach ($letters as $letter) {\n        if (array_key_exists($letter,\
    \ $counts)) {\n            $counts[$letter] += 1;\n        } else {\n        \
    \    $counts[$letter] = 1;\n        }\n    }\n    return $counts;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

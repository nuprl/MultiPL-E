language: php
name: HumanEval_145_order_by_points
results:
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array();\n    foreach\
    \ ($nums as $i => $num) {\n        $sums[$i] = array_sum(str_split($num));\n \
    \   }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $i =>\
    \ $sum) {\n        $result[] = $nums[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1972kdh.php:29\n\
    Stack trace:\n#0 /tmp/tmpu1972kdh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu1972kdh.php\
    \ on line 29\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $result = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $result[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    $result =\
    \ array_map(function($num) use ($nums) {\n        return $nums[$num];\n    },\
    \ $result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdr32vkg6.php:29\n\
    Stack trace:\n#0 /tmp/tmpdr32vkg6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdr32vkg6.php\
    \ on line 29\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sum_nums = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum_nums);\n    $result = array();\n    foreach ($sum_nums\
    \ as $key => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsjfez_t.php:29\n\
    Stack trace:\n#0 /tmp/tmpqsjfez_t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqsjfez_t.php\
    \ on line 29\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $result = array();\n    $sums\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n     \
    \   $num = abs($num);\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n   \
    \     $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnk_1wtsw.php:35\n\
    Stack trace:\n#0 /tmp/tmpnk_1wtsw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnk_1wtsw.php\
    \ on line 35\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $result = array();\n    $sum\
    \ = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoqorfdek.php:29\n\
    Stack trace:\n#0 /tmp/tmpoqorfdek.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpoqorfdek.php\
    \ on line 29\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sum = array();\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsz7oghf.php:25\n\
    Stack trace:\n#0 /tmp/tmpzsz7oghf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzsz7oghf.php\
    \ on line 25\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sum_nums = array();\n    foreach\
    \ ($nums as $key => $value) {\n        $sum_nums[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum_nums, SORT_ASC, $nums);\n    return $nums;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yrii77d.php:25\n\
    Stack trace:\n#0 /tmp/tmp9yrii77d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9yrii77d.php\
    \ on line 25\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $result = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($key) use\
    \ ($nums) {\n        return $nums[$key];\n    }, $result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuib1d2yk.php:35\n\
    Stack trace:\n#0 /tmp/tmpuib1d2yk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuib1d2yk.php\
    \ on line 35\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $nums_with_points = array();\n\
    \    foreach ($nums as $key => $num) {\n        $nums_with_points[$key] = array(\n\
    \            'num' => $num,\n            'points' => sum_of_digits($num)\n   \
    \     );\n    }\n    usort($nums_with_points, function($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] - $b['num'];\n        }\n \
    \       return $a['points'] - $b['points'];\n    });\n    $result = array();\n\
    \    foreach ($nums_with_points as $num_with_points) {\n        $result[] = $num_with_points['num'];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmpvsb7xtzv.php:16\nStack trace:\n#0 /tmp/tmpvsb7xtzv.php(33): order_by_points(Array)\n\
    #1 /tmp/tmpvsb7xtzv.php(37): candidate(Array)\n#2 /tmp/tmpvsb7xtzv.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvsb7xtzv.php on line 16\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sum_digits = array();\n  \
    \  foreach ($nums as $key => $num) {\n        $sum_digits[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum_digits, SORT_ASC, $nums);\n    return $nums;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqvdg351.php:25\n\
    Stack trace:\n#0 /tmp/tmphqvdg351.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphqvdg351.php\
    \ on line 25\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array();\n  foreach ($nums\
    \ as $key => $num) {\n    $sum = 0;\n    foreach (str_split($num) as $digit) {\n\
    \      $sum += $digit;\n    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n\
    \  $sorted = array();\n  foreach ($sums as $key => $sum) {\n    $sorted[] = $nums[$key];\n\
    \  }\n  return $sorted;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmps57qd7_5.php on line\
    \ 16\n\nWarning: A non-numeric value encountered in /tmp/tmps57qd7_5.php on line\
    \ 16\n\nWarning: A non-numeric value encountered in /tmp/tmps57qd7_5.php on line\
    \ 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps57qd7_5.php:33\n\
    Stack trace:\n#0 /tmp/tmps57qd7_5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmps57qd7_5.php\
    \ on line 33\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $nums_with_points = array();\n\
    \  $result = array();\n  foreach ($nums as $key => $num) {\n    $points = 0;\n\
    \    $num_array = str_split($num);\n    foreach ($num_array as $digit) {\n   \
    \   $points += $digit;\n    }\n    $nums_with_points[$key] = $points;\n  }\n \
    \ asort($nums_with_points);\n  foreach ($nums_with_points as $key => $points)\
    \ {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmpqsj1bl4n.php on line\
    \ 18\n\nWarning: A non-numeric value encountered in /tmp/tmpqsj1bl4n.php on line\
    \ 18\n\nWarning: A non-numeric value encountered in /tmp/tmpqsj1bl4n.php on line\
    \ 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsj1bl4n.php:34\n\
    Stack trace:\n#0 /tmp/tmpqsj1bl4n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqsj1bl4n.php\
    \ on line 34\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $result = [];\n  foreach ($nums\
    \ as $key => $num) {\n    $sum = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    $result[$key]\
    \ = $sum;\n  }\n  asort($result);\n  $result = array_keys($result);\n  $ordered\
    \ = [];\n  foreach ($result as $key) {\n    $ordered[] = $nums[$key];\n  }\n \
    \ return $ordered;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91fkzucc.php:36\n\
    Stack trace:\n#0 /tmp/tmp91fkzucc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp91fkzucc.php\
    \ on line 36\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sum = array();\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsz7oghf.php:25\n\
    Stack trace:\n#0 /tmp/tmpzsz7oghf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzsz7oghf.php\
    \ on line 25\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        foreach (str_split($num)\
    \ as $digit) {\n            $sum += $digit;\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: A non-numeric value encountered in /tmp/tmp1ttz3n5i.php on line\
    \ 16\n\nWarning: A non-numeric value encountered in /tmp/tmp1ttz3n5i.php on line\
    \ 16\n\nWarning: A non-numeric value encountered in /tmp/tmp1ttz3n5i.php on line\
    \ 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ttz3n5i.php:33\n\
    Stack trace:\n#0 /tmp/tmp1ttz3n5i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1ttz3n5i.php\
    \ on line 33\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $sums = array();\n  foreach ($nums\
    \ as $key => $num) {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  asort($sums);\n\
    \  $result = array();\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphuf5xe6e.php:29\n\
    Stack trace:\n#0 /tmp/tmphuf5xe6e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphuf5xe6e.php\
    \ on line 29\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n  $result = [];\n  foreach ($nums\
    \ as $key => $value) {\n    $result[$key] = array_sum(str_split($value));\n  }\n\
    \  asort($result);\n  $result = array_keys($result);\n  foreach ($result as $key\
    \ => $value) {\n    $result[$key] = $nums[$value];\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcf00u2iy.php:29\n\
    Stack trace:\n#0 /tmp/tmpcf00u2iy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcf00u2iy.php\
    \ on line 29\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8queh17u.php:35\n\
    Stack trace:\n#0 /tmp/tmp8queh17u.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8queh17u.php\
    \ on line 35\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array();\n    foreach\
    \ ($nums as $i => $num) {\n        $sums[$i] = array_sum(str_split($num));\n \
    \   }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $i =>\
    \ $sum) {\n        $result[] = $nums[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1972kdh.php:29\n\
    Stack trace:\n#0 /tmp/tmpu1972kdh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu1972kdh.php\
    \ on line 29\n"
  timestamp: 1659730683
- exit_code: 255
  program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points(array(1,\
    \ 11, -1, -11, -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n\
    // array()\nfunction order_by_points($nums) {\n    $sums = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8queh17u.php:35\n\
    Stack trace:\n#0 /tmp/tmp8queh17u.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8queh17u.php\
    \ on line 35\n"
  timestamp: 1659730683

name: HumanEval_145_order_by_points
language: php
prompt: "<?php\n// Write a function which sorts the given list of integers\n// in\
  \ ascending order according to the sum of their digits.\n// Note: if there are several\
  \ items with similar sum of their digits,\n// order them based on their index in\
  \ original list.\n// For example:\n// >>> order_by_points(array(1, 11, -1, -11,\
  \ -12))\n// array(-1, -11, 1, -12, 11)\n// >>> order_by_points(array())\n// array()\n\
  function order_by_points($nums) {\n"
tests: "function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
  \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3,\
  \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !==\
  \ array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10,\
  \ 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6))\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $sums = array();\n    foreach ($nums as $i => $num) {\n       \
    \ $sums[$i] = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $i => $sum) {\n        $result[] = $nums[$i];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $result = array_map(function($num)\
    \ use ($nums) {\n        return $nums[$num];\n    }, $result);\n    return $result;\n\
    }\n", "    $sum_nums = array();\n    foreach ($nums as $key => $num) {\n     \
    \   $sum_nums[$key] = array_sum(str_split($num));\n    }\n    asort($sum_nums);\n\
    \    $result = array();\n    foreach ($sum_nums as $key => $sum_num) {\n     \
    \   $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $result =\
    \ array();\n    $sums = array();\n    foreach ($nums as $key => $num) {\n    \
    \    $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n      \
    \      $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n \
    \       $sums[$key] = $sum;\n    }\n    asort($sums);\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "    $result = array();\n    $sum = array();\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n", "    $sum = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sum_nums\
    \ = array();\n    foreach ($nums as $key => $value) {\n        $sum_nums[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum_nums, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $result = array();\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($key) use\
    \ ($nums) {\n        return $nums[$key];\n    }, $result);\n    return $result;\n\
    }\n", "    $nums_with_points = array();\n    foreach ($nums as $key => $num) {\n\
    \        $nums_with_points[$key] = array(\n            'num' => $num,\n      \
    \      'points' => sum_of_digits($num)\n        );\n    }\n    usort($nums_with_points,\
    \ function($a, $b) {\n        if ($a['points'] == $b['points']) {\n          \
    \  return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    $result = array();\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points['num'];\n    }\n    return $result;\n\
    }\n", "    $sum_digits = array();\n    foreach ($nums as $key => $num) {\n   \
    \     $sum_digits[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "  $sums = array();\n  foreach ($nums\
    \ as $key => $num) {\n    $sum = 0;\n    foreach (str_split($num) as $digit) {\n\
    \      $sum += $digit;\n    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n\
    \  $sorted = array();\n  foreach ($sums as $key => $sum) {\n    $sorted[] = $nums[$key];\n\
    \  }\n  return $sorted;\n}\n", "  $nums_with_points = array();\n  $result = array();\n\
    \  foreach ($nums as $key => $num) {\n    $points = 0;\n    $num_array = str_split($num);\n\
    \    foreach ($num_array as $digit) {\n      $points += $digit;\n    }\n    $nums_with_points[$key]\
    \ = $points;\n  }\n  asort($nums_with_points);\n  foreach ($nums_with_points as\
    \ $key => $points) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n",
  "  $result = [];\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num\
    \ / 10);\n    }\n    $result[$key] = $sum;\n  }\n  asort($result);\n  $result\
    \ = array_keys($result);\n  $ordered = [];\n  foreach ($result as $key) {\n  \
    \  $ordered[] = $nums[$key];\n  }\n  return $ordered;\n}\n", "    $sum = array();\n\
    \    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        foreach (str_split($num) as $digit) {\n            $sum += $digit;\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "  $sums = array();\n  foreach ($nums as $key\
    \ => $num) {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  asort($sums);\n\
    \  $result = array();\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n", "  $result = [];\n  foreach ($nums as $key => $value)\
    \ {\n    $result[$key] = array_sum(str_split($value));\n  }\n  asort($result);\n\
    \  $result = array_keys($result);\n  foreach ($result as $key => $value) {\n \
    \   $result[$key] = $nums[$value];\n  }\n  return $result;\n}\n", "    $sums =\
    \ array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n       \
    \ $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n\
    \    }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "    $sums = array();\n    foreach ($nums as $i => $num) {\n        $sums[$i] =\
    \ array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = array();\n\
    \    foreach ($sums as $i => $sum) {\n        $result[] = $nums[$i];\n    }\n\
    \    return $result;\n}\n", "    $sums = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "  $sums = array();\n  foreach ($nums as $key\
    \ => $num) {\n    $sums[$key] = sum_digits($num);\n  }\n  asort($sums);\n  $result\
    \ = array();\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n", "    $sum = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n     \
    \   $num = abs($num);\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "  $sum = array();\n  foreach ($nums as $key => $value) {\n    $sum[$key]\
    \ = array_sum(str_split($value));\n  }\n  array_multisort($sum, SORT_ASC, $nums);\n\
    \  return $nums;\n}\n", "  $sums = [];\n  foreach ($nums as $key => $num) {\n\
    \    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n      $sum += $num\
    \ % 10;\n      $num = floor($num / 10);\n    }\n    $sums[$key] = $sum;\n  }\n\
    \  asort($sums);\n  $result = [];\n  foreach ($sums as $key => $sum) {\n    $result[]\
    \ = $nums[$key];\n  }\n  return $result;\n}\n", "  $result = [];\n  foreach ($nums\
    \ as $key => $num) {\n    $result[$key] = array_sum(str_split($num));\n  }\n \
    \ asort($result);\n  $result = array_keys($result);\n  $result = array_map(function($num)\
    \ use ($nums) {\n    return $nums[$num];\n  }, $result);\n  return $result;\n\
    }\n", "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum\
    \ = 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $sum = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $sum[$key] = array_sum(str_split($num));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n", "  $sums = array();\n  foreach ($nums as $key\
    \ => $num) {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  asort($sums);\n\
    \  $result = array();\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n", "  $sums = array();\n  foreach ($nums as $key =>\
    \ $num) {\n    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n    \
    \  $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    $sums[$key]\
    \ = $sum;\n  }\n  asort($sums);\n  $result = array();\n  foreach ($sums as $key\
    \ => $sum) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "  \
    \  $sums = array();\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = array();\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sums = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = sum_digits($num);\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array();\n  \
    \  foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array();\n  \
    \  foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array();\n  \
    \  foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "    $sum_nums = array();\n    foreach ($nums as $key => $num) {\n        $sum_nums[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sum_nums, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $sums = array();\n    foreach ($nums\
    \ as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n\
    \    asort($sums);\n    $result = array();\n    foreach ($sums as $key => $sum)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "   \
    \ $sums = array();\n    foreach ($nums as $index => $num) {\n        $sums[$index]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = array();\n\
    \    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n", "    $sums = array();\n    foreach ($nums as\
    \ $key => $num) {\n        $sums[$key] = sum_digits($num);\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_nums = array();\n\
    \    foreach ($nums as $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum_nums, SORT_ASC, $nums);\n    return $nums;\n\
    }\n", "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = sum_digits($num);\n    }\n    asort($sums);\n    $result = array();\n    foreach\
    \ ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return\
    \ $result;\n}\n", "    $sum_digits = array();\n    foreach ($nums as $key => $num)\
    \ {\n        $sum_digits[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "  $sums = array();\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n    $num\
    \ = abs($num);\n    while ($num > 0) {\n      $sum += $num % 10;\n      $num =\
    \ (int)($num / 10);\n    }\n    $sums[$key] = $sum;\n  }\n  array_multisort($sums,\
    \ $nums);\n  return $nums;\n}\n", "  $sums = array();\n  foreach ($nums as $index\
    \ => $num) {\n    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n \
    \     $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    $sums[$index]\
    \ = $sum;\n  }\n  asort($sums);\n  $result = array();\n  foreach ($sums as $index\
    \ => $sum) {\n    $result[] = $nums[$index];\n  }\n  return $result;\n}\n", " \
    \ $sum_nums = array();\n  foreach ($nums as $key => $num) {\n    $sum_nums[$key]\
    \ = array_sum(str_split($num));\n  }\n  array_multisort($sum_nums, SORT_ASC, $nums);\n\
    \  return $nums;\n}\n", "    $sums = array();\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = array();\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_nums = array();\n\
    \    foreach ($nums as $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum_nums);\n    $result = array();\n    foreach ($sum_nums\
    \ as $key => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return\
    \ $result;\n}\n", "    $sum = [];\n    foreach ($nums as $key => $value) {\n \
    \       $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "  $sums = [];\n  foreach ($nums\
    \ as $key => $num) {\n    $sum = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n      $sum += $num % 10;\n      $num = (int)($num / 10);\n    }\n    $sums[$key]\
    \ = $sum;\n  }\n  asort($sums);\n  $result = [];\n  foreach ($sums as $key =>\
    \ $sum) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "    $sums\
    \ = array();\n    $result = array();\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        $sums[$key] = $sum;\n    }\n    asort($sums);\n    foreach ($sums as\
    \ $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sum_digits = array();\n    foreach ($nums as $key => $num) {\n   \
    \     $sum_digits[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $result = array();\n    $sum\
    \ = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key] = $value;\n\
    \        $sum[$key] = array_sum(str_split($sum[$key]));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n", "    $sum_array = array();\n    foreach ($nums\
    \ as $key => $value) {\n        $sum = 0;\n        $value = abs($value);\n   \
    \     while ($value > 0) {\n            $sum += $value % 10;\n            $value\
    \ = floor($value / 10);\n        }\n        $sum_array[$key] = $sum;\n    }\n\
    \    asort($sum_array);\n    $result = array();\n    foreach ($sum_array as $key\
    \ => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sum_nums = array();\n    foreach ($nums as $key => $num) {\n     \
    \   $sum_nums[$key] = array_sum(str_split($num));\n    }\n    asort($sum_nums);\n\
    \    $result = array();\n    foreach ($sum_nums as $key => $sum_num) {\n     \
    \   $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "  $sums = array();\n\
    \  foreach ($nums as $key => $num) {\n    $sum = 0;\n    $num = abs($num);\n \
    \   while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n  $result = array();\n\
    \  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n  }\n  return\
    \ $result;\n}\n", "  $sums = [];\n  foreach ($nums as $key => $num) {\n    $sum\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n      $sum += $num % 10;\n\
    \      $num = floor($num / 10);\n    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n\
    \  $result = [];\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n", "    $sums = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_nums = array();\n\
    \    foreach ($nums as $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum_nums, SORT_ASC, $nums);\n    return $nums;\n\
    }\n", "    $result = array();\n    $sum = array();\n    $index = array();\n  \
    \  foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \        $index[$key] = $key;\n    }\n    array_multisort($sum, SORT_ASC, $index,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "  $sums = array();\n  foreach ($nums\
    \ as $key => $num) {\n    $sum = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    $sums[$key]\
    \ = $sum;\n  }\n  asort($sums);\n  $result = array();\n  foreach ($sums as $key\
    \ => $sum) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "  \
    \  $sums = array();\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = sum_of_digits($num);\n    }\n    array_multisort($sums, $nums);\n    return\
    \ $nums;\n}\n", "    $arr = [];\n    foreach ($nums as $key => $num) {\n     \
    \   $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n       \
    \     $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n  \
    \      $arr[$key] = $sum;\n    }\n    asort($arr);\n    $res = [];\n    foreach\
    \ ($arr as $key => $value) {\n        $res[] = $nums[$key];\n    }\n    return\
    \ $res;\n}\n", "  $result = array();\n  $sum = array();\n  foreach ($nums as $key\
    \ => $value) {\n    $sum[$key] = array_sum(str_split($value));\n  }\n  asort($sum);\n\
    \  foreach ($sum as $key => $value) {\n    $result[] = $nums[$key];\n  }\n  return\
    \ $result;\n}\n", "  $sums = array();\n  foreach ($nums as $key => $num) {\n \
    \   $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n      $sum += $num\
    \ % 10;\n      $num = floor($num / 10);\n    }\n    $sums[$key] = $sum;\n  }\n\
    \  asort($sums);\n  $result = array();\n  foreach ($sums as $key => $sum) {\n\
    \    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "\t$sum = array();\n\
    \tforeach ($nums as $key => $value) {\n\t\t$sum[$key] = array_sum(str_split($value));\n\
    \t}\n\tarray_multisort($sum, SORT_ASC, $nums);\n\treturn $nums;\n}\n", "\t$sums\
    \ = array();\n\tforeach ($nums as $key => $num) {\n\t\t$sum = 0;\n\t\t$num = abs($num);\n\
    \t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = floor($num / 10);\n\
    \t\t}\n\t\t$sums[$key] = $sum;\n\t}\n\tasort($sums);\n\t$result = array();\n\t\
    foreach ($sums as $key => $sum) {\n\t\t$result[] = $nums[$key];\n\t}\n\treturn\
    \ $result;\n}\n", "    $result = [];\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    if (empty($nums)) {\n        return $nums;\n\
    \    }\n    $arr = [];\n    foreach ($nums as $key => $num) {\n        $arr[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($arr);\n    $result = [];\n\
    \    foreach ($arr as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n", "  $sum_of_digits = array();\n  foreach ($nums\
    \ as $key => $value) {\n    $sum_of_digits[$key] = array_sum(str_split($value));\n\
    \  }\n  array_multisort($sum_of_digits, SORT_ASC, $nums);\n  return $nums;\n}\n",
  "    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n \
    \       $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $result[$key]\
    \ = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n  \
    \  $result = array_map(function($num) use ($nums) {\n        return $nums[$num];\n\
    \    }, $result);\n    return $result;\n}\n", "    $sums = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "    $sum = [];\n    foreach ($nums as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "  $sums = array();\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n  $result = array();\n\
    \  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n  }\n  return\
    \ $result;\n}\n", "  $result = [];\n  foreach ($nums as $key => $num) {\n    $result[$key]\
    \ = array_sum(str_split($num));\n  }\n  asort($result);\n  $result = array_keys($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $nums[$value];\n\
    \  }\n  return $result;\n}\n", "\t$result = array();\n\tforeach ($nums as $key\
    \ => $value) {\n\t\t$sum = 0;\n\t\t$value = abs($value);\n\t\twhile ($value >\
    \ 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value = floor($value / 10);\n\t\t}\n\
    \t\t$result[$key] = $sum;\n\t}\n\tasort($result);\n\t$result = array_keys($result);\n\
    \t$result = array_map(function($value) use ($nums) {\n\t\treturn $nums[$value];\n\
    \t}, $result);\n\treturn $result;\n}\n", "  $sums = array();\n  foreach ($nums\
    \ as $key => $num) {\n    $sum = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    $sums[$key]\
    \ = $sum;\n  }\n  asort($sums);\n  $result = array();\n  foreach ($sums as $key\
    \ => $sum) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "  \
    \  $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $nums_with_points = array();\n    foreach ($nums as $key => $num) {\n\
    \        $nums_with_points[$key] = array(\n            'num' => $num,\n      \
    \      'points' => array_sum(str_split(abs($num)))\n        );\n    }\n    usort($nums_with_points,\
    \ function($a, $b) {\n        if ($a['points'] == $b['points']) {\n          \
    \  return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    return array_column($nums_with_points, 'num');\n}\n", "    $sum_nums\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum_nums[$key] =\
    \ array_sum(str_split($num));\n    }\n    asort($sum_nums);\n    $result = array();\n\
    \    foreach ($sum_nums as $key => $sum_num) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sums = array();\n    foreach ($nums as\
    \ $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n\
    \    asort($sums);\n    $result = array();\n    foreach ($sums as $key => $sum)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "   \
    \ $nums_with_points = array();\n    foreach ($nums as $key => $num) {\n      \
    \  $nums_with_points[$key] = array(\n            'num' => $num,\n            'points'\
    \ => array_sum(str_split(abs($num)))\n        );\n    }\n    usort($nums_with_points,\
    \ function($a, $b) {\n        if ($a['points'] == $b['points']) {\n          \
    \  return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    $sorted_nums = array();\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $sorted_nums[] = $num_with_points['num'];\n    }\n    return $sorted_nums;\n\
    }\n", "    $sums = array();\n    foreach ($nums as $i => $num) {\n        $sums[$i]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = array();\n\
    \    foreach ($sums as $i => $sum) {\n        $result[] = $nums[$i];\n    }\n\
    \    return $result;\n}\n", "  $sums = array();\n  foreach ($nums as $key => $num)\
    \ {\n    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n      $sum\
    \ += $num % 10;\n      $num = floor($num / 10);\n    }\n    $sums[$key] = $sum;\n\
    \  }\n  asort($sums);\n  $result = array();\n  foreach ($sums as $key => $sum)\
    \ {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n\nprint_r(order_by_points(array(1,\
    \ 11, -1, -11, -12)));\nprint_r(order_by_points(array()));", "    $sums = array();\n\
    \    foreach ($nums as $k => $v) {\n        $sums[$k] = array_sum(str_split($v));\n\
    \    }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $k =>\
    \ $v) {\n        $result[] = $nums[$k];\n    }\n    return $result;\n}\n", " \
    \   $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sum_digits = function($num) {\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        return $sum;\n    };\n    $sums = array_map($sum_digits, $nums);\n\
    \    $sorted = array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "  $sums = [];\n  foreach ($nums as $key => $num) {\n    $sums[$key] = array_sum(str_split($num));\n\
    \  }\n  asort($sums);\n  $result = [];\n  foreach ($sums as $key => $sum) {\n\
    \    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "    $sums = array();\n\
    \    foreach ($nums as $index => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $index => $sum) {\n        $result[]\
    \ = $nums[$index];\n    }\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach ($nums as $key => $value) {\n        $result[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n", "    $sum_digits = array();\n    foreach ($nums as $key => $num)\
    \ {\n        $sum_digits[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $result = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($key) use\
    \ ($nums) {\n        return $nums[$key];\n    }, $result);\n    return $result;\n\
    }\n", "  $sums = array();\n  foreach ($nums as $key => $num) {\n    $sums[$key]\
    \ = array_sum(str_split($num));\n  }\n  asort($sums);\n  $result = array();\n\
    \  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n  }\n  return\
    \ $result;\n}\n", "    $result = [];\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "  $sum_nums = [];\n  foreach ($nums as $key\
    \ => $num) {\n    $sum_nums[$key] = array_sum(str_split($num));\n  }\n  array_multisort($sum_nums,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n", "    $sum_points = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum_points[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum_points);\n    $result = array();\n    foreach ($sum_points\
    \ as $key => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split(abs($num)));\n    }\n    asort($sums);\n    $result =\
    \ array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "  $nums_sum = array();\n  foreach ($nums as\
    \ $key => $value) {\n    $nums_sum[$key] = array_sum(str_split($value));\n  }\n\
    \  array_multisort($nums_sum, SORT_ASC, $nums);\n  return $nums;\n}\n", "  $sums\
    \ = [];\n  foreach ($nums as $i => $num) {\n    $sum = 0;\n    while ($num > 0)\
    \ {\n      $sum += $num % 10;\n      $num = (int)($num / 10);\n    }\n    $sums[$i]\
    \ = $sum;\n  }\n  asort($sums);\n  $result = [];\n  foreach ($sums as $i => $sum)\
    \ {\n    $result[] = $nums[$i];\n  }\n  return $result;\n}\n", "    $sums = array();\n\
    \    foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n \
    \       $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $result[$key]\
    \ = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n  \
    \  $result = array_map(function($value) use ($nums) {\n        return $nums[$value];\n\
    \    }, $result);\n    return $result;\n}\n", "    $sums = array();\n    foreach\
    \ ($nums as $k => $v) {\n        $sums[$k] = array_sum(str_split($v));\n    }\n\
    \    asort($sums);\n    $result = array();\n    foreach ($sums as $k => $v) {\n\
    \        $result[] = $nums[$k];\n    }\n    return $result;\n}\n", "    $nums_with_points\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $nums_with_points[$key]\
    \ = array(\n            'num' => $num,\n            'points' => sum_of_digits($num)\n\
    \        );\n    }\n    usort($nums_with_points, function($a, $b) {\n        if\
    \ ($a['points'] == $b['points']) {\n            return $a['num'] - $b['num'];\n\
    \        }\n        return $a['points'] - $b['points'];\n    });\n    $sorted_nums\
    \ = array();\n    foreach ($nums_with_points as $num_with_points) {\n        $sorted_nums[]\
    \ = $num_with_points['num'];\n    }\n    return $sorted_nums;\n}\n", "    $sums\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "    $sums = array();\n    foreach ($nums as $index => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        $sums[$index]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $index => $sum) {\n        $result[] = $nums[$index];\n    }\n    return\
    \ $result;\n}\n", "    $sums = array();\n    foreach ($nums as $key => $num) {\n\
    \        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    foreach ($nums as $key => $num) {\n        $result[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n", "    $sums = array();\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = array();\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sum_nums = array();\n    foreach ($nums\
    \ as $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum_nums);\n    $result = array();\n    foreach ($sum_nums\
    \ as $key => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return\
    \ $result;\n}\n", "    $result = array();\n    $sum = array();\n    foreach ($nums\
    \ as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n \
    \   }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_array = array();\n\
    \    foreach ($nums as $key => $value) {\n        $sum = 0;\n        $value =\
    \ abs($value);\n        while ($value > 0) {\n            $sum += $value % 10;\n\
    \            $value = floor($value / 10);\n        }\n        $sum_array[$key]\
    \ = $sum;\n    }\n    array_multisort($sum_array, $nums);\n    return $nums;\n\
    }\n", "    $result = array();\n    $points = array();\n    foreach ($nums as $num)\
    \ {\n        $points[] = array_sum(str_split($num));\n    }\n    asort($points);\n\
    \    foreach ($points as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($key) use\
    \ ($nums) {\n        return $nums[$key];\n    }, $result);\n    return $result;\n\
    }\n", "    $sum_nums = array();\n    foreach ($nums as $key => $num) {\n     \
    \   $sum_nums[$key] = array_sum(str_split($num));\n    }\n    asort($sum_nums);\n\
    \    $result = array();\n    foreach ($sum_nums as $key => $value) {\n       \
    \ $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array();\n\
    \    foreach ($nums as $key => $num) {\n        $sums[$key] = sum_digits($num);\n\
    \    }\n    array_multisort($sums, $nums);\n    return $nums;\n}\n", "    $sums\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n     \
    \   $num = abs($num);\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "  $sums = [];\n  foreach ($nums as $index => $num) {\n    $sum = 0;\n \
    \   $num = abs($num);\n    while ($num > 0) {\n      $sum += $num % 10;\n    \
    \  $num = floor($num / 10);\n    }\n    $sums[$index] = $sum;\n  }\n  asort($sums);\n\
    \  $result = [];\n  foreach ($sums as $index => $sum) {\n    $result[] = $nums[$index];\n\
    \  }\n  return $result;\n}\n", "    $sums = array();\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array();\n  \
    \  foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sum = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $sums = array();\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n \
    \   $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum = array();\n   \
    \ foreach ($nums as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = intval($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $result = [];\n    $sum\
    \ = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $result[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    $result =\
    \ array_map(function($num) use ($nums) {\n        return $nums[$num];\n    },\
    \ $result);\n    return $result;\n}\n", "    $sums = array();\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $result = array();\n    $sum_of_digits\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n     \
    \   while ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $sum_of_digits[$key] = $sum;\n    }\n    asort($sum_of_digits);\n\
    \    foreach ($sum_of_digits as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sums = array();\n    foreach ($nums as\
    \ $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n \
    \   $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $nums_sums = array();\n\
    \    foreach ($nums as $key => $num) {\n        $nums_sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($nums_sums);\n    $result = array();\n    foreach ($nums_sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum\
    \ = 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "  $result = array();\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n      $sum += $num % 10;\n   \
    \   $num = floor($num / 10);\n    }\n    $result[$key] = $sum;\n  }\n  asort($result);\n\
    \  $result = array_keys($result);\n  $result = array_map(function($key) use ($nums)\
    \ {\n    return $nums[$key];\n  }, $result);\n  return $result;\n}\n", "    $result\
    \ = array();\n    $points = array();\n    foreach ($nums as $key => $num) {\n\
    \        $points[$key] = sum_digits($num);\n    }\n    asort($points);\n    foreach\
    \ ($points as $key => $point) {\n        $result[] = $nums[$key];\n    }\n   \
    \ return $result;\n}\n", "\t$sum = array();\n\t$result = array();\n\tforeach ($nums\
    \ as $key => $value) {\n\t\t$sum[$key] = array_sum(str_split($value));\n\t}\n\t\
    asort($sum);\n\tforeach ($sum as $key => $value) {\n\t\t$result[] = $nums[$key];\n\
    \t}\n\treturn $result;\n}\n", "  $result = [];\n  $sum = [];\n  foreach ($nums\
    \ as $key => $value) {\n    $sum[$key] = array_sum(str_split($value));\n  }\n\
    \  asort($sum);\n  foreach ($sum as $key => $value) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n", "    $sums = array();\n    foreach ($nums as $i\
    \ => $num) {\n        $sums[$i] = array_sum(str_split(abs($num)));\n    }\n  \
    \  asort($sums);\n    $result = array();\n    foreach ($sums as $i => $sum) {\n\
    \        $result[] = $nums[$i];\n    }\n    return $result;\n}\n", "    $sums\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = array();\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "    $nums_with_points = array();\n    foreach ($nums as $key => $num) {\n     \
    \   $nums_with_points[$key] = array(\n            'num' => $num,\n           \
    \ 'points' => array_sum(str_split(abs($num)))\n        );\n    }\n    usort($nums_with_points,\
    \ function($a, $b) {\n        if ($a['points'] == $b['points']) {\n          \
    \  return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    return array_column($nums_with_points, 'num');\n}\n", "    $result\
    \ = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num\
    \ = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n \
    \           $num = floor($num / 10);\n        }\n        $result[$key] = $sum;\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    $result =\
    \ array_map(function($key) use ($nums) {\n        return $nums[$key];\n    },\
    \ $result);\n    return $result;\n}\n", "    $result = array();\n    $sum = array();\n\
    \    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}", "    $sums = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "  $result = array();\n  $sums\
    \ = array();\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n  foreach ($sums as $key\
    \ => $sum) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "  \
    \  $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "  $result = array();\n  foreach ($nums as $key => $value) {\n    $result[$key]\
    \ = array_sum(str_split($value));\n  }\n  asort($result);\n  $result = array_keys($result);\n\
    \  $result = array_map(function($value) use ($nums) {\n    return $nums[$value];\n\
    \  }, $result);\n  return $result;\n}\n", "    $sums = array();\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n \
    \   $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array();\n  \
    \  foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array();\n  \
    \  foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "\t$result = [];\n\tforeach\
    \ ($nums as $index => $num) {\n\t\t$result[$index] = array_sum(str_split($num));\n\
    \t}\n\tasort($result);\n\t$result = array_keys($result);\n\tforeach ($result as\
    \ $index => $num) {\n\t\t$result[$index] = $nums[$num];\n\t}\n\treturn $result;\n\
    }\n", "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = array();\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "  $sums = array();\n  foreach ($nums as $key\
    \ => $num) {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  array_multisort($sums,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n", "    $sums = array();\n    $result\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n     \
    \   $num = abs($num);\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = (int)($num / 10);\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n   \
    \     $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $points\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $points[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($points);\n    $result = array();\n    foreach ($points as $key\
    \ => $point) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "  $sum_of_digits = array();\n  foreach ($nums as $key => $value) {\n  \
    \  $sum_of_digits[$key] = array_sum(str_split($value));\n  }\n  array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n", "    $sum_nums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum_nums, SORT_ASC, $nums);\n    return $nums;\n\
    }\n", "    $result = array();\n    foreach ($nums as $key => $num) {\n       \
    \ $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n         \
    \   $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n    \
    \    $result[$key] = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function($key) use ($nums) {\n        return $nums[$key];\n\
    \    }, $result);\n    return $result;\n}\n", "    $sums = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array();\n  \
    \  foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}", "  $sums = array();\n  $result\
    \ = array();\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n  foreach ($sums as $key\
    \ => $sum) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "  $sums\
    \ = [];\n  foreach ($nums as $i => $num) {\n    $sums[$i] = array_sum(str_split($num));\n\
    \  }\n  asort($sums);\n  $result = [];\n  foreach ($sums as $i => $sum) {\n  \
    \  $result[] = $nums[$i];\n  }\n  return $result;\n}\n", "  $sums = [];\n  foreach\
    \ ($nums as $key => $num) {\n    $sums[$key] = array_sum(str_split($num));\n \
    \ }\n  asort($sums);\n  $result = [];\n  foreach ($sums as $key => $sum) {\n \
    \   $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "    $result = [];\n\
    \    foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $new_result = [];\n    foreach ($result\
    \ as $key) {\n        $new_result[] = $nums[$key];\n    }\n    return $new_result;\n\
    }\n", "    $sum_arr = [];\n    foreach ($nums as $key => $num) {\n        $sum\
    \ = 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        $sum_arr[$key]\
    \ = $sum;\n    }\n    asort($sum_arr);\n    $result = [];\n    foreach ($sum_arr\
    \ as $key => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sum_array = array();\n    foreach ($nums as $key => $value) {\n  \
    \      $sum = 0;\n        $value = abs($value);\n        while ($value > 0) {\n\
    \            $sum += $value % 10;\n            $value = floor($value / 10);\n\
    \        }\n        $sum_array[$key] = $sum;\n    }\n    asort($sum_array);\n\
    \    $result = array();\n    foreach ($sum_array as $key => $value) {\n      \
    \  $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "  $sum_nums =\
    \ array();\n  foreach ($nums as $key => $num) {\n    $sum_nums[$key] = array_sum(str_split($num));\n\
    \  }\n  asort($sum_nums);\n  $result = array();\n  foreach ($sum_nums as $key\
    \ => $sum_num) {\n    $result[] = $nums[$key];\n  }\n  return $result;\n}\n",
  "  $result = [];\n  $sums = [];\n  foreach ($nums as $key => $num) {\n    $sum =\
    \ 0;\n    $num = abs($num);\n    while ($num > 0) {\n      $sum += $num % 10;\n\
    \      $num = floor($num / 10);\n    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n\
    \  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n  }\n  return\
    \ $result;\n}\n", "    $sum = array();\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $result = array();\n    foreach\
    \ ($nums as $key => $value) {\n        $result[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($result);\n    $result2 = array();\n    foreach ($result as\
    \ $key => $value) {\n        $result2[] = $nums[$key];\n    }\n    return $result2;\n\
    }\n", "    $result = array();\n    foreach ($nums as $key => $value) {\n     \
    \   $sum = 0;\n        $value = abs($value);\n        while ($value > 0) {\n \
    \           $sum += $value % 10;\n            $value = floor($value / 10);\n \
    \       }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function($value) use ($nums)\
    \ {\n        return $nums[$value];\n    }, $result);\n    return $result;\n}\n",
  "  $sums = array();\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n    $num\
    \ = abs($num);\n    while ($num > 0) {\n      $sum += $num % 10;\n      $num =\
    \ floor($num / 10);\n    }\n    $sums[$key] = $sum;\n  }\n  asort($sums);\n  $result\
    \ = array();\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n", "  $result = [];\n  $sum = 0;\n  $index = 0;\n\
    \  foreach ($nums as $num) {\n    $sum = 0;\n    $index = 0;\n    $num = (string)$num;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n      $sum += $num[$i];\n    }\n\
    \    $result[$sum][] = $num;\n  }\n  ksort($result);\n  $result = array_values($result);\n\
    \  $result = array_map(function($item) {\n    return array_map(function($num)\
    \ {\n      return (int)$num;\n    }, $item);\n  }, $result);\n  $result = array_reduce($result,\
    \ function($acc, $item) {\n    return array_merge($acc, $item);\n  }, []);\n \
    \ return $result;\n}\n", "    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\n$nums = array(1, 11, -1, -11, -12);\nprint_r(order_by_points($nums));",
  "    $result = array();\n    foreach ($nums as $key => $value) {\n        $sum =\
    \ 0;\n        $value = abs($value);\n        while ($value > 0) {\n          \
    \  $sum += $value % 10;\n            $value = intval($value / 10);\n        }\n\
    \        $result[$key] = $sum;\n    }\n    asort($result);\n    $result2 = array();\n\
    \    foreach ($result as $key => $value) {\n        $result2[] = $nums[$key];\n\
    \    }\n    return $result2;\n}\n", "    $sums = array();\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n \
    \   $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $result = [];\n    $sums\
    \ = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n        foreach\
    \ (str_split($num) as $digit) {\n            $sum += $digit;\n        }\n    \
    \    $sums[$key] = $sum;\n    }\n    asort($sums);\n    foreach ($sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n",
  "    $result = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $result[$key]\
    \ = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n  \
    \  $result = array_map(function($key) use ($nums) {\n        return $nums[$key];\n\
    \    }, $result);\n    return $result;\n}\n", "  $sum = array();\n  foreach ($nums\
    \ as $key => $value) {\n    $sum[$key] = array_sum(str_split($value));\n  }\n\
    \  array_multisort($sum, SORT_ASC, $nums);\n  return $nums;\n}\n", "    $sums\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n     \
    \   $num = abs($num);\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    foreach ($nums as $key => $num) {\n       \
    \ $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n         \
    \   $sum += $num % 10;\n            $num = intval($num / 10);\n        }\n   \
    \     $result[$key] = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function($key) use ($nums) {\n        return $nums[$key];\n\
    \    }, $result);\n    return $result;\n}\n", "    $result = array();\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ (int)($num / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($index)\
    \ use ($nums) {\n        return $nums[$index];\n    }, $result);\n    return $result;\n\
    }\n", "    $sum = array();\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key\
    \ => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $sum = array();\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sums = array();\n    foreach ($nums as\
    \ $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n \
    \   $result = array();\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum = array();\n   \
    \ foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sum = [];\n    foreach ($nums as $key => $num) {\n        $sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n", "    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sum = array();\n    foreach ($nums as\
    \ $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n\
    \    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums\
    \ = array();\n    foreach ($nums as $index => $num) {\n        $sum = 0;\n   \
    \     $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$index]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $index => $sum) {\n        $result[] = $nums[$index];\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($nums as $key => $num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        $result[$key] = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function($key) use ($nums) {\n        return $nums[$key];\n\
    \    }, $result);\n    return $result;\n}\n", "  $sum_array = array();\n  foreach\
    \ ($nums as $key => $value) {\n    $sum = 0;\n    $value = abs($value);\n    while\
    \ ($value > 0) {\n      $sum += $value % 10;\n      $value = floor($value / 10);\n\
    \    }\n    $sum_array[$key] = $sum;\n  }\n  asort($sum_array);\n  $result = array();\n\
    \  foreach ($sum_array as $key => $value) {\n    $result[] = $nums[$key];\n  }\n\
    \  return $result;\n}\n", "    $sums = array();\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sum = array();\n    foreach ($nums as\
    \ $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n\
    \    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums\
    \ = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n     \
    \   $num = abs($num);\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sums = array();\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split(abs($num)));\n    }\n    asort($sums);\n    $result =\
    \ array();\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $points = [];\n   \
    \ foreach ($nums as $key => $num) {\n        $points[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($points);\n    foreach ($points as $key => $point) {\n     \
    \   $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $res = array();\n\
    \    foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $res[$key] = $sum;\n    }\n    asort($res);\n\
    \    $res = array_keys($res);\n    $result = array();\n    foreach ($res as $key)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "   \
    \ $sums = array();\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n\
    \        $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = array();\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

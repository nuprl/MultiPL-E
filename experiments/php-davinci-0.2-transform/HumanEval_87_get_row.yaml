name: HumanEval_87_get_row
language: php
prompt: "<?php\n// You are given a 2 dimensional data, as a nested lists,\n// which\
  \ is similar to matrix, however, unlike matrices,\n// each row may contain a different\
  \ number of columns.\n// Given lst, and integer x, find integers x in the list,\n\
  // and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n// each tuple\
  \ is a coordinate - (row, columns), starting with 0.\n// Sort coordinates initially\
  \ by rows in ascending order.\n// Also, sort coordinates of the row by columns in\
  \ descending order.\n// Examples:\n// >>> get_row(array(array(1, 2, 3, 4, 5, 6),\
  \ array(1, 2, 3, 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1)\n// array(array(0, 0), array(1,\
  \ 4), array(1, 0), array(2, 5), array(2, 0))\n// >>> get_row(array(), 1)\n// array()\n\
  // >>> get_row(array(array(), array(1), array(1, 2, 3)), 3)\n// array(array(2, 2))\n\
  function get_row($lst, $x) {\n"
tests: "function candidate(...$args) {\n    return get_row(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3,\
  \ 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1) !== array(array(0, 0), array(1, 4), array(1,\
  \ 0), array(2, 5), array(2, 0))) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1,\
  \ 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2,\
  \ 3, 4, 5, 6)), 2) !== array(array(0, 1), array(1, 1), array(2, 1), array(3, 1),\
  \ array(4, 1), array(5, 1))) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 1,\
  \ 3, 4, 5, 6), array(1, 2, 1, 4, 5, 6), array(1, 2, 3, 1, 5, 6), array(1, 2, 3,\
  \ 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1) !== array(array(0, 0), array(1, 0), array(2,\
  \ 1), array(2, 0), array(3, 2), array(3, 0), array(4, 3), array(4, 0), array(5,\
  \ 4), array(5, 0), array(6, 5), array(6, 0))) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(), 1) !== array()) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(array(1)), 2) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(array(), array(1), array(1, 2, 3)),\
  \ 3) !== array(array(2, 2))) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach\
    \ ($cols as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $res = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $col => $val) {\n            if ($val == $x) {\n                $res[] =\
    \ [$row, $col];\n            }\n        }\n    }\n    usort($res, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "  \
    \  $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as\
    \ $j => $col) {\n            if ($col == $x) {\n                $result[] = [$i,\
    \ $j];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $cols) {\n    foreach ($cols as $col\
    \ => $value) {\n      if ($value == $x) {\n        $result[] = [$row, $col];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $i => $row) {\n   \
    \     foreach ($row as $j => $col) {\n            if ($col == $x) {\n        \
    \        $result[] = [$i, $j];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach\
    \ ($row_lst as $col => $value) {\n            if ($value == $x) {\n          \
    \      $result[] = [$row, $col];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach\
    \ ($cols as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as\
    \ $j => $val) {\n            if ($val == $x) {\n                $result[] = [$i,\
    \ $j];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $cols) {\n    foreach ($cols as $col\
    \ => $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n   \
    \   }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $cols) {\n        foreach ($cols as $col => $val) {\n            if\
    \ ($val == $x) {\n                $result[] = [$row, $col];\n            }\n \
    \       }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $row_data) {\n        foreach ($row_data\
    \ as $col => $col_data) {\n            if ($col_data == $x) {\n              \
    \  $result[] = [$row, $col];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach\
    \ ($row_lst as $col => $value) {\n            if ($value == $x) {\n          \
    \      $result[] = [$row, $col];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row_index => $row) {\n       \
    \ foreach ($row as $column_index => $column) {\n            if ($column == $x)\
    \ {\n                $result[] = [$row_index, $column_index];\n            }\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n\
    $lst = [\n    [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4, 1, 6],\n    [1, 2, 3, 4, 5,\
    \ 1]\n];\n\nprint_r(get_row($lst, 1));", "    $result = [];\n    foreach ($lst\
    \ as $row => $columns) {\n        foreach ($columns as $column => $value) {\n\
    \            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst as\
    \ $col => $val) {\n            if ($val == $x) {\n                $result[] =\
    \ [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as\
    \ $j => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$i, $j];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \ $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "    $result = [];\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        for ($j = 0; $j < count($lst[$i]); $j++) {\n            if\
    \ ($lst[$i][$j] == $x) {\n                $result[] = [$i, $j];\n            }\n\
    \        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] ==\
    \ $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    for ($i = 0; $i < count($lst); $i++) {\n        for ($j = 0; $j <\
    \ count($lst[$i]); $j++) {\n            if ($lst[$i][$j] == $x) {\n          \
    \      $result[] = [$i, $j];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach\
    \ ($cols as $col => $value) {\n            if ($value == $x) {\n             \
    \   $result[] = [$row, $col];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach\
    \ ($row_lst as $col => $val) {\n            if ($val == $x) {\n              \
    \  $result[] = [$row, $col];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $key => $value) {\n        foreach\
    \ ($value as $k => $v) {\n            if ($v == $x) {\n                $result[]\
    \ = [$key, $k];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $row_arr) {\n        foreach ($row_arr\
    \ as $col => $col_val) {\n            if ($col_val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    for ($i = 0; $i < count($lst); $i++) {\n        for ($j\
    \ = 0; $j < count($lst[$i]); $j++) {\n            if ($lst[$i][$j] == $x) {\n\
    \                $result[] = [$i, $j];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "  $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n   \
    \ for ($i = 0; $i < count($lst); $i++) {\n        for ($j = 0; $j < count($lst[$i]);\
    \ $j++) {\n            if ($lst[$i][$j] == $x) {\n                $result[] =\
    \ [$i, $j];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n$lst\
    \ = [\n    [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4, 1, 6],\n    [1, 2, 3, 4, 5, 1]\n\
    ];\n\nprint_r(get_row($lst, 1));\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $columns) {\n        foreach ($columns as $column => $value) {\n   \
    \         if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $res = [];\n    foreach ($lst as $k => $v) {\n        foreach ($v as $k2 =>\
    \ $v2) {\n            if ($v2 == $x) {\n                $res[] = [$k, $k2];\n\
    \            }\n        }\n    }\n    usort($res, function ($a, $b) {\n      \
    \  if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n     \
    \   return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "    $result = [];\n\
    \    foreach ($lst as $row => $columns) {\n        foreach ($columns as $column\
    \ => $value) {\n            if ($value == $x) {\n                $result[] = [$row,\
    \ $column];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $cols) {\n    foreach ($cols as $col\
    \ => $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n   \
    \   }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n\n$lst = [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4,\
    \ 5, 1]];\n$x = 1;\nprint_r(get_row($lst, $x));", "  $result = [];\n  foreach\
    \ ($lst as $row => $cols) {\n    foreach ($cols as $col => $val) {\n      if ($val\
    \ == $x) {\n        $result[] = [$row, $col];\n      }\n    }\n  }\n  usort($result,\
    \ function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n\
    \    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as\
    \ $j => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$i, $j];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $i => $row) {\n    foreach ($row as $j => $value)\
    \ {\n      if ($value == $x) {\n        $result[] = [$i, $j];\n      }\n    }\n\
    \  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return\
    \ $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n\
    }\n", "  $result = [];\n  for ($i = 0; $i < count($lst); $i++) {\n    for ($j\
    \ = 0; $j < count($lst[$i]); $j++) {\n      if ($lst[$i][$j] == $x) {\n      \
    \  $result[] = [$i, $j];\n      }\n    }\n  }\n  usort($result, function($a, $b)\
    \ {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return\
    \ $a[0] - $b[0];\n  });\n  return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    for ($i = 0; $i < count($lst); $i++) {\n        for ($j = 0; $j <\
    \ count($lst[$i]); $j++) {\n            if ($lst[$i][$j] == $x) {\n          \
    \      $result[] = [$i, $j];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "  $result = [];\n  foreach ($lst as $i => $row) {\n    foreach ($row as\
    \ $j => $item) {\n      if ($item == $x) {\n        $result[] = [$i, $j];\n  \
    \    }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $key => $value) {\n\
    \        foreach ($value as $k => $v) {\n            if ($v == $x) {\n       \
    \         $result[] = [$key, $k];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    for ($i = 0; $i < count($lst); $i++) {\n       \
    \ for ($j = 0; $j < count($lst[$i]); $j++) {\n            if ($lst[$i][$j] ==\
    \ $x) {\n                $result[] = [$i, $j];\n            }\n        }\n   \
    \ }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n \
    \           return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $res = [];\n    foreach ($lst as $row\
    \ => $row_arr) {\n        foreach ($row_arr as $col => $val) {\n            if\
    \ ($val == $x) {\n                $res[] = [$row, $col];\n            }\n    \
    \    }\n    }\n    usort($res, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $res;\n}\n", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach ($lst as $row => $cols) {\n        foreach ($cols as $col => $val) {\n\
    \            if ($val == $x) {\n                $result[] = [$row, $col];\n  \
    \          }\n        }\n    }\n    usort($result, function ($a, $b) {\n     \
    \   if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n    \
    \    return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result =\
    \ [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $res = [];\n  foreach ($lst as $i => $row) {\n    foreach ($row as $j => $val)\
    \ {\n      if ($val == $x) {\n        $res[] = [$i, $j];\n      }\n    }\n  }\n\
    \  usort($res, function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1]\
    \ - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return $res;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value\
    \ as $k => $v) {\n            if ($v == $x) {\n                $result[] = [$key,\
    \ $k];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    for ($i = 0; $i < count($lst); $i++) {\n        for ($j =\
    \ 0; $j < count($lst[$i]); $j++) {\n            if ($lst[$i][$j] == $x) {\n  \
    \              $result[] = [$i, $j];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $res = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row\
    \ as $j => $col) {\n            if ($col == $x) {\n                $res[] = [$i,\
    \ $j];\n            }\n        }\n    }\n    usort($res, function ($a, $b) {\n\
    \        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n\
    \        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$i, $j];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $res =\
    \ [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $val)\
    \ {\n            if ($val == $x) {\n                $res[] = [$i, $j];\n     \
    \       }\n        }\n    }\n    usort($res, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $res;\n}\n", "    $result = [];\n    foreach ($lst\
    \ as $row => $columns) {\n        foreach ($columns as $column => $value) {\n\
    \            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        return $a[0] == $b[0] ? $b[1] - $a[1] : $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $columns) {\n        foreach ($columns as $column => $value) {\n   \
    \         if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result =\
    \ [];\n  foreach ($lst as $row => $row_lst) {\n    foreach ($row_lst as $col =>\
    \ $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n      }\n\
    \    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n\
    \      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $columns) {\n        foreach ($columns as $column => $value) {\n   \
    \         if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$i, $j];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $key => $value) {\n        foreach ($value as $k\
    \ => $v) {\n            if ($v == $x) {\n                $result[] = [$key, $k];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $res = [];\n    foreach ($lst as $k => $row) {\n        foreach ($row as $k2\
    \ => $v) {\n            if ($v == $x) {\n                $res[] = [$k, $k2];\n\
    \            }\n        }\n    }\n    usort($res, function ($a, $b) {\n      \
    \  if ($a[0] == $b[0]) {\n            return $b[1] <=> $a[1];\n        }\n   \
    \     return $a[0] <=> $b[0];\n    });\n    return $res;\n}\n", "    $result =\
    \ [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $rowIndex => $row) {\n        foreach ($row\
    \ as $columnIndex => $column) {\n            if ($column == $x) {\n          \
    \      $result[] = [$rowIndex, $columnIndex];\n            }\n        }\n    }\n\
    \    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n     \
    \       return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n\
    \    return $result;\n}\n\n$lst = [\n    [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4,\
    \ 1, 6],\n    [1, 2, 3, 4, 5, 1]\n];\n\nprint_r(get_row($lst, 1));", "    $res\
    \ = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $col)\
    \ {\n            if ($col == $x) {\n                $res[] = [$i, $j];\n     \
    \       }\n        }\n    }\n    usort($res, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $res;\n}\n", "    $result = [];\n    foreach ($lst\
    \ as $row => $columns) {\n        foreach ($columns as $column => $value) {\n\
    \            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $res = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $col => $val) {\n            if ($val == $x) {\n                $res[] =\
    \ [$row, $col];\n            }\n        }\n    }\n    usort($res, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "  $result\
    \ = [];\n  foreach ($lst as $row => $row_lst) {\n    foreach ($row_lst as $col\
    \ => $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n   \
    \   }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $columns) {\n        foreach ($columns as $column => $value) {\n   \
    \         if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $cols) {\n    foreach ($cols as $col\
    \ => $value) {\n      if ($value == $x) {\n        $result[] = [$row, $col];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $columns) {\n        foreach ($columns as $column => $value) {\n   \
    \         if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result =\
    \ [];\n  foreach ($lst as $row => $cols) {\n    foreach ($cols as $col => $val)\
    \ {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n      }\n   \
    \ }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0]) {\n   \
    \   return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n\
    }\n", "  $result = [];\n  foreach ($lst as $i => $row) {\n    foreach ($row as\
    \ $j => $value) {\n      if ($value == $x) {\n        $result[] = [$i, $j];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $columns) {\n        foreach ($columns as $column => $value) {\n   \
    \         if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "  $result =\
    \ [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns as $column\
    \ => $value) {\n      if ($value == $x) {\n        $result[] = [$row, $column];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $columns) {\n        foreach ($columns as $column => $value) {\n   \
    \         if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $item)\
    \ {\n            if ($item == $x) {\n                $result[] = [$i, $j];\n \
    \           }\n        }\n    }\n    usort($result, function ($a, $b) {\n    \
    \    if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n   \
    \     return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n\
    $lst = [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]];\n$x = 1;\n\
    print_r(get_row($lst, $x));", "    $result = [];\n    $i = 0;\n    foreach ($lst\
    \ as $row) {\n        $j = 0;\n        foreach ($row as $item) {\n           \
    \ if ($item == $x) {\n                $result[] = [$i, $j];\n            }\n \
    \           $j++;\n        }\n        $i++;\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n\
    $lst = [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]];\n$x = 1;\n\
    print_r(get_row($lst, $x));", "    $result = [];\n    foreach ($lst as $row =>\
    \ $columns) {\n        foreach ($columns as $column => $value) {\n           \
    \ if ($value == $x) {\n                $result[] = [$row, $column];\n        \
    \    }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols as $col\
    \ => $val) {\n            if ($val == $x) {\n                $result[] = [$row,\
    \ $col];\n            }\n        }\n    }\n    usort($result, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "   \
    \ $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $row_lst) {\n    foreach ($row_lst\
    \ as $col => $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n\
    \        foreach ($columns as $column => $value) {\n            if ($value ==\
    \ $x) {\n                $result[] = [$row, $column];\n            }\n       \
    \ }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    return $result;\n}\n", "    $result = [];\n    foreach ($lst as\
    \ $row => $row_lst) {\n        foreach ($row_lst as $col => $val) {\n        \
    \    if ($val == $x) {\n                $result[] = [$row, $col];\n          \
    \  }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if ($a[0]\
    \ == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0]\
    \ - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($lst as $row => $columns) {\n        foreach ($columns as $column => $value)\
    \ {\n            if ($value == $x) {\n                $result[] = [$row, $column];\n\
    \            }\n        }\n    }\n    usort($result, function ($a, $b) {\n   \
    \     if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n  \
    \      return $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $row_arr) {\n    foreach ($row_arr\
    \ as $col => $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n\
    \      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "  $result = [];\n  foreach ($lst as $row => $cols) {\n    foreach\
    \ ($cols as $col => $val) {\n      if ($val == $x) {\n        $result[] = [$row,\
    \ $col];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0]\
    \ == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "    $result = [];\n    foreach ($lst as $row\
    \ => $columns) {\n        foreach ($columns as $column => $value) {\n        \
    \    if ($value == $x) {\n                $result[] = [$row, $column];\n     \
    \       }\n        }\n    }\n    usort($result, function ($a, $b) {\n        if\
    \ ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return\
    \ $a[0] - $b[0];\n    });\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach ($lst as $row => $columns) {\n        foreach ($columns as $column =>\
    \ $value) {\n            if ($value == $x) {\n                $result[] = [$row,\
    \ $column];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $element) {\n            if ($element == $x) {\n             \
    \   $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "  $result = [];\n  foreach ($lst as $row => $columns) {\n    foreach ($columns\
    \ as $column => $value) {\n      if ($value == $x) {\n        $result[] = [$row,\
    \ $column];\n      }\n    }\n  }\n  usort($result, function($a, $b) {\n    if\
    \ ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n\
    \  });\n  return $result;\n}\n", "\t$result = [];\n\tforeach ($lst as $row =>\
    \ $columns) {\n\t\tforeach ($columns as $column => $value) {\n\t\t\tif ($value\
    \ == $x) {\n\t\t\t\t$result[] = [$row, $column];\n\t\t\t}\n\t\t}\n\t}\n\tusort($result,\
    \ function($a, $b) {\n\t\tif ($a[0] == $b[0]) {\n\t\t\treturn $b[1] - $a[1];\n\
    \t\t}\n\t\treturn $a[0] - $b[0];\n\t});\n\treturn $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n        foreach ($row_lst\
    \ as $col => $val) {\n            if ($val == $x) {\n                $result[]\
    \ = [$row, $col];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $res = [];\n    foreach ($lst as $row => $arr) {\n        foreach ($arr as\
    \ $col => $val) {\n            if ($val == $x) {\n                $res[] = [$row,\
    \ $col];\n            }\n        }\n    }\n    usort($res, function ($a, $b) {\n\
    \        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n\
    \        return $a[0] - $b[0];\n    });\n    return $res;\n}", "    $result =\
    \ [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $res = [];\n    foreach ($lst as $row => $cols) {\n        foreach ($cols as\
    \ $col => $val) {\n            if ($val == $x) {\n                $res[] = [$row,\
    \ $col];\n            }\n        }\n    }\n    usort($res, function ($a, $b) {\n\
    \        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n\
    \        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "  $result = [];\n  foreach ($lst as $row => $cols) {\n    foreach ($cols as $col\
    \ => $val) {\n      if ($val == $x) {\n        $result[] = [$row, $col];\n   \
    \   }\n    }\n  }\n  usort($result, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $b[1] - $a[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($lst as $row => $row_lst) {\n\
    \        foreach ($row_lst as $col => $val) {\n            if ($val == $x) {\n\
    \                $result[] = [$row, $col];\n            }\n        }\n    }\n\
    \    usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n     \
    \       return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n\
    \    return $result;\n}\n\n$lst = [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 1, 6], [1,\
    \ 2, 3, 4, 5, 1]];\n$x = 1;\nprint_r(get_row($lst, $x));", "    $result = [];\n\
    \    foreach ($lst as $row => $columns) {\n        foreach ($columns as $column\
    \ => $value) {\n            if ($value == $x) {\n                $result[] = [$row,\
    \ $column];\n            }\n        }\n    }\n    usort($result, function ($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n", " \
    \   $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n\n\
    $lst = [\n    [1, 2, 3, 4, 5, 6],\n    [1, 2, 3, 4, 1, 6],\n    [1, 2, 3, 4, 5,\
    \ 1]\n];\nprint_r(get_row($lst, 1));", "  $result = [];\n  foreach ($lst as $row\
    \ => $row_lst) {\n    foreach ($row_lst as $col => $val) {\n      if ($val ==\
    \ $x) {\n        $result[] = [$row, $col];\n      }\n    }\n  }\n  usort($result,\
    \ function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $b[1] - $a[1];\n\
    \    }\n    return $a[0] - $b[0];\n  });\n  return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $row_array) {\n        foreach\
    \ ($row_array as $column => $value) {\n            if ($value == $x) {\n     \
    \           $result[] = [$row, $column];\n            }\n        }\n    }\n  \
    \  usort($result, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n       \
    \     return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach ($lst as $key => $value)\
    \ {\n        foreach ($value as $k => $v) {\n            if ($v == $x) {\n   \
    \             $result[] = [$key, $k];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach\
    \ ($columns as $column => $value) {\n            if ($value == $x) {\n       \
    \         $result[] = [$row, $column];\n            }\n        }\n    }\n    usort($result,\
    \ function ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1]\
    \ - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n\
    }\n", "    $res = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row\
    \ as $j => $el) {\n            if ($el == $x) {\n                $res[] = [$i,\
    \ $j];\n            }\n        }\n    }\n    usort($res, function ($a, $b) {\n\
    \        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n\
    \        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "    $res = [];\n\
    \    foreach ($lst as $row => $columns) {\n        foreach ($columns as $column\
    \ => $value) {\n            if ($value == $x) {\n                $res[] = [$row,\
    \ $column];\n            }\n        }\n    }\n    usort($res, function ($a, $b)\
    \ {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n      \
    \  }\n        return $a[0] - $b[0];\n    });\n    return $res;\n}\n", "    $result\
    \ = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns as\
    \ $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($lst as $row => $columns) {\n        foreach ($columns\
    \ as $column => $value) {\n            if ($value == $x) {\n                $result[]\
    \ = [$row, $column];\n            }\n        }\n    }\n    usort($result, function\
    \ ($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n\
    \        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_71_triangle_area
language: php
prompt: "<?php\n// Given the lengths of the three sides of a triangle. Return the\
  \ area of\n// the triangle rounded to 2 decimal points if the three sides form a\
  \ valid triangle. \n// Otherwise return -1\n// Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n// than the third side.\n// Example:\n\
  // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\nfunction\
  \ triangle_area($a, $b, $c) {\n"
tests: "function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p\
    \ = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p\
    \ - $c));\n        return round($area, 2);\n    } else {\n        return -1;\n\
    \    }\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n     \
    \   $p = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b)\
    \ * ($p - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\
    \        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a\
    \ + $c > $b && $b + $c > $a) {\n        return round(sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)), 2);\n    } else {\n        return -1;\n    }\n}\n\necho\
    \ triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";\n",
  "  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $s = ($a + $b + $c)\
    \ / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return\
    \ round($area, 2);\n  } else {\n    return -1;\n  }\n}\n", "    $s = ($a + $b\
    \ + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return\
    \ $area;\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2,\
    \ 10) . \"\\n\";\n", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\n", "    $s = ($a + $b + $c)\
    \ / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    if ($area\
    \ > 0) {\n        return round($area, 2);\n    } else {\n        return -1;\n\
    \    }\n}\n", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) *\
    \ ($s - $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area, 2);\n\
    \    } else {\n        return -1;\n    }\n}\n", "    $s = ($a + $b + $c) / 2;\n\
    \    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return $area >\
    \ 0 ? round($area, 2) : -1;\n}\n", "    $s = ($a + $b + $c) / 2;\n    $area =\
    \ sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return $area > 0 ? round($area,\
    \ 2) : -1;\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n \
    \       $p = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p -\
    \ $b) * ($p - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\
    \        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\
    \        $p = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p -\
    \ $b) * ($p - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s -\
    \ $a) * ($s - $b) * ($s - $c));\n    if ($area > 0) {\n        return round($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\n\necho triangle_area(3, 4,\
    \ 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";", "    $s = ($a + $b\
    \ + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    if\
    \ ($area > 0) {\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n", "\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\
    \t$s = ($a + $b + $c) / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n\t\treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n\
    echo triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\"\
    ;\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p = ($a\
    \ + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($area, 2);\n    } else {\n        return -1;\n    }\n}\n",
  "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s = ($a + $b\
    \ + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \        return round($area, 2);\n    } else {\n        return -1;\n    }\n}\n",
  "  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $s = ($a + $b + $c)\
    \ / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return\
    \ round($area, 2);\n  } else {\n    return -1;\n  }\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

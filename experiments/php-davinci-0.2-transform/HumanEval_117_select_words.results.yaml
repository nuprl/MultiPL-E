language: php
name: HumanEval_117_select_words
results:
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n  $s = explode(' ', $s);\n  $result = [];\n  foreach ($s as $word)\
    \ {\n    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') + substr_count($word,\
    \ 'y') == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1gazi0j.php:35\n\
    Stack trace:\n#0 /tmp/tmpt1gazi0j.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpt1gazi0j.php\
    \ on line 35\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $s = str_split($s);\n    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array();\n    foreach ($s as $letter) {\n\
    \        if (!in_array($letter, $vowels)) {\n            $consonants[] = $letter;\n\
    \        }\n    }\n    $consonants = count($consonants);\n    if ($consonants\
    \ == $n) {\n        return array($s);\n    }\n    return array();\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yb38qye.php:40\n\
    Stack trace:\n#0 /tmp/tmp5yb38qye.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp5yb38qye.php\
    \ on line 40\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = [];\n    foreach ($s as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonants[] = $letter;\n        }\n    }\n    $consonants\
    \ = count($consonants);\n    return $consonants;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62dxpc_n.php:37\n\
    Stack trace:\n#0 /tmp/tmp62dxpc_n.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp62dxpc_n.php\
    \ on line 37\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = [];\n    foreach ($s as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonants[] = $letter;\n        }\n    }\n    $consonants\
    \ = count($consonants);\n    return $consonants;\n}\n\necho select_words(\"Mary\
    \ had a little lamb\", 4);\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpraoptbbp.php:38\n\
    Stack trace:\n#0 /tmp/tmpraoptbbp.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpraoptbbp.php\
    \ on line 38\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants()\
    \ in /tmp/tmpsua8wafx.php:22\nStack trace:\n#0 /tmp/tmpsua8wafx.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsua8wafx.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsua8wafx.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsua8wafx.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (consonants_count($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmpsivjd37w.php:22\nStack trace:\n#0 /tmp/tmpsivjd37w.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsivjd37w.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsivjd37w.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsivjd37w.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ === $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpsyh8hk4l.php:22\nStack trace:\n#0 /tmp/tmpsyh8hk4l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsyh8hk4l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsyh8hk4l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsyh8hk4l.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n\t$words = explode(' ',\
    \ $s);\n\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (count_consonants($word)\
    \ == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmppnhf8r43.php:22\nStack trace:\n#0 /tmp/tmppnhf8r43.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmppnhf8r43.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmppnhf8r43.php(43): test()\n#3 {main}\n  thrown in /tmp/tmppnhf8r43.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $result = [];\n  $words\
    \ = explode(' ', $s);\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpvbydq8ls.php:22\nStack trace:\n#0 /tmp/tmpvbydq8ls.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpvbydq8ls.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpvbydq8ls.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpvbydq8ls.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants()\
    \ in /tmp/tmpsua8wafx.php:22\nStack trace:\n#0 /tmp/tmpsua8wafx.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsua8wafx.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsua8wafx.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsua8wafx.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmph3c0cyeu.php:22\nStack trace:\n#0 /tmp/tmph3c0cyeu.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmph3c0cyeu.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmph3c0cyeu.php(42): test()\n#3 {main}\n  thrown in /tmp/tmph3c0cyeu.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n\t$words = explode(' ',\
    \ $s);\n\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (count_consonants($word)\
    \ == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmppnhf8r43.php:22\nStack trace:\n#0 /tmp/tmppnhf8r43.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmppnhf8r43.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmppnhf8r43.php(43): test()\n#3 {main}\n  thrown in /tmp/tmppnhf8r43.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $words = explode(' ', $s);\n    $result = array();\n\
    \    foreach ($words as $word) {\n        $consonants = 0;\n        for ($i =\
    \ 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                $consonants++;\n            }\n        }\n        if ($consonants\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg4csz7u2.php:45\n\
    Stack trace:\n#0 /tmp/tmpg4csz7u2.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpg4csz7u2.php\
    \ on line 45\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n\t$words = explode(' ',\
    \ $s);\n\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (consonants($word)\
    \ == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants()\
    \ in /tmp/tmpr85k5wsw.php:22\nStack trace:\n#0 /tmp/tmpr85k5wsw.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpr85k5wsw.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpr85k5wsw.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpr85k5wsw.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = [];\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (!in_array($s[$i], $vowels))\
    \ {\n            $consonants[] = $s[$i];\n        }\n    }\n    $result = [];\n\
    \    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (!in_array($s[$i],\
    \ $vowels)) {\n            $count++;\n        }\n        if ($count === $n) {\n\
    \            $result[] = $s[$i];\n            $count = 0;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7kq9beq.php:46\n\
    Stack trace:\n#0 /tmp/tmph7kq9beq.php(55): test()\n#1 {main}\n  thrown in /tmp/tmph7kq9beq.php\
    \ on line 46\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') + substr_count($word, 'y') == $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpi06vccfl.php:39\nStack trace:\n#0 /tmp/tmpi06vccfl.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi06vccfl.php on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = [];\n    foreach ($s as $char) {\n        if (!in_array($char,\
    \ $vowels)) {\n            $consonants[] = $char;\n        }\n    }\n    $consonants\
    \ = array_count_values($consonants);\n    $result = [];\n    foreach ($consonants\
    \ as $key => $value) {\n        if ($value == $n) {\n            $result[] = $key;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1ci3bch.php:43\n\
    Stack trace:\n#0 /tmp/tmpf1ci3bch.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpf1ci3bch.php\
    \ on line 43\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($s as $word) {\n        $consonants = 0;\n  \
    \      for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i],\
    \ ['a', 'e', 'i', 'o', 'u'])) {\n                $consonants++;\n            }\n\
    \        }\n        if ($consonants == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpt15i5tz0.php:49\nStack trace:\n#0 /tmp/tmpt15i5tz0.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpt15i5tz0.php on line 49\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($s as $word) {\n        $count = 0;\n       \
    \ for ($i = 0; $i < strlen($word); $i++) {\n            if ($word[$i] != 'a' &&\
    \ $word[$i] != 'e' && $word[$i] != 'i' && $word[$i] != 'o' && $word[$i] != 'u')\
    \ {\n                $count++;\n            }\n        }\n        if ($count ==\
    \ $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp81z6xi62.php:49\nStack trace:\n#0 /tmp/tmp81z6xi62.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp81z6xi62.php on line 49\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result = [];\n    $words\
    \ = str_split($s);\n    $count = 0;\n    $word = '';\n    foreach ($words as $letter)\
    \ {\n        if (in_array($letter, $vowels)) {\n            $count = 0;\n    \
    \        $word = '';\n        } else {\n            $count++;\n            $word\
    \ .= $letter;\n        }\n        if ($count == $n) {\n            $result[] =\
    \ $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3948cp2e.php:45\n\
    Stack trace:\n#0 /tmp/tmp3948cp2e.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp3948cp2e.php\
    \ on line 45\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s\
    \ as $word) {\n        $count = 0;\n        for ($i = 0; $i < strlen($word); $i++)\
    \ {\n            if (preg_match('/[^aeiou]/', $word[$i])) {\n                $count++;\n\
    \            }\n        }\n        if ($count == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7h72yqu.php:45\n\
    Stack trace:\n#0 /tmp/tmpa7h72yqu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpa7h72yqu.php\
    \ on line 45\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n      $result[] = $word;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn1esmw1i.php:34\n\
    Stack trace:\n#0 /tmp/tmpn1esmw1i.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn1esmw1i.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9nhgkol0.php:39\nStack trace:\n#0 /tmp/tmp9nhgkol0.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9nhgkol0.php on line 39\n"
  timestamp: 1659805103
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($s as $word) {\n        $consonants = 0;\n  \
    \      for ($i = 0; $i < strlen($word); $i++) {\n            if (preg_match('/[^aeiou]/i',\
    \ $word[$i])) {\n                $consonants++;\n            }\n        }\n  \
    \      if ($consonants == $n) {\n            $result[] = $word;\n        }\n \
    \   }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659805103
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n$s = \"Mary had a little lamb\";\n$n = 4;\nprint_r(select_words($s,\
    \ $n));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\n"
  timestamp: 1659805103
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $s = str_split($s);\n    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array();\n    foreach ($s as $letter) {\n\
    \        if (!in_array($letter, $vowels)) {\n            $consonants[] = $letter;\n\
    \        }\n    }\n    $consonants = array_count_values($consonants);\n    $result\
    \ = array();\n    foreach ($consonants as $key => $value) {\n        if ($value\
    \ == $n) {\n            $result[] = $key;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkyvb04km.php:43\n\
    Stack trace:\n#0 /tmp/tmpkyvb04km.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkyvb04km.php\
    \ on line 43\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($s as $word) {\n        $count = 0;\n       \
    \ for ($i = 0; $i < strlen($word); $i++) {\n            if (preg_match('/[^aeiou]/i',\
    \ $word[$i])) {\n                $count++;\n            }\n        }\n       \
    \ if ($count == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n$s = \"Mary had a little lamb\";\n$n = 4;\nprint_r(select_words($s,\
    \ $n));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9nhgkol0.php:39\nStack trace:\n#0 /tmp/tmp9nhgkol0.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9nhgkol0.php on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = [];\n    foreach ($s as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonants[] = $letter;\n        }\n    }\n    $consonants\
    \ = array_count_values($consonants);\n    $consonants = array_filter($consonants,\
    \ function($v) use ($n) {\n        return $v == $n;\n    });\n    return array_keys($consonants);\n\
    }\n\n$s = 'Mary had a little lamb';\n$n = 4;\nprint_r(select_words($s, $n));\n\
    function candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zm4nprb.php:43\n\
    Stack trace:\n#0 /tmp/tmp1zm4nprb.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp1zm4nprb.php\
    \ on line 43\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $consonants = array();\n    foreach ($s as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonants[] = $letter;\n        }\n    }\n    $consonants\
    \ = count($consonants);\n    if ($consonants == $n) {\n        return $s;\n  \
    \  }\n    return array();\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb7nignrn.php:40\n\
    Stack trace:\n#0 /tmp/tmpb7nignrn.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpb7nignrn.php\
    \ on line 40\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        $count = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (in_array(strtolower($word[$i]), $consonants)) {\n \
    \               $count++;\n            }\n        }\n        if ($count == $n)\
    \ {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\
    \nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($s as $word) {\n        $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n        $consonants = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\n$s = \"Mary had a little\
    \ lamb\";\n$n = 4;\nprint_r(select_words($s, $n));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdrvhe3xu.php:48\nStack trace:\n#0 /tmp/tmpdrvhe3xu.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdrvhe3xu.php on line 48\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $s = str_split($s);\n    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array();\n    foreach ($s as $char) {\n\
    \        if (!in_array($char, $vowels)) {\n            $consonants[] = $char;\n\
    \        }\n    }\n    $consonants = count($consonants);\n    if ($consonants\
    \ == $n) {\n        return array($s);\n    }\n    return array();\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs2n552x.php:40\n\
    Stack trace:\n#0 /tmp/tmpcs2n552x.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcs2n552x.php\
    \ on line 40\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $words = str_split($s);\n    $consonants = array('b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z');\n    $result = array();\n    $count = 0;\n    for ($i = 0; $i < count($words);\
    \ $i++) {\n        if (in_array($words[$i], $consonants)) {\n            $count++;\n\
    \        }\n    }\n    if ($count == $n) {\n        array_push($result, $s);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ztwzab7.php:40\n\
    Stack trace:\n#0 /tmp/tmp7ztwzab7.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp7ztwzab7.php\
    \ on line 40\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmph3c0cyeu.php:22\nStack trace:\n#0 /tmp/tmph3c0cyeu.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmph3c0cyeu.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmph3c0cyeu.php(42): test()\n#3 {main}\n  thrown in /tmp/tmph3c0cyeu.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9nhgkol0.php:39\nStack trace:\n#0 /tmp/tmp9nhgkol0.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9nhgkol0.php on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9nhgkol0.php:39\nStack trace:\n#0 /tmp/tmp9nhgkol0.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9nhgkol0.php on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        $consonants = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\n$s = \"Mary had a little\
    \ lamb\";\n$n = 4;\nprint_r(select_words($s, $n));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpcgqi7mro.php:48\nStack trace:\n#0 /tmp/tmpcgqi7mro.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcgqi7mro.php on line 48\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result = [];\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        $count = 0;\n        for ($j = $i;\
    \ $j < strlen($s); $j++) {\n            if (!in_array($s[$j], $vowels)) {\n  \
    \              $count++;\n            }\n            if ($count == $n) {\n   \
    \             $result[] = substr($s, $i, $j - $i + 1);\n                break;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => Maryh\n    [1] => aryhad\n    [2] => ryhad\n    [3]\
    \ => yhadal\n    [4] => hadalit\n    [5] => adalitt\n    [6] => dalitt\n    [7]\
    \ => alittl\n    [8] => littl\n    [9] => ittlel\n    [10] => ttlel\n    [11]\
    \ => tlelam\n    [12] => lelamb\n)\nArray\n(\n    [0] => Mary\n    [1] => aryh\n\
    \    [2] => ryh\n    [3] => yhad\n    [4] => hadal\n    [5] => adalit\n    [6]\
    \ => dalit\n    [7] => alitt\n    [8] => litt\n    [9] => ittl\n    [10] => ttl\n\
    \    [11] => tlel\n    [12] => lelam\n    [13] => elamb\n    [14] => lamb\n)\n\
    Array\n(\n    [0] => sim\n    [1] => imp\n    [2] => mp\n    [3] => pl\n    [4]\
    \ => lew\n    [5] => ewh\n    [6] => wh\n    [7] => hit\n    [8] => ites\n   \
    \ [9] => tes\n    [10] => esp\n    [11] => sp\n    [12] => pac\n)\nArray\n(\n\
    \    [0] => Hellow\n    [1] => ellowor\n    [2] => llowor\n    [3] => loworl\n\
    \    [4] => oworld\n    [5] => world\n)\nArray\n(\n    [0] => Unc\n    [1] =>\
    \ ncl\n    [2] => cles\n    [3] => lesam\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzz4haa77.php:47\nStack trace:\n#0 /tmp/tmpzz4haa77.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzz4haa77.php on line 47\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9nhgkol0.php:39\nStack trace:\n#0 /tmp/tmp9nhgkol0.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9nhgkol0.php on line 39\n"
  timestamp: 1659805103
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        $count = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (!in_array($word[$i], ['a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'])) {\n                $count++;\n            }\n        }\n\
    \        if ($count == $n) {\n            $result[] = $word;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[bcdfghjklmnpqrstvwxyz]/i',\
    \ $word, $matches) == $n) {\n            $result[] = $word;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $s = str_split($s);\n    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array();\n    foreach ($s as $letter) {\n\
    \        if (!in_array($letter, $vowels)) {\n            $consonants[] = $letter;\n\
    \        }\n    }\n    $consonants = array_count_values($consonants);\n    $words\
    \ = array();\n    foreach ($consonants as $key => $value) {\n        if ($value\
    \ == $n) {\n            $words[] = $key;\n        }\n    }\n    return $words;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xg8psg0.php:43\n\
    Stack trace:\n#0 /tmp/tmp3xg8psg0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3xg8psg0.php\
    \ on line 43\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmph3c0cyeu.php:22\nStack trace:\n#0 /tmp/tmph3c0cyeu.php(29): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmph3c0cyeu.php(33): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmph3c0cyeu.php(42): test()\n#3 {main}\n  thrown in /tmp/tmph3c0cyeu.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\necho '<pre>';\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"\
    simple white space\", 2));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"\
    Hello world\", 4));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Uncle\
    \ sam\", 3));\necho '</pre>';\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n)\n</pre><pre>Array\n(\n)\n</pre><pre>Array\n(\n    [0]\
    \ => simple\n    [1] => white\n    [2] => space\n)\n</pre><pre>Array\n(\n)\n</pre><pre>Array\n\
    (\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprnu50j44.php:48\n\
    Stack trace:\n#0 /tmp/tmprnu50j44.php(57): test()\n#1 {main}\n  thrown in /tmp/tmprnu50j44.php\
    \ on line 48\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $result = array();\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        if (!in_array($s[$i], $vowels))\
    \ {\n            $result[$i] = $s[$i];\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => M\n    [2] => r\n    [3] => y\n    [4] => h\n    [6]\
    \ => d\n    [8] => l\n    [10] => t\n    [11] => t\n    [12] => l\n    [14] =>\
    \ l\n    [16] => m\n    [17] => b\n)\nArray\n(\n    [0] => M\n    [2] => r\n \
    \   [3] => y\n    [4] => h\n    [6] => d\n    [8] => l\n    [10] => t\n    [11]\
    \ => t\n    [12] => l\n    [14] => l\n    [16] => m\n    [17] => b\n)\nArray\n\
    (\n    [0] => s\n    [2] => m\n    [3] => p\n    [4] => l\n    [6] => w\n    [7]\
    \ => h\n    [9] => t\n    [11] => s\n    [12] => p\n    [14] => c\n)\nArray\n\
    (\n    [0] => H\n    [2] => l\n    [3] => l\n    [5] => w\n    [7] => r\n    [8]\
    \ => l\n    [9] => d\n)\nArray\n(\n    [0] => U\n    [1] => n\n    [2] => c\n\
    \    [3] => l\n    [5] => s\n    [7] => m\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpxxpm4e6n.php:40\nStack trace:\n#0 /tmp/tmpxxpm4e6n.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxxpm4e6n.php on line 40\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $result = [];\n    $words\
    \ = explode(' ', $s);\n    foreach ($words as $word) {\n        if (consonants_count($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmpizrece2s.php:22\nStack trace:\n#0 /tmp/tmpizrece2s.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpizrece2s.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpizrece2s.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpizrece2s.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = [];\n    foreach ($s as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonants[] = $letter;\n        }\n    }\n    $consonants\
    \ = count($consonants);\n    return $consonants;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6te10i2.php:38\n\
    Stack trace:\n#0 /tmp/tmpl6te10i2.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpl6te10i2.php\
    \ on line 38\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (strlen($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kmames_.php:34\n\
    Stack trace:\n#0 /tmp/tmp6kmames_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6kmames_.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ === $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpsyh8hk4l.php:22\nStack trace:\n#0 /tmp/tmpsyh8hk4l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsyh8hk4l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsyh8hk4l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsyh8hk4l.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ === $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpsyh8hk4l.php:22\nStack trace:\n#0 /tmp/tmpsyh8hk4l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsyh8hk4l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsyh8hk4l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsyh8hk4l.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        $consonants = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgon_afgx.php:45\n\
    Stack trace:\n#0 /tmp/tmpgon_afgx.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpgon_afgx.php\
    \ on line 45\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $result = [];\n    $words\
    \ = explode(' ', $s);\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmppa48i32y.php:22\nStack trace:\n#0 /tmp/tmppa48i32y.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmppa48i32y.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmppa48i32y.php(43): test()\n#3 {main}\n  thrown in /tmp/tmppa48i32y.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n    $s = preg_replace('/\\s+/', ' ', $s);\n    $s = trim($s);\n\
    \    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word)\
    \ {\n        $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++)\
    \ {\n            if (preg_match('/[^aeiouAEIOU]/', $word[$i])) {\n           \
    \     $consonants++;\n            }\n        }\n        if ($consonants == $n)\
    \ {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n      $result[] = $word;\n    }\n\
    \  }\n  return $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpky6fbo1x.php:39\nStack trace:\n#0 /tmp/tmpky6fbo1x.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpky6fbo1x.php on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($s as $word) {\n        $count = 0;\n       \
    \ for ($i = 0; $i < strlen($word); $i++) {\n            if (preg_match('/[^aeiou]/i',\
    \ $word[$i])) {\n                $count++;\n            }\n        }\n       \
    \ if ($count == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n    $s = preg_replace('/\\s+/', ' ', $s);\n    $s = trim($s);\n\
    \    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word)\
    \ {\n        $consonants = 0;\n        $word = strtolower($word);\n        for\
    \ ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i], ['a',\
    \ 'e', 'i', 'o', 'u'])) {\n                $consonants++;\n            }\n   \
    \     }\n        if ($consonants == $n) {\n            $result[] = $word;\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvinrhr2b.php:45\n\
    Stack trace:\n#0 /tmp/tmpvinrhr2b.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpvinrhr2b.php\
    \ on line 45\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n      $result[] = $word;\n    }\n\
    \  }\n  return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpd845g7f7.php:38\nStack trace:\n#0 /tmp/tmpd845g7f7.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpd845g7f7.php on line 38\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ === $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpsyh8hk4l.php:22\nStack trace:\n#0 /tmp/tmpsyh8hk4l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsyh8hk4l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsyh8hk4l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsyh8hk4l.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ === $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpsyh8hk4l.php:22\nStack trace:\n#0 /tmp/tmpsyh8hk4l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsyh8hk4l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsyh8hk4l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsyh8hk4l.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9nhgkol0.php:39\nStack trace:\n#0 /tmp/tmp9nhgkol0.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9nhgkol0.php on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9nhgkol0.php:39\nStack trace:\n#0 /tmp/tmp9nhgkol0.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9nhgkol0.php on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n    $s = strtolower($s);\n    $s = explode(' ', $s);\n    $result\
    \ = [];\n    foreach ($s as $word) {\n        $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \        $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n\
    \            if (!in_array($word[$i], $vowels)) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujx97gc8.php:44\n\
    Stack trace:\n#0 /tmp/tmpujx97gc8.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpujx97gc8.php\
    \ on line 44\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (strlen($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\n$s = \"Mary had a little lamb\";\n$n = 4;\nprint_r(select_words($s, $n));\n\
    function candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => Mary\n    [1] => lamb\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpsb18ra2e.php:37\nStack trace:\n#0 /tmp/tmpsb18ra2e.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsb18ra2e.php on line 37\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659805103
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[bcdfghjklmnpqrstvwxyz]/i',\
    \ $word, $matches) == $n) {\n            $result[] = $word;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result = [];\n    $words\
    \ = explode(' ', $s);\n    foreach ($words as $word) {\n        $count = 0;\n\
    \        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $count++;\n            }\n        }\n        if\
    \ ($count == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpjgt1tqow.php:47\nStack trace:\n\
    #0 /tmp/tmpjgt1tqow.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpjgt1tqow.php\
    \ on line 47\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"];\n    $words = [];\n    $word = \"\";\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $consonants)) {\n\
    \            $word .= $s[$i];\n        } else {\n            if (strlen($word)\
    \ == $n) {\n                array_push($words, $word);\n            }\n      \
    \      $word = \"\";\n        }\n    }\n    if (strlen($word) == $n) {\n     \
    \   array_push($words, $word);\n    }\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28wp9dxj.php:44\n\
    Stack trace:\n#0 /tmp/tmp28wp9dxj.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp28wp9dxj.php\
    \ on line 44\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => simple\n    [1] => white\n\
    \    [2] => space\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9nhgkol0.php:39\nStack trace:\n#0 /tmp/tmp9nhgkol0.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9nhgkol0.php on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpx6pumlf2.php:22\nStack trace:\n#0 /tmp/tmpx6pumlf2.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpx6pumlf2.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpx6pumlf2.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpx6pumlf2.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        $consonants = preg_replace('/[aeiou]/i', '', $word);\n\
    \        if (strlen($consonants) == $n) {\n            $result[] = $word;\n  \
    \      }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $consonants = array();\n    foreach ($s as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonants[] = $letter;\n        }\n    }\n    $consonants\
    \ = count($consonants);\n    if ($consonants == $n) {\n        return $s;\n  \
    \  }\n    return array();\n}\n\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp4jucl001.php:46\nStack trace:\n\
    #0 /tmp/tmp4jucl001.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp4jucl001.php\
    \ on line 46\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (consonants_count($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmpsivjd37w.php:22\nStack trace:\n#0 /tmp/tmpsivjd37w.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsivjd37w.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsivjd37w.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsivjd37w.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $s = str_split($s);\n    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array();\n    foreach ($s as $letter) {\n\
    \        if (!in_array($letter, $vowels)) {\n            $consonants[] = $letter;\n\
    \        }\n    }\n    $consonants = count($consonants);\n    if ($consonants\
    \ == $n) {\n        return $s;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbs6267i7.php:39\n\
    Stack trace:\n#0 /tmp/tmpbs6267i7.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpbs6267i7.php\
    \ on line 39\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result = [];\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        $count = 0;\n        for ($j = $i;\
    \ $j < strlen($s); $j++) {\n            if (!in_array($s[$j], $vowels)) {\n  \
    \              $count++;\n            }\n            if ($count === $n) {\n  \
    \              $result[] = substr($s, $i, $j - $i + 1);\n                break;\n\
    \            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgkaxq053.php:41\n\
    Stack trace:\n#0 /tmp/tmpgkaxq053.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpgkaxq053.php\
    \ on line 41\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gtynz6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp4gtynz6d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4gtynz6d.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = [];\n    foreach ($s as $char) {\n        if (!in_array($char,\
    \ $vowels)) {\n            $consonants[] = $char;\n        }\n    }\n    return\
    \ $consonants;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => M\n    [1] => r\n    [2] => y\n    [3] => h\n    [4]\
    \ => d\n    [5] => l\n    [6] => t\n    [7] => t\n    [8] => l\n    [9] => l\n\
    \    [10] => m\n    [11] => b\n)\nArray\n(\n    [0] => M\n    [1] => r\n    [2]\
    \ => y\n    [3] => h\n    [4] => d\n    [5] => l\n    [6] => t\n    [7] => t\n\
    \    [8] => l\n    [9] => l\n    [10] => m\n    [11] => b\n)\nArray\n(\n    [0]\
    \ => s\n    [1] => m\n    [2] => p\n    [3] => l\n    [4] => w\n    [5] => h\n\
    \    [6] => t\n    [7] => s\n    [8] => p\n    [9] => c\n)\nArray\n(\n    [0]\
    \ => H\n    [1] => l\n    [2] => l\n    [3] => w\n    [4] => r\n    [5] => l\n\
    \    [6] => d\n)\nArray\n(\n    [0] => U\n    [1] => n\n    [2] => c\n    [3]\
    \ => l\n    [4] => s\n    [5] => m\n)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpa6qj2_b0.php:41\nStack trace:\n#0 /tmp/tmpa6qj2_b0.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpa6qj2_b0.php on line 41\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n    $s = preg_replace('/\\s+/', ' ', $s);\n    $s = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($s as $word) {\n        $count = 0;\n\
    \        for ($i = 0; $i < strlen($word); $i++) {\n            if (preg_match('/[^aeiou]/',\
    \ $word[$i])) {\n                $count++;\n            }\n        }\n       \
    \ if ($count == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzoiaee6y.php:46\n\
    Stack trace:\n#0 /tmp/tmpzoiaee6y.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpzoiaee6y.php\
    \ on line 46\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n\t$result = array();\n\t\
    $words = explode(\" \", $s);\n\tforeach ($words as $word) {\n\t\tif (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n\t\t\tarray_push($result, $word);\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ select_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Mary had a little lamb\", 4) !== array(\"little\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Mary had a little lamb\", 3) !== array(\"\
    Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    simple white space\", 2) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello world\", 4) !== array(\"world\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Uncle sam\", 3) !== array(\"Uncle\"))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\", 4) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c d e f\"\
    , 1) !== array(\"b\", \"c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnkwx6dw6.php:34\n\
    Stack trace:\n#0 /tmp/tmpnkwx6dw6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnkwx6dw6.php\
    \ on line 34\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (consonants_count($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmp3zdz0qod.php:22\nStack trace:\n#0 /tmp/tmp3zdz0qod.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp3zdz0qod.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp3zdz0qod.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp3zdz0qod.php\
    \ on line 22\n"
  timestamp: 1659805103
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n    $s = preg_replace('/\\s+/', ' ', $s);\n    $s = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($s as $word) {\n        $word = str_split($word);\n\
    \        $consonants = 0;\n        foreach ($word as $letter) {\n            if\
    \ (preg_match('/[^aeiouAEIOU]/', $letter)) {\n                $consonants++;\n\
    \            }\n        }\n        if ($consonants == $n) {\n            $result[]\
    \ = implode($word);\n        }\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => little\n)\nArray\n(\n    [0] => Mary\n    [1] => lamb\n\
    )\nArray\n(\n)\nArray\n(\n    [0] => world\n)\nArray\n(\n    [0] => Uncle\n)\n"
  timestamp: 1659805103

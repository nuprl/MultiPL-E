language: php
name: HumanEval_117_select_words
results:
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 0
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $s = preg_replace('/[^a-zA-Z\
    \ ]/', '', $s);\n  $s = explode(' ', $s);\n  $result = [];\n  foreach ($s as $word)\
    \ {\n    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') + substr_count($word,\
    \ 'y') == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
    little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
    \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1gazi0j.php:35\n\
    Stack trace:\n#0 /tmp/tmpt1gazi0j.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpt1gazi0j.php\
    \ on line 35\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(\"\
    \ \", \"\", $s);\n    $s = str_split($s);\n    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array();\n    foreach ($s as $letter) {\n\
    \        if (!in_array($letter, $vowels)) {\n            $consonants[] = $letter;\n\
    \        }\n    }\n    $consonants = count($consonants);\n    if ($consonants\
    \ == $n) {\n        return array($s);\n    }\n    return array();\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yb38qye.php:40\n\
    Stack trace:\n#0 /tmp/tmp5yb38qye.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp5yb38qye.php\
    \ on line 40\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = [];\n    foreach ($s as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonants[] = $letter;\n        }\n    }\n    $consonants\
    \ = count($consonants);\n    return $consonants;\n}\n\nfunction candidate(...$args)\
    \ {\n    return select_words(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Mary had a little lamb\", 4) !== array(\"little\")) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a little lamb\"\
    , 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"simple white space\", 2) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !== array(\"world\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Uncle sam\"\
    , 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62dxpc_n.php:37\n\
    Stack trace:\n#0 /tmp/tmp62dxpc_n.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp62dxpc_n.php\
    \ on line 37\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function countConsonants()\
    \ in /tmp/tmpzrj8gzx3.php:22\nStack trace:\n#0 /tmp/tmpzrj8gzx3.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpzrj8gzx3.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpzrj8gzx3.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpzrj8gzx3.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $s = str_replace(' ',\
    \ '', $s);\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = [];\n    foreach ($s as $letter) {\n        if (!in_array($letter,\
    \ $vowels)) {\n            $consonants[] = $letter;\n        }\n    }\n    $consonants\
    \ = count($consonants);\n    return $consonants;\n}\n\necho select_words(\"Mary\
    \ had a little lamb\", 4);\nfunction candidate(...$args) {\n    return select_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Mary had a little lamb\", 4)\
    \ !== array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpraoptbbp.php:38\n\
    Stack trace:\n#0 /tmp/tmpraoptbbp.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpraoptbbp.php\
    \ on line 38\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants()\
    \ in /tmp/tmpsua8wafx.php:22\nStack trace:\n#0 /tmp/tmpsua8wafx.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsua8wafx.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsua8wafx.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsua8wafx.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (consonants_count($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants_count()\
    \ in /tmp/tmpsivjd37w.php:22\nStack trace:\n#0 /tmp/tmpsivjd37w.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsivjd37w.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsivjd37w.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsivjd37w.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $words = explode(' ',\
    \ $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ === $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpsyh8hk4l.php:22\nStack trace:\n#0 /tmp/tmpsyh8hk4l.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsyh8hk4l.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsyh8hk4l.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsyh8hk4l.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n\t$words = explode(' ',\
    \ $s);\n\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (count_consonants($word)\
    \ == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmppnhf8r43.php:22\nStack trace:\n#0 /tmp/tmppnhf8r43.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmppnhf8r43.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmppnhf8r43.php(43): test()\n#3 {main}\n  thrown in /tmp/tmppnhf8r43.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmp785n916z.php:22\nStack trace:\n#0 /tmp/tmp785n916z.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmp785n916z.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmp785n916z.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp785n916z.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n  $result = [];\n  $words\
    \ = explode(' ', $s);\n  foreach ($words as $word) {\n    if (count_consonants($word)\
    \ == $n) {\n      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return select_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"little\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary had a\
    \ little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4) !==\
    \ array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"\
    f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_consonants()\
    \ in /tmp/tmpvbydq8ls.php:22\nStack trace:\n#0 /tmp/tmpvbydq8ls.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpvbydq8ls.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpvbydq8ls.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpvbydq8ls.php\
    \ on line 22\n"
  timestamp: 1659731005
- exit_code: 255
  program: "<?php\n// Given a string s and a natural number n, you have been tasked\
    \ to implement \n// a function that returns a list of all words from string s\
    \ that contain exactly \n// n consonants, in order these words appear in the string\
    \ s.\n// If the string s is empty then the function should return an empty list.\n\
    // Note: you may assume the input string contains only letters and spaces.\n//\
    \ Examples:\n// >>> select_words(\"Mary had a little lamb\", 4)\n// array(\"little\"\
    )\n// >>> select_words(\"Mary had a little lamb\", 3)\n// array(\"Mary\", \"lamb\"\
    )\n// >>> select_words(\"simple white space\", 2)\n// array()\n// >>> select_words(\"\
    Hello world\", 4)\n// array(\"world\")\n// >>> select_words(\"Uncle sam\", 3)\n\
    // array(\"Uncle\")\nfunction select_words($s, $n) {\n    $words = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !==\
    \ array(\"little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Mary had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\"\
    , 4) !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\", 4) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"\
    c\", \"d\", \"f\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function consonants()\
    \ in /tmp/tmpsua8wafx.php:22\nStack trace:\n#0 /tmp/tmpsua8wafx.php(30): select_words('Mary\
    \ had a litt...', 4)\n#1 /tmp/tmpsua8wafx.php(34): candidate('Mary had a litt...',\
    \ 4)\n#2 /tmp/tmpsua8wafx.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpsua8wafx.php\
    \ on line 22\n"
  timestamp: 1659731005

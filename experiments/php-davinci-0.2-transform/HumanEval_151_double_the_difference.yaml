name: HumanEval_151_double_the_difference
language: php
prompt: "<?php\n// Given a list of numbers, return the sum of squares of the numbers\n\
  // in the list that are odd. Ignore numbers that are negative or not integers.\n\
  // >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
  \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
  // 0\n// If the input list is empty, return 0.\nfunction double_the_difference($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return double_the_difference(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
  \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
  \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
  \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num)\
    \ && $num > 0) {\n\t\t\tif ($num % 2 == 1) {\n\t\t\t\t$sum += pow($num, 2);\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $sum * 2;\n}", "    $sum = 0;\n    foreach ($lst as\
    \ $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += pow($num,\
    \ 2);\n        }\n    }\n    return $sum * 2;\n}\n", "    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum\
    \ += $num * $num;\n        }\n    }\n    return $sum * 2;\n}\n", "    $sum = 0;\n\
    \    foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n     \
    \       $sum += $num * $num;\n        }\n    }\n    return $sum * 2;\n}\n", " \
    \   $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num\
    \ > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum\
    \ * 2;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num ** 2;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}\n", "    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num)\
    \ && $num > 0) {\n      $sum += pow($num, 2);\n    }\n  }\n  return $sum * 2;\n\
    }\n", "  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num >\
    \ 0) {\n      $sum += $num ** 2;\n    }\n  }\n  return $sum * 2;\n}\n", "    $sum\
    \ = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n\
    \            $sum += $num * $num;\n        }\n    }\n    return $sum * 2;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

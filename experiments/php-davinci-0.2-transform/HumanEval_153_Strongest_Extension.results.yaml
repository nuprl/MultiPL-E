language: php
name: HumanEval_153_Strongest_Extension
results:
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        $extension_strength = preg_match_all('/[A-Z]/', $extension) -\
    \ preg_match_all('/[a-z]/', $extension);\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\nfunction candidate(...$args) {\n    return\
    \ Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Boku123\", array(\"\
    nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__YESIMHERE\"\
    , array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    )) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"\
    K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__HAHA\"\
    , array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"HhAas\"\
    , \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee4b34ho.php:39\n\
    Stack trace:\n#0 /tmp/tmpee4b34ho.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpee4b34ho.php\
    \ on line 39\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = '';\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n\nfunction candidate(...$args) {\n    return\
    \ Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Boku123\", array(\"\
    nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__YESIMHERE\"\
    , array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    )) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"\
    K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__HAHA\"\
    , array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"HhAas\"\
    , \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u1g2gko.php:43\n\
    Stack trace:\n#0 /tmp/tmp3u1g2gko.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp3u1g2gko.php\
    \ on line 43\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest = 0;\n    $strongest_extension = '';\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension,\
    \ $matches);\n        $sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        $strength = $cap - $sm;\n        if ($strength > $strongest) {\n    \
    \        $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n\
    function candidate(...$args) {\n    return Strongest_Extension(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\"\
    , \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
    , \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\",\
    \ \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"Ta\", \"\
    TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\"\
    )) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"))\
    \ !== \"YameRore.okIWILL123\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"Wow\", \"WoW\"))\
    \ !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\", \"Bb\")) !== \"\
    Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg75527ak.php:40\n\
    Stack trace:\n#0 /tmp/tmpg75527ak.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpg75527ak.php\
    \ on line 40\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strength = 0;\n    $strongest_extension = \"\";\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension,\
    \ $matches);\n        $sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        $extension_strength = $cap - $sm;\n        if ($extension_strength >\
    \ $strength) {\n            $strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\nfunction candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"\
    niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"\
    YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"\
    Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\"\
    , \"-_-\")) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\",\
    \ \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"\
    Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\"\
    , \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9q1gce8.php:40\n\
    Stack trace:\n#0 /tmp/tmp_9q1gce8.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_9q1gce8.php\
    \ on line 40\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strength = 0;\n    $strongest_extension = \"\";\n    foreach\
    \ ($extensions as $extension) {\n        $extension_strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $extension_strength++;\n            } else {\n          \
    \      $extension_strength--;\n            }\n        }\n        if ($extension_strength\
    \ > $strength) {\n            $strength = $extension_strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\nfunction candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"\
    niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"\
    YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"\
    Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\"\
    , \"-_-\")) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\",\
    \ \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"\
    Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\"\
    , \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmva_j1zr.php:43\n\
    Stack trace:\n#0 /tmp/tmpmva_j1zr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpmva_j1zr.php\
    \ on line 43\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest = 0;\n    $strongest_extension = '';\n    foreach\
    \ ($extensions as $extension) {\n        $caps = preg_match_all('/[A-Z]/', $extension);\n\
    \        $smalls = preg_match_all('/[a-z]/', $extension);\n        $strength =\
    \ $caps - $smalls;\n        if ($strength > $strongest) {\n            $strongest\
    \ = $strength;\n            $strongest_extension = $extension;\n        }\n  \
    \  }\n    return $class_name . '.' . $strongest_extension;\n}\n\nfunction candidate(...$args)\
    \ {\n    return Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"\
    Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"\
    Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    __YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"\
    123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\"))\
    \ !== \"K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    __HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84861quy.php:40\n\
    Stack trace:\n#0 /tmp/tmp84861quy.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp84861quy.php\
    \ on line 40\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $max_strength = 0;\n    $max_strength_extension = '';\n\
    \    foreach ($extensions as $extension) {\n        $strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $max_strength) {\n        \
    \    $max_strength = $strength;\n            $max_strength_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $max_strength_extension;\n}\n\
    \nfunction candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"\
    niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"\
    YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"\
    Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\"\
    , \"-_-\")) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\",\
    \ \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"\
    Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\"\
    , \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmwclphkw.php:43\n\
    Stack trace:\n#0 /tmp/tmpmwclphkw.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpmwclphkw.php\
    \ on line 43\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest = 0;\n    $strongest_extension = \"\";\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \        $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $strength = $cap\
    \ - $sm;\n        if ($strength > $strongest) {\n            $strongest = $strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ $class_name . \".\" . $strongest_extension;\n}\n\nfunction candidate(...$args)\
    \ {\n    return Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"\
    Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"\
    Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    __YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"\
    123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\"))\
    \ !== \"K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    __HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8j4vlkh.php:40\n\
    Stack trace:\n#0 /tmp/tmpl8j4vlkh.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpl8j4vlkh.php\
    \ on line 40\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest = 0;\n    $strongest_extension = \"\";\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \        $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $strength = $cap\
    \ - $sm;\n        if ($strength > $strongest) {\n            $strongest = $strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ $class_name . \".\" . $strongest_extension;\n}\n\nfunction candidate(...$args)\
    \ {\n    return Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"\
    Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"\
    Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    __YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"\
    123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\"))\
    \ !== \"K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    __HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8j4vlkh.php:40\n\
    Stack trace:\n#0 /tmp/tmpl8j4vlkh.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpl8j4vlkh.php\
    \ on line 40\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest = 0;\n    $strongest_extension = \"\";\n    foreach\
    \ ($extensions as $extension) {\n        $cap = 0;\n        $sm = 0;\n       \
    \ for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $cap++;\n            } else {\n                $sm++;\n \
    \           }\n        }\n        $strength = $cap - $sm;\n        if ($strength\
    \ > $strongest) {\n            $strongest = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\nfunction candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"\
    niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"\
    YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"\
    Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\"\
    , \"-_-\")) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\",\
    \ \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"\
    Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\"\
    , \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmdhem6p.php:45\n\
    Stack trace:\n#0 /tmp/tmpwmdhem6p.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpwmdhem6p.php\
    \ on line 45\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\nfunction candidate(...$args) {\n    return\
    \ Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Boku123\", array(\"\
    nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__YESIMHERE\"\
    , array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    )) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"\
    K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__HAHA\"\
    , array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"HhAas\"\
    , \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgf0d79vj.php:42\n\
    Stack trace:\n#0 /tmp/tmpgf0d79vj.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpgf0d79vj.php\
    \ on line 42\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = '';\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . '.' . $strongest_extension;\n}\n\nfunction candidate(...$args) {\n    return\
    \ Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Boku123\", array(\"\
    nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__YESIMHERE\"\
    , array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    )) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"\
    K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__HAHA\"\
    , array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"HhAas\"\
    , \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u1g2gko.php:43\n\
    Stack trace:\n#0 /tmp/tmp3u1g2gko.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp3u1g2gko.php\
    \ on line 43\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest = 0;\n    $strongest_extension = '';\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all('/[A-Z]/', $extension,\
    \ $matches);\n        $sm = preg_match_all('/[a-z]/', $extension, $matches);\n\
    \        $strength = $cap - $sm;\n        if ($strength > $strongest) {\n    \
    \        $strongest = $strength;\n            $strongest_extension = $extension;\n\
    \        }\n    }\n    return $class_name . '.' . $strongest_extension;\n}\n\n\
    function candidate(...$args) {\n    return Strongest_Extension(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\"\
    , \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\"\
    , \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\",\
    \ \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"Ta\", \"\
    TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\"\
    )) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"))\
    \ !== \"YameRore.okIWILL123\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"Wow\", \"WoW\"))\
    \ !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\", \"Bb\")) !== \"\
    Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg75527ak.php:40\n\
    Stack trace:\n#0 /tmp/tmpg75527ak.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpg75527ak.php\
    \ on line 40\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $strength = 0;\n  \
    \      for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\nfunction candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"\
    niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"\
    YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"\
    Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\"\
    , \"-_-\")) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\",\
    \ \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"\
    Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\"\
    , \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagkznhn9.php:43\n\
    Stack trace:\n#0 /tmp/tmpagkznhn9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpagkznhn9.php\
    \ on line 43\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = \"\";\n    $strongest_strength =\
    \ 0;\n    foreach ($extensions as $extension) {\n        $strength = 0;\n    \
    \    for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest_strength) {\n  \
    \          $strongest_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\nfunction candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"\
    niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"\
    YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"\
    Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\"\
    , \"-_-\")) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\",\
    \ \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"\
    Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\"\
    , \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpox14az3p.php:42\n\
    Stack trace:\n#0 /tmp/tmpox14az3p.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpox14az3p.php\
    \ on line 42\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest = 0;\n    $strongest_extension = \"\";\n    foreach\
    \ ($extensions as $extension) {\n        $cap = preg_match_all(\"/[A-Z]/\", $extension);\n\
    \        $sm = preg_match_all(\"/[a-z]/\", $extension);\n        $strength = $cap\
    \ - $sm;\n        if ($strength > $strongest) {\n            $strongest = $strength;\n\
    \            $strongest_extension = $extension;\n        }\n    }\n    return\
    \ $class_name . \".\" . $strongest_extension;\n}\n\nfunction candidate(...$args)\
    \ {\n    return Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(\"Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"\
    Watashi.eIGHt8OKe\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Boku123\", array(\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"\
    Boku123.YEs.WeCaNe\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    __YESIMHERE\", array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"\
    123NoooneB321\")) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\"))\
    \ !== \"K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    __HAHA\", array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"\
    HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8j4vlkh.php:40\n\
    Stack trace:\n#0 /tmp/tmpl8j4vlkh.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpl8j4vlkh.php\
    \ on line 40\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $max_strength = 0;\n    $max_strength_extension = \"\";\n\
    \    foreach ($extensions as $extension) {\n        $strength = 0;\n        for\
    \ ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $max_strength) {\n        \
    \    $max_strength = $strength;\n            $max_strength_extension = $extension;\n\
    \        }\n    }\n    return $class_name . \".\" . $max_strength_extension;\n\
    }\n\nfunction candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"\
    niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"\
    YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"\
    Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\"\
    , \"-_-\")) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\",\
    \ \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"\
    Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\"\
    , \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj9aa0e_j.php:43\n\
    Stack trace:\n#0 /tmp/tmpj9aa0e_j.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpj9aa0e_j.php\
    \ on line 43\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $strength = 0;\n  \
    \      for ($i = 0; $i < strlen($extension); $i++) {\n            if (ctype_upper($extension[$i]))\
    \ {\n                $strength++;\n            } else {\n                $strength--;\n\
    \            }\n        }\n        if ($strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $strength;\n            $strongest_extension\
    \ = $extension;\n        }\n    }\n    return $class_name . \".\" . $strongest_extension;\n\
    }\n\nfunction candidate(...$args) {\n    return Strongest_Extension(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Watashi\", array(\"tEN\", \"\
    niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Boku123\", array(\"nani\", \"NazeDa\", \"\
    YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__YESIMHERE\", array(\"t\", \"eMptY\"\
    , \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\")) !== \"__YESIMHERE.NuLl__\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K\", array(\"\
    Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"K.TAR\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"__HAHA\", array(\"Tab\", \"123\", \"781345\"\
    , \"-_-\")) !== \"__HAHA.123\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"YameRore\", array(\"HhAas\", \"okIWILL123\", \"WorkOut\",\
    \ \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"finNNalLLly\", array(\"Die\", \"NowW\", \"\
    Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"_\", array(\"Bb\", \"91245\")) !== \"_.Bb\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Sp\", array(\"671235\"\
    , \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagkznhn9.php:43\n\
    Stack trace:\n#0 /tmp/tmpagkznhn9.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpagkznhn9.php\
    \ on line 43\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else {\n                $extension_strength--;\n            }\n \
    \       }\n        if ($extension_strength > $strongest_extension_strength) {\n\
    \            $strongest_extension_strength = $extension_strength;\n          \
    \  $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\nfunction candidate(...$args) {\n    return\
    \ Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Boku123\", array(\"\
    nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__YESIMHERE\"\
    , array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    )) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"\
    K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__HAHA\"\
    , array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"HhAas\"\
    , \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ww2kb4h.php:43\n\
    Stack trace:\n#0 /tmp/tmp1ww2kb4h.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp1ww2kb4h.php\
    \ on line 43\n"
  timestamp: 1659730841
- exit_code: 255
  program: "<?php\n// You will be given the name of a class (a string) and a list\
    \ of extensions.\n// The extensions are to be used to load additional classes\
    \ to the class. The\n// strength of the extension is as follows: Let CAP be the\
    \ number of the uppercase\n// letters in the extension's name, and let SM be the\
    \ number of lowercase letters \n// in the extension's name, the strength is given\
    \ by the fraction CAP - SM. \n// You should find the strongest extension and return\
    \ a string in this \n// format: ClassName.StrongestExtensionName.\n// If there\
    \ are two or more extensions with the same strength, you should\n// choose the\
    \ one that comes first in the list.\n// For example, if you are given \"Slices\"\
    \ as the class and a list of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed']\
    \ then you should\n// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the\
    \ strongest extension \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"\
    my_class\", array(\"AA\", \"Be\", \"CC\"))\n// \"my_class.AA\"\nfunction Strongest_Extension($class_name,\
    \ $extensions) {\n    $strongest_extension = \"\";\n    $strongest_extension_strength\
    \ = 0;\n    foreach ($extensions as $extension) {\n        $extension_strength\
    \ = 0;\n        for ($i = 0; $i < strlen($extension); $i++) {\n            if\
    \ (ctype_upper($extension[$i])) {\n                $extension_strength++;\n  \
    \          } else if (ctype_lower($extension[$i])) {\n                $extension_strength--;\n\
    \            }\n        }\n        if ($extension_strength > $strongest_extension_strength)\
    \ {\n            $strongest_extension_strength = $extension_strength;\n      \
    \      $strongest_extension = $extension;\n        }\n    }\n    return $class_name\
    \ . \".\" . $strongest_extension;\n}\n\nfunction candidate(...$args) {\n    return\
    \ Strongest_Extension(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Watashi\", array(\"tEN\", \"niNE\", \"eIGHt8OKe\")) !== \"Watashi.eIGHt8OKe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Boku123\", array(\"\
    nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\")) !== \"Boku123.YEs.WeCaNe\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__YESIMHERE\"\
    , array(\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
    )) !== \"__YESIMHERE.NuLl__\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"K\", array(\"Ta\", \"TAR\", \"t234An\", \"cosSo\")) !== \"\
    K.TAR\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"__HAHA\"\
    , array(\"Tab\", \"123\", \"781345\", \"-_-\")) !== \"__HAHA.123\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"YameRore\", array(\"HhAas\"\
    , \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\")) !== \"YameRore.okIWILL123\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"finNNalLLly\"\
    , array(\"Die\", \"NowW\", \"Wow\", \"WoW\")) !== \"finNNalLLly.WoW\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"_\", array(\"Bb\", \"\
    91245\")) !== \"_.Bb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Sp\", array(\"671235\", \"Bb\")) !== \"Sp.671235\") { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgm4bw3sc.php:45\n\
    Stack trace:\n#0 /tmp/tmpgm4bw3sc.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpgm4bw3sc.php\
    \ on line 45\n"
  timestamp: 1659730841

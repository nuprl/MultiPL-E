name: HumanEval_105_by_length
language: php
prompt: "<?php\n// Given an array of integers, sort the integers that are between\
  \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
  \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
  \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\"\
  , \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
  // >>> by_length(array())\n// array()\n// If the array has any strange number ignore\
  \ it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr)\
  \ {\n"
tests: "function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
  \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
  , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $arr = array_filter($arr, function($n) {\n        return $n >=\
    \ 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n \
    \   $arr = array_map(function($n) {\n        return [\n            1 => \"One\"\
    ,\n            2 => \"Two\",\n            3 => \"Three\",\n            4 => \"\
    Four\",\n            5 => \"Five\",\n            6 => \"Six\",\n            7\
    \ => \"Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n   \
    \     ][$n];\n    }, $arr);\n    return $arr;\n}\n", "  $numbers = array(1 =>\
    \ \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"\
    Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n\
    \      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $numbers[$value];\n\
    \  }\n  return $result;\n}\n", "    $result = array();\n    $numbers = array(1\
    \ => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 =>\
    \ \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if (array_key_exists($value, $numbers)) {\n          \
    \  $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "  $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"\
    Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\"\
    );\n  $result = array();\n  foreach ($arr as $value) {\n    if (array_key_exists($value,\
    \ $numbers)) {\n      $result[] = $numbers[$value];\n    }\n  }\n  return array_reverse($result);\n\
    }\n", "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 &&\
    \ $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($n) {\n        switch ($n) {\n            case 1:\n   \
    \             return \"One\";\n            case 2:\n                return \"\
    Two\";\n            case 3:\n                return \"Three\";\n            case\
    \ 4:\n                return \"Four\";\n            case 5:\n                return\
    \ \"Five\";\n            case 6:\n                return \"Six\";\n          \
    \  case 7:\n                return \"Seven\";\n            case 8:\n         \
    \       return \"Eight\";\n            case 9:\n                return \"Nine\"\
    ;\n        }\n    }, $arr);\n    return $arr;\n}\n", "  $result = array();\n \
    \ $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\",\
    \ 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n\
    \      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $numbers[$value];\n\
    \  }\n  return $result;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return \"One\";\n          \
    \  case 2:\n                return \"Two\";\n            case 3:\n           \
    \     return \"Three\";\n            case 4:\n                return \"Four\"\
    ;\n            case 5:\n                return \"Five\";\n            case 6:\n\
    \                return \"Six\";\n            case 7:\n                return\
    \ \"Seven\";\n            case 8:\n                return \"Eight\";\n       \
    \     case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n  \
    \  return $arr;\n}\n", "    $numbers = array(1 => \"One\", 2 => \"Two\", 3 =>\
    \ \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 =>\
    \ \"Eight\", 9 => \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return $result;\n\
    }\n", "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 &&\
    \ $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($n) {\n        switch ($n) {\n            case 1:\n   \
    \             return \"One\";\n            case 2:\n                return \"\
    Two\";\n            case 3:\n                return \"Three\";\n            case\
    \ 4:\n                return \"Four\";\n            case 5:\n                return\
    \ \"Five\";\n            case 6:\n                return \"Six\";\n          \
    \  case 7:\n                return \"Seven\";\n            case 8:\n         \
    \       return \"Eight\";\n            case 9:\n                return \"Nine\"\
    ;\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = array();\n\
    \    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if ($value > 0 && $value < 10) {\n  \
    \          $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "  $numbers\
    \ = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\"\
    , 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $num) {\n    if ($num > 0 && $num < 10) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $num) {\n    $result[$key] = $numbers[$num];\n\
    \  }\n  return $result;\n}\n", "\t$arr = array_filter($arr, function($item) {\n\
    \t\treturn $item >= 1 && $item <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($item) {\n\t\tswitch ($item) {\n\t\t\tcase 1:\n\t\t\
    \t\treturn 'One';\n\t\t\tcase 2:\n\t\t\t\treturn 'Two';\n\t\t\tcase 3:\n\t\t\t\
    \treturn 'Three';\n\t\t\tcase 4:\n\t\t\t\treturn 'Four';\n\t\t\tcase 5:\n\t\t\t\
    \treturn 'Five';\n\t\t\tcase 6:\n\t\t\t\treturn 'Six';\n\t\t\tcase 7:\n\t\t\t\t\
    return 'Seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'Eight';\n\t\t\tcase 9:\n\t\t\t\
    \treturn 'Nine';\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "  $numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $value) {\n    if (in_array($value, $numbers)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $names[$value -\
    \ 1];\n  }\n  return $result;\n}", "    $result = array();\n    $numbers = array(1\
    \ => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 =>\
    \ \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $sorted = array();\n    $result = array();\n\
    \    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n \
    \           $sorted[] = $value;\n        }\n    }\n    sort($sorted);\n    $sorted\
    \ = array_reverse($sorted);\n    foreach ($sorted as $value) {\n        switch\
    \ ($value) {\n            case 1:\n                $result[] = \"One\";\n    \
    \            break;\n            case 2:\n                $result[] = \"Two\"\
    ;\n                break;\n            case 3:\n                $result[] = \"\
    Three\";\n                break;\n            case 4:\n                $result[]\
    \ = \"Four\";\n                break;\n            case 5:\n                $result[]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n  $result = array();\n  foreach ($arr as $value) {\n    if (in_array($value,\
    \ $numbers)) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  foreach ($result as $key => $value) {\n    $result[$key]\
    \ = $names[$value - 1];\n  }\n  return $result;\n}\n", "    $result = array();\n\
    \    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n \
    \           $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "  $arr\
    \ = array_filter($arr, function($item) {\n    return $item >= 1 && $item <= 9;\n\
    \  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($item)\
    \ {\n    switch ($item) {\n      case 1:\n        return \"One\";\n      case\
    \ 2:\n        return \"Two\";\n      case 3:\n        return \"Three\";\n    \
    \  case 4:\n        return \"Four\";\n      case 5:\n        return \"Five\";\n\
    \      case 6:\n        return \"Six\";\n      case 7:\n        return \"Seven\"\
    ;\n      case 8:\n        return \"Eight\";\n      case 9:\n        return \"\
    Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n", "    $result = array();\n \
    \   $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if (isset($numbers[$value])) {\n    \
    \        $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n  $result = array();\n  foreach ($arr as $value) {\n    if (in_array($value,\
    \ $numbers)) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  foreach ($result as $key => $value) {\n    $result[$key]\
    \ = $names[$value - 1];\n  }\n  return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

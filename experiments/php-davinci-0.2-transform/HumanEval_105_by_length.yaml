name: HumanEval_105_by_length
language: php
prompt: "<?php\n// Given an array of integers, sort the integers that are between\
  \ 1 and 9 inclusive,\n// reverse the resulting array, and then replace each digit\
  \ by its corresponding name from\n// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n// For example:\n// >>> by_length(array(2,\
  \ 1, 1, 4, 5, 8, 2, 3))\n// array(\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\"\
  , \"Two\", \"One\", \"One\")\n// If the array is empty, return an empty array:\n\
  // >>> by_length(array())\n// array()\n// If the array has any strange number ignore\
  \ it:\n// >>> by_length(array(1, -1, 55))\n// array(\"One\")\nfunction by_length($arr)\
  \ {\n"
tests: "function candidate(...$args) {\n    return by_length(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(\"\
  Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\")) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, -1, 55))\
  \ !== array(\"One\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ -1, 3, 2)) !== array(\"Three\", \"Two\", \"One\")) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(9, 4, 8)) !== array(\"Nine\", \"Eight\"\
  , \"Four\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $arr = array_filter($arr, function($n) {\n        return $n >=\
    \ 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n \
    \   $arr = array_map(function($n) {\n        return [\n            1 => \"One\"\
    ,\n            2 => \"Two\",\n            3 => \"Three\",\n            4 => \"\
    Four\",\n            5 => \"Five\",\n            6 => \"Six\",\n            7\
    \ => \"Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\",\n   \
    \     ][$n];\n    }, $arr);\n    return $arr;\n}\n", "  $numbers = array(1 =>\
    \ \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"\
    Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n\
    \      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $numbers[$value];\n\
    \  }\n  return $result;\n}\n", "    $result = array();\n    $numbers = array(1\
    \ => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 =>\
    \ \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if (array_key_exists($value, $numbers)) {\n          \
    \  $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "  $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"\
    Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\"\
    );\n  $result = array();\n  foreach ($arr as $value) {\n    if (array_key_exists($value,\
    \ $numbers)) {\n      $result[] = $numbers[$value];\n    }\n  }\n  return array_reverse($result);\n\
    }\n", "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 &&\
    \ $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($n) {\n        switch ($n) {\n            case 1:\n   \
    \             return \"One\";\n            case 2:\n                return \"\
    Two\";\n            case 3:\n                return \"Three\";\n            case\
    \ 4:\n                return \"Four\";\n            case 5:\n                return\
    \ \"Five\";\n            case 6:\n                return \"Six\";\n          \
    \  case 7:\n                return \"Seven\";\n            case 8:\n         \
    \       return \"Eight\";\n            case 9:\n                return \"Nine\"\
    ;\n        }\n    }, $arr);\n    return $arr;\n}\n", "  $result = array();\n \
    \ $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\",\
    \ 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \  foreach ($arr as $key => $value) {\n    if ($value >= 1 && $value <= 9) {\n\
    \      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $numbers[$value];\n\
    \  }\n  return $result;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return \"One\";\n          \
    \  case 2:\n                return \"Two\";\n            case 3:\n           \
    \     return \"Three\";\n            case 4:\n                return \"Four\"\
    ;\n            case 5:\n                return \"Five\";\n            case 6:\n\
    \                return \"Six\";\n            case 7:\n                return\
    \ \"Seven\";\n            case 8:\n                return \"Eight\";\n       \
    \     case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n  \
    \  return $arr;\n}\n", "    $numbers = array(1 => \"One\", 2 => \"Two\", 3 =>\
    \ \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 =>\
    \ \"Eight\", 9 => \"Nine\");\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return $result;\n\
    }\n", "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 &&\
    \ $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($n) {\n        switch ($n) {\n            case 1:\n   \
    \             return \"One\";\n            case 2:\n                return \"\
    Two\";\n            case 3:\n                return \"Three\";\n            case\
    \ 4:\n                return \"Four\";\n            case 5:\n                return\
    \ \"Five\";\n            case 6:\n                return \"Six\";\n          \
    \  case 7:\n                return \"Seven\";\n            case 8:\n         \
    \       return \"Eight\";\n            case 9:\n                return \"Nine\"\
    ;\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = array();\n\
    \    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if ($value > 0 && $value < 10) {\n  \
    \          $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "  $numbers\
    \ = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\"\
    , 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $num) {\n    if ($num > 0 && $num < 10) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $num) {\n    $result[$key] = $numbers[$num];\n\
    \  }\n  return $result;\n}\n", "\t$arr = array_filter($arr, function($item) {\n\
    \t\treturn $item >= 1 && $item <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($item) {\n\t\tswitch ($item) {\n\t\t\tcase 1:\n\t\t\
    \t\treturn 'One';\n\t\t\tcase 2:\n\t\t\t\treturn 'Two';\n\t\t\tcase 3:\n\t\t\t\
    \treturn 'Three';\n\t\t\tcase 4:\n\t\t\t\treturn 'Four';\n\t\t\tcase 5:\n\t\t\t\
    \treturn 'Five';\n\t\t\tcase 6:\n\t\t\t\treturn 'Six';\n\t\t\tcase 7:\n\t\t\t\t\
    return 'Seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'Eight';\n\t\t\tcase 9:\n\t\t\t\
    \treturn 'Nine';\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "  $numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $value) {\n    if (in_array($value, $numbers)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $names[$value -\
    \ 1];\n  }\n  return $result;\n}", "    $result = array();\n    $numbers = array(1\
    \ => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 =>\
    \ \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $sorted = array();\n    $result = array();\n\
    \    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n \
    \           $sorted[] = $value;\n        }\n    }\n    sort($sorted);\n    $sorted\
    \ = array_reverse($sorted);\n    foreach ($sorted as $value) {\n        switch\
    \ ($value) {\n            case 1:\n                $result[] = \"One\";\n    \
    \            break;\n            case 2:\n                $result[] = \"Two\"\
    ;\n                break;\n            case 3:\n                $result[] = \"\
    Three\";\n                break;\n            case 4:\n                $result[]\
    \ = \"Four\";\n                break;\n            case 5:\n                $result[]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n  $result = array();\n  foreach ($arr as $value) {\n    if (in_array($value,\
    \ $numbers)) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  foreach ($result as $key => $value) {\n    $result[$key]\
    \ = $names[$value - 1];\n  }\n  return $result;\n}\n", "    $result = array();\n\
    \    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n \
    \           $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "  $arr\
    \ = array_filter($arr, function($item) {\n    return $item >= 1 && $item <= 9;\n\
    \  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($item)\
    \ {\n    switch ($item) {\n      case 1:\n        return \"One\";\n      case\
    \ 2:\n        return \"Two\";\n      case 3:\n        return \"Three\";\n    \
    \  case 4:\n        return \"Four\";\n      case 5:\n        return \"Five\";\n\
    \      case 6:\n        return \"Six\";\n      case 7:\n        return \"Seven\"\
    ;\n      case 8:\n        return \"Eight\";\n      case 9:\n        return \"\
    Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n", "    $result = array();\n \
    \   $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if (isset($numbers[$value])) {\n    \
    \        $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n  $result = array();\n  foreach ($arr as $value) {\n    if (in_array($value,\
    \ $numbers)) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  foreach ($result as $key => $value) {\n    $result[$key]\
    \ = $names[$value - 1];\n  }\n  return $result;\n}\n", "    $arr = array_filter($arr,\
    \ function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($n) {\n      \
    \  switch ($n) {\n            case 1:\n                return \"One\";\n     \
    \       case 2:\n                return \"Two\";\n            case 3:\n      \
    \          return \"Three\";\n            case 4:\n                return \"Four\"\
    ;\n            case 5:\n                return \"Five\";\n            case 6:\n\
    \                return \"Six\";\n            case 7:\n                return\
    \ \"Seven\";\n            case 8:\n                return \"Eight\";\n       \
    \     case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n  \
    \  return $arr;\n}\n", "    $arr = array_filter($arr, function($item) {\n    \
    \    return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $numbers = array();\n\
    \    $names = array();\n    foreach ($arr as $value) {\n        if ($value >=\
    \ 1 && $value <= 9) {\n            $numbers[] = $value;\n        }\n    }\n  \
    \  sort($numbers);\n    $numbers = array_reverse($numbers);\n    foreach ($numbers\
    \ as $value) {\n        switch ($value) {\n            case 1:\n             \
    \   $names[] = \"One\";\n                break;\n            case 2:\n       \
    \         $names[] = \"Two\";\n                break;\n            case 3:\n \
    \               $names[] = \"Three\";\n                break;\n            case\
    \ 4:\n                $names[] = \"Four\";\n                break;\n         \
    \   case 5:\n                $names[] = \"Five\";\n                break;\n  \
    \          case 6:\n                $names[] = \"Six\";\n                break;\n\
    \            case 7:\n                $names[] = \"Seven\";\n                break;\n\
    \            case 8:\n                $names[] = \"Eight\";\n                break;\n\
    \            case 9:\n                $names[] = \"Nine\";\n                break;\n\
    \        }\n    }\n    return $names;\n}", "    $numbers = array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9);\n    $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    $result = array();\n    foreach\
    \ ($arr as $value) {\n        if (in_array($value, $numbers)) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "    $result = array();\n    $numbers\
    \ = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\"\
    , 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "  $arr = array_filter($arr, function($n) {\n\
    \    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($n) {\n    return [\"One\", \"Two\", \"Three\", \"\
    Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][$n - 1];\n  }, $arr);\n\
    \  return $arr;\n}\n", "    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "\t$arr = array_filter($arr, function($x) {\n\
    \t\treturn $x >= 1 && $x <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($x) {\n\t\tswitch ($x) {\n\t\t\tcase 1:\n\t\t\t\t\
    return \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\
    \treturn \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\
    \t\t\treturn \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\
    \t\t\t\treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase\
    \ 9:\n\t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "  \
    \  $result = array();\n    $numbers = array(\n        1 => \"One\",\n        2\
    \ => \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"\
    Five\",\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\"\
    ,\n        9 => \"Nine\"\n    );\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    rsort($result);\n    return $result;\n}\n", "    $result = array();\n   \
    \ $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\",\
    \ 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if (array_key_exists($value, $numbers))\
    \ {\n            $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "    $arr = array_filter($arr, function($item) {\n        return $item >=\
    \ 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        $names = array(\n           \
    \ 1 => \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n    \
    \        4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\"\
    ,\n            7 => \"Seven\",\n            8 => \"Eight\",\n            9 =>\
    \ \"Nine\"\n        );\n        return $names[$item];\n    }, $arr);\n    return\
    \ $arr;\n}\n", "    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names =\
    \ array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"\
    Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr as $value) {\n\
    \        if (in_array($value, $numbers)) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "\t$arr = array_filter($arr, function($n)\
    \ {\n\t\treturn $n > 0 && $n < 10;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($n) {\n\t\tswitch ($n) {\n\t\t\tcase 1:\n\t\t\t\t\
    return \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\
    \treturn \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\
    \t\t\treturn \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\
    \t\t\t\treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase\
    \ 9:\n\t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "  \
    \  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names = array(\"One\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n    $result = array();\n    foreach ($arr as $value) {\n        if (in_array($value,\
    \ $numbers)) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $names[$value - 1];\n    }\n    return $result;\n\
    }\n", "    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"\
    Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\"\
    );\n    $result = array();\n    foreach ($arr as $value) {\n        if (isset($numbers[$value]))\
    \ {\n            $result[] = $numbers[$value];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n", "  $arr = array_filter($arr, function($n) {\n    return\
    \ $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n \
    \ $arr = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n", "  \
    \  $result = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    return array_reverse($result);\n}\n\nprint_r(by_length(array(2, 1, 1, 4,\
    \ 5, 8, 2, 3)));\nprint_r(by_length(array()));\nprint_r(by_length(array(1, -1,\
    \ 55)));", "    $arr = array_filter($arr, function($item) {\n        return $item\
    \ >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $arr = array_filter($arr,\
    \ function($item) {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($item) {\n   \
    \     switch ($item) {\n            case 1:\n                return 'One';\n \
    \           case 2:\n                return 'Two';\n            case 3:\n    \
    \            return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if ($value > 0 && $value\
    \ < 10) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "  $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array('One', 'Two', 'Three',\
    \ 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine');\n  $result = array();\n  foreach\
    \ ($arr as $num) {\n    if (in_array($num, $nums)) {\n      $result[] = $num;\n\
    \    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n  foreach\
    \ ($result as $key => $num) {\n    $result[$key] = $names[$num - 1];\n  }\n  return\
    \ $result;\n}\n", "    $result = array();\n    $numbers = array(1 => \"One\",\
    \ 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [1 => 'One',\
    \ 2 => 'Two', 3 => 'Three', 4 => 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven',\
    \ 8 => 'Eight', 9 => 'Nine'];\n    foreach ($arr as $item) {\n        if ($item\
    \ >= 1 && $item <= 9) {\n            $result[] = $item;\n        }\n    }\n  \
    \  sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $item) {\n        $result[$key] = $numbers[$item];\n    }\n    return\
    \ $result;\n}\n", "    $arr = array_filter($arr, function($val) {\n        return\
    \ $val >= 1 && $val <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($val) {\n        switch ($val) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $arr = array_filter($arr,\
    \ function($item) {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($item) {\n   \
    \     switch ($item) {\n            case 1:\n                return 'One';\n \
    \           case 2:\n                return 'Two';\n            case 3:\n    \
    \            return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $item) {\n        if (isset($numbers[$item])) {\n\
    \            $result[] = $numbers[$item];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n", "  $result = array();\n  $digits = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n\
    \  }\n  sort($result);\n  $result = array_reverse($result);\n  foreach ($result\
    \ as $key => $value) {\n    $result[$key] = $digits[$value];\n  }\n  return $result;\n\
    }\n", "  $nums = array();\n  $names = array(\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  foreach ($arr as $num)\
    \ {\n    if ($num >= 1 && $num <= 9) {\n      $nums[] = $num;\n    }\n  }\n  sort($nums);\n\
    \  $nums = array_reverse($nums);\n  foreach ($nums as $key => $num) {\n    $nums[$key]\
    \ = $names[$num - 1];\n  }\n  return $nums;\n}\n", "  $arr = array_filter($arr,\
    \ function($n) {\n    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr\
    \ = array_reverse($arr);\n  $arr = array_map(function($n) {\n    $map = array(\n\
    \      1 => \"One\",\n      2 => \"Two\",\n      3 => \"Three\",\n      4 => \"\
    Four\",\n      5 => \"Five\",\n      6 => \"Six\",\n      7 => \"Seven\",\n  \
    \    8 => \"Eight\",\n      9 => \"Nine\"\n    );\n    return $map[$n];\n  },\
    \ $arr);\n  return $arr;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $arr = array_filter($arr,\
    \ function($x) {\n        return $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($x) {\n      \
    \  $map = array(\n            1 => \"One\",\n            2 => \"Two\",\n     \
    \       3 => \"Three\",\n            4 => \"Four\",\n            5 => \"Five\"\
    ,\n            6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"\
    Eight\",\n            9 => \"Nine\",\n        );\n        return $map[$x];\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $result = array();\n    $numbers =\
    \ array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\"\
    , 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if (array_key_exists($value, $numbers)) {\n          \
    \  $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "\t$arr = array_filter($arr, function($n) {\n\t\treturn $n >= 1 && $n <=\
    \ 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr = array_map(function($n)\
    \ {\n\t\tswitch ($n) {\n\t\t\tcase 1:\n\t\t\t\treturn \"One\";\n\t\t\tcase 2:\n\
    \t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\treturn \"Three\";\n\t\t\tcase\
    \ 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\t\t\treturn \"Five\";\n\t\t\t\
    case 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\t\t\t\treturn \"Seven\";\n\t\
    \t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase 9:\n\t\t\t\treturn \"Nine\"\
    ;\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "  $arr = array_filter($arr, function($n)\
    \ {\n    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($n) {\n    $numbers = array(\"One\", \"Two\", \"\
    Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    return\
    \ $numbers[$n - 1];\n  }, $arr);\n  return $arr;\n}\n", "    $arr = array_filter($arr,\
    \ function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($n) {\n      \
    \  $arr = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n        return $arr[$n - 1];\n    }, $arr);\n    return\
    \ $arr;\n}\n", "    $arr = array_filter($arr, function($item) {\n        return\
    \ $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "  $arr = array_filter($arr,\
    \ function($n) {\n    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr\
    \ = array_reverse($arr);\n  $arr = array_map(function($n) {\n    switch ($n) {\n\
    \      case 1:\n        return \"One\";\n      case 2:\n        return \"Two\"\
    ;\n      case 3:\n        return \"Three\";\n      case 4:\n        return \"\
    Four\";\n      case 5:\n        return \"Five\";\n      case 6:\n        return\
    \ \"Six\";\n      case 7:\n        return \"Seven\";\n      case 8:\n        return\
    \ \"Eight\";\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return\
    \ $arr;\n}\n", "    $result = array();\n    $numbers = array(1 => \"One\", 2 =>\
    \ \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"\
    Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value) {\n   \
    \     if (array_key_exists($value, $numbers)) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    return array_reverse($result);\n}\n", "    $numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9);\n    $names = array(\"One\", \"Two\", \"Three\", \"\
    Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    $result = array();\n\
    \    foreach ($arr as $value) {\n        if (in_array($value, $numbers)) {\n \
    \           $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $names[$value - 1];\n    }\n    return $result;\n}\n", " \
    \   $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names = array(\"One\",\
    \ \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n    $result = array();\n    foreach ($arr as $value) {\n        if (in_array($value,\
    \ $numbers)) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $names[$value - 1];\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\"\
    , 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\",\
    \ 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if\
    \ ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($a)\
    \ {\n        return $a > 0 && $a < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($a) {\n        switch ($a) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n", "  $arr = array_filter($arr,\
    \ function($val) {\n    return $val >= 1 && $val <= 9;\n  });\n  sort($arr);\n\
    \  $arr = array_reverse($arr);\n  $arr = array_map(function($val) {\n    switch\
    \ ($val) {\n      case 1:\n        return \"One\";\n      case 2:\n        return\
    \ \"Two\";\n      case 3:\n        return \"Three\";\n      case 4:\n        return\
    \ \"Four\";\n      case 5:\n        return \"Five\";\n      case 6:\n        return\
    \ \"Six\";\n      case 7:\n        return \"Seven\";\n      case 8:\n        return\
    \ \"Eight\";\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return\
    \ $arr;\n}\n", "  $numbers = array(\n    1 => \"One\",\n    2 => \"Two\",\n  \
    \  3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\",\n    6 => \"Six\",\n\
    \    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\n  );\n  $result\
    \ = array();\n  foreach ($arr as $value) {\n    if (array_key_exists($value, $numbers))\
    \ {\n      $result[] = $numbers[$value];\n    }\n  }\n  sort($result);\n  return\
    \ array_reverse($result);\n}\n", "    $arr = array_filter($arr, function($val)\
    \ {\n        return $val >= 1 && $val <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($val) {\n        switch\
    \ ($val) {\n            case 1:\n                return \"One\";\n           \
    \ case 2:\n                return \"Two\";\n            case 3:\n            \
    \    return \"Three\";\n            case 4:\n                return \"Four\";\n\
    \            case 5:\n                return \"Five\";\n            case 6:\n\
    \                return \"Six\";\n            case 7:\n                return\
    \ \"Seven\";\n            case 8:\n                return \"Eight\";\n       \
    \     case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n  \
    \  return $arr;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if (isset($numbers[$value]))\
    \ {\n            $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 &&\
    \ $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($n) {\n        switch ($n) {\n            case 1:\n   \
    \             return \"One\";\n            case 2:\n                return \"\
    Two\";\n            case 3:\n                return \"Three\";\n            case\
    \ 4:\n                return \"Four\";\n            case 5:\n                return\
    \ \"Five\";\n            case 6:\n                return \"Six\";\n          \
    \  case 7:\n                return \"Seven\";\n            case 8:\n         \
    \       return \"Eight\";\n            case 9:\n                return \"Nine\"\
    ;\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $arr = array_filter($arr,\
    \ function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($n) {\n      \
    \  $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
    Seven\", \"Eight\", \"Nine\");\n        return $names[$n - 1];\n    }, $arr);\n\
    \    return $arr;\n}\n", "  $arr = array_filter($arr, function($n) {\n    return\
    \ $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n \
    \ $arr = array_map(function($n) {\n    switch ($n) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n", "  \
    \  $result = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if (isset($numbers[$value]))\
    \ {\n            $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }", "    $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n\
    \ <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr =\
    \ array_map(function($n) {\n        return [\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][$n - 1];\n    }, $arr);\n\
    \    return $arr;\n}\n", "  $arr = array_filter($arr, function($item) {\n    return\
    \ $item >= 1 && $item <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($item) {\n    switch ($item) {\n      case 1:\n \
    \       return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n\
    }\n", "    $arr = array_filter($arr, function($item) {\n        return $item >=\
    \ 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($item) {\n        switch ($item) {\n          \
    \  case 1:\n                return 'One';\n            case 2:\n             \
    \   return 'Two';\n            case 3:\n                return 'Three';\n    \
    \        case 4:\n                return 'Four';\n            case 5:\n      \
    \          return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "  $arr = array_filter($arr,\
    \ function($n) {\n    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr\
    \ = array_reverse($arr);\n  $arr = array_map(function($n) {\n    return ['One',\
    \ 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'][$n - 1];\n\
    \  }, $arr);\n  return $arr;\n}\n", "    $arr = array_filter($arr, function($n)\
    \ {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($n) {\n        $numbers\
    \ = array(\n            1 => \"One\",\n            2 => \"Two\",\n           \
    \ 3 => \"Three\",\n            4 => \"Four\",\n            5 => \"Five\",\n  \
    \          6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"Eight\"\
    ,\n            9 => \"Nine\"\n        );\n        return $numbers[$n];\n    },\
    \ $arr);\n    return $arr;\n}\n", "    $arr = array_filter($arr, function($x)\
    \ {\n        return $x > 0 && $x < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($x) {\n        $map = array(\n            1 =>\
    \ \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n         \
    \   4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\",\n  \
    \          7 => \"Seven\",\n            8 => \"Eight\",\n            9 => \"Nine\"\
    \n        );\n        return $map[$x];\n    }, $arr);\n    return $arr;\n}\n",
  "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 => 'Two',\n\
    \        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n        6\
    \ => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9 => 'Nine'\n\
    \    ];\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    rsort($result);\n    return $result;\n}\n", "  $nums = array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9);\n  $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  $new_arr = array();\n  foreach\
    \ ($arr as $num) {\n    if (in_array($num, $nums)) {\n      array_push($new_arr,\
    \ $num);\n    }\n  }\n  sort($new_arr);\n  $new_arr = array_reverse($new_arr);\n\
    \  foreach ($new_arr as $key => $num) {\n    $new_arr[$key] = $names[$num - 1];\n\
    \  }\n  return $new_arr;\n}\n", "    $result = array();\n    foreach ($arr as\
    \ $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    $result = array_map(function($value) {\n        switch ($value) {\n     \
    \       case 1:\n                return \"One\";\n            case 2:\n      \
    \          return \"Two\";\n            case 3:\n                return \"Three\"\
    ;\n            case 4:\n                return \"Four\";\n            case 5:\n\
    \                return \"Five\";\n            case 6:\n                return\
    \ \"Six\";\n            case 7:\n                return \"Seven\";\n         \
    \   case 8:\n                return \"Eight\";\n            case 9:\n        \
    \        return \"Nine\";\n        }\n    }, $result);\n    return $result;\n\
    }\n", "    $res = [];\n    $nums = [1 => 'One', 2 => 'Two', 3 => 'Three', 4 =>\
    \ 'Four', 5 => 'Five', 6 => 'Six', 7 => 'Seven', 8 => 'Eight', 9 => 'Nine'];\n\
    \    foreach ($arr as $num) {\n        if ($num > 0 && $num < 10) {\n        \
    \    $res[] = $num;\n        }\n    }\n    sort($res);\n    $res = array_reverse($res);\n\
    \    foreach ($res as $key => $num) {\n        $res[$key] = $nums[$num];\n   \
    \ }\n    return $res;\n}\n", "  $arr = array_filter($arr, function($v) {\n   \
    \ return $v >= 1 && $v <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($v) {\n    switch ($v) {\n      case 1:\n       \
    \ return 'One';\n      case 2:\n        return 'Two';\n      case 3:\n       \
    \ return 'Three';\n      case 4:\n        return 'Four';\n      case 5:\n    \
    \    return 'Five';\n      case 6:\n        return 'Six';\n      case 7:\n   \
    \     return 'Seven';\n      case 8:\n        return 'Eight';\n      case 9:\n\
    \        return 'Nine';\n    }\n  }, $arr);\n  return $arr;\n}\n", "    $numbers\
    \ = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names = array(\"One\", \"Two\", \"\
    Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    $result\
    \ = array();\n    foreach ($arr as $value) {\n        if (in_array($value, $numbers))\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $names[$value - 1];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $number) {\n        if (array_key_exists($number,\
    \ $numbers)) {\n            $result[] = $numbers[$number];\n        }\n    }\n\
    \    return array_reverse($result);\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $arr = array_filter($arr,\
    \ function($item) {\n        return $item > 0 && $item < 10;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($item) {\n   \
    \     switch ($item) {\n            case 1:\n                return 'One';\n \
    \           case 2:\n                return 'Two';\n            case 3:\n    \
    \            return 'Three';\n            case 4:\n                return 'Four';\n\
    \            case 5:\n                return 'Five';\n            case 6:\n  \
    \              return 'Six';\n            case 7:\n                return 'Seven';\n\
    \            case 8:\n                return 'Eight';\n            case 9:\n \
    \               return 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n",
  "    $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names = array(\"One\", \"\
    Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n    $result = array();\n    foreach ($arr as $value) {\n        if (in_array($value,\
    \ $numbers)) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $names[$value - 1];\n    }\n    return $result;\n\
    }\n", "    $numbers = array(\n        1 => \"One\",\n        2 => \"Two\",\n \
    \       3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\",\n    \
    \    6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n       \
    \ 9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($n)\
    \ {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($n) {\n        switch ($n)\
    \ {\n            case 1:\n                return \"One\";\n            case 2:\n\
    \                return \"Two\";\n            case 3:\n                return\
    \ \"Three\";\n            case 4:\n                return \"Four\";\n        \
    \    case 5:\n                return \"Five\";\n            case 6:\n        \
    \        return \"Six\";\n            case 7:\n                return \"Seven\"\
    ;\n            case 8:\n                return \"Eight\";\n            case 9:\n\
    \                return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n\
    }\n", "  $numbers = array(\n    1 => \"One\",\n    2 => \"Two\",\n    3 => \"\
    Three\",\n    4 => \"Four\",\n    5 => \"Five\",\n    6 => \"Six\",\n    7 =>\
    \ \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\n  );\n  $result = array();\n\
    \  foreach ($arr as $value) {\n    if (array_key_exists($value, $numbers)) {\n\
    \      $result[] = $numbers[$value];\n    }\n  }\n  sort($result);\n  return array_reverse($result);\n\
    }\n", "    $arr = array_filter($arr, function($v) {\n        return $v >= 1 &&\
    \ $v <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr\
    \ = array_map(function($v) {\n        switch ($v) {\n            case 1:\n   \
    \             return 'One';\n            case 2:\n                return 'Two';\n\
    \            case 3:\n                return 'Three';\n            case 4:\n \
    \               return 'Four';\n            case 5:\n                return 'Five';\n\
    \            case 6:\n                return 'Six';\n            case 7:\n   \
    \             return 'Seven';\n            case 8:\n                return 'Eight';\n\
    \            case 9:\n                return 'Nine';\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "  $numbers = array(1 => \"One\", 2 => \"Two\", 3 =>\
    \ \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 =>\
    \ \"Eight\", 9 => \"Nine\");\n  $result = array();\n  foreach ($arr as $value)\
    \ {\n    if (array_key_exists($value, $numbers)) {\n      $result[] = $numbers[$value];\n\
    \    }\n  }\n  sort($result);\n  return array_reverse($result);\n}\n", "    $result\
    \ = array();\n    foreach ($arr as $v) {\n        if ($v >= 1 && $v <= 9) {\n\
    \            $result[] = $v;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as &$v) {\n        switch ($v)\
    \ {\n            case 1:\n                $v = 'One';\n                break;\n\
    \            case 2:\n                $v = 'Two';\n                break;\n  \
    \          case 3:\n                $v = 'Three';\n                break;\n  \
    \          case 4:\n                $v = 'Four';\n                break;\n   \
    \         case 5:\n                $v = 'Five';\n                break;\n    \
    \        case 6:\n                $v = 'Six';\n                break;\n      \
    \      case 7:\n                $v = 'Seven';\n                break;\n      \
    \      case 8:\n                $v = 'Eight';\n                break;\n      \
    \      case 9:\n                $v = 'Nine';\n                break;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($v)\
    \ {\n        return $v >= 1 && $v <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($v) {\n        switch ($v)\
    \ {\n            case 1:\n                return 'One';\n            case 2:\n\
    \                return 'Two';\n            case 3:\n                return 'Three';\n\
    \            case 4:\n                return 'Four';\n            case 5:\n  \
    \              return 'Five';\n            case 6:\n                return 'Six';\n\
    \            case 7:\n                return 'Seven';\n            case 8:\n \
    \               return 'Eight';\n            case 9:\n                return 'Nine';\n\
    \        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = [];\n    $numbers\
    \ = [\n        1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n     \
    \   4 => 'Four',\n        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n\
    \        8 => 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value)\
    \ {\n        if (isset($numbers[$value])) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    sort($result);\n    return array_reverse($result);\n}\n",
  "  $arr = array_filter($arr, function($num) {\n    return $num >= 1 && $num <= 9;\n\
    \  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($num)\
    \ {\n    switch ($num) {\n      case 1:\n        return \"One\";\n      case 2:\n\
    \        return \"Two\";\n      case 3:\n        return \"Three\";\n      case\
    \ 4:\n        return \"Four\";\n      case 5:\n        return \"Five\";\n    \
    \  case 6:\n        return \"Six\";\n      case 7:\n        return \"Seven\";\n\
    \      case 8:\n        return \"Eight\";\n      case 9:\n        return \"Nine\"\
    ;\n    }\n  }, $arr);\n  return $arr;\n}\n", "  $arr = array_filter($arr, function($n)\
    \ {\n    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($n) {\n    $names = array(\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    return $names[$n\
    \ - 1];\n  }, $arr);\n  return $arr;\n}\n", "  $result = [];\n  $numbers = [\n\
    \    1 => \"One\",\n    2 => \"Two\",\n    3 => \"Three\",\n    4 => \"Four\"\
    ,\n    5 => \"Five\",\n    6 => \"Six\",\n    7 => \"Seven\",\n    8 => \"Eight\"\
    ,\n    9 => \"Nine\"\n  ];\n  foreach ($arr as $value) {\n    if (array_key_exists($value,\
    \ $numbers)) {\n      $result[] = $numbers[$value];\n    }\n  }\n  return array_reverse($result);\n\
    }\n", "    $result = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\"\
    , 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\",\
    \ 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if\
    \ ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $result = [];\n    $numbers = [\n     \
    \   1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if (isset($numbers[$value])) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    sort($result);\n    return array_reverse($result);\n}\n",
  "  $result = array();\n  $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\"\
    , 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\",\
    \ 9 => \"Nine\");\n  foreach ($arr as $value) {\n    if ($value > 0 && $value\
    \ < 10) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  foreach ($result as $key => $value) {\n    $result[$key]\
    \ = $numbers[$value];\n  }\n  return $result;\n}\n", "    $arr = array_filter($arr,\
    \ function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($n) {\n      \
    \  $numbers = array(\n            1 => \"One\",\n            2 => \"Two\",\n \
    \           3 => \"Three\",\n            4 => \"Four\",\n            5 => \"Five\"\
    ,\n            6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"\
    Eight\",\n            9 => \"Nine\"\n        );\n        return $numbers[$n];\n\
    \    }, $arr);\n    return $arr;\n}\n", "  $result = array();\n  $numbers = array(1\
    \ => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 =>\
    \ \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as\
    \ $value) {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n\
    \    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n  foreach\
    \ ($result as $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n\
    \  return $result;\n}\n", "  $result = [];\n  $numbers = [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9];\n  foreach ($arr as $value) {\n    if (in_array($value, $numbers)) {\n\
    \      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  $result = array_map(function($value) {\n    switch ($value) {\n      case 1:\n\
    \        return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $result);\n  return $result;\n\
    }\n", "    $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n    $names = array(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n    $result = array();\n    foreach ($arr as $value) {\n        if (in_array($value,\
    \ $nums)) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $names[$value - 1];\n    }\n    return $result;\n\
    }\n", "    $numbers = array(\n        1 => \"One\",\n        2 => \"Two\",\n \
    \       3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\",\n    \
    \    6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n       \
    \ 9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (isset($numbers[$value])) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    rsort($result);\n    return $result;\n}\n", "    $arr =\
    \ array_filter($arr, function($x) {\n        return $x >= 1 && $x <= 9;\n    });\n\
    \    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($x)\
    \ {\n        switch ($x) {\n            case 1:\n                return \"One\"\
    ;\n            case 2:\n                return \"Two\";\n            case 3:\n\
    \                return \"Three\";\n            case 4:\n                return\
    \ \"Four\";\n            case 5:\n                return \"Five\";\n         \
    \   case 6:\n                return \"Six\";\n            case 7:\n          \
    \      return \"Seven\";\n            case 8:\n                return \"Eight\"\
    ;\n            case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n\
    \    return $arr;\n}", "  $result = [];\n  $numbers = [\n    1 => \"One\",\n \
    \   2 => \"Two\",\n    3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\"\
    ,\n    6 => \"Six\",\n    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\
    \n  ];\n  foreach ($arr as $value) {\n    if (array_key_exists($value, $numbers))\
    \ {\n      $result[] = $numbers[$value];\n    }\n  }\n  return array_reverse($result);\n\
    }\n", "    $result = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\"\
    , 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\",\
    \ 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if\
    \ ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return \"One\";\n          \
    \  case 2:\n                return \"Two\";\n            case 3:\n           \
    \     return \"Three\";\n            case 4:\n                return \"Four\"\
    ;\n            case 5:\n                return \"Five\";\n            case 6:\n\
    \                return \"Six\";\n            case 7:\n                return\
    \ \"Seven\";\n            case 8:\n                return \"Eight\";\n       \
    \     case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n  \
    \  return $arr;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    return array_reverse($result);\n}\n", "    $result = array();\n    $numbers\
    \ = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\"\
    , 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if (isset($numbers[$value])) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "    $result = array();\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        switch ($value) {\n            case 1:\n     \
    \           $result[$key] = \"One\";\n                break;\n            case\
    \ 2:\n                $result[$key] = \"Two\";\n                break;\n     \
    \       case 3:\n                $result[$key] = \"Three\";\n                break;\n\
    \            case 4:\n                $result[$key] = \"Four\";\n            \
    \    break;\n            case 5:\n                $result[$key] = \"Five\";\n\
    \                break;\n            case 6:\n                $result[$key] =\
    \ \"Six\";\n                break;\n            case 7:\n                $result[$key]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[$key]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[$key]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $numbers = array(\n        1 => \"One\",\n        2 => \"Two\",\n \
    \       3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\",\n    \
    \    6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n       \
    \ 9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return $result;\n\
    }\n", "    $numbers = array(\n        1 => \"One\",\n        2 => \"Two\",\n \
    \       3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\",\n    \
    \    6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n       \
    \ 9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $number)\
    \ {\n        if (isset($numbers[$number])) {\n            $result[] = $numbers[$number];\n\
    \        }\n    }\n    rsort($result);\n    return $result;\n}\n", "  $numbers\
    \ = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $value) {\n    if (in_array($value, $numbers)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $names[$value -\
    \ 1];\n  }\n  return $result;\n}\n", "  $arr = array_filter($arr, function($n)\
    \ {\n    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($n) {\n    $numbers = array(\n      1 => \"One\"\
    ,\n      2 => \"Two\",\n      3 => \"Three\",\n      4 => \"Four\",\n      5 =>\
    \ \"Five\",\n      6 => \"Six\",\n      7 => \"Seven\",\n      8 => \"Eight\"\
    ,\n      9 => \"Nine\"\n    );\n    return $numbers[$n];\n  }, $arr);\n  return\
    \ $arr;\n}\n", "    $arr = array_filter($arr, function($n) {\n        return $n\
    \ >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n", "\t$arr = array_filter($arr,\
    \ function($n) { return $n >= 1 && $n <= 9; });\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($n) {\n\t\tswitch ($n) {\n\t\t\tcase 1: return \"\
    One\";\n\t\t\tcase 2: return \"Two\";\n\t\t\tcase 3: return \"Three\";\n\t\t\t\
    case 4: return \"Four\";\n\t\t\tcase 5: return \"Five\";\n\t\t\tcase 6: return\
    \ \"Six\";\n\t\t\tcase 7: return \"Seven\";\n\t\t\tcase 8: return \"Eight\";\n\
    \t\t\tcase 9: return \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "  $arr\
    \ = array_filter($arr, function($num) {\n    return $num >= 1 && $num <= 9;\n\
    \  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($num)\
    \ {\n    switch ($num) {\n      case 1:\n        return \"One\";\n      case 2:\n\
    \        return \"Two\";\n      case 3:\n        return \"Three\";\n      case\
    \ 4:\n        return \"Four\";\n      case 5:\n        return \"Five\";\n    \
    \  case 6:\n        return \"Six\";\n      case 7:\n        return \"Seven\";\n\
    \      case 8:\n        return \"Eight\";\n      case 9:\n        return \"Nine\"\
    ;\n    }\n  }, $arr);\n  return $arr;\n}\n", "    $numbers = array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9);\n    $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    $result = array();\n  \
    \  foreach ($arr as $value) {\n        if (in_array($value, $numbers)) {\n   \
    \         $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $names[$value - 1];\n    }\n    return $result;\n}\n", " \
    \   $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <=\
    \ 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1:\n                return \"One\"\
    ;\n            case 2:\n                return \"Two\";\n            case 3:\n\
    \                return \"Three\";\n            case 4:\n                return\
    \ \"Four\";\n            case 5:\n                return \"Five\";\n         \
    \   case 6:\n                return \"Six\";\n            case 7:\n          \
    \      return \"Seven\";\n            case 8:\n                return \"Eight\"\
    ;\n            case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "    $arr = array_filter($arr, function($n) {\n     \
    \   return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result =\
    \ array();\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4\
    \ => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9\
    \ => \"Nine\");\n    foreach ($arr as $item) {\n        if ($item >= 1 && $item\
    \ <= 9) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $item)\
    \ {\n        $result[$key] = $numbers[$item];\n    }\n    return $result;\n}\n",
  "  $arr = array_filter($arr, function($n) {\n    return ($n >= 1 && $n <= 9);\n\
    \  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($n)\
    \ {\n    switch ($n) {\n      case 1:\n        return \"One\";\n      case 2:\n\
    \        return \"Two\";\n      case 3:\n        return \"Three\";\n      case\
    \ 4:\n        return \"Four\";\n      case 5:\n        return \"Five\";\n    \
    \  case 6:\n        return \"Six\";\n      case 7:\n        return \"Seven\";\n\
    \      case 8:\n        return \"Eight\";\n      case 9:\n        return \"Nine\"\
    ;\n    }\n  }, $arr);\n  return $arr;\n}\n", "    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    $result = array();\n    foreach\
    \ ($arr as $value) {\n        if ($value > 0 && $value < 10) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $numbers = array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9);\n    $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\",\
    \ \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    $result = array();\n    foreach\
    \ ($arr as $value) {\n        if (in_array($value, $numbers)) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "    $result = array();\n    $numbers\
    \ = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\"\
    , 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}", "    $result = [];\n    $numbers = [\n      \
    \  1 => 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n\
    \        5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n    \
    \    }\n    }\n    sort($result);\n    $result = array_reverse($result);\n   \
    \ foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $numbers = array(1 => \"One\", 2 => \"\
    Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\"\
    , 8 => \"Eight\", 9 => \"Nine\");\n    $result = array();\n    foreach ($arr as\
    \ $value) {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return $result;\n\
    }\n", "\t$arr = array_filter($arr, function($n) {\n\t\treturn $n >= 1 && $n <=\
    \ 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr = array_map(function($n)\
    \ {\n\t\tswitch ($n) {\n\t\t\tcase 1:\n\t\t\t\treturn \"One\";\n\t\t\tcase 2:\n\
    \t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\treturn \"Three\";\n\t\t\tcase\
    \ 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\t\t\treturn \"Five\";\n\t\t\t\
    case 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\t\t\t\treturn \"Seven\";\n\t\
    \t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase 9:\n\t\t\t\treturn \"Nine\"\
    ;\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "  $nums = array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9);\n  $words = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  $newArr = array();\n  foreach ($arr\
    \ as $num) {\n    if (in_array($num, $nums)) {\n      array_push($newArr, $num);\n\
    \    }\n  }\n  sort($newArr);\n  $newArr = array_reverse($newArr);\n  foreach\
    \ ($newArr as $key => $num) {\n    $newArr[$key] = $words[$num - 1];\n  }\n  return\
    \ $newArr;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n        if (array_key_exists($number,\
    \ $numbers)) {\n            $result[] = $numbers[$number];\n        }\n    }\n\
    \    rsort($result);\n    return $result;\n}\n", "    $arr = array_filter($arr,\
    \ function($item) {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($item) {\n   \
    \     switch ($item) {\n            case 1:\n                return \"One\";\n\
    \            case 2:\n                return \"Two\";\n            case 3:\n \
    \               return \"Three\";\n            case 4:\n                return\
    \ \"Four\";\n            case 5:\n                return \"Five\";\n         \
    \   case 6:\n                return \"Six\";\n            case 7:\n          \
    \      return \"Seven\";\n            case 8:\n                return \"Eight\"\
    ;\n            case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "    $numbers = array(\n        1 => \"One\",\n     \
    \   2 => \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5\
    \ => \"Five\",\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"\
    Eight\",\n        9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr\
    \ as $value) {\n        if (array_key_exists($value, $numbers)) {\n          \
    \  $result[] = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return\
    \ $result;\n}\n", "  $map = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\",\
    \ 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\",\
    \ 9 => \"Nine\");\n  $result = array();\n  foreach ($arr as $value) {\n    if\
    \ (isset($map[$value])) {\n      $result[] = $map[$value];\n    }\n  }\n  rsort($result);\n\
    \  return $result;\n}\n", "  $result = array();\n  $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n\
    \    if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n  }\n\
    \  sort($result);\n  $result = array_reverse($result);\n  foreach ($result as\
    \ $key => $value) {\n    $result[$key] = $numbers[$value];\n  }\n  return $result;\n\
    }\n", "    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"\
    Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\"\
    );\n    $result = array();\n    foreach ($arr as $value) {\n        if ($value\
    \ >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    $result = array_reverse($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $numbers[$value];\n    }\n   \
    \ return $result;\n}\n", "    $arr = array_filter($arr, function($n) {\n     \
    \   return $n > 0 && $n < 10;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        $numbers = array(\n            1\
    \ => \"One\",\n            2 => \"Two\",\n            3 => \"Three\",\n      \
    \      4 => \"Four\",\n            5 => \"Five\",\n            6 => \"Six\",\n\
    \            7 => \"Seven\",\n            8 => \"Eight\",\n            9 => \"\
    Nine\"\n        );\n        return $numbers[$n];\n    }, $arr);\n    return $arr;\n\
    }\n", "    $result = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\"\
    , 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\",\
    \ 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if\
    \ (array_key_exists($value, $numbers)) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    rsort($result);\n    return $result;\n}\n\n$arr = array(2,\
    \ 1, 1, 4, 5, 8, 2, 3);\nprint_r(by_length($arr));\n", "    $arr = array_filter($arr,\
    \ function($item) {\n        return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($item) {\n   \
    \     switch ($item) {\n            case 1:\n                return \"One\";\n\
    \            case 2:\n                return \"Two\";\n            case 3:\n \
    \               return \"Three\";\n            case 4:\n                return\
    \ \"Four\";\n            case 5:\n                return \"Five\";\n         \
    \   case 6:\n                return \"Six\";\n            case 7:\n          \
    \      return \"Seven\";\n            case 8:\n                return \"Eight\"\
    ;\n            case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n\
    \    return $arr;\n}", "    $result = array();\n    $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0 && $value < 10) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        switch ($value) {\n      \
    \      case 1:\n                $result[$key] = \"One\";\n                break;\n\
    \            case 2:\n                $result[$key] = \"Two\";\n             \
    \   break;\n            case 3:\n                $result[$key] = \"Three\";\n\
    \                break;\n            case 4:\n                $result[$key] =\
    \ \"Four\";\n                break;\n            case 5:\n                $result[$key]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[$key]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[$key]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[$key]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[$key]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "    $numbers = array(\n        1 => \"One\",\n        2 => \"Two\",\n \
    \       3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\",\n    \
    \    6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n       \
    \ 9 => \"Nine\"\n    );\n    $result = array();\n    foreach ($arr as $value)\
    \ {\n        if (array_key_exists($value, $numbers)) {\n            $result[]\
    \ = $numbers[$value];\n        }\n    }\n    rsort($result);\n    return $result;\n\
    }\n", "  $nums = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $words = array('One', 'Two',\
    \ 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine');\n  $result = array();\n\
    \  foreach ($arr as $num) {\n    if (in_array($num, $nums)) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $num) {\n    $result[$key] = $words[$num - 1];\n\
    \  }\n  return $result;\n}\n", "  $result = array();\n  foreach ($arr as $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $result[] = $value;\n    }\n\
    \  }\n  sort($result);\n  $result = array_reverse($result);\n  foreach ($result\
    \ as $key => $value) {\n    switch ($value) {\n      case 1:\n        $result[$key]\
    \ = \"One\";\n        break;\n      case 2:\n        $result[$key] = \"Two\";\n\
    \        break;\n      case 3:\n        $result[$key] = \"Three\";\n        break;\n\
    \      case 4:\n        $result[$key] = \"Four\";\n        break;\n      case\
    \ 5:\n        $result[$key] = \"Five\";\n        break;\n      case 6:\n     \
    \   $result[$key] = \"Six\";\n        break;\n      case 7:\n        $result[$key]\
    \ = \"Seven\";\n        break;\n      case 8:\n        $result[$key] = \"Eight\"\
    ;\n        break;\n      case 9:\n        $result[$key] = \"Nine\";\n        break;\n\
    \    }\n  }\n  return $result;\n}", "    $result = array();\n    $numbers = array(1\
    \ => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 =>\
    \ \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0 && $value < 10) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "\t$numbers = array(\n\t\t1 => \"One\",\n\t\
    \t2 => \"Two\",\n\t\t3 => \"Three\",\n\t\t4 => \"Four\",\n\t\t5 => \"Five\",\n\
    \t\t6 => \"Six\",\n\t\t7 => \"Seven\",\n\t\t8 => \"Eight\",\n\t\t9 => \"Nine\"\
    \n\t);\n\t$result = array();\n\tforeach ($arr as $value) {\n\t\tif ($value >=\
    \ 1 && $value <= 9) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\
    \t$result = array_reverse($result);\n\tforeach ($result as $key => $value) {\n\
    \t\t$result[$key] = $numbers[$value];\n\t}\n\treturn $result;\n}\n", "    $result\
    \ = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\"\
    , 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\",\
    \ 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if ($value >= 1 &&\
    \ $value <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n",
  "    $result = array();\n    foreach ($arr as $value) {\n        if ($value >= 1\
    \ && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    $result = array_reverse($result);\n    foreach ($result as $key => $value)\
    \ {\n        switch ($value) {\n            case 1:\n                $result[$key]\
    \ = \"One\";\n                break;\n            case 2:\n                $result[$key]\
    \ = \"Two\";\n                break;\n            case 3:\n                $result[$key]\
    \ = \"Three\";\n                break;\n            case 4:\n                $result[$key]\
    \ = \"Four\";\n                break;\n            case 5:\n                $result[$key]\
    \ = \"Five\";\n                break;\n            case 6:\n                $result[$key]\
    \ = \"Six\";\n                break;\n            case 7:\n                $result[$key]\
    \ = \"Seven\";\n                break;\n            case 8:\n                $result[$key]\
    \ = \"Eight\";\n                break;\n            case 9:\n                $result[$key]\
    \ = \"Nine\";\n                break;\n        }\n    }\n    return $result;\n\
    }\n", "  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    );\n  $result = array();\n  foreach ($arr as $value) {\n    if (in_array($value,\
    \ $numbers)) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  $result\
    \ = array_reverse($result);\n  $result = array_map(function($value) use ($names)\
    \ {\n    return $names[$value - 1];\n  }, $result);\n  return $result;\n}\n",
  "  $arr = array_filter($arr, function($item) {\n    return $item >= 1 && $item <=\
    \ 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($item)\
    \ {\n    switch ($item) {\n      case 1:\n        return \"One\";\n      case\
    \ 2:\n        return \"Two\";\n      case 3:\n        return \"Three\";\n    \
    \  case 4:\n        return \"Four\";\n      case 5:\n        return \"Five\";\n\
    \      case 6:\n        return \"Six\";\n      case 7:\n        return \"Seven\"\
    ;\n      case 8:\n        return \"Eight\";\n      case 9:\n        return \"\
    Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n", "  $nums = array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9);\n  $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"\
    Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  $result = array();\n  foreach\
    \ ($arr as $num) {\n    if (in_array($num, $nums)) {\n      $result[] = $num;\n\
    \    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n  foreach\
    \ ($result as $key => $value) {\n    $result[$key] = $names[$value - 1];\n  }\n\
    \  return $result;\n}\n", "    $arr = array_filter($arr, function($item) {\n \
    \       return $item >= 1 && $item <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return \"One\";\n          \
    \  case 2:\n                return \"Two\";\n            case 3:\n           \
    \     return \"Three\";\n            case 4:\n                return \"Four\"\
    ;\n            case 5:\n                return \"Five\";\n            case 6:\n\
    \                return \"Six\";\n            case 7:\n                return\
    \ \"Seven\";\n            case 8:\n                return \"Eight\";\n       \
    \     case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n  \
    \  return $arr;\n}\n", "    $arr = array_filter($arr, function($n) {\n       \
    \ return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($n) {\n        switch ($n) {\n            case\
    \ 1:\n                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n", "  $numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $value) {\n    if (in_array($value, $numbers)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $names[$value -\
    \ 1];\n  }\n  return $result;\n}\n", "  $arr = array_filter($arr, function($n)\
    \ {\n    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($n) {\n    switch ($n) {\n      case 1:\n       \
    \ return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n   \
    \     return \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n\
    \        return \"Five\";\n      case 6:\n        return \"Six\";\n      case\
    \ 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\";\n  \
    \    case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n",
  "    $result = array();\n    $digits = array(1 => \"One\", 2 => \"Two\", 3 => \"\
    Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\"\
    , 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $digits)) {\n            $result[] = $digits[$value];\n        }\n    }\n  \
    \  rsort($result);\n    return $result;\n}\n", "    $result = array();\n    $numbers\
    \ = array(\n        1 => \"One\",\n        2 => \"Two\",\n        3 => \"Three\"\
    ,\n        4 => \"Four\",\n        5 => \"Five\",\n        6 => \"Six\",\n   \
    \     7 => \"Seven\",\n        8 => \"Eight\",\n        9 => \"Nine\"\n    );\n\
    \    foreach ($arr as $number) {\n        if (array_key_exists($number, $numbers))\
    \ {\n            $result[] = $numbers[$number];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n", "  $result = [];\n  $numbers = [\n    1 => \"One\"\
    ,\n    2 => \"Two\",\n    3 => \"Three\",\n    4 => \"Four\",\n    5 => \"Five\"\
    ,\n    6 => \"Six\",\n    7 => \"Seven\",\n    8 => \"Eight\",\n    9 => \"Nine\"\
    \n  ];\n  foreach ($arr as $value) {\n    if (array_key_exists($value, $numbers))\
    \ {\n      $result[] = $numbers[$value];\n    }\n  }\n  rsort($result);\n  return\
    \ $result;\n}\n", "    $result = array();\n    $numbers = array(\n        1 =>\
    \ \"One\",\n        2 => \"Two\",\n        3 => \"Three\",\n        4 => \"Four\"\
    ,\n        5 => \"Five\",\n        6 => \"Six\",\n        7 => \"Seven\",\n  \
    \      8 => \"Eight\",\n        9 => \"Nine\"\n    );\n    foreach ($arr as $number)\
    \ {\n        if (array_key_exists($number, $numbers)) {\n            $result[]\
    \ = $numbers[$number];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "  $arr = array_filter($arr, function($item) {\n    return $item > 0 &&\
    \ $item < 10;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($item)\
    \ {\n    switch ($item) {\n      case 1:\n        return \"One\";\n      case\
    \ 2:\n        return \"Two\";\n      case 3:\n        return \"Three\";\n    \
    \  case 4:\n        return \"Four\";\n      case 5:\n        return \"Five\";\n\
    \      case 6:\n        return \"Six\";\n      case 7:\n        return \"Seven\"\
    ;\n      case 8:\n        return \"Eight\";\n      case 9:\n        return \"\
    Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n", "    $numbers = array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9);\n    $names = array(\"One\", \"Two\", \"Three\", \"Four\"\
    , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n    $result = array();\n\
    \    foreach ($arr as $value) {\n        if (in_array($value, $numbers)) {\n \
    \           $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $names[$value - 1];\n    }\n    return $result;\n}\n", " \
    \   $arr = array_filter($arr, function($n) {\n        return $n >= 1 && $n <=\
    \ 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($n)\
    \ {\n        switch ($n) {\n            case 1:\n                return \"One\"\
    ;\n            case 2:\n                return \"Two\";\n            case 3:\n\
    \                return \"Three\";\n            case 4:\n                return\
    \ \"Four\";\n            case 5:\n                return \"Five\";\n         \
    \   case 6:\n                return \"Six\";\n            case 7:\n          \
    \      return \"Seven\";\n            case 8:\n                return \"Eight\"\
    ;\n            case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n\
    \    return $arr;\n}\n", "  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $words\
    \ = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\"\
    , \"Eight\", \"Nine\");\n  $new_arr = array();\n  foreach ($arr as $value) {\n\
    \    if (in_array($value, $numbers)) {\n      array_push($new_arr, $value);\n\
    \    }\n  }\n  sort($new_arr);\n  $new_arr = array_reverse($new_arr);\n  foreach\
    \ ($new_arr as $key => $value) {\n    $new_arr[$key] = $words[$value - 1];\n \
    \ }\n  return $new_arr;\n}\n", "\t$numbers = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n\
    \t$names = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"\
    Seven\", \"Eight\", \"Nine\");\n\t$result = array();\n\tforeach ($arr as $key\
    \ => $value) {\n\t\tif (in_array($value, $numbers)) {\n\t\t\t$result[] = $value;\n\
    \t\t}\n\t}\n\tsort($result);\n\t$result = array_reverse($result);\n\tforeach ($result\
    \ as $key => $value) {\n\t\t$result[$key] = $names[$value - 1];\n\t}\n\treturn\
    \ $result;\n}\n", "  $arr = array_filter($arr, function($num) {\n    return $num\
    \ >= 1 && $num <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n  $arr\
    \ = array_map(function($num) {\n    switch ($num) {\n      case 1:\n        return\
    \ \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n        return\
    \ \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n       \
    \ return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n  \
    \      return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case\
    \ 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}", "  $arr\
    \ = array_filter($arr, function($v) {\n    return $v > 0 && $v < 10;\n  });\n\
    \  sort($arr);\n  $arr = array_reverse($arr);\n  $arr = array_map(function($v)\
    \ {\n    $nums = array(\n      1 => \"One\",\n      2 => \"Two\",\n      3 =>\
    \ \"Three\",\n      4 => \"Four\",\n      5 => \"Five\",\n      6 => \"Six\",\n\
    \      7 => \"Seven\",\n      8 => \"Eight\",\n      9 => \"Nine\"\n    );\n \
    \   return $nums[$v];\n  }, $arr);\n  return $arr;\n}\n", "    $result = array();\n\
    \    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if (array_key_exists($value, $numbers))\
    \ {\n            $result[] = $numbers[$value];\n        }\n    }\n    return array_reverse($result);\n\
    }\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n        2 =>\
    \ 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 => 'Five',\n\
    \        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n        9\
    \ => 'Nine'\n    ];\n    foreach ($arr as $item) {\n        if (array_key_exists($item,\
    \ $numbers)) {\n            $result[] = $numbers[$item];\n        }\n    }\n \
    \   return array_reverse($result);\n}\n", "    $arr = array_filter($arr, function($item)\
    \ {\n        return $item > 0 && $item < 10;\n    });\n    sort($arr);\n    $arr\
    \ = array_reverse($arr);\n    $arr = array_map(function($item) {\n        switch\
    \ ($item) {\n            case 1:\n                return 'One';\n            case\
    \ 2:\n                return 'Two';\n            case 3:\n                return\
    \ 'Three';\n            case 4:\n                return 'Four';\n            case\
    \ 5:\n                return 'Five';\n            case 6:\n                return\
    \ 'Six';\n            case 7:\n                return 'Seven';\n            case\
    \ 8:\n                return 'Eight';\n            case 9:\n                return\
    \ 'Nine';\n        }\n    }, $arr);\n    return $arr;\n}\n", "    $result = array();\n\
    \    $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n \
    \           $result[] = $value;\n        }\n    }\n    sort($result);\n    $result\
    \ = array_reverse($result);\n    foreach ($result as $key => $value) {\n     \
    \   $result[$key] = $numbers[$value];\n    }\n    return $result;\n}\n", "  $numbers\
    \ = array(1, 2, 3, 4, 5, 6, 7, 8, 9);\n  $names = array(\"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\");\n  $result = array();\n\
    \  foreach ($arr as $value) {\n    if (in_array($value, $numbers)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $names[$value -\
    \ 1];\n  }\n  return $result;\n}\n", "    $nums = array(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9);\n    $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"\
    Six\", \"Seven\", \"Eight\", \"Nine\");\n    $result = array();\n    foreach ($arr\
    \ as $key => $value) {\n        if (in_array($value, $nums)) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $names[$value\
    \ - 1];\n    }\n    return $result;\n}\n", "    $result = array();\n    $numbers\
    \ = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\"\
    , 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr\
    \ as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "\t$arr = array_filter($arr, function($n) {\n\
    \t\treturn $n >= 1 && $n <= 9;\n\t});\n\tsort($arr);\n\t$arr = array_reverse($arr);\n\
    \t$arr = array_map(function($n) {\n\t\tswitch ($n) {\n\t\t\tcase 1:\n\t\t\t\t\
    return \"One\";\n\t\t\tcase 2:\n\t\t\t\treturn \"Two\";\n\t\t\tcase 3:\n\t\t\t\
    \treturn \"Three\";\n\t\t\tcase 4:\n\t\t\t\treturn \"Four\";\n\t\t\tcase 5:\n\t\
    \t\t\treturn \"Five\";\n\t\t\tcase 6:\n\t\t\t\treturn \"Six\";\n\t\t\tcase 7:\n\
    \t\t\t\treturn \"Seven\";\n\t\t\tcase 8:\n\t\t\t\treturn \"Eight\";\n\t\t\tcase\
    \ 9:\n\t\t\t\treturn \"Nine\";\n\t\t}\n\t}, $arr);\n\treturn $arr;\n}\n", "\t\
    $arr = array_filter($arr, function($i) {\n\t\treturn $i > 0 && $i < 10;\n\t});\n\
    \tsort($arr);\n\t$arr = array_reverse($arr);\n\t$arr = array_map(function($i)\
    \ {\n\t\t$nums = array(\n\t\t\t1 => \"One\",\n\t\t\t2 => \"Two\",\n\t\t\t3 =>\
    \ \"Three\",\n\t\t\t4 => \"Four\",\n\t\t\t5 => \"Five\",\n\t\t\t6 => \"Six\",\n\
    \t\t\t7 => \"Seven\",\n\t\t\t8 => \"Eight\",\n\t\t\t9 => \"Nine\"\n\t\t);\n\t\t\
    return $nums[$i];\n\t}, $arr);\n\treturn $arr;\n}\n", "    $arr = array_filter($arr,\
    \ function($x) {\n        return $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($x) {\n      \
    \  $map = array(\n            1 => \"One\",\n            2 => \"Two\",\n     \
    \       3 => \"Three\",\n            4 => \"Four\",\n            5 => \"Five\"\
    ,\n            6 => \"Six\",\n            7 => \"Seven\",\n            8 => \"\
    Eight\",\n            9 => \"Nine\",\n        );\n        return $map[$x];\n \
    \   }, $arr);\n    return $arr;\n}\n", "    $numbers = array(\n        1 => \"\
    One\",\n        2 => \"Two\",\n        3 => \"Three\",\n        4 => \"Four\"\
    ,\n        5 => \"Five\",\n        6 => \"Six\",\n        7 => \"Seven\",\n  \
    \      8 => \"Eight\",\n        9 => \"Nine\",\n    );\n    $result = array();\n\
    \    foreach ($arr as $value) {\n        if (array_key_exists($value, $numbers))\
    \ {\n            $result[] = $numbers[$value];\n        }\n    }\n    rsort($result);\n\
    \    return $result;\n}\n", "    $result = [];\n    $numbers = [\n        1 =>\
    \ 'One',\n        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n \
    \       5 => 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 =>\
    \ 'Eight',\n        9 => 'Nine'\n    ];\n    foreach ($arr as $value) {\n    \
    \    if (array_key_exists($value, $numbers)) {\n            $result[] = $numbers[$value];\n\
    \        }\n    }\n    return array_reverse($result);\n}\n", "  $result = array();\n\
    \  $numbers = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\"\
    , 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n\
    \  foreach ($arr as $value) {\n    if ($value >= 1 && $value <= 9) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  $result = array_reverse($result);\n\
    \  foreach ($result as $key => $value) {\n    $result[$key] = $numbers[$value];\n\
    \  }\n  return $result;\n}\n", "  $numbers = array(1 => \"One\", 2 => \"Two\"\
    , 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\",\
    \ 8 => \"Eight\", 9 => \"Nine\");\n  $new_arr = array();\n  foreach ($arr as $value)\
    \ {\n    if ($value >= 1 && $value <= 9) {\n      $new_arr[] = $value;\n    }\n\
    \  }\n  sort($new_arr);\n  $new_arr = array_reverse($new_arr);\n  foreach ($new_arr\
    \ as $key => $value) {\n    $new_arr[$key] = $numbers[$value];\n  }\n  return\
    \ $new_arr;\n}\n", "    $result = [];\n    $numbers = [\n        1 => 'One',\n\
    \        2 => 'Two',\n        3 => 'Three',\n        4 => 'Four',\n        5 =>\
    \ 'Five',\n        6 => 'Six',\n        7 => 'Seven',\n        8 => 'Eight',\n\
    \        9 => 'Nine'\n    ];\n    foreach ($arr as $number) {\n        if (array_key_exists($number,\
    \ $numbers)) {\n            $result[] = $numbers[$number];\n        }\n    }\n\
    \    rsort($result);\n    return $result;\n}\n", "    $arr = array_filter($arr,\
    \ function($n) {\n        return $n >= 1 && $n <= 9;\n    });\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    $arr = array_map(function($n) {\n      \
    \  switch ($n) {\n            case 1:\n                return \"One\";\n     \
    \       case 2:\n                return \"Two\";\n            case 3:\n      \
    \          return \"Three\";\n            case 4:\n                return \"Four\"\
    ;\n            case 5:\n                return \"Five\";\n            case 6:\n\
    \                return \"Six\";\n            case 7:\n                return\
    \ \"Seven\";\n            case 8:\n                return \"Eight\";\n       \
    \     case 9:\n                return \"Nine\";\n        }\n    }, $arr);\n  \
    \  return $arr;\n}\n", "  $arr = array_filter($arr, function($v) {\n    return\
    \ $v >= 1 && $v <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n \
    \ $arr = array_map(function($v) {\n    switch ($v) {\n      case 1:\n        return\
    \ 'One';\n      case 2:\n        return 'Two';\n      case 3:\n        return\
    \ 'Three';\n      case 4:\n        return 'Four';\n      case 5:\n        return\
    \ 'Five';\n      case 6:\n        return 'Six';\n      case 7:\n        return\
    \ 'Seven';\n      case 8:\n        return 'Eight';\n      case 9:\n        return\
    \ 'Nine';\n    }\n  }, $arr);\n  return $arr;\n}\n", "    $numbers = array(\n\
    \        1 => \"One\",\n        2 => \"Two\",\n        3 => \"Three\",\n     \
    \   4 => \"Four\",\n        5 => \"Five\",\n        6 => \"Six\",\n        7 =>\
    \ \"Seven\",\n        8 => \"Eight\",\n        9 => \"Nine\"\n    );\n    $result\
    \ = array();\n    foreach ($arr as $value) {\n        if (array_key_exists($value,\
    \ $numbers)) {\n            $result[] = $numbers[$value];\n        }\n    }\n\
    \    rsort($result);\n    return $result;\n}\n", "  $result = array();\n  $numbers\
    \ = array(1 => \"One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\"\
    , 6 => \"Six\", 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr\
    \ as $value) {\n    if (array_key_exists($value, $numbers)) {\n      $result[]\
    \ = $numbers[$value];\n    }\n  }\n  return array_reverse($result);\n}\n", " \
    \   $arr = array_filter($arr, function($x) { return $x >= 1 && $x <= 9; });\n\
    \    sort($arr);\n    $arr = array_reverse($arr);\n    $arr = array_map(function($x)\
    \ {\n        switch ($x) {\n            case 1: return \"One\";\n            case\
    \ 2: return \"Two\";\n            case 3: return \"Three\";\n            case\
    \ 4: return \"Four\";\n            case 5: return \"Five\";\n            case\
    \ 6: return \"Six\";\n            case 7: return \"Seven\";\n            case\
    \ 8: return \"Eight\";\n            case 9: return \"Nine\";\n        }\n    },\
    \ $arr);\n    return $arr;\n}\n", "  $arr = array_filter($arr, function($n) {\n\
    \    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($n) {\n    switch ($n) {\n      case 1:\n       \
    \ return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n   \
    \     return \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n\
    \        return \"Five\";\n      case 6:\n        return \"Six\";\n      case\
    \ 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\";\n  \
    \    case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}\n",
  "    $arr = array_filter($arr, function($item) {\n        return $item >= 1 && $item\
    \ <= 9;\n    });\n    sort($arr);\n    $arr = array_reverse($arr);\n    $arr =\
    \ array_map(function($item) {\n        switch ($item) {\n            case 1:\n\
    \                return \"One\";\n            case 2:\n                return\
    \ \"Two\";\n            case 3:\n                return \"Three\";\n         \
    \   case 4:\n                return \"Four\";\n            case 5:\n         \
    \       return \"Five\";\n            case 6:\n                return \"Six\"\
    ;\n            case 7:\n                return \"Seven\";\n            case 8:\n\
    \                return \"Eight\";\n            case 9:\n                return\
    \ \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n}\n", "  $sorted = array();\n\
    \  $reversed = array();\n  $result = array();\n  $numbers = array(1 => \"One\"\
    , 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n  foreach ($arr as $value) {\n\
    \    if ($value >= 1 && $value <= 9) {\n      array_push($sorted, $value);\n \
    \   }\n  }\n  sort($sorted);\n  $reversed = array_reverse($sorted);\n  foreach\
    \ ($reversed as $value) {\n    array_push($result, $numbers[$value]);\n  }\n \
    \ return $result;\n}\n", "    $result = array();\n    $numbers = array(1 => \"\
    One\", 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\"\
    , 7 => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "  $numbers = array(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9);\n  $names = array(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\"\
    , \"Seven\", \"Eight\", \"Nine\");\n  $result = array();\n  foreach ($arr as $value)\
    \ {\n    if (in_array($value, $numbers)) {\n      $result[] = $value;\n    }\n\
    \  }\n  sort($result);\n  $result = array_reverse($result);\n  foreach ($result\
    \ as $key => $value) {\n    $result[$key] = $names[$value - 1];\n  }\n  return\
    \ $result;\n}\n", "    $result = array();\n    $numbers = array(1 => \"One\",\
    \ 2 => \"Two\", 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7\
    \ => \"Seven\", 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value)\
    \ {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    $result = array_reverse($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n\
    \    }\n    return $result;\n}\n", "    $arr = array_filter($arr, function($x)\
    \ {\n        return $x >= 1 && $x <= 9;\n    });\n    sort($arr);\n    $arr =\
    \ array_reverse($arr);\n    $arr = array_map(function($x) {\n        switch ($x)\
    \ {\n            case 1:\n                return \"One\";\n            case 2:\n\
    \                return \"Two\";\n            case 3:\n                return\
    \ \"Three\";\n            case 4:\n                return \"Four\";\n        \
    \    case 5:\n                return \"Five\";\n            case 6:\n        \
    \        return \"Six\";\n            case 7:\n                return \"Seven\"\
    ;\n            case 8:\n                return \"Eight\";\n            case 9:\n\
    \                return \"Nine\";\n        }\n    }, $arr);\n    return $arr;\n\
    }\n", "    $result = array();\n    $numbers = array(1 => \"One\", 2 => \"Two\"\
    , 3 => \"Three\", 4 => \"Four\", 5 => \"Five\", 6 => \"Six\", 7 => \"Seven\",\
    \ 8 => \"Eight\", 9 => \"Nine\");\n    foreach ($arr as $value) {\n        if\
    \ ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    $result = array_reverse($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $numbers[$value];\n \
    \   }\n    return $result;\n}\n", "  $arr = array_filter($arr, function($n) {\n\
    \    return $n >= 1 && $n <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($n) {\n    switch ($n) {\n      case 1:\n       \
    \ return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n   \
    \     return \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n\
    \        return \"Five\";\n      case 6:\n        return \"Six\";\n      case\
    \ 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\";\n  \
    \    case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n}",
  "  $arr = array_filter($arr, function($n) { return $n >= 1 && $n <= 9; });\n  sort($arr);\n\
    \  $arr = array_reverse($arr);\n  $arr = array_map(function($n) {\n    switch\
    \ ($n) {\n      case 1: return \"One\";\n      case 2: return \"Two\";\n     \
    \ case 3: return \"Three\";\n      case 4: return \"Four\";\n      case 5: return\
    \ \"Five\";\n      case 6: return \"Six\";\n      case 7: return \"Seven\";\n\
    \      case 8: return \"Eight\";\n      case 9: return \"Nine\";\n    }\n  },\
    \ $arr);\n  return $arr;\n}\n", "\t$result = array();\n\t$numbers = array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9);\n\tforeach ($arr as $value) {\n\t\tif (in_array($value,\
    \ $numbers)) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\t$result\
    \ = array_reverse($result);\n\tforeach ($result as $key => $value) {\n\t\tswitch\
    \ ($value) {\n\t\t\tcase 1:\n\t\t\t\t$result[$key] = \"One\";\n\t\t\t\tbreak;\n\
    \t\t\tcase 2:\n\t\t\t\t$result[$key] = \"Two\";\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\
    \t\t\t\t$result[$key] = \"Three\";\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t$result[$key]\
    \ = \"Four\";\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t$result[$key] = \"Five\"\
    ;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t$result[$key] = \"Six\";\n\t\t\t\tbreak;\n\
    \t\t\tcase 7:\n\t\t\t\t$result[$key] = \"Seven\";\n\t\t\t\tbreak;\n\t\t\tcase\
    \ 8:\n\t\t\t\t$result[$key] = \"Eight\";\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\
    \t$result[$key] = \"Nine\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "    $arr = array_filter($arr, function($v) {\n        return $v >= 1 && $v <= 9;\n\
    \    });\n    $arr = array_unique($arr);\n    sort($arr);\n    $arr = array_reverse($arr);\n\
    \    $arr = array_map(function($v) {\n        switch ($v) {\n            case\
    \ 1:\n                return 'One';\n            case 2:\n                return\
    \ 'Two';\n            case 3:\n                return 'Three';\n            case\
    \ 4:\n                return 'Four';\n            case 5:\n                return\
    \ 'Five';\n            case 6:\n                return 'Six';\n            case\
    \ 7:\n                return 'Seven';\n            case 8:\n                return\
    \ 'Eight';\n            case 9:\n                return 'Nine';\n        }\n \
    \   }, $arr);\n    return $arr;\n}\n", "  $result = array();\n  if (empty($arr))\
    \ {\n    return $result;\n  }\n  $arr = array_filter($arr, function($val) {\n\
    \    return $val >= 1 && $val <= 9;\n  });\n  sort($arr);\n  $arr = array_reverse($arr);\n\
    \  $arr = array_map(function($val) {\n    switch ($val) {\n      case 1:\n   \
    \     return \"One\";\n      case 2:\n        return \"Two\";\n      case 3:\n\
    \        return \"Three\";\n      case 4:\n        return \"Four\";\n      case\
    \ 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n     \
    \ case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\"\
    ;\n      case 9:\n        return \"Nine\";\n    }\n  }, $arr);\n  return $arr;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

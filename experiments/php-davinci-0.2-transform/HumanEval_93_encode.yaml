name: HumanEval_93_encode
language: php
prompt: "<?php\n// Write a function that takes a message, and encodes in such a \n\
  // way that it swaps case of all letters, replaces all vowels in \n// the message\
  \ with the letter that appears 2 places ahead of that \n// vowel in the english\
  \ alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode(\"test\")\n\
  // \"TGST\"\n// >>> encode(\"This is a message\")\n// \"tHKS KS C MGSSCGG\"\nfunction\
  \ encode($message) {\n"
tests: "function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\") !==\
  \ \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded = '';\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$key = array_search($letter,\
    \ $vowels);\n\t\t\t$key += 2;\n\t\t\tif ($key > 4) {\n\t\t\t\t$key -= 5;\n\t\t\
    \t}\n\t\t\t$letter = $vowels[$key];\n\t\t}\n\t\t$encoded .= strtoupper($letter);\n\
    \t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\tforeach\
    \ ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t\
    $message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t}\n\treturn\
    \ strtoupper(implode($message));\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter)) {\n\t\t\t$letter\
    \ = strtolower($letter);\n\t\t} else {\n\t\t\t$letter = strtoupper($letter);\n\
    \t\t}\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $letter;\n\t}\n\treturn $encoded;\n\
    }\n", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage =\
    \ \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array(strtolower($message[$i]),\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search(strtolower($message[$i]),\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\tforeach\
    \ ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t\
    $message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t}\n\treturn\
    \ strtoupper(implode($message));\n}\n\necho encode(\"test\");\necho \"\\n\";\n\
    echo encode(\"This is a message\");\necho \"\\n\";", "\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t\
    }\n\treturn strtoupper(implode($message));\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $encoded = array();\n    foreach ($message as $char) {\n        if (in_array($char,\
    \ $vowels)) {\n            $key = array_search($char, $vowels);\n            $key\
    \ += 2;\n            if ($key > 4) {\n                $key -= 5;\n           \
    \ }\n            $encoded[] = $vowels[$key];\n        } else {\n            $encoded[]\
    \ = $char;\n        }\n    }\n    return strtoupper(implode($encoded));\n}\n",
  "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    for ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif\
    \ (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$encoded[$i] = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "    $message = strtolower($message);\n    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        if (in_array($message[$i], $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($encoded);\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .=\
    \ strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2)\
    \ % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\necho encode(\"test\") . \"\\n\";\n\
    echo encode(\"This is a message\") . \"\\n\";", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $message = strtolower($message);\n    $encoded = '';\n    for\
    \ ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n      \
    \  }\n    }\n    return $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "    $vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n    $encoded = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif\
    \ (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++)\
    \ {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded[$i]\
    \ = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$index = array_search($message[$i], $vowels);\n\t\t\t$encoded\
    \ .= $vowels[($index + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\
    \t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter\
    \ = $message[$i];\n\t\tif (ctype_upper($letter)) {\n\t\t\t$new_message .= strtolower($letter);\n\
    \t\t} elseif (ctype_lower($letter)) {\n\t\t\t$new_message .= strtoupper($letter);\n\
    \t\t} else {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\tfor ($i = 0; $i <\
    \ strlen($new_message); $i++) {\n\t\t$letter = $new_message[$i];\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$new_message[$i] = $vowels[array_search($letter, $vowels)\
    \ + 2];\n\t\t}\n\t}\n\treturn $new_message;\n}\necho encode(\"test\") . PHP_EOL;\n\
    echo encode(\"This is a message\") . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t\
    }\n\treturn strtoupper(implode($message));\n}\n\necho encode(\"test\") . PHP_EOL;\n\
    echo encode(\"This is a message\") . PHP_EOL;", "    $vowels = array(\"a\", \"\
    e\", \"i\", \"o\", \"u\");\n    $new_message = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $new_message .= $vowels[(array_search($char, $vowels) + 2) %\
    \ 5];\n        } else {\n            $new_message .= $char;\n        }\n    }\n\
    \    return strtoupper($new_message);\n}\n\necho encode(\"test\") . \"\\n\";\n\
    echo encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\t\t\t$index = ($index\
    \ + 2) % 5;\n\t\t\t$encoded .= $vowels[$index];\n\t\t} else {\n\t\t\t$encoded\
    \ .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$newMessage = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\tif ($key ==\
    \ 4) {\n\t\t\t\t$key = -1;\n\t\t\t}\n\t\t\t$newMessage[] = $vowels[$key + 2];\n\
    \t\t} else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($newMessage));\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$encoded[$i] = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else if (ctype_upper($char)) {\n            $encoded\
    \ .= strtolower($char);\n        } else {\n            $encoded .= strtoupper($char);\n\
    \        }\n    }\n    return $encoded;\n}\n", "    $vowels = array(\"a\", \"\
    e\", \"i\", \"o\", \"u\");\n    $newMessage = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $newMessage .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else if (ctype_upper($char)) {\n            $newMessage .= strtolower($char);\n\
    \        } else {\n            $newMessage .= strtoupper($char);\n        }\n\
    \    }\n    return $newMessage;\n}\n", "\t$vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    for ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif\
    \ (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$encoded[$i] = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage = \"\";\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\t$currentLetter = $message[$i];\n\
    \t\tif (ctype_upper($currentLetter)) {\n\t\t\t$newMessage .= strtolower($currentLetter);\n\
    \t\t} else if (ctype_lower($currentLetter)) {\n\t\t\t$newMessage .= strtoupper($currentLetter);\n\
    \t\t} else {\n\t\t\t$newMessage .= $currentLetter;\n\t\t}\n\t}\n\tfor ($i = 0;\
    \ $i < strlen($newMessage); $i++) {\n\t\t$currentLetter = $newMessage[$i];\n\t\
    \tif (in_array($currentLetter, $vowels)) {\n\t\t\t$newMessage[$i] = $vowels[(array_search($currentLetter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded = \"\";\n\tforeach ($message as\
    \ $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$key = array_search($letter,\
    \ $vowels);\n\t\t\t$key += 2;\n\t\t\tif ($key > 4) {\n\t\t\t\t$key -= 5;\n\t\t\
    \t}\n\t\t\t$letter = $vowels[$key];\n\t\t}\n\t\t$encoded .= $letter;\n\t}\n\t\
    return strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$vowels = \"aeiou\";\n\t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\t$newMessage\
    \ .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\t\t\
    } else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($newMessage);\
    \ $i++) {\n\t\t$char = $newMessage[$i];\n\t\tif (strpos($vowels, $char) !== false)\
    \ {\n\t\t\t$newMessage[$i] = $alphabet[(strpos($alphabet, $char) + 2) % 26];\n\
    \t\t}\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n\
    \            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n  \
    \      } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ $char = $message[$i];\n        if (in_array($char, $vowels)) {\n           \
    \ $index = array_search($char, $vowels);\n            $index = ($index + 2) %\
    \ 5;\n            $encoded .= $vowels[$index];\n        } else {\n           \
    \ $encoded .= $char;\n        }\n    }\n    return $encoded;\n}\n", "\t$vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .=\
    \ strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\t\t\t$encoded[$i]\
    \ = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\tif (in_array(strtolower($message[$i]),\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search(strtolower($message[$i]),\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= strtoupper($message[$i]);\n\
    \t\t}\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t\
    }\n\t$message = implode(\"\", $message);\n\t$message = strtoupper($message);\n\
    \treturn $message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\tforeach\
    \ ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t\
    $message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t}\n\treturn\
    \ strtoupper(implode($message));\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";\n", "    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = strtolower($message[$i]);\n        if (in_array($char,\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($char, $vowels) +\
    \ 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n    }\n\
    \    return $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif\
    \ (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++)\
    \ {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$index\
    \ = array_search($char, $vowels);\n\t\t\t$encoded[$i] = $vowels[($index + 2) %\
    \ 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\n\
    echo encode(\"This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n\t$message = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\
    \t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $message =\
    \ strtolower($message);\n    $encoded = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        if (in_array($message[$i], $vowels)) {\n            $encoded\
    \ .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n        } else {\n\
    \            $encoded .= $message[$i];\n        }\n    }\n    return $encoded;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded_message = '';\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\t$index = ($index + 2) % 5;\n\t\t\t$letter = $vowels[$index];\n\
    \t\t}\n\t\t$encoded_message .= strtoupper($letter);\n\t}\n\treturn $encoded_message;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$index = -1;\n\t\t\t}\n\t\t\t$letter\
    \ = $vowels[$index + 2];\n\t\t} else {\n\t\t\t$letter = strtoupper($letter);\n\
    \t\t}\n\t\tarray_push($encoded, $letter);\n\t}\n\treturn implode($encoded);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char))\
    \ {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$char = strtolower($char);\n\t\t\
    \t} else {\n\t\t\t\t$char = strtoupper($char);\n\t\t\t}\n\t\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t\t$index = array_search($char, $vowels);\n\t\t\t\t$char =\
    \ $vowels[($index + 2) % 5];\n\t\t\t}\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\t\
    return $encoded;\n}\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels\
    \ = \"aeiou\";\n\t$result = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\
    \t\t}\n\t\tif (strpos($vowels, $char) !== false) {\n\t\t\t$char = $alphabet[(strpos($alphabet,\
    \ $char) + 2) % 26];\n\t\t}\n\t\t$result .= $char;\n\t}\n\treturn $result;\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encodedMessage = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encodedMessage .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encodedMessage .= $char;\n\
    \        }\n    }\n    return strtoupper($encodedMessage);\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char))\
    \ {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$char = strtolower($char);\n\t\t\
    \t} else {\n\t\t\t\t$char = strtoupper($char);\n\t\t\t}\n\t\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t\t$index = array_search($char, $vowels);\n\t\t\t\t$char =\
    \ $vowels[($index + 2) % 5];\n\t\t\t}\n\t\t}\n\t\t$newMessage .= $char;\n\t}\n\
    \treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\"\
    ) . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $new_message = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $new_message .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $new_message .= $char;\n\
    \        }\n    }\n    return strtoupper($new_message);\n}\n\necho encode(\"test\"\
    ) . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $new_message = [];\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $index = array_search($letter, $vowels);\n        \
    \    if ($index == 4) {\n                $index = -1;\n            }\n       \
    \     $new_message[] = $vowels[$index + 2];\n        } else {\n            $new_message[]\
    \ = $letter;\n        }\n    }\n    return strtoupper(implode('', $new_message));\n\
    }\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (in_array($char,\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($char, $vowels) +\
    \ 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n    }\n\
    \    return strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n\
    \        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n    \
    \        $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n      \
    \  } else {\n            $encoded .= $char;\n        }\n    }\n    return strtoupper($encoded);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$newMessage .= strtolower($char);\n\t\t}\
    \ else if (ctype_lower($char)) {\n\t\t\t$newMessage .= strtoupper($char);\n\t\t\
    } else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($newMessage);\
    \ $i++) {\n\t\t$char = $newMessage[$i];\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$newMessage[$i] = $vowels[array_search($char, $vowels) + 2];\n\t\t}\n\t\
    }\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter)) {\n\t\t\t$newMessage\
    \ .= strtolower($letter);\n\t\t} else if (ctype_lower($letter)) {\n\t\t\t$newMessage\
    \ .= strtoupper($letter);\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\
    \t}\n\tfor ($i = 0; $i < strlen($newMessage); $i++) {\n\t\t$letter = $newMessage[$i];\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage[$i] = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = strtolower($message[$i]);\n        if (in_array($char,\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($char, $vowels) +\
    \ 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n    }\n\
    \    return $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$encoded\
    \ = array();\n\tforeach ($message as $char) {\n\t\tif (in_array($char, $vowels))\
    \ {\n\t\t\t$key = array_search($char, $vowels);\n\t\t\tif ($key == 4) {\n\t\t\t\
    \t$key = -1;\n\t\t\t}\n\t\t\t$encoded[] = $vowels[$key + 2];\n\t\t} else {\n\t\
    \t\t$encoded[] = $char;\n\t\t}\n\t}\n\treturn strtoupper(implode($encoded));\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\
    \tif (in_array($value, $vowels)) {\n\t\t\t$message[$key] = $vowels[array_search($value,\
    \ $vowels) + 2];\n\t\t}\n\t}\n\treturn strtoupper(implode($message));\n}\n\necho\
    \ encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\necho\
    \ \"\\n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $message\
    \ = strtolower($message);\n    $message = str_split($message);\n    $new_message\
    \ = array();\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $new_message[] = $vowels[array_search($letter, $vowels)\
    \ + 2];\n        } else {\n            $new_message[] = $letter;\n        }\n\
    \    }\n    return strtoupper(implode(\"\", $new_message));\n}\n", "\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\tif\
    \ (in_array(strtolower($char), $vowels)) {\n\t\t\t\t$index = array_search(strtolower($char),\
    \ $vowels);\n\t\t\t\t$index = ($index + 2) % 5;\n\t\t\t\t$char = $vowels[$index];\n\
    \t\t\t}\n\t\t\t$encoded .= ctype_upper($message[$i]) ? strtoupper($char) : strtolower($char);\n\
    \t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn $encoded;\n}\n",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[array_search($message[$i], $vowels) + 2];\n\
    \t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn $new_message;\n\
    }\n", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message =\
    \ \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_alpha($char)) {\n\t\t\tif (in_array(strtolower($char), $vowels))\
    \ {\n\t\t\t\t$new_message .= get_next_vowel($char);\n\t\t\t} else {\n\t\t\t\t\
    $new_message .= strtoupper($char);\n\t\t\t}\n\t\t} else {\n\t\t\t$new_message\
    \ .= $char;\n\t\t}\n\t}\n\treturn $new_message;\n}\n", "\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t\
    }\n\treturn strtoupper($newMessage);\n}\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$index = array_search($letter, $vowels);\n\t\t\t$index +=\
    \ 2;\n\t\t\tif ($index >= count($vowels)) {\n\t\t\t\t$index -= count($vowels);\n\
    \t\t\t}\n\t\t\t$letter = $vowels[$index];\n\t\t}\n\t\t$encoded .= strtoupper($letter);\n\
    \t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\t$new_message\
    \ = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$new_message[] = $vowels[array_search($letter, $vowels) + 2];\n\t\t\
    } else {\n\t\t\t$new_message[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode('',\
    \ $new_message));\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is\
    \ a message\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $alphabet\
    \ = range('a', 'z');\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $index = array_search($char, $alphabet);\n            $encoded\
    \ .= $alphabet[($index + 2) % 26];\n        } else if (ctype_alpha($char)) {\n\
    \            $encoded .= strtoupper($char);\n        } else {\n            $encoded\
    \ .= $char;\n        }\n    }\n    return $encoded;\n}\n\necho encode(\"test\"\
    ) . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\";\n\t$new_message = \"\";\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\t\
    \tif (ctype_upper($letter)) {\n\t\t\t$letter = strtolower($letter);\n\t\t}\n\t\
    \tif (strpos($vowels, $letter) !== false) {\n\t\t\t$letter = $alphabet[(strpos($alphabet,\
    \ $letter) + 2) % 26];\n\t\t}\n\t\t$new_message .= $letter;\n\t}\n\treturn $new_message;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = \"\";\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($new_message);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $message = strtolower($message);\n    $encoded = '';\n    for ($i = 0; $i\
    \ < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels)) {\n\
    \            $encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $message[$i];\n        }\n    }\n \
    \   return strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\tif (ctype_upper($char))\
    \ {\n\t\t\t\t$char = strtolower($char);\n\t\t\t} else {\n\t\t\t\t$char = strtoupper($char);\n\
    \t\t\t}\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\t$index = array_search($char,\
    \ $vowels);\n\t\t\t\t$char = $vowels[($index + 2) % 5];\n\t\t\t}\n\t\t}\n\t\t\
    $encoded .= $char;\n\t}\n\treturn $encoded;\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n\
    \            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n  \
    \      } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ $char = $message[$i];\n        if (ctype_upper($char)) {\n            $encoded\
    \ .= strtolower($char);\n        } else if (ctype_lower($char)) {\n          \
    \  $encoded .= strtoupper($char);\n        } else {\n            $encoded .= $char;\n\
    \        }\n    }\n    for ($i = 0; $i < strlen($encoded); $i++) {\n        $char\
    \ = $encoded[$i];\n        if (in_array($char, $vowels)) {\n            $encoded[$i]\
    \ = $vowels[(array_search($char, $vowels) + 2) % 5];\n        }\n    }\n    return\
    \ $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\"\
    ) . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$encoded\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else\
    \ if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else\
    \ {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$index = array_search($char, $vowels);\n\t\t\t$index = ($index + 2) % 5;\n\t\
    \t\t$encoded[$i] = $vowels[$index];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$message = strtolower($message);\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$char = strtolower($message[$i]);\n\t\tif (in_array($char, $vowels))\
    \ {\n\t\t\t$encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($message[$i], $vowels)\
    \ + 2];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $newMessage;\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a\
    \ message\") . PHP_EOL;", "\t$message = strtolower($message);\n\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i = 0; $i <\
    \ strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t\
    $new_message .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\"\
    );\necho \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded =\
    \ '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        }\n        $encoded .= strtoupper($char) === $char\
    \ ? strtolower($char) : strtoupper($char);\n    }\n    return $encoded;\n}\n\n\
    echo encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\"\
    ;", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\
    \";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (ctype_upper($letter)) {\n\t\t\t$letter = strtolower($letter);\n\t\t} else\
    \ {\n\t\t\t$letter = strtoupper($letter);\n\t\t}\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$letter = $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t\
    }\n\t\t$newMessage .= $letter;\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$newMessage = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage[] =\
    \ $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage[]\
    \ = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($newMessage));\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = \"\";\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\t\t\t$char = strtoupper($char);\n\
    \t\t}\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $alphabet = range('a',\
    \ 'z');\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n\
    \        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n    \
    \        $index = array_search($char, $alphabet);\n            $encoded .= $alphabet[($index\
    \ + 2) % 26];\n        } else {\n            $encoded .= $char;\n        }\n \
    \   }\n    return $encoded;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $message = strtolower($message);\n    $message = str_split($message);\n \
    \   $encoded = [];\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $letter = $vowels[array_search($letter, $vowels) +\
    \ 2];\n        }\n        $encoded[] = $letter;\n    }\n    return strtoupper(implode('',\
    \ $encoded));\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\"\
    ) . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$encoded\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\
    \t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded\
    \ .= $char;\n\t}\n\treturn $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$new_message = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$new_message .= next_vowel($letter);\n\t\t} else {\n\t\t\t\
    $new_message .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n}\n",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$encoded = \"\";\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char))\
    \ {\n\t\t\t$char = strtolower($char);\n\t\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t\t$index = array_search($char, $vowels);\n\t\t\t\t$index = ($index + 2)\
    \ % 5;\n\t\t\t\t$char = $vowels[$index];\n\t\t\t}\n\t\t\t$encoded .= strtoupper($char);\n\
    \t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn $encoded;\n}\n",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\t\t\
    if (ctype_upper($letter)) {\n\t\t\t$letter = strtolower($letter);\n\t\t} else\
    \ {\n\t\t\t$letter = strtoupper($letter);\n\t\t}\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$index = array_search($letter, $vowels);\n\t\t\t$index += 2;\n\t\t\t\
    if ($index >= count($vowels)) {\n\t\t\t\t$index -= count($vowels);\n\t\t\t}\n\t\
    \t\t$letter = $vowels[$index];\n\t\t}\n\t\t$newMessage .= $letter;\n\t}\n\treturn\
    \ $newMessage;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\
    \t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($message[$i], $vowels)\
    \ + 2];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($newMessage);\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"\
    This is a message\") . PHP_EOL;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\t$encoded\
    \ = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\t$key = ($key + 2) % 5;\n\
    \t\t\t$letter = $vowels[$key];\n\t\t}\n\t\t$encoded[] = $letter;\n\t}\n\treturn\
    \ strtoupper(implode($encoded));\n}\n", "\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t\
    $char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\
    \t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\
    \t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$index = array_search($char, $vowels);\n\t\t\t$index = ($index + 2) % 5;\n\t\
    \t\t$encoded[$i] = $vowels[$index];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array(strtolower($message[$i]),\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search(strtolower($message[$i]),\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$vowels = \"aeiou\";\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\t$char\
    \ = strtolower($char);\n\t\t\t$index = strpos($alphabet, $char);\n\t\t\tif (strpos($vowels,\
    \ $char) !== false) {\n\t\t\t\t$index += 2;\n\t\t\t\tif ($index > 25) {\n\t\t\t\
    \t\t$index -= 26;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$encoded .= $alphabet[$index];\n\t\
    \t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho\
    \ encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\necho\
    \ \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message\
    \ = strtolower($message);\n\t$message = str_split($message);\n\t$encoded = array();\n\
    \tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\
    \t$key = array_search($letter, $vowels);\n\t\t\tif ($key == 4) {\n\t\t\t\t$key\
    \ = -1;\n\t\t\t}\n\t\t\t$encoded[] = $vowels[$key + 2];\n\t\t} else {\n\t\t\t\
    $encoded[] = $letter;\n\t\t}\n\t}\n\t$encoded = implode(\"\", $encoded);\n\t$encoded\
    \ = strtoupper($encoded);\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\
    \\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$encoded = \"\";\n\tforeach ($message as $char) {\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$index += 2;\n\t\t\tif ($index > 4) {\n\t\t\t\t$index -= 5;\n\t\t\t}\n\t\
    \t\t$encoded .= $vowels[$index];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t\
    }\n\t}\n\treturn strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\n\
    echo encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\tif ($key ==\
    \ 4) {\n\t\t\t\t$key = -1;\n\t\t\t}\n\t\t\t$encoded[] = $vowels[$key + 2];\n\t\
    \t} else {\n\t\t\t$encoded[] = $letter;\n\t\t}\n\t}\n\t$encoded = strtoupper(implode('',\
    \ $encoded));\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encodedMessage = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$letter = $vowels[array_search($letter, $vowels) + 2];\n\t\
    \t}\n\t\t$encodedMessage .= $letter;\n\t}\n\treturn strtoupper($encodedMessage);\n\
    }\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;",
  "    $message = strtolower($message);\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $new_message = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n \
    \       if (in_array($message[$i], $vowels)) {\n            $new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $new_message .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($new_message);\n}\n", "    $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n    $newMessage = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (ctype_upper($char)) {\n\
    \            $newMessage .= strtolower($char);\n        } else if (ctype_lower($char))\
    \ {\n            $newMessage .= strtoupper($char);\n        } else {\n       \
    \     $newMessage .= $char;\n        }\n    }\n    for ($i = 0; $i < strlen($newMessage);\
    \ $i++) {\n        $char = $newMessage[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $newMessage[$i] = $vowels[array_search($char, $vowels) + 2];\n\
    \        }\n    }\n    return $newMessage;\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded_message = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$letter_index = array_search($letter, $vowels);\n\t\t\t$letter_index\
    \ += 2;\n\t\t\tif ($letter_index > 4) {\n\t\t\t\t$letter_index -= 5;\n\t\t\t}\n\
    \t\t\t$letter = $vowels[$letter_index];\n\t\t}\n\t\t$encoded_message .= strtoupper($letter);\n\
    \t}\n\treturn $encoded_message;\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"\
    This is a message\") . PHP_EOL;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ $char = $message[$i];\n        if (ctype_upper($char)) {\n            $encoded\
    \ .= strtolower($char);\n        } elseif (ctype_lower($char)) {\n           \
    \ $encoded .= strtoupper($char);\n        } else {\n            $encoded .= $char;\n\
    \        }\n    }\n    for ($i = 0; $i < strlen($encoded); $i++) {\n        $char\
    \ = $encoded[$i];\n        if (in_array($char, $vowels)) {\n            $index\
    \ = array_search($char, $vowels);\n            $index = ($index + 2) % 5;\n  \
    \          $encoded[$i] = $vowels[$index];\n        }\n    }\n    return $encoded;\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $encoded =\
    \ \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$encoded = '';\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\t\t\t$index = ($index\
    \ + 2) % 5;\n\t\t\t$char = $vowels[$index];\n\t\t}\n\t\t$encoded .= strtoupper($char);\n\
    \t}\n\treturn $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else\
    \ if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else\
    \ {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\
    \treturn $encoded;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message\
    \ = strtolower($message);\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        if (in_array($message[$i], $vowels)) {\n            $encoded\
    \ .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n        } else {\n\
    \            $encoded .= $message[$i];\n        }\n    }\n    return $encoded;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = \"\";\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\t\t\t$char = strtoupper($char);\n\
    \t\t}\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    $new_message = \"\";\n    foreach ($message\
    \ as $letter) {\n        if (in_array($letter, $vowels)) {\n            $new_message\
    \ .= $vowels[array_search($letter, $vowels) + 2];\n        } else {\n        \
    \    $new_message .= $letter;\n        }\n    }\n    return strtoupper($new_message);\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char, $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\"\
    ;\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter\
    \ = $message[$i];\n\t\tif (ctype_alpha($letter)) {\n\t\t\t$letter = strtolower($letter);\n\
    \t\t\t$index = strpos($alphabet, $letter);\n\t\t\tif (strpos($vowels, $letter)\
    \ !== false) {\n\t\t\t\t$index += 2;\n\t\t\t\tif ($index > 25) {\n\t\t\t\t\t$index\
    \ -= 26;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$letter = $alphabet[$index];\n\t\t\tif (ctype_upper($message[$i]))\
    \ {\n\t\t\t\t$letter = strtoupper($letter);\n\t\t\t}\n\t\t}\n\t\t$encoded .= $letter;\n\
    \t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else\
    \ if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else\
    \ {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\
    \treturn $encoded;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message\
    \ = strtolower($message);\n    $message = str_split($message);\n    $encoded =\
    \ [];\n    foreach ($message as $char) {\n        if (in_array($char, $vowels))\
    \ {\n            $char = $vowels[array_search($char, $vowels) + 2];\n        }\n\
    \        $encoded[] = $char;\n    }\n    return strtoupper(implode('', $encoded));\n\
    }\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\"\
    );\necho \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\t$encoded = array();\n\
    \tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\
    \t$key = array_search($letter, $vowels);\n\t\t\tif ($key == 4) {\n\t\t\t\t$key\
    \ = -1;\n\t\t\t}\n\t\t\t$encoded[] = $vowels[$key + 2];\n\t\t} else {\n\t\t\t\
    $encoded[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($encoded));\n}\n\
    \necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\
    \t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$index = ($index + 2) % 5;\n\t\t\t$encoded[$i] = $vowels[$index];\n\t\t\
    }\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $message = strtolower($message);\n    $message = str_split($message);\n \
    \   $new_message = [];\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $letter_index = array_search($letter, $vowels);\n \
    \           $new_letter = $vowels[($letter_index + 2) % 5];\n            $new_message[]\
    \ = $new_letter;\n        } else {\n            $new_message[] = $letter;\n  \
    \      }\n    }\n    return strtoupper(implode($new_message));\n}\n", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$newMessage .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$newMessage .= strtoupper($char);\n\t\t} else {\n\t\t\t$newMessage\
    \ .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($newMessage); $i++) {\n\t\t\
    $char = $newMessage[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$newMessage[$i]\
    \ = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$message = strtolower($message);\n\t$vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ $char = $message[$i];\n        if (in_array($char, $vowels)) {\n           \
    \ $char = $vowels[(array_search($char, $vowels) + 2) % 5];\n        }\n      \
    \  $encoded .= strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n\
    \    }\n    return $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\t$encoded\
    \ = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\t$key = $key + 2;\n\t\t\
    \tif ($key >= 5) {\n\t\t\t\t$key = $key - 5;\n\t\t\t}\n\t\t\t$letter = $vowels[$key];\n\
    \t\t}\n\t\t$encoded[] = $letter;\n\t}\n\t$encoded = strtoupper(implode('', $encoded));\n\
    \treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n \
    \   $newMessage = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n     \
    \   $letter = $message[$i];\n        if (in_array($letter, $vowels)) {\n     \
    \       $newMessage .= $vowels[array_search($letter, $vowels) + 2];\n        }\
    \ else {\n            $newMessage .= $letter;\n        }\n    }\n    return strtoupper($newMessage);\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= strtoupper($char);\n\
    \        }\n    }\n    return $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$vowels_encoded = array('c', 'g', 'k', 'o', 's');\n\t$message_encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\
    \t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$char = $vowels_encoded[array_search($char, $vowels)];\n\t\t}\n\t\t$message_encoded\
    \ .= $char;\n\t}\n\treturn $message_encoded;\n}\n", "\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$new_message\
    \ .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\t\t\t$new_message\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$new_message .= $char;\n\t\t}\n\t\
    }\n\t$new_message = str_replace($vowels, array('c', 'f', 'j', 'o', 't'), $new_message);\n\
    \treturn $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $message = strtolower($message);\n    $encoded = '';\n    for ($i = 0; $i\
    \ < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels)) {\n\
    \            $encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $message[$i];\n        }\n    }\n \
    \   return strtoupper($encoded);\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";\n", "    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n", "    $message = strtolower($message);\n    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $newMessage = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        if (in_array($message[$i], $vowels)) {\n            $newMessage\
    \ .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n        } else {\n\
    \            $newMessage .= $message[$i];\n        }\n    }\n    return strtoupper($newMessage);\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ if (in_array($message[$i], $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($encoded);\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\tif (in_array($value,\
    \ $vowels)) {\n\t\t\t$message[$key] = $vowels[array_search($value, $vowels) +\
    \ 2];\n\t\t}\n\t}\n\treturn strtoupper(implode(\"\", $message));\n}\n\necho encode(\"\
    test\");\necho \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\
    \t$encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t} else\
    \ {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "\t\
    $vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$encoded[$i] = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\
    \t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$index = array_search($char, $vowels);\n\t\t\t$index += 2;\n\t\t\tif ($index\
    \ > 4) {\n\t\t\t\t$index -= 5;\n\t\t\t}\n\t\t\t$char = $vowels[$index];\n\t\t\
    }\n\t\t$new_message .= $char;\n\t}\n\treturn $new_message;\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$new_message .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$new_message .= strtoupper($char);\n\t\t} else {\n\t\t\t$new_message\
    \ .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($new_message); $i++) {\n\t\
    \t$char = $new_message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$new_message[$i]\
    \ = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $new_message;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\t$new_message = \"\
    \";\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\
    \t\t\t$new_message .= $vowels[array_search($letter, $vowels) + 2];\n\t\t} else\
    \ {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($new_message);\n\
    }\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$new_message = \"\";\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\t\
    \tif (ctype_upper($letter)) {\n\t\t\t$letter = strtolower($letter);\n\t\t} else\
    \ {\n\t\t\t$letter = strtoupper($letter);\n\t\t}\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$letter = $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t\
    }\n\t\t$new_message .= $letter;\n\t}\n\treturn $new_message;\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\";\n\t$encoded = \"\"\
    ;\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\
    \tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t}\n\t\tif (strpos($vowels,\
    \ $char) !== false) {\n\t\t\t$char = $alphabet[(strpos($alphabet, $char) + 2)\
    \ % 26];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n}\n", "\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$encoded = array();\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t}\n\t\t$encoded[] = $letter;\n\t}\n\treturn strtoupper(implode($encoded));\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\t\
    return strtoupper($newMessage);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t\
    return $new_message;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t} else if (ctype_upper($char)) {\n\t\t\t$new_message\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$new_message\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$new_message .= $char;\n\t\t}\n\t\
    }\n\treturn $new_message;\n}\n", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\tif (ctype_upper($message[$i])) {\n\t\t\t$encoded .= strtolower($message[$i]);\n\
    \t\t} elseif (ctype_lower($message[$i])) {\n\t\t\t$encoded .= strtoupper($message[$i]);\n\
    \t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i <\
    \ strlen($encoded); $i++) {\n\t\tif (in_array($encoded[$i], $vowels)) {\n\t\t\t\
    $index = array_search($encoded[$i], $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\
    \t$encoded[$i] = $vowels[0];\n\t\t\t} else {\n\t\t\t\t$encoded[$i] = $vowels[$index\
    \ + 1];\n\t\t\t}\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") .\
    \ \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $newMessage = \"\";\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $newMessage .= $vowels[array_search($letter, $vowels)\
    \ + 2];\n        } else {\n            $newMessage .= $letter;\n        }\n  \
    \  }\n    return $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\
    \t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\
    \t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\
    \treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowels_encoded = array(\"c\"\
    , \"g\", \"k\", \"o\", \"s\");\n\t$message = str_replace($vowels, $vowels_encoded,\
    \ $message);\n\t$message = strtoupper($message);\n\treturn $message;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (in_array($char,\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($char, $vowels) +\
    \ 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n    }\n\
    \    return strtoupper($encoded);\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$message = strtolower($message);\n\t$message = str_split($message);\n\tforeach\
    \ ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t\
    $message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t}\n\t$message\
    \ = implode($message);\n\t$message = strtoupper($message);\n\treturn $message;\n\
    }\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $alphabet = range('a', 'z');\n  \
    \  $encoded = '';\n    $message = strtolower($message);\n    for ($i = 0; $i <\
    \ strlen($message); $i++) {\n        $char = $message[$i];\n        if (in_array($char,\
    \ $vowels)) {\n            $index = array_search($char, $alphabet);\n        \
    \    $encoded .= $alphabet[($index + 2) % 26];\n        } else {\n           \
    \ $encoded .= $char;\n        }\n    }\n    return $encoded;\n}\n\necho encode(\"\
    test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (ctype_upper($char)) {\n\
    \            $encoded .= strtolower($char);\n        } else if (ctype_lower($char))\
    \ {\n            $encoded .= strtoupper($char);\n        } else {\n          \
    \  $encoded .= $char;\n        }\n    }\n    for ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n        $char = $encoded[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        }\n    }\n    return $encoded;\n}\n", "\t$vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n\t$vowels_2 = array(\"c\", \"g\", \"k\", \"o\", \"s\"\
    );\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\t\
    for ($i = 0; $i < count($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$message[$i] = $vowels_2[array_search($message[$i], $vowels)];\n\t\t\
    }\n\t}\n\treturn implode(\"\", $message);\n}\necho encode(\"This is a message\"\
    );", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $vowels = \"aeiou\"\
    ;\n    $encoded = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n   \
    \     $char = $message[$i];\n        $char_index = strpos($alphabet, $char);\n\
    \        if ($char_index === false) {\n            $encoded .= $char;\n      \
    \  } else {\n            $new_char_index = $char_index + 2;\n            if ($new_char_index\
    \ >= strlen($alphabet)) {\n                $new_char_index -= strlen($alphabet);\n\
    \            }\n            $new_char = $alphabet[$new_char_index];\n        \
    \    if (strpos($vowels, $char) !== false) {\n                $new_char = strtoupper($new_char);\n\
    \            }\n            $encoded .= $new_char;\n        }\n    }\n    return\
    \ $encoded;\n}\n", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t\
    $newMessage = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char\
    \ = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t}\n\
    \treturn strtoupper($newMessage);\n}\n\necho encode(\"This is a message\");\n",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$newMessage = '';\n\tforeach ($message as\
    \ $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\t\
    return $newMessage;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is\
    \ a message\") . \"\\n\";", "\t$message = strtolower($message);\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\tif (in_array($letter, $vowels)) {\n\
    \t\t\t$index = array_search($letter, $vowels);\n\t\t\t$index = ($index + 2) %\
    \ 5;\n\t\t\t$letter = $vowels[$index];\n\t\t}\n\t\t$encoded .= strtoupper($letter);\n\
    \t}\n\treturn $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$newMessage\
    \ = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[(array_search($letter, $vowels) + 2) % 5];\n\
    \t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$new_message[] =\
    \ $vowels[array_search($letter, $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message[]\
    \ = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($new_message));\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $encodedMessage = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n\
    \        if (in_array($message[$i], $vowels)) {\n            $encodedMessage .=\
    \ $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n        } else {\n\
    \            $encodedMessage .= $message[$i];\n        }\n    }\n    return strtoupper($encodedMessage);\n\
    }\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\"\
    );\necho \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded =\
    \ '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else\
    \ if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else\
    \ {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$index = array_search($char, $vowels);\n\t\t\t$encoded[$i] = $vowels[($index\
    \ + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded = '';\n\tforeach ($message as $char) {\n\t\tif (in_array($char, $vowels))\
    \ {\n\t\t\t$index = array_search($char, $vowels);\n\t\t\t$index = ($index + 2)\
    \ % 5;\n\t\t\t$encoded .= $vowels[$index];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\treturn strtoupper($encoded);\n}\n\necho encode(\"test\");\necho\
    \ \"\\n\";\necho encode(\"This is a message\");\necho \"\\n\";\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $encoded = '';\n    for ($i = 0; $i <\
    \ strlen($message); $i++) {\n        $char = $message[$i];\n        if (in_array($char,\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($char, $vowels) +\
    \ 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n    }\n\
    \    return strtoupper($encoded);\n}\n\necho encode(\"test\");\necho \"\\n\";\n\
    echo encode(\"This is a message\");\necho \"\\n\";", "\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    for ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif\
    \ (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$index = ($index + 2) % 5;\n\t\t\t$encoded[$i] = $vowels[$index];\n\t\t\
    }\n\t}\n\treturn $encoded;\n}\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $vowels = \"aeiou\";\n    $newMessage = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (ctype_upper($char)) {\n\
    \            $char = strtolower($char);\n            $newMessage .= $char;\n \
    \       } else {\n            $newMessage .= $char;\n        }\n        if (strpos($vowels,\
    \ $char) !== false) {\n            $newMessage[$i] = $alphabet[(strpos($alphabet,\
    \ $char) + 2) % 26];\n        }\n    }\n    return $newMessage;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (ctype_alpha($char)) {\n\
    \            $char = strtolower($char);\n            if (in_array($char, $vowels))\
    \ {\n                $index = array_search($char, $vowels);\n                $index\
    \ += 2;\n                if ($index >= count($vowels)) {\n                   \
    \ $index -= count($vowels);\n                }\n                $char = $vowels[$index];\n\
    \            }\n            $encoded .= strtoupper($char);\n        } else {\n\
    \            $encoded .= $char;\n        }\n    }\n    return $encoded;\n}\n\n\
    echo encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\"\
    ;", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\";\n\t\
    $encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_alpha($char)) {\n\t\t\t$char = strtolower($char);\n\t\t\t$index\
    \ = strpos($alphabet, $char);\n\t\t\tif (strpos($vowels, $char) !== false) {\n\
    \t\t\t\t$index += 2;\n\t\t\t\tif ($index > 25) {\n\t\t\t\t\t$index -= 26;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t\t$encoded .= $alphabet[$index];\n\t\t} else {\n\t\t\t$encoded\
    \ .= $char;\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "\t$vowels = array(\"a\", \"\
    e\", \"i\", \"o\", \"u\");\n\t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t\
    $encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter =\
    \ $message[$i];\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $alphabet);\n\t\t\t$encoded .= $alphabet[($index + 2) % 26];\n\t\t} else {\n\
    \t\t\t$encoded .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n}\n\n\
    echo encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\"\
    ;\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char, $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $encoded;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n\necho encode(\"test\") .\
    \ \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    for ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif\
    \ (in_array($char, $vowels)) {\n\t\t\t$encoded[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    for ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif\
    \ (in_array($char, $vowels)) {\n\t\t\t$encoded[$i] = chr(ord($char) + 2);\n\t\t\
    }\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $message = strtolower($message);\n    $encoded = '';\n    for ($i = 0; $i\
    \ < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels)) {\n\
    \            $encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $message[$i];\n        }\n    }\n \
    \   return $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encodedMessage\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else if\
    \ (ctype_lower($char)) {\n\t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \t\t}\n\t\t$encodedMessage .= $char;\n\t}\n\treturn $encodedMessage;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage = \"\";\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif\
    \ (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\t\t\
    \t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t\t$newMessage\
    \ .= $char;\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\"\
    ;\necho encode(\"This is a message\") . \"\\n\";", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n\
    \            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n  \
    \      } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"\
    This is a message\") . PHP_EOL;", "    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n    $message = strtolower($message);\n    $encoded = \"\";\n   \
    \ for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $index = array_search($char,\
    \ $vowels);\n            $encoded .= $vowels[($index + 2) % 5];\n        } else\
    \ {\n            $encoded .= $char;\n        }\n    }\n    return $encoded;\n\
    }\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $vowels = \"aeiou\"\
    ;\n    $encoded = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n   \
    \     $char = $message[$i];\n        if (ctype_alpha($char)) {\n            $char\
    \ = strtolower($char);\n            $index = strpos($alphabet, $char);\n     \
    \       if (strpos($vowels, $char) !== false) {\n                $index += 2;\n\
    \                if ($index >= strlen($alphabet)) {\n                    $index\
    \ -= strlen($alphabet);\n                }\n            }\n            $encoded\
    \ .= $alphabet[$index];\n        } else {\n            $encoded .= $char;\n  \
    \      }\n    }\n    return $encoded;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t\
    $char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\
    \t\t} else {\n\t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\"\
    ) . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t\
    }\n\treturn strtoupper(implode($message));\n}\n\necho encode(\"test\") . \"\\\
    n\";\necho encode(\"This is a message\") . \"\\n\";", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $encoded = [];\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $index = array_search($letter, $vowels);\n        \
    \    $index += 2;\n            if ($index > 4) {\n                $index -= 5;\n\
    \            }\n            $encoded[] = $vowels[$index];\n        } else {\n\
    \            $encoded[] = $letter;\n        }\n    }\n    $encoded = strtoupper(implode('',\
    \ $encoded));\n    return $encoded;\n}\n", "\t$vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$newMessage = \"\"\
    ;\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\t\
    return $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";\n", "    $message = strtolower($message);\n    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $new_message = \"\";\n    for\
    \ ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $new_message .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($new_message);\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $encoded = \"\";\n    for ($i = 0; $i <\
    \ strlen($message); $i++) {\n        $char = $message[$i];\n        if (ctype_upper($char))\
    \ {\n            $char = strtolower($char);\n            if (in_array($char, $vowels))\
    \ {\n                $char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \            }\n            $char = strtoupper($char);\n        } else {\n   \
    \         if (in_array($char, $vowels)) {\n                $char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n            }\n        }\n        $encoded .= $char;\n\
    \    }\n    return $encoded;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $newMessage = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n  \
    \      $letter = $message[$i];\n        if (in_array($letter, $vowels)) {\n  \
    \          $newMessage .= $vowels[(array_search($letter, $vowels) + 2) % 5];\n\
    \        } else {\n            $newMessage .= $letter;\n        }\n    }\n   \
    \ return strtoupper($newMessage);\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$message = strtolower($message);\n\t$newMessage = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded\
    \ .= strtoupper($char);\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\") .\
    \ PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$encoded = '';\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded =\
    \ '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif\
    \ (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++)\
    \ {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded[$i]\
    \ = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$index = array_search($letter, $alphabet);\n\t\t\t$encoded[]\
    \ = $alphabet[$index + 2];\n\t\t} else {\n\t\t\t$encoded[] = $letter;\n\t\t}\n\
    \t}\n\t$encoded = implode($encoded);\n\t$encoded = strtoupper($encoded);\n\treturn\
    \ $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\"\
    ) . \"\\n\";", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    $vowels = 'aeiou';\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ $char = strtolower($message[$i]);\n        if (strpos($alphabet, $char) !==\
    \ false) {\n            $index = strpos($alphabet, $char);\n            if (strpos($vowels,\
    \ $char) !== false) {\n                $index += 2;\n                if ($index\
    \ > 25) {\n                    $index -= 26;\n                }\n            }\n\
    \            $encoded .= $alphabet[$index];\n        } else {\n            $encoded\
    \ .= $message[$i];\n        }\n    }\n    return $encoded;\n}\n", "\t$vowels =\
    \ array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$encoded = array();\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$index = -1;\n\t\t\t}\n\t\t\t$letter\
    \ = $vowels[$index + 2];\n\t\t}\n\t\t$encoded[] = $letter;\n\t}\n\treturn strtoupper(implode($encoded));\n\
    }\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;",
  "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$newMessage = '';\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter))\
    \ {\n\t\t\t$letter = strtolower($letter);\n\t\t} else {\n\t\t\t$letter = strtoupper($letter);\n\
    \t\t}\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$newMessage .= $letter;\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message =\
    \ strtolower($message);\n\t$message = str_split($message);\n\t$encoded = \"\"\
    ;\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\
    \t\t$encoded .= $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t} else\
    \ {\n\t\t\t$encoded .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";\n", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$newMessage\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\
    \t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t\t$newMessage\
    \ .= $char;\n\t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . \"\\n\"\
    ;\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"\
    e\", \"i\", \"o\", \"u\");\n\t$letters = str_split($message);\n\t$encoded = array();\n\
    \tforeach ($letters as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\
    \t$letter = nextLetter($letter);\n\t\t\t$letter = nextLetter($letter);\n\t\t}\n\
    \t\t$encoded[] = strtoupper($letter);\n\t}\n\treturn implode(\"\", $encoded);\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$key = array_search($letter,\
    \ $vowels);\n\t\t\t$key += 2;\n\t\t\tif ($key > 4) {\n\t\t\t\t$key -= 5;\n\t\t\
    \t}\n\t\t\t$letter = $vowels[$key];\n\t\t}\n\t\t$encoded[] = $letter;\n\t}\n\t\
    $encoded = strtoupper(implode('', $encoded));\n\treturn $encoded;\n}\n", "\t$vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\t$char\
    \ = strtolower($char);\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\t$char =\
    \ $vowels[array_search($char, $vowels) + 2 % 5];\n\t\t\t}\n\t\t\t$encoded .= strtoupper($char);\n\
    \t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn $encoded;\n}\n\n\
    echo encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\"\
    ;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$index += 2;\n\t\t\tif ($index > 4) {\n\t\t\t\t$index -= 5;\n\t\t\t}\n\t\
    \t\t$encoded[$i] = $vowels[$index];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage = \"\";\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $newMessage;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\
    \t\t\t$char = strtoupper($char);\n\t\t}\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$index = array_search($char, $vowels);\n\t\t\t$index += 2;\n\t\t\tif ($index\
    \ >= count($vowels)) {\n\t\t\t\t$index -= count($vowels);\n\t\t\t}\n\t\t\t$char\
    \ = $vowels[$index];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\
    \t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$encoded[$i] = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    $encoded = '';\n    foreach ($message\
    \ as $letter) {\n        if (in_array($letter, $vowels)) {\n            $letter\
    \ = $vowels[array_search($letter, $vowels) + 2];\n        }\n        $encoded\
    \ .= strtoupper($letter);\n    }\n    return $encoded;\n}\n\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$newMessage[] = $vowels[array_search($letter, $vowels) +\
    \ 2];\n\t\t} else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($newMessage));\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for\
    \ ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n   \
    \     if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$newMessage = \"\";\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t\
    }\n\treturn $newMessage;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_58_common
language: php
prompt: "<?php\n// Return sorted unique common elements for two lists.\n// >>> common(array(1,\
  \ 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))\n// array(1, 5, 653)\n//\
  \ >>> common(array(5, 3, 2, 8), array(3, 2))\n// array(2, 3)\nfunction common($l1,\
  \ $l2) {\n"
tests: "function candidate(...$args) {\n    return common(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1,\
  \ 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 8), array(3,\
  \ 2, 4)) !== array(2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "  $result = [];\n  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n\
    \  sort($l1);\n  sort($l2);\n  $i = 0;\n  $j = 0;\n  while ($i < count($l1) &&\
    \ $j < count($l2)) {\n    if ($l1[$i] == $l2[$j]) {\n      $result[] = $l1[$i];\n\
    \      $i++;\n      $j++;\n    } else if ($l1[$i] < $l2[$j]) {\n      $i++;\n\
    \    } else {\n      $j++;\n    }\n  }\n  return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    for ($i = 0; $i < count($l1);\
    \ $i++) {\n        for ($j = 0; $j < count($l2); $j++) {\n            if ($l1[$i]\
    \ == $l2[$j]) {\n                $result[] = $l1[$i];\n            }\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n\
    \    foreach ($l1 as $v) {\n        if (in_array($v, $l2)) {\n            $result[]\
    \ = $v;\n        }\n    }\n    sort($result);\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result\
    \ = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n \
    \           $result[] = $item;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if\
    \ (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n    }\n\
    \    return array_unique($result);\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $elem) {\n    \
    \    if (in_array($elem, $l2)) {\n            $result[] = $elem;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n\
    \    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    sort($l1);\n\
    \    sort($l2);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1) && $j <\
    \ count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n \
    \       if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n\
    \    }\n    sort($result);\n    return array_unique($result);\n}\n", "\t$result\
    \ = array();\n\tforeach ($l1 as $item) {\n\t\tif (in_array($item, $l2)) {\n\t\t\
    \t$result[] = $item;\n\t\t}\n\t}\n\treturn array_unique($result);\n}\n", "   \
    \ $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = [];\n    while ($i < $l1_len && $j <\
    \ $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    return array_unique($result);\n}\n", "  $l1_unique = array_unique($l1);\n\
    \  $l2_unique = array_unique($l2);\n  $result = array();\n  foreach ($l1_unique\
    \ as $e) {\n    if (in_array($e, $l2_unique)) {\n      $result[] = $e;\n    }\n\
    \  }\n  sort($result);\n  return $result;\n}\n", "\t$result = array();\n\t$l1\
    \ = array_unique($l1);\n\t$l2 = array_unique($l2);\n\tsort($l1);\n\tsort($l2);\n\
    \tforeach ($l1 as $value) {\n\t\tif (in_array($value, $l2)) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $elem) {\n\
    \        if (in_array($elem, $l2)) {\n            $result[] = $elem;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $result = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1) && $j\
    \ < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] =\
    \ $l1[$i];\n            $i++;\n            $j++;\n        } else if ($l1[$i] <\
    \ $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n    \
    \    if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $el) {\n\
    \        if (in_array($el, $l2)) {\n            $result[] = $el;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "\t$l1 = array_unique($l1);\n\
    \t$l2 = array_unique($l2);\n\t$l1 = array_values($l1);\n\t$l2 = array_values($l2);\n\
    \t$l1_len = count($l1);\n\t$l2_len = count($l2);\n\t$i = 0;\n\t$j = 0;\n\t$common\
    \ = array();\n\twhile ($i < $l1_len && $j < $l2_len) {\n\t\tif ($l1[$i] == $l2[$j])\
    \ {\n\t\t\t$common[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i]\
    \ < $l2[$j]) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $common;\n\
    }\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    foreach ($l1 as $value) {\n        if (in_array($value, $l2)) {\n       \
    \     $result[] = $value;\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    sort($l1);\n\
    \    sort($l2);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1) && $j <\
    \ count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \t$l1 = array_values($l1);\n\t$l2 = array_values($l2);\n\t$l1_len = count($l1);\n\
    \t$l2_len = count($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result = array();\n\twhile ($i\
    \ < $l1_len && $j < $l2_len) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t$result[]\
    \ = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j]) {\n\t\
    \t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n", " \
    \   $result = [];\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $common = [];\n    foreach ($l1 as $e) {\n\
    \        if (in_array($e, $l2)) {\n            $common[] = $e;\n        }\n  \
    \  }\n    sort($common);\n    return $common;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $elem) {\n\
    \        if (in_array($elem, $l2)) {\n            $result[] = $elem;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "\t$result = array();\n\
    \t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\tsort($l1);\n\tsort($l2);\n\
    \t$i = 0;\n\t$j = 0;\n\twhile ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i]\
    \ == $l2[$j]) {\n\t\t\t$result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else\
    \ if ($l1[$i] < $l2[$j]) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t\
    }\n\treturn $result;\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n \
    \   $j = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n     \
    \   } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    foreach ($l1 as $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\t$result = array();\n\
    \tforeach ($l1 as $item) {\n\t\tif (in_array($item, $l2)) {\n\t\t\t$result[] =\
    \ $item;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $e) {\n\
    \        if (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n    $l1\
    \ = array_unique($l1);\n    $l2 = array_unique($l2);\n    foreach ($l1 as $item)\
    \ {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n   \
    \     }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n   \
    \ $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1 = array_flip($l1);\n    $l2 = array_flip($l2);\n    $l1 = array_intersect_key($l1,\
    \ $l2);\n    $l1 = array_flip($l1);\n    sort($l1);\n    return $l1;\n}\n", " \
    \   $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2))\
    \ {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = [];\n    while ($i < $l1_len && $j <\
    \ $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $result = [];\n    foreach ($l1 as $e1) {\n   \
    \     foreach ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $result[]\
    \ = $e1;\n            }\n        }\n    }\n    return array_unique($result);\n\
    }\n", "\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\t$result = array();\n\
    \tforeach ($l1 as $e) {\n\t\tif (in_array($e, $l2)) {\n\t\t\t$result[] = $e;\n\
    \t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = [];\n    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n    \
    \    } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($l1 as $e1) {\n        foreach ($l2 as $e2) {\n\
    \            if ($e1 == $e2) {\n                $result[] = $e1;\n           \
    \ }\n        }\n    }\n    return array_unique($result);\n}\n", "    $result =\
    \ [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    sort($l1);\n\
    \    sort($l2);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1) && $j <\
    \ count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = [];\n    while\
    \ ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n      \
    \      $result[] = $l1[$i];\n            $i++;\n            $j++;\n        } else\
    \ if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n\
    \        }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n    \
    \    if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n  \
    \  foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n           \
    \ $result[] = $item;\n        }\n    }\n    return array_unique($result);\n}\n",
  "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result = [];\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n", "    $result = [];\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j\
    \ = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n     \
    \   } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result = [];\n\
    \    foreach ($l1 as $e) {\n        if (in_array($e, $l2)) {\n            $result[]\
    \ = $e;\n        }\n    }\n    sort($result);\n    return $result;\n}\n", "  $l1\
    \ = array_unique($l1);\n  $l2 = array_unique($l2);\n  $l1 = array_values($l1);\n\
    \  $l2 = array_values($l2);\n  $l1_len = count($l1);\n  $l2_len = count($l2);\n\
    \  $i = 0;\n  $j = 0;\n  $result = array();\n  while ($i < $l1_len && $j < $l2_len)\
    \ {\n    if ($l1[$i] < $l2[$j]) {\n      $i++;\n    } else if ($l1[$i] > $l2[$j])\
    \ {\n      $j++;\n    } else {\n      $result[] = $l1[$i];\n      $i++;\n    \
    \  $j++;\n    }\n  }\n  return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($l1 as $item) {\n        if (in_array($item, $l2)) {\n            $result[]\
    \ = $item;\n        }\n    }\n    return array_unique($result);\n}\n", "    $l1\
    \ = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $l1_idx = 0;\n    $l2_idx = 0;\n    $common = array();\n    while ($l1_idx\
    \ < $l1_len && $l2_idx < $l2_len) {\n        if ($l1[$l1_idx] == $l2[$l2_idx])\
    \ {\n            $common[] = $l1[$l1_idx];\n            $l1_idx++;\n         \
    \   $l2_idx++;\n        } else if ($l1[$l1_idx] < $l2[$l2_idx]) {\n          \
    \  $l1_idx++;\n        } else {\n            $l2_idx++;\n        }\n    }\n  \
    \  return $common;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return array_unique($result);\n}\n", "   \
    \ $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n", "\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\t$common = array();\n\
    \tforeach ($l1 as $item) {\n\t\tif (in_array($item, $l2)) {\n\t\t\t$common[] =\
    \ $item;\n\t\t}\n\t}\n\tsort($common);\n\treturn $common;\n}\n", "    $result\
    \ = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n \
    \           $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    sort($l1);\n\
    \    sort($l2);\n    $l3 = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1)\
    \ && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $l3[]\
    \ = $l1[$i];\n            $i++;\n            $j++;\n        } elseif ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n     \
    \   }\n    }\n    return $l3;\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    foreach ($l1\
    \ as $item) {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $common = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $common[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $common;\n}\n\n$l1 = array(1, 4,\
    \ 3, 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\n$common = common($l1,\
    \ $l2);\nprint_r($common);\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\n$common\
    \ = common($l1, $l2);\nprint_r($common);", "    $l1 = array_unique($l1);\n   \
    \ $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        for ($j\
    \ = 0; $j < count($l2); $j++) {\n            if ($l1[$i] == $l2[$j]) {\n     \
    \           $result[] = $l1[$i];\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 =\
    \ array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n", "    $common\
    \ = array();\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2))\
    \ {\n            $common[] = $item;\n        }\n    }\n    return array_unique($common);\n\
    }\n", "\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\t$common = array();\n\
    \tforeach ($l1 as $e) {\n\t\tif (in_array($e, $l2)) {\n\t\t\t$common[] = $e;\n\
    \t\t}\n\t}\n\tsort($common);\n\treturn $common;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = [];\n    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n    \
    \    } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_length = count($l1);\n    $l2_length =\
    \ count($l2);\n    $i = 0;\n    $j = 0;\n    $result = [];\n    while ($i < $l1_length\
    \ && $j < $l2_length) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[]\
    \ = $l1[$i];\n            $i++;\n            $j++;\n        } else if ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n     \
    \   }\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach ($l1\
    \ as $item) {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n\
    \        }\n    }\n    sort($result);\n    return array_unique($result);\n}\n",
  "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_filter($l1,\
    \ function($e) use ($l2) {\n        return in_array($e, $l2);\n    });\n    sort($l1);\n\
    \    return $l1;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $result = [];\n    $i = 0;\n    $j = 0;\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        for ($j\
    \ = 0; $j < count($l2); $j++) {\n            if ($l1[$i] == $l2[$j]) {\n     \
    \           $result[] = $l1[$i];\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $res = [];\n    foreach ($l1 as $e1) {\n        foreach ($l2 as $e2) {\n\
    \            if ($e1 == $e2) {\n                $res[] = $e1;\n            }\n\
    \        }\n    }\n    sort($res);\n    return $res;\n}\n", "\t$l1 = array_unique($l1);\n\
    \t$l2 = array_unique($l2);\n\t$l1 = array_values($l1);\n\t$l2 = array_values($l2);\n\
    \t$l1_len = count($l1);\n\t$l2_len = count($l2);\n\t$i = 0;\n\t$j = 0;\n\t$common\
    \ = array();\n\twhile ($i < $l1_len && $j < $l2_len) {\n\t\tif ($l1[$i] == $l2[$j])\
    \ {\n\t\t\t$common[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i]\
    \ < $l2[$j]) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $common;\n\
    }\n", "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($l1 as $e) {\n        if (in_array($e,\
    \ $l2)) {\n            $result[] = $e;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l3 = array_intersect($l1,\
    \ $l2);\n    sort($l3);\n    return $l3;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $e) {\n\
    \        if (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        for ($j\
    \ = 0; $j < count($l2); $j++) {\n            if ($l1[$i] == $l2[$j]) {\n     \
    \           $result[] = $l1[$i];\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if\
    \ (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n    }\n\
    \    sort($result);\n    return array_unique($result);\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = [];\n    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n \
    \           $j++;\n        } else {\n            $result[] = $l1[$i];\n      \
    \      $i++;\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2))\
    \ {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = [];\n    while ($i < $l1_len && $j <\
    \ $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_flip($l1);\n    $l2 = array_flip($l2);\n    $result = array_intersect_key($l1,\
    \ $l2);\n    return array_keys($result);\n}\n", "  $l1 = array_unique($l1);\n\
    \  $l2 = array_unique($l2);\n  $result = array();\n  foreach ($l1 as $item) {\n\
    \    if (in_array($item, $l2)) {\n      $result[] = $item;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n", "  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n\
    \  $l1 = array_values($l1);\n  $l2 = array_values($l2);\n  $result = [];\n  $i\
    \ = 0;\n  $j = 0;\n  while ($i < count($l1) && $j < count($l2)) {\n    if ($l1[$i]\
    \ == $l2[$j]) {\n      $result[] = $l1[$i];\n      $i++;\n      $j++;\n    } else\
    \ if ($l1[$i] < $l2[$j]) {\n      $i++;\n    } else {\n      $j++;\n    }\n  }\n\
    \  return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $res = [];\n    while\
    \ ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n      \
    \      $res[] = $l1[$i];\n            $i++;\n            $j++;\n        } else\
    \ if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n\
    \        }\n    }\n    return $res;\n}\n", "    $l1 = array_unique($l1);\n   \
    \ $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $result = [];\n    for ($i = 0; $i < count($l1); $i++) {\n        for ($j\
    \ = 0; $j < count($l2); $j++) {\n            if ($l1[$i] == $l2[$j]) {\n     \
    \           $result[] = $l1[$i];\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $common = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $common[] = $e;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if\
    \ (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n    }\n\
    \    sort($result);\n    return array_unique($result);\n}\n", "    $result = [];\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n  $l1 = array_values($l1);\n\
    \  $l2 = array_values($l2);\n  $i = 0;\n  $j = 0;\n  $result = array();\n  while\
    \ ($i < count($l1) && $j < count($l2)) {\n    if ($l1[$i] == $l2[$j]) {\n    \
    \  $result[] = $l1[$i];\n      $i++;\n      $j++;\n    } else if ($l1[$i] < $l2[$j])\
    \ {\n      $i++;\n    } else {\n      $j++;\n    }\n  }\n  return $result;\n}\n",
  "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $common = [];\n\
    \    foreach ($l1 as $l1_item) {\n        if (in_array($l1_item, $l2)) {\n   \
    \         $common[] = $l1_item;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if\
    \ (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n    }\n\
    \    return array_unique($result);\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n \
    \   $j = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n     \
    \   } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result = [];\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n", "  $l1 = array_unique($l1);\n  $l2 = array_unique($l2);\n  $common = array();\n\
    \  foreach ($l1 as $e1) {\n    foreach ($l2 as $e2) {\n      if ($e1 == $e2) {\n\
    \        $common[] = $e1;\n      }\n    }\n  }\n  sort($common);\n  return $common;\n\
    }\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return array_unique($result);\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $e) {\n       \
    \ if (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_flip($l1);\n    $l2 = array_flip($l2);\n\
    \    $l1 = array_intersect_key($l1, $l2);\n    $l1 = array_flip($l1);\n    sort($l1);\n\
    \    return $l1;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $common = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $common[] = $e;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    return array_intersect($l1, $l2);\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1 = array_flip($l1);\n    $l2 = array_flip($l2);\n    $l1 = array_intersect_key($l1,\
    \ $l2);\n    $l1 = array_flip($l1);\n    sort($l1);\n    return $l1;\n}\n", " \
    \   $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2))\
    \ {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_intersect($l1,\
    \ $l2);\n    sort($l1);\n    return $l1;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = array();\n\
    \    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n\
    \            $result[] = $l1[$i];\n            $i++;\n            $j++;\n    \
    \    } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n  \
    \          $j++;\n        }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $l1_index = 0;\n  \
    \  $l2_index = 0;\n    $result = array();\n    while ($l1_index < $l1_len && $l2_index\
    \ < $l2_len) {\n        if ($l1[$l1_index] < $l2[$l2_index]) {\n            $l1_index++;\n\
    \        } else if ($l1[$l1_index] > $l2[$l2_index]) {\n            $l2_index++;\n\
    \        } else {\n            $result[] = $l1[$l1_index];\n            $l1_index++;\n\
    \            $l2_index++;\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    foreach\
    \ ($l1 as $item) {\n        if (in_array($item, $l2)) {\n            $result[]\
    \ = $item;\n        }\n    }\n    sort($result);\n    return $result;\n}\n", " \
    \   $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1)\
    \ && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[]\
    \ = $l1[$i];\n            $i++;\n            $j++;\n        } else if ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n     \
    \   }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $e) {\n       \
    \ if (in_array($e, $l2)) {\n            $result[] = $e;\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($l1 as $item) {\n        if (in_array($item, $l2)) {\n            $result[]\
    \ = $item;\n        }\n    }\n    sort($result);\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = [];\n    while ($i < $l1_len && $j <\
    \ $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $common = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2))\
    \ {\n            $common[] = $e;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if\
    \ (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n    }\n\
    \    sort($result);\n    return array_unique($result);\n}\n", "    $result = [];\n\
    \    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    sort($l1);\n\
    \    sort($l2);\n    foreach ($l1 as $el) {\n        if (in_array($el, $l2)) {\n\
    \            $result[] = $el;\n        }\n    }\n    return $result;\n}\n", " \
    \   $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = [];\n    while ($i < $l1_len && $j <\
    \ $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    return array_unique($result);\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $elem) {\n\
    \        if (in_array($elem, $l2)) {\n            $result[] = $elem;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n\
    \    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    foreach ($l1\
    \ as $item) {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n\
    \        }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $result = [];\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1)\
    \ && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[]\
    \ = $l1[$i];\n            $i++;\n            $j++;\n        } elseif ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n     \
    \   }\n    }\n    return $result;\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    sort($l1);\n    sort($l2);\n    $i = 0;\n \
    \   $j = 0;\n    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } elseif ($l1[$i] < $l2[$j]) {\n            $i++;\n     \
    \   } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($l1 as $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $result[] = $value;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $common\
    \ = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n \
    \           $common[] = $item;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "\t$result = array();\n\t$l1 = array_unique($l1);\n\
    \t$l2 = array_unique($l2);\n\tsort($l1);\n\tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\
    \twhile ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i] == $l2[$j]) {\n\
    \t\t\t$result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i] <\
    \ $l2[$j]) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n\
    \    $l2 = array_values($l2);\n    $l1_len = count($l1);\n    $l2_len = count($l2);\n\
    \    $i = 0;\n    $j = 0;\n    $result = [];\n    while ($i < $l1_len && $j <\
    \ $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] = $l1[$i];\n\
    \            $i++;\n            $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n\
    \            $i++;\n        } else {\n            $j++;\n        }\n    }\n  \
    \  return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $elem) {\n        if (in_array($elem,\
    \ $l2)) {\n            $result[] = $elem;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "\t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\
    \t$common = array();\n\tforeach ($l1 as $e) {\n\t\tif (in_array($e, $l2)) {\n\t\
    \t\t$common[] = $e;\n\t\t}\n\t}\n\tsort($common);\n\treturn $common;\n}\n", " \
    \   $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2))\
    \ {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result\
    \ = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n \
    \           $result[] = $item;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = [];\n    while\
    \ ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] == $l2[$j]) {\n      \
    \      $result[] = $l1[$i];\n            $i++;\n            $j++;\n        } else\
    \ if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n\
    \        }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "\t$l1 = array_unique($l1);\n\
    \t$l2 = array_unique($l2);\n\t$l1 = array_values($l1);\n\t$l2 = array_values($l2);\n\
    \t$l = [];\n\tfor ($i = 0; $i < count($l1); $i++) {\n\t\tfor ($j = 0; $j < count($l2);\
    \ $j++) {\n\t\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t\t$l[] = $l1[$i];\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $l;\n}\n", "    $result = [];\n    foreach ($l1 as $item)\
    \ {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n   \
    \     }\n    }\n    sort($result);\n    return array_unique($result);\n}\n", " \
    \   $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $common = [];\n\
    \    foreach ($l1 as $e) {\n        if (in_array($e, $l2)) {\n            $common[]\
    \ = $e;\n        }\n    }\n    sort($common);\n    return $common;\n}\n", "  \
    \  $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2))\
    \ {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1)\
    \ && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[]\
    \ = $l1[$i];\n            $i++;\n            $j++;\n        } elseif ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n     \
    \   }\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach ($l1\
    \ as $item) {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n\
    \        }\n    }\n    return array_unique($result);\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = [];\n    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n    \
    \    } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n\n\
    $l1 = [1, 4, 3, 34, 653, 2, 5];\n$l2 = [5, 7, 1, 5, 9, 653, 121];\n\n$result =\
    \ common($l1, $l2);\nprint_r($result);", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n    \
    \    if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = [];\n    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n    \
    \    } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1)\
    \ && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[]\
    \ = $l1[$i];\n            $i++;\n            $j++;\n        } elseif ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n     \
    \   }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n    \
    \    if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "\t$result = array();\n\
    \t$l1 = array_unique($l1);\n\t$l2 = array_unique($l2);\n\tsort($l1);\n\tsort($l2);\n\
    \t$i = 0;\n\t$j = 0;\n\twhile ($i < count($l1) && $j < count($l2)) {\n\t\tif ($l1[$i]\
    \ == $l2[$j]) {\n\t\t\t$result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else\
    \ if ($l1[$i] < $l2[$j]) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t\
    }\n\treturn $result;\n}\n", "  $result = [];\n  $l1 = array_unique($l1);\n  $l2\
    \ = array_unique($l2);\n  sort($l1);\n  sort($l2);\n  $i = 0;\n  $j = 0;\n  while\
    \ ($i < count($l1) && $j < count($l2)) {\n    if ($l1[$i] == $l2[$j]) {\n    \
    \  $result[] = $l1[$i];\n      $i++;\n      $j++;\n    } else if ($l1[$i] < $l2[$j])\
    \ {\n      $i++;\n    } else {\n      $j++;\n    }\n  }\n  return $result;\n}\n\
    \n$l1 = array(1, 4, 3, 34, 653, 2, 5);\n$l2 = array(5, 7, 1, 5, 9, 653, 121);\n\
    print_r(common($l1, $l2));\n\n$l1 = array(5, 3, 2, 8);\n$l2 = array(3, 2);\nprint_r(common($l1,\
    \ $l2));", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    sort($l1);\n\
    \    sort($l2);\n    $i = 0;\n    $j = 0;\n    $common = array();\n    while ($i\
    \ < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n    \
    \        $common[] = $l1[$i];\n            $i++;\n            $j++;\n        }\
    \ else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n       \
    \     $j++;\n        }\n    }\n    return $common;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $result = [];\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1) && $j\
    \ < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[] =\
    \ $l1[$i];\n            $i++;\n            $j++;\n        } elseif ($l1[$i] <\
    \ $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n    \
    \    if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "    $common = array();\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $common[] = $item;\n        }\n    }\n    sort($common);\n    return array_unique($common);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result\
    \ = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n \
    \           $result[] = $item;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $result = [];\n    $i = 0;\n    $j = 0;\n\
    \    while ($i < count($l1) && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j])\
    \ {\n            $result[] = $l1[$i];\n            $i++;\n            $j++;\n\
    \        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n        } else {\n\
    \            $j++;\n        }\n    }\n    return $result;\n}\n", "\t$l1 = array_unique($l1);\n\
    \t$l2 = array_unique($l2);\n\t$common = array();\n\tforeach ($l1 as $item) {\n\
    \t\tif (in_array($item, $l2)) {\n\t\t\t$common[] = $item;\n\t\t}\n\t}\n\tsort($common);\n\
    \treturn $common;\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n  \
    \  $l2 = array_unique($l2);\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $common\
    \ = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n \
    \           $common[] = $item;\n        }\n    }\n    sort($common);\n    return\
    \ $common;\n}\n", "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 =\
    \ array_unique($l2);\n    sort($l1);\n    sort($l2);\n    foreach ($l1 as $item)\
    \ {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n   \
    \     }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n   \
    \ $l2 = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n\
    \        if (in_array($item, $l2)) {\n            $result[] = $item;\n       \
    \ }\n    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2\
    \ = array_unique($l2);\n    $result = [];\n    foreach ($l1 as $item) {\n    \
    \    if (in_array($item, $l2)) {\n            $result[] = $item;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = [];\n    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n \
    \           $j++;\n        } else {\n            $result[] = $l1[$i];\n      \
    \      $i++;\n            $j++;\n        }\n    }\n    return $result;\n}\n\n\
    $l1 = [1, 4, 3, 34, 653, 2, 5];\n$l2 = [5, 7, 1, 5, 9, 653, 121];\n$l3 = [5, 3,\
    \ 2, 8];\n$l4 = [3, 2];\necho implode(', ', common($l1, $l2)) . \"\\n\";\necho\
    \ implode(', ', common($l3, $l4)) . \"\\n\";", "    $result = [];\n    foreach\
    \ ($l1 as $item) {\n        if (in_array($item, $l2)) {\n            $result[]\
    \ = $item;\n        }\n    }\n    return array_unique($result);\n}\n", "    $l1\
    \ = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result = [];\n    foreach\
    \ ($l1 as $item) {\n        if (in_array($item, $l2)) {\n            $result[]\
    \ = $item;\n        }\n    }\n    sort($result);\n    return $result;\n}\n", " \
    \   $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    sort($l1);\n    sort($l2);\n    $i = 0;\n    $j = 0;\n    while ($i < count($l1)\
    \ && $j < count($l2)) {\n        if ($l1[$i] == $l2[$j]) {\n            $result[]\
    \ = $l1[$i];\n            $i++;\n            $j++;\n        } elseif ($l1[$i]\
    \ < $l2[$j]) {\n            $i++;\n        } else {\n            $j++;\n     \
    \   }\n    }\n    return $result;\n}\n", "\t$result = array();\n\tsort($l1);\n\
    \tsort($l2);\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($l1) && $j < count($l2))\
    \ {\n\t\tif ($l1[$i] == $l2[$j]) {\n\t\t\t$result[] = $l1[$i];\n\t\t\t$i++;\n\t\
    \t\t$j++;\n\t\t} else if ($l1[$i] < $l2[$j]) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\
    \t$j++;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t$l1 = array_unique($l1);\n\t\
    $l2 = array_unique($l2);\n\t$l1 = array_values($l1);\n\t$l2 = array_values($l2);\n\
    \t$l1_len = count($l1);\n\t$l2_len = count($l2);\n\t$i = 0;\n\t$j = 0;\n\t$result\
    \ = array();\n\twhile ($i < $l1_len && $j < $l2_len) {\n\t\tif ($l1[$i] == $l2[$j])\
    \ {\n\t\t\t$result[] = $l1[$i];\n\t\t\t$i++;\n\t\t\t$j++;\n\t\t} else if ($l1[$i]\
    \ < $l2[$j]) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l1 = array_flip($l1);\n\
    \    $l2 = array_flip($l2);\n    $result = array_intersect_key($l1, $l2);\n  \
    \  return array_keys($result);\n}\n", "    $result = [];\n    foreach ($l1 as\
    \ $item) {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n\
    \        }\n    }\n    return array_unique($result);\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = [];\n    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n    \
    \    } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $result = [];\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($l1 as $value) {\n        if (in_array($value,\
    \ $l2)) {\n            $result[] = $value;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    return array_unique($result);\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result\
    \ = [];\n    foreach ($l1 as $value) {\n        if (in_array($value, $l2)) {\n\
    \            $result[] = $value;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $l1_idx = 0;\n    $l2_idx = 0;\n    $result =\
    \ array();\n    while ($l1_idx < $l1_len && $l2_idx < $l2_len) {\n        if ($l1[$l1_idx]\
    \ == $l2[$l2_idx]) {\n            $result[] = $l1[$l1_idx];\n            $l1_idx++;\n\
    \            $l2_idx++;\n        } else if ($l1[$l1_idx] < $l2[$l2_idx]) {\n \
    \           $l1_idx++;\n        } else {\n            $l2_idx++;\n        }\n\
    \    }\n    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item,\
    \ $l2)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n\
    \    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n    $l1_len = count($l1);\n\
    \    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n    $result = [];\n    while\
    \ ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i] < $l2[$j]) {\n       \
    \     $i++;\n        } else if ($l1[$i] > $l2[$j]) {\n            $j++;\n    \
    \    } else {\n            $result[] = $l1[$i];\n            $i++;\n         \
    \   $j++;\n        }\n    }\n    return $result;\n}\n", "    $result = [];\n \
    \   foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n          \
    \  $result[] = $item;\n        }\n    }\n    return array_unique($result);\n}\n",
  "    $result = [];\n    foreach ($l1 as $item) {\n        if (in_array($item, $l2))\
    \ {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n  \
    \  return array_unique($result);\n}\n", "    $result = [];\n    foreach ($l1 as\
    \ $item) {\n        if (in_array($item, $l2)) {\n            $result[] = $item;\n\
    \        }\n    }\n    sort($result);\n    return array_unique($result);\n}\n",
  "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result = [];\n\
    \    foreach ($l1 as $v) {\n        if (in_array($v, $l2)) {\n            $result[]\
    \ = $v;\n        }\n    }\n    sort($result);\n    return $result;\n}\n", "  \
    \  $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l3 = array_intersect($l1,\
    \ $l2);\n    sort($l3);\n    return $l3;\n}\n", "    $l1 = array_unique($l1);\n\
    \    $l2 = array_unique($l2);\n    $l1 = array_values($l1);\n    $l2 = array_values($l2);\n\
    \    $l1_len = count($l1);\n    $l2_len = count($l2);\n    $i = 0;\n    $j = 0;\n\
    \    $result = [];\n    while ($i < $l1_len && $j < $l2_len) {\n        if ($l1[$i]\
    \ == $l2[$j]) {\n            $result[] = $l1[$i];\n            $i++;\n       \
    \     $j++;\n        } else if ($l1[$i] < $l2[$j]) {\n            $i++;\n    \
    \    } else {\n            $j++;\n        }\n    }\n    return $result;\n}\n",
  "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result = [];\n\
    \    foreach ($l1 as $item) {\n        if (in_array($item, $l2)) {\n         \
    \   $result[] = $item;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n", "    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $result\
    \ = [];\n    foreach ($l1 as $e) {\n        if (in_array($e, $l2)) {\n       \
    \     $result[] = $e;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

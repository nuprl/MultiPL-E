name: HumanEval_90_next_smallest
language: php
prompt: "<?php\n// You are given a list of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n// Return None if there is\
  \ no such element.\n// >>> next_smallest(array(1, 2, 3, 4, 5))\n// 2\n// >>> next_smallest(array(5,\
  \ 1, 4, 3, 2))\n// 2\n// >>> next_smallest(array())\n// null\n// >>> next_smallest(array(1,\
  \ 1))\n// null\nfunction next_smallest($lst) {\n"
tests: "function candidate(...$args) {\n    return next_smallest(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(1, 2, 3, 4, 5)) !== 2) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 1, 4, 3, 2)) !==\
  \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
  \ null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 1))\
  \ !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1, 1, 1, 0)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 1)) !== null) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-35,\
  \ 34, 12, -45)) !== -35) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if (count($lst) < 2) {\n        return null;\n    }\n    $min =\
    \ min($lst);\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = INF;\n    $second_min = min($lst);\n    return $second_min;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . PHP_EOL;\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . PHP_EOL;\n$lst = array();\necho next_smallest($lst)\
    \ . PHP_EOL;\n$lst = array(1, 1);\necho next_smallest($lst) . PHP_EOL;", "   \
    \ $min = min($lst);\n    $max = max($lst);\n    $min_count = 0;\n    $max_count\
    \ = 0;\n    foreach ($lst as $num) {\n        if ($num == $min) {\n          \
    \  $min_count++;\n        }\n        if ($num == $max) {\n            $max_count++;\n\
    \        }\n    }\n    if ($min_count > 1 || $max_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    if ($min_index < $max_index) {\n        $lst = array_slice($lst,\
    \ $min_index + 1);\n    } else {\n        $lst = array_slice($lst, $max_index\
    \ + 1);\n    }\n    return min($lst);\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst)\
    \ . PHP_EOL;\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst) . PHP_EOL;\n$lst\
    \ = [];\necho next_smallest($lst) . PHP_EOL;\n$lst = [1, 1];\necho next_smallest($lst)\
    \ . PHP_EOL;", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n        \
    \    $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $lst = array_unique($lst);\n    sort($lst);\n    return $lst[1];\n\
    }\n", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count\
    \ = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = PHP_INT_MAX;\n    return min($lst);\n}\n", "    $smallest = null;\n    $next_smallest\
    \ = null;\n    foreach ($lst as $value) {\n        if ($smallest === null) {\n\
    \            $smallest = $value;\n        } else if ($value < $smallest) {\n \
    \           $next_smallest = $smallest;\n            $smallest = $value;\n   \
    \     } else if ($next_smallest === null || $value < $next_smallest) {\n     \
    \       $next_smallest = $value;\n        }\n    }\n    return $next_smallest;\n\
    }\n", "    $count = count($lst);\n    if ($count < 2) {\n        return null;\n\
    \    }\n    $smallest = $lst[0];\n    $second_smallest = null;\n    for ($i =\
    \ 1; $i < $count; $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest\
    \ = $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i]\
    \ < $second_smallest || $second_smallest === null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $smallest = min($lst);\n    $smallest_index = array_search($smallest,\
    \ $lst);\n    unset($lst[$smallest_index]);\n    return min($lst);\n}\n", "  if\
    \ (count($lst) < 2) {\n    return null;\n  }\n  $min = min($lst);\n  $min_index\
    \ = array_search($min, $lst);\n  unset($lst[$min_index]);\n  return min($lst);\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    $second_min = null;\n \
    \   foreach ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        } elseif ($second_min == null || $item < $second_min) {\n           \
    \ $second_min = $item;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    return $second_min;\n}\n", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n        \
    \    $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n\
    }\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ array($min));\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    $lst = array_unique($lst);\n    sort($lst);\n\
    \    return $lst[1];\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  unset($lst[$min_index]);\n    return min($lst);\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $min = min($lst);\n    $min_count = 0;\n    $second_min = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num == $min) {\n            $min_count++;\n \
    \       } else if ($second_min == null || $num < $second_min) {\n            $second_min\
    \ = $num;\n        }\n    }\n    if ($min_count > 1) {\n        return null;\n\
    \    }\n    return $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n\
    \    unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5,\
    \ 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  $min2 = min($lst);\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n", "    $min\
    \ = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    $min2 = min($lst);\n    if ($min2 == $min) {\n        return null;\n    }\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $smallest = $lst[0];\n    $second_smallest = null;\n    for\
    \ ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest) {\n  \
    \          $second_smallest = $smallest;\n            $smallest = $lst[$i];\n\
    \        } elseif ($lst[$i] < $second_smallest || $second_smallest === null) {\n\
    \            $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $min_index = array_search($min,\
    \ $lst);\n    $lst = array_slice($lst, $min_index + 1);\n    return min($lst);\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    $min = $lst[0];\n    $min2 = null;\n    foreach ($lst as $val)\
    \ {\n        if ($val < $min) {\n            $min2 = $min;\n            $min =\
    \ $val;\n        } else if ($val < $min2 || $min2 === null) {\n            $min2\
    \ = $val;\n        }\n    }\n    return $min2;\n}\n\n$lst = [1, 2, 3, 4, 5];\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = [];\necho next_smallest($lst) . \"\\n\";\n$lst = [1, 1];\n\
    echo next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n    $min_count =\
    \ count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return null;\n\
    \    }\n    $lst[array_search($min, $lst)] = INF;\n    return min($lst);\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n\
    \    $second_smallest = null;\n    for ($i = 1; $i < count($lst); $i++) {\n  \
    \      if ($lst[$i] < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $lst[$i];\n        } else if ($lst[$i] < $second_smallest\
    \ || $second_smallest == null) {\n            $second_smallest = $lst[$i];\n \
    \       }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst) < 2)\
    \ return null;\n    $min = $lst[0];\n    $second = null;\n    for ($i = 1; $i\
    \ < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second\
    \ || $second === null) {\n            $second = $lst[$i];\n        }\n    }\n\
    \    return $second;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n    $min_count =\
    \ 0;\n    $min_index = 0;\n    foreach ($lst as $key => $value) {\n        if\
    \ ($value == $min) {\n            $min_count++;\n            $min_index = $key;\n\
    \        }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n  \
    \  $lst[$min_index] = PHP_INT_MAX;\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n\
    \    $next_smallest = null;\n    for ($i = 1; $i < count($lst); $i++) {\n    \
    \    if ($lst[$i] < $smallest) {\n            $next_smallest = $smallest;\n  \
    \          $smallest = $lst[$i];\n        } else if ($lst[$i] < $next_smallest\
    \ || $next_smallest == null) {\n            $next_smallest = $lst[$i];\n     \
    \   }\n    }\n    return $next_smallest;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";\n", "    if (count($lst) < 2) {\n \
    \       return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    $min2 = min($lst);\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";", "    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    foreach ($lst as $num) {\n        if ($num < $smallest) {\n   \
    \         $second_smallest = $smallest;\n            $smallest = $num;\n     \
    \   } else if ($num < $second_smallest) {\n            $second_smallest = $num;\n\
    \        }\n    }\n    return $second_smallest;\n}\n\n$lst = array(1, 2, 3, 4,\
    \ 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho\
    \ next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst) .\
    \ \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n  \
    \  $lst = array_diff($lst, [$min]);\n    return min($lst);\n}\n\n$lst = [1, 2,\
    \ 3, 4, 5];\necho next_smallest($lst) . \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho\
    \ next_smallest($lst) . \"\\n\";\n$lst = [];\necho next_smallest($lst) . \"\\\
    n\";\n$lst = [1, 1];\necho next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n\
    \    $min_count = 0;\n    $second_min = null;\n    foreach ($lst as $item) {\n\
    \        if ($item == $min) {\n            $min_count++;\n        } else if ($second_min\
    \ == null || $item < $second_min) {\n            $second_min = $item;\n      \
    \  }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $lst = array_unique($lst);\n    sort($lst);\n    return $lst[1];\n}\n", " \
    \   if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n     \
    \   }\n    }\n    return $min2;\n}\n", "    $min = min($lst);\n    $lst = array_diff($lst,\
    \ array($min));\n    if (empty($lst)) {\n        return null;\n    }\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } elseif ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    $lst = array_unique($lst);\n    sort($lst);\n    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n    \
    \    if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_min) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $next_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            $next_min = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $next_min || $next_min == null) {\n           \
    \ $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n\
    \    $second_smallest = null;\n    for ($i = 1; $i < count($lst); $i++) {\n  \
    \      if ($lst[$i] < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $lst[$i];\n        } else if ($lst[$i] < $second_smallest\
    \ || $second_smallest == null) {\n            $second_smallest = $lst[$i];\n \
    \       }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = null;\n   \
    \ for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n   \
    \         $min2 = $min;\n            $min = $lst[$i];\n        } else if ($min2\
    \ === null || $lst[$i] < $min2) {\n            $min2 = $lst[$i];\n        }\n\
    \    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } else if ($lst[$i] < $next_min) {\n     \
    \       $next_min = $lst[$i];\n        }\n    }\n    return $next_min;\n}\n",
  "    $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    $min2 = min($lst);\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    $lst2 = array(5, 1, 4, 3, 2);\n$lst3 = array();\n$lst4 = array(1, 1);\n\necho\
    \ next_smallest($lst) . \"\\n\";\necho next_smallest($lst2) . \"\\n\";\necho next_smallest($lst3)\
    \ . \"\\n\";\necho next_smallest($lst4) . \"\\n\";", "    $min = min($lst);\n\
    \    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item > $min) {\n\
    \            if ($min2 === null || $item < $min2) {\n                $min2 = $item;\n\
    \            }\n        }\n    }\n    return $min2;\n}\n", "    $len = count($lst);\n\
    \    if ($len < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2\
    \ = $lst[1];\n    for ($i = 1; $i < $len; $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $min2 = $min;\n            $min = $lst[$i];\n        } else if\
    \ ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return\
    \ $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $min_idx = array_search($min, $lst);\n    unset($lst[$min_idx]);\n\
    \    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n   \
    \ $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2\
    \ = min($lst);\n    return $min2;\n}\n", "    $min = min($lst);\n    $lst = array_diff($lst,\
    \ array($min));\n    if (empty($lst)) {\n        return null;\n    }\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $smallest = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i <\
    \ count($lst); $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest\
    \ = $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i]\
    \ < $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "  if\
    \ (count($lst) < 2) {\n    return null;\n  }\n  $min = min($lst);\n  $min_index\
    \ = array_search($min, $lst);\n  unset($lst[$min_index]);\n  $next_smallest =\
    \ min($lst);\n  return $next_smallest;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n   \
    \     return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for\
    \ ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n       \
    \     $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $next_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n      \
    \  if ($lst[$i] < $min) {\n            $next_min = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $next_min) {\n            $next_min = $lst[$i];\n\
    \        }\n    }\n    return $next_min;\n}\n", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n    foreach\
    \ ($lst as $num) {\n        if ($num > $min) {\n            if ($min2 === null\
    \ || $num < $min2) {\n                $min2 = $num;\n            }\n        }\n\
    \    }\n    return $min2;\n}\n", "    $smallest = null;\n    $next_smallest =\
    \ null;\n    foreach ($lst as $num) {\n        if ($smallest === null) {\n   \
    \         $smallest = $num;\n        } else if ($num < $smallest) {\n        \
    \    $next_smallest = $smallest;\n            $smallest = $num;\n        } else\
    \ if ($next_smallest === null || $num < $next_smallest) {\n            $next_smallest\
    \ = $num;\n        }\n    }\n    return $next_smallest;\n}\n", "    $min = min($lst);\n\
    \    $min_count = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $min_index = array_search($min, $lst);\n   \
    \ array_splice($lst, $min_index, 1);\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $min = $lst[0];\n    $sec_min = null;\n    foreach ($lst as $val) {\n      \
    \  if ($val < $min) {\n            $sec_min = $min;\n            $min = $val;\n\
    \        } else if ($val < $sec_min || $sec_min === null) {\n            $sec_min\
    \ = $val;\n        }\n    }\n    return $sec_min;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $smallest = null;\n    $second_smallest = null;\n    foreach ($lst as $num)\
    \ {\n        if ($smallest === null) {\n            $smallest = $num;\n      \
    \  } else if ($num < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $num;\n        } else if ($second_smallest === null)\
    \ {\n            $second_smallest = $num;\n        } else if ($num < $second_smallest)\
    \ {\n            $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $next_min = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $next_min = $min;\n   \
    \         $min = $lst[$i];\n        } else if ($lst[$i] < $next_min || $next_min\
    \ == null) {\n            $next_min = $lst[$i];\n        }\n    }\n    return\
    \ $next_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $smallest = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i <\
    \ count($lst); $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest\
    \ = $smallest;\n            $smallest = $lst[$i];\n        } elseif ($lst[$i]\
    \ < $second_smallest || $second_smallest === null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    $lst\
    \ = array_unique($lst);\n    sort($lst);\n    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    return $lst[1];\n}\n", "    $smallest = null;\n   \
    \ $next_smallest = null;\n    foreach ($lst as $num) {\n        if ($smallest\
    \ === null) {\n            $smallest = $num;\n        } else if ($num < $smallest)\
    \ {\n            $next_smallest = $smallest;\n            $smallest = $num;\n\
    \        } else if ($next_smallest === null || $num < $next_smallest) {\n    \
    \        $next_smallest = $num;\n        }\n    }\n    return $next_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    $min = min($lst);\n    $min_index = array_search($min, $lst);\n   \
    \ unset($lst[$min_index]);\n    $min2 = min($lst);\n    return $min2;\n}\n\n$lst\
    \ = array(5, 1, 4, 3, 2);\necho next_smallest($lst);", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n       \
    \ return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest)\
    \ {\n            $second_smallest = $smallest;\n            $smallest = $lst[$i];\n\
    \        } else if ($lst[$i] < $second_smallest || $second_smallest == null) {\n\
    \            $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\nprint next_smallest($lst) . \"\\n\";\n$lst\
    \ = array(5, 1, 4, 3, 2);\nprint next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    print next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\nprint next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) <= 1) {\n        return null;\n    }\n   \
    \ $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    return min($lst);\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst) . \"\\n\";\n$lst\
    \ = [];\necho next_smallest($lst) . \"\\n\";\n$lst = [1, 1];\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = $lst[0];\n    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n    return\
    \ $second_min;\n}\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach\
    \ ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n  \
    \  $lst = array_diff($lst, array($min));\n    if (count($lst) == 0) {\n      \
    \  return null;\n    }\n    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";\n", "    $smallest = null;\n    $second_smallest\
    \ = null;\n    foreach ($lst as $num) {\n        if ($smallest === null) {\n \
    \           $smallest = $num;\n        } elseif ($num < $smallest) {\n       \
    \     $second_smallest = $smallest;\n            $smallest = $num;\n        }\
    \ elseif ($second_smallest === null || $num < $second_smallest) {\n          \
    \  $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst, $min));\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ array($min));\n    return min($lst);\n}\n", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item)\
    \ {\n        if ($item == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ array($min));\n    return min($lst);\n}\n", "    $smallest = null;\n    $second_smallest\
    \ = null;\n    foreach ($lst as $item) {\n        if ($smallest === null) {\n\
    \            $smallest = $item;\n        } else if ($item < $smallest) {\n   \
    \         $second_smallest = $smallest;\n            $smallest = $item;\n    \
    \    } else if ($second_smallest === null || $item < $second_smallest) {\n   \
    \         $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    foreach ($lst as $i) {\n     \
    \   if ($i < $smallest) {\n            $second_smallest = $smallest;\n       \
    \     $smallest = $i;\n        } else if ($i < $second_smallest || $second_smallest\
    \ === null) {\n            $second_smallest = $i;\n        }\n    }\n    return\
    \ $second_smallest;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n    $min_count =\
    \ count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return null;\n\
    \    }\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n}\n",
  "    $lst = array_unique($lst);\n    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    sort($lst);\n    return $lst[1];\n}\n", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = $min;\n \
    \   foreach ($lst as $v) {\n        if ($v > $min && $v < $min2) {\n         \
    \   $min2 = $v;\n        }\n    }\n    if ($min2 == $min) {\n        return null;\n\
    \    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    foreach ($lst\
    \ as $val) {\n        if ($val < $min) {\n            $second_min = $min;\n  \
    \          $min = $val;\n        } else if ($val > $min && ($second_min === null\
    \ || $val < $second_min)) {\n            $second_min = $val;\n        }\n    }\n\
    \    return $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $min2 = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $min2) {\n            $min2\
    \ = $lst[$i];\n        }\n    }\n    return $min2;\n}\n\necho next_smallest([1,\
    \ 2, 3, 4, 5]) . \"\\n\";\necho next_smallest([5, 1, 4, 3, 2]) . \"\\n\";\necho\
    \ next_smallest([]) . \"\\n\";\necho next_smallest([1, 1]) . \"\\n\";", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n  \
    \  $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n    return\
    \ min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\
    \\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst\
    \ = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "  if (count($lst) < 2) {\n    return null;\n  }\n  $smallest =\
    \ $lst[0];\n  $second_smallest = null;\n  for ($i = 1; $i < count($lst); $i++)\
    \ {\n    if ($lst[$i] < $smallest) {\n      $second_smallest = $smallest;\n  \
    \    $smallest = $lst[$i];\n    } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n      $second_smallest = $lst[$i];\n    }\n  }\n  return $second_smallest;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $lst = array_diff($lst, [$min]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_count = 0;\n    $second_min = null;\n    foreach ($lst as $item) {\n\
    \        if ($item == $min) {\n            $min_count++;\n        } else if ($second_min\
    \ == null || $item < $second_min) {\n            $second_min = $item;\n      \
    \  }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    return\
    \ $second_min;\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = $lst[0];\n    $second_min = $lst[1];\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min) {\n \
    \           $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = $lst[0];\n    $second_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n       \
    \     $min = $lst[$i];\n        } else if ($lst[$i] < $second_min) {\n       \
    \     $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n\n\
    $lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst);\necho \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\n\
    echo \"\\n\";", "    if (empty($lst)) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $lst = array_diff($lst, [$min]);\n    if (empty($lst)) {\n\
    \        return null;\n    }\n    return min($lst);\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n", "    $smallest = null;\n    $second_smallest = null;\n    foreach ($lst\
    \ as $num) {\n        if ($smallest === null) {\n            $smallest = $num;\n\
    \        } else if ($num < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $num;\n        } else if ($second_smallest === null ||\
    \ $num < $second_smallest) {\n            $second_smallest = $num;\n        }\n\
    \    }\n    return $second_smallest;\n}\n", "  $min = min($lst);\n  $min_count\
    \ = count(array_keys($lst, $min));\n  if ($min_count == count($lst)) {\n    return\
    \ null;\n  }\n  $lst = array_diff($lst, array($min));\n  return min($lst);\n}\n",
  "    $smallest = null;\n    $second_smallest = null;\n    foreach ($lst as $num)\
    \ {\n        if ($smallest === null) {\n            $smallest = $num;\n      \
    \  } else if ($num < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $num;\n        } else if ($second_smallest === null)\
    \ {\n            $second_smallest = $num;\n        } else if ($num < $second_smallest)\
    \ {\n            $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n    \
    \    if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_min) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n", "    $lst = array_unique($lst);\n   \
    \ sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n    return\
    \ $lst[1];\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\n\
    \    $min = $lst[0];\n    $second_min = null;\n\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $min) {\n            $second_min = $min;\n \
    \           $min = $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n            $second_min = $lst[$i];\n        }\n    }\n\n    return\
    \ $second_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) .\
    \ \"\\n\";\n\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $len = count($lst);\n    if ($len <\
    \ 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $sec = null;\n \
    \   for ($i = 1; $i < $len; $i++) {\n        if ($lst[$i] < $min) {\n        \
    \    $sec = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] <\
    \ $sec || $sec === null) {\n            $sec = $lst[$i];\n        }\n    }\n \
    \   return $sec;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $min = min($lst);\n   \
    \ $max = max($lst);\n    $min_count = 0;\n    $max_count = 0;\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $min_count++;\n     \
    \   }\n        if ($item == $max) {\n            $max_count++;\n        }\n  \
    \  }\n    if ($min_count > 1 || $max_count > 1) {\n        return null;\n    }\n\
    \    $min_index = array_search($min, $lst);\n    $lst[$min_index] = $max;\n  \
    \  return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min === null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n", "    $min = $lst[0];\n    $second_min =\
    \ null;\n    foreach ($lst as $item) {\n        if ($item < $min) {\n        \
    \    $second_min = $min;\n            $min = $item;\n        } elseif ($item >\
    \ $min && ($second_min === null || $item < $second_min)) {\n            $second_min\
    \ = $item;\n        }\n    }\n    return $second_min;\n}\n\n$lst = array(1, 2,\
    \ 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n \
    \   $second_min = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n     \
    \   if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_min) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $min2 = $lst[1];\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2) {\n            $min2 = $lst[$i];\n        }\n    }\n    return $min2;\n\
    }\n", "    $smallest = null;\n    $second_smallest = null;\n    foreach ($lst\
    \ as $item) {\n        if ($smallest === null) {\n            $smallest = $item;\n\
    \        } else if ($item < $smallest) {\n            $second_smallest = $smallest;\n\
    \            $smallest = $item;\n        } else if ($second_smallest === null)\
    \ {\n            $second_smallest = $item;\n        } else if ($item < $second_smallest)\
    \ {\n            $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n \
    \   for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n \
    \           $second_min = $min;\n            $min = $lst[$i];\n        } else\
    \ if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n", "    $min = null;\n    $next_min = null;\n \
    \   foreach ($lst as $val) {\n        if ($min === null) {\n            $min =\
    \ $val;\n        } else if ($val < $min) {\n            $next_min = $min;\n  \
    \          $min = $val;\n        } else if ($next_min === null || $val < $next_min)\
    \ {\n            $next_min = $val;\n        }\n    }\n    return $next_min;\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $num)\
    \ {\n        if ($num == $min) {\n            $min_count++;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    $lst = array_diff($lst,\
    \ array($min));\n    return min($lst);\n}\n", "    $min = min($lst);\n    $lst\
    \ = array_diff($lst, array($min));\n    if (count($lst) > 0) {\n        return\
    \ min($lst);\n    } else {\n        return null;\n    }\n}\n", "    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min == null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i] <\
    \ $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $lst = array_unique($lst);\n\
    \    sort($lst);\n    return $lst[1];\n}\n", "    if (count($lst) < 2) {\n   \
    \     return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest)\
    \ {\n            $second_smallest = $smallest;\n            $smallest = $lst[$i];\n\
    \        } else if ($lst[$i] < $second_smallest || $second_smallest == null) {\n\
    \            $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n     \
    \   }\n    }\n    return $min2;\n}\n", "    $min = min($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"<br>\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho\
    \ \"<br>\";\n$lst = array();\necho next_smallest($lst);\necho \"<br>\";\n$lst\
    \ = array(1, 1);\necho next_smallest($lst);\necho \"<br>\";", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $second = $min;\n            $min = $lst[$i];\n        } else if\
    \ ($lst[$i] < $second || $second === null) {\n            $second = $lst[$i];\n\
    \        }\n    }\n    return $second;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho\
    \ next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    $second_min = null;\n    foreach ($lst as $item) {\n        if ($item\
    \ == $min) {\n            $min_count++;\n        } elseif ($second_min == null\
    \ || $item < $second_min) {\n            $second_min = $item;\n        }\n   \
    \ }\n    if ($min_count > 1) {\n        return null;\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i] <\
    \ $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $lst = array_diff($lst, [$min]);\n    if (count($lst) == 0) {\n        return\
    \ null;\n    }\n    return min($lst);\n}\n", "    $min = min($lst);\n    $min_count\
    \ = 0;\n    foreach ($lst as $item) {\n        if ($item == $min) {\n        \
    \    $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $lst = array_diff($lst, array($min));\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second_min = null;\n    for ($i = 1; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] < $min) {\n            $second_min = $min;\n            $min =\
    \ $lst[$i];\n        } else if ($lst[$i] < $second_min || $second_min === null)\
    \ {\n            $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n\
    }\n", "    $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    $min2 = min($lst);\n    return $min2;\n}\n", "  $min = min($lst);\n  $lst\
    \ = array_diff($lst, array($min));\n  if (count($lst) == 0) {\n    return null;\n\
    \  }\n  return min($lst);\n}\n", "    $smallest = null;\n    $second_smallest\
    \ = null;\n    foreach ($lst as $item) {\n        if ($smallest === null || $item\
    \ < $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $item;\n        } else if ($second_smallest === null || $item < $second_smallest)\
    \ {\n            $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min\
    \ = min($lst);\n    $min2 = null;\n    foreach ($lst as $item) {\n        if ($item\
    \ > $min) {\n            if ($min2 === null || $item < $min2) {\n            \
    \    $min2 = $item;\n            }\n        }\n    }\n    return $min2;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  unset($lst[$min_index]);\n    return min($lst);\n}\n", "    $smallest = null;\n\
    \    $next_smallest = null;\n    foreach ($lst as $item) {\n        if ($smallest\
    \ === null || $item < $smallest) {\n            $next_smallest = $smallest;\n\
    \            $smallest = $item;\n        } else if ($next_smallest === null ||\
    \ $item < $next_smallest) {\n            $next_smallest = $item;\n        }\n\
    \    }\n    return $next_smallest;\n}\n", "    $min = min($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $smallest = null;\n   \
    \ $second_smallest = null;\n    foreach ($lst as $item) {\n        if ($smallest\
    \ === null) {\n            $smallest = $item;\n        } else if ($item < $smallest)\
    \ {\n            $second_smallest = $smallest;\n            $smallest = $item;\n\
    \        } else if ($second_smallest === null || $item < $second_smallest) {\n\
    \            $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    $min = min($lst);\n    $min_index = array_search($min, $lst);\n   \
    \ unset($lst[$min_index]);\n    $min2 = min($lst);\n    if ($min2 == $min) {\n\
    \        return null;\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4,\
    \ 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho\
    \ next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst) .\
    \ \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "    if\
    \ (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $min) {\n            $second_min = $min;\n            $min = $lst[$i];\n   \
    \     } else if ($lst[$i] < $second_min || $second_min === null) {\n         \
    \   $second_min = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n",
  "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $second = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ < $min) {\n            $second = $min;\n            $min = $lst[$i];\n     \
    \   } else if ($lst[$i] < $second || $second === null) {\n            $second\
    \ = $lst[$i];\n        }\n    }\n    return $second;\n}\n\n$lst = array(1, 2,\
    \ 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_count = 0;\n\
    \    foreach ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n  \
    \  $min_index = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n\
    \    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst, [$min]);\n\
    \    return min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  unset($lst[$min_index]);\n    return min($lst);\n}\n\n$lst = [1, 2, 3, 4, 5];\n\
    echo next_smallest($lst) . PHP_EOL;\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst)\
    \ . PHP_EOL;\n$lst = [];\necho next_smallest($lst) . PHP_EOL;\n$lst = [1, 1];\n\
    echo next_smallest($lst) . PHP_EOL;", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    $min = min($lst);\n    $min_count = 0;\n    $second_min = null;\n \
    \   foreach ($lst as $item) {\n        if ($item == $min) {\n            $min_count++;\n\
    \        } else if ($second_min == null || $item < $second_min) {\n          \
    \  $second_min = $item;\n        }\n    }\n    if ($min_count > 1) {\n       \
    \ return null;\n    }\n    return $second_min;\n}\n\n$lst = array(1, 2, 3, 4,\
    \ 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho\
    \ next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst) .\
    \ \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "    $min\
    \ = min($lst);\n    $min_count = 0;\n    foreach ($lst as $item) {\n        if\
    \ ($item == $min) {\n            $min_count++;\n        }\n    }\n    if ($min_count\
    \ > 1) {\n        return null;\n    }\n    $lst = array_diff($lst, array($min));\n\
    \    if (count($lst) == 0) {\n        return null;\n    }\n    return min($lst);\n\
    }\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst =\
    \ array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst)\
    \ . \"\\n\";", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i] <\
    \ $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = $lst[0];\n\
    \    $min2 = $lst[1];\n    for ($i = 1; $i < count($lst); $i++) {\n        if\
    \ ($lst[$i] < $min) {\n            $min2 = $min;\n            $min = $lst[$i];\n\
    \        } else if ($lst[$i] < $min2) {\n            $min2 = $lst[$i];\n     \
    \   }\n    }\n    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min === null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n\
    \    unset($lst[$min_index]);\n    return min($lst);\n}\n", "    $min = min($lst);\n\
    \    $min_count = 0;\n    foreach ($lst as $item) {\n        if ($item == $min)\
    \ {\n            $min_count++;\n        }\n    }\n    if ($min_count > 1) {\n\
    \        return null;\n    }\n    $min_index = array_search($min, $lst);\n   \
    \ $lst = array_slice($lst, $min_index + 1);\n    return min($lst);\n}\n", "  \
    \  $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    $min2 = min($lst);\n    if ($min == $min2) {\n        return null;\n    }\n\
    \    return $min2;\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $min = min($lst);\n    $min_index = array_search($min, $lst);\n  \
    \  unset($lst[$min_index]);\n    return min($lst);\n}\n", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n", "    if (count($lst) < 2) {\n        return null;\n\
    \    }\n    $smallest = $lst[0];\n    $second_smallest = null;\n    for ($i =\
    \ 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $smallest) {\n        \
    \    $second_smallest = $smallest;\n            $smallest = $lst[$i];\n      \
    \  } else if ($lst[$i] < $second_smallest || $second_smallest == null) {\n   \
    \         $second_smallest = $lst[$i];\n        }\n    }\n    return $second_smallest;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $next_smallest = null;\n    for ($i = 1; $i < count($lst); $i++)\
    \ {\n        if ($lst[$i] < $smallest) {\n            $next_smallest = $smallest;\n\
    \            $smallest = $lst[$i];\n        } else if ($lst[$i] < $next_smallest\
    \ || $next_smallest == null) {\n            $next_smallest = $lst[$i];\n     \
    \   }\n    }\n    return $next_smallest;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n   \
    \     return null;\n    }\n    $min = min($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    unset($lst[$min_index]);\n    return min($lst);\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(5, 1, 4,\
    \ 3, 2);\necho next_smallest($lst);\necho \"\\n\";\n$lst = array();\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst);\necho \"\\n\";",
  "    if (count($lst) < 2) return null;\n    $min = $lst[0];\n    $min2 = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $min2 = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $min2 || $min2 == null) {\n            $min2 = $lst[$i];\n        }\n    }\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = min($lst);\n    $min_count = 0;\n    foreach ($lst\
    \ as $item) {\n        if ($item == $min) {\n            $min_count++;\n     \
    \   }\n    }\n    if ($min_count > 1) {\n        return null;\n    }\n    $min_index\
    \ = array_search($min, $lst);\n    $lst = array_slice($lst, $min_index + 1);\n\
    \    return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    $lst = array_unique($lst);\n\
    \    sort($lst);\n    if (count($lst) < 2) {\n        return null;\n    }\n  \
    \  return $lst[1];\n}\n", "    $smallest = null;\n    $next_smallest = null;\n\
    \    foreach ($lst as $num) {\n        if ($smallest === null) {\n           \
    \ $smallest = $num;\n        } else if ($num < $smallest) {\n            $next_smallest\
    \ = $smallest;\n            $smallest = $num;\n        } else if ($next_smallest\
    \ === null || $num < $next_smallest) {\n            $next_smallest = $num;\n \
    \       }\n    }\n    return $next_smallest;\n}\n", "    if (count($lst) < 2)\
    \ {\n        return null;\n    }\n    $min = min($lst);\n    $lst = array_diff($lst,\
    \ [$min]);\n    return min($lst);\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst)\
    \ . PHP_EOL;\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst) . PHP_EOL;\n$lst\
    \ = [];\necho next_smallest($lst) . PHP_EOL;\n$lst = [1, 1];\necho next_smallest($lst)\
    \ . PHP_EOL;", "    $min = null;\n    $min2 = null;\n    foreach ($lst as $e)\
    \ {\n        if ($min === null) {\n            $min = $e;\n        } else if ($e\
    \ < $min) {\n            $min2 = $min;\n            $min = $e;\n        } else\
    \ if ($min2 === null || $e < $min2) {\n            $min2 = $e;\n        }\n  \
    \  }\n    return $min2;\n}\n", "  $len = count($lst);\n  if ($len < 2) {\n   \
    \ return null;\n  }\n  $min = $lst[0];\n  $second_min = null;\n  for ($i = 1;\
    \ $i < $len; $i++) {\n    if ($lst[$i] < $min) {\n      $second_min = $min;\n\
    \      $min = $lst[$i];\n    } else if ($lst[$i] < $second_min || $second_min\
    \ === null) {\n      $second_min = $lst[$i];\n    }\n  }\n  return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  $min2 = min($lst);\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst) . \"\\n\";", "    $min = min($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    unset($lst[$min_index]);\n    $min2 = min($lst);\n\
    \    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst);\n\
    echo \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst);\necho \"\
    \\n\";\n$lst = array();\necho next_smallest($lst);\necho \"\\n\";\n$lst = array(1,\
    \ 1);\necho next_smallest($lst);\necho \"\\n\";", "    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest =\
    \ null;\n    foreach ($lst as $num) {\n        if ($num < $smallest) {\n     \
    \       $second_smallest = $smallest;\n            $smallest = $num;\n       \
    \ } else if ($num < $second_smallest || $second_smallest === null) {\n       \
    \     $second_smallest = $num;\n        }\n    }\n    return $second_smallest;\n\
    }\n", "  $min = $lst[0];\n  $sec_min = null;\n  foreach ($lst as $num) {\n   \
    \ if ($num < $min) {\n      $sec_min = $min;\n      $min = $num;\n    } else if\
    \ ($num < $sec_min || $sec_min === null) {\n      $sec_min = $num;\n    }\n  }\n\
    \  return $sec_min;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $smallest = min($lst);\n    $second_smallest = null;\n   \
    \ foreach ($lst as $item) {\n        if ($item != $smallest) {\n            if\
    \ ($second_smallest == null || $item < $second_smallest) {\n                $second_smallest\
    \ = $item;\n            }\n        }\n    }\n    return $second_smallest;\n}\n\
    \n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5,\
    \ 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";\n", " \
    \   $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) < 2) {\n\
    \        return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min2 = null;\n\
    \    foreach ($lst as $el) {\n        if ($el > $min) {\n            if ($min2\
    \ === null || $el < $min2) {\n                $min2 = $el;\n            }\n  \
    \      }\n    }\n    return $min2;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $smallest = null;\n    $second_smallest\
    \ = null;\n    foreach ($lst as $item) {\n        if ($smallest === null) {\n\
    \            $smallest = $item;\n        } elseif ($item < $smallest) {\n    \
    \        $second_smallest = $smallest;\n            $smallest = $item;\n     \
    \   } elseif ($second_smallest === null) {\n            $second_smallest = $item;\n\
    \        } elseif ($item < $second_smallest) {\n            $second_smallest =\
    \ $item;\n        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";\n", " \
    \   $min = min($lst);\n    $min_count = 0;\n    foreach ($lst as $num) {\n   \
    \     if ($num == $min) {\n            $min_count++;\n        }\n    }\n    if\
    \ ($min_count > 1) {\n        return null;\n    }\n    $lst_without_min = array_diff($lst,\
    \ [$min]);\n    return min($lst_without_min);\n}\n\n$lst = [1, 2, 3, 4, 5];\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = [];\necho next_smallest($lst) . \"\\n\";\n$lst = [1, 1];\n\
    echo next_smallest($lst) . \"\\n\";", "  if (count($lst) < 2) {\n    return null;\n\
    \  }\n  $min = min($lst);\n  $min_index = array_search($min, $lst);\n  unset($lst[$min_index]);\n\
    \  $second_min = min($lst);\n  return $second_min;\n}\n\n$lst = array(1, 2, 3,\
    \ 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\n\
    echo next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ $lst = array_unique($lst);\n    sort($lst);\n    if (count($lst) < 2) {\n  \
    \      return null;\n    }\n    return $lst[1];\n}\n", "    if (count($lst) <\
    \ 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n\
    \    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n\
    \            $second_min = $min;\n            $min = $lst[$i];\n        } else\
    \ if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = $lst[0];\n    $second_min =\
    \ null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min)\
    \ {\n            $second_min = $min;\n            $min = $lst[$i];\n        }\
    \ else if ($lst[$i] < $second_min || $second_min === null) {\n            $second_min\
    \ = $lst[$i];\n        }\n    }\n    return $second_min;\n}\n\n$lst = array(1,\
    \ 2, 3, 4, 5);\necho next_smallest($lst) . \"\\n\";\n$lst = array(5, 1, 4, 3,\
    \ 2);\necho next_smallest($lst) . \"\\n\";\n$lst = array();\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(1, 1);\necho next_smallest($lst) . \"\\n\";", "   \
    \ if (count($lst) < 2) {\n        return null;\n    }\n    $min = min($lst);\n\
    \    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n  \
    \  return min($lst);\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min === null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n", "    if (count($lst) < 2) {\n        return\
    \ null;\n    }\n    $min = $lst[0];\n    $second_min = null;\n    for ($i = 1;\
    \ $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n            $second_min\
    \ = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i] < $second_min\
    \ || $second_min === null) {\n            $second_min = $lst[$i];\n        }\n\
    \    }\n    return $second_min;\n}\n", "    $min = min($lst);\n    $min_count\
    \ = count(array_keys($lst, $min));\n    if ($min_count > 1) {\n        return\
    \ null;\n    }\n    $min_index = array_search($min, $lst);\n    $lst[$min_index]\
    \ = PHP_INT_MAX;\n    return min($lst);\n}\n", "    if (count($lst) < 2) {\n \
    \       return null;\n    }\n    $min = $lst[0];\n    $sec_min = $lst[1];\n  \
    \  for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] < $min) {\n  \
    \          $sec_min = $min;\n            $min = $lst[$i];\n        } else if ($lst[$i]\
    \ < $sec_min) {\n            $sec_min = $lst[$i];\n        }\n    }\n    return\
    \ $sec_min;\n}\n", "    $smallest = null;\n    $next_smallest = null;\n    foreach\
    \ ($lst as $item) {\n        if ($smallest === null) {\n            $smallest\
    \ = $item;\n        } else if ($item < $smallest) {\n            $next_smallest\
    \ = $smallest;\n            $smallest = $item;\n        } else if ($next_smallest\
    \ === null || $item < $next_smallest) {\n            $next_smallest = $item;\n\
    \        }\n    }\n    return $next_smallest;\n}\n\nprint_r(next_smallest([1,\
    \ 2, 3, 4, 5]));\nprint_r(next_smallest([5, 1, 4, 3, 2]));\nprint_r(next_smallest([]));\n\
    print_r(next_smallest([1, 1]));", "    $lst = array_unique($lst);\n    sort($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    return $lst[1];\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $smallest\
    \ = $lst[0];\n    $second_smallest = null;\n    for ($i = 1; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] < $smallest) {\n            $second_smallest =\
    \ $smallest;\n            $smallest = $lst[$i];\n        } else if ($lst[$i] <\
    \ $second_smallest || $second_smallest == null) {\n            $second_smallest\
    \ = $lst[$i];\n        }\n    }\n    return $second_smallest;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $smallest = $lst[0];\n    $second_smallest\
    \ = null;\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i] <\
    \ $smallest) {\n            $second_smallest = $smallest;\n            $smallest\
    \ = $lst[$i];\n        } else if ($lst[$i] < $second_smallest || $second_smallest\
    \ == null) {\n            $second_smallest = $lst[$i];\n        }\n    }\n   \
    \ return $second_smallest;\n}\n\n$lst = array(1, 2, 3, 4, 5);\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = array(5, 1, 4, 3, 2);\necho next_smallest($lst) . \"\\n\"\
    ;\n$lst = array();\necho next_smallest($lst) . \"\\n\";\n$lst = array(1, 1);\n\
    echo next_smallest($lst) . \"\\n\";", "    $min = null;\n    $min2 = null;\n \
    \   foreach ($lst as $num) {\n        if ($min === null) {\n            $min =\
    \ $num;\n        } else if ($num < $min) {\n            $min2 = $min;\n      \
    \      $min = $num;\n        } else if ($min2 === null || $num < $min2) {\n  \
    \          $min2 = $num;\n        }\n    }\n    return $min2;\n}\n", "    if (count($lst)\
    \ < 2) {\n        return null;\n    }\n    $min = min($lst);\n    $min_count =\
    \ 0;\n    $second_min = null;\n    foreach ($lst as $val) {\n        if ($val\
    \ == $min) {\n            $min_count++;\n        } elseif ($second_min == null\
    \ || $val < $second_min) {\n            $second_min = $val;\n        }\n    }\n\
    \    if ($min_count > 1) {\n        return null;\n    }\n    return $second_min;\n\
    }\n", "    if (count($lst) < 2) {\n        return null;\n    }\n    $lst = array_unique($lst);\n\
    \    if (count($lst) < 2) {\n        return null;\n    }\n    sort($lst);\n  \
    \  return $lst[1];\n}\n", "    $min = min($lst);\n    $min_count = count(array_keys($lst,\
    \ $min));\n    if ($min_count > 1) {\n        return null;\n    }\n    $min_index\
    \ = array_search($min, $lst);\n    $lst[$min_index] = PHP_INT_MAX;\n    return\
    \ min($lst);\n}\n", "    if (count($lst) < 2) {\n        return null;\n    }\n\
    \    $min = min($lst);\n    $min_index = array_search($min, $lst);\n    unset($lst[$min_index]);\n\
    \    return min($lst);\n}\n\n$lst = [1, 2, 3, 4, 5];\necho next_smallest($lst)\
    \ . \"\\n\";\n$lst = [5, 1, 4, 3, 2];\necho next_smallest($lst) . \"\\n\";\n$lst\
    \ = [];\necho next_smallest($lst) . \"\\n\";\n$lst = [1, 1];\necho next_smallest($lst)\
    \ . \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_102_choose_num
results:
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else if ($x + 1 <= $y) {\n\t\
    \treturn $x + 1;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphce1xvgj.php:25\n\
    Stack trace:\n#0 /tmp/tmphce1xvgj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphce1xvgj.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n    $biggest_even = -1;\n    for ($i =\
    \ $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest_even\
    \ = $i;\n        }\n    }\n    return $biggest_even;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in the code here\n  if ($x % 2 == 0) {\n    return $x;\n\
    \  } else {\n    $x++;\n    return choose_num($x, $y);\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjnptfet.php:25\n\
    Stack trace:\n#0 /tmp/tmpkjnptfet.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkjnptfet.php\
    \ on line 25\n"
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$biggest = -1;\n\tif ($x > $y) {\n\t\t$temp = $x;\n\t\t$x = $y;\n\t\
    \t$y = $temp;\n\t}\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0) {\n\
    \t\t\t$biggest = $i;\n\t\t}\n\t}\n\treturn $biggest;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf9hna1jg.php:30\n\
    Stack trace:\n#0 /tmp/tmpf9hna1jg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf9hna1jg.php\
    \ on line 30\n"
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgasxtlgy.php:19\n\
    Stack trace:\n#0 /tmp/tmpgasxtlgy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgasxtlgy.php\
    \ on line 19\n"
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return choose_num($x\
    \ + 1, $y);\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3nknhnw.php:27\n\
    Stack trace:\n#0 /tmp/tmpk3nknhnw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk3nknhnw.php\
    \ on line 27\n"
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in this function\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd2a2kn9w.php:19\n\
    Stack trace:\n#0 /tmp/tmpd2a2kn9w.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpd2a2kn9w.php\
    \ on line 19\n"
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n    $result = -1;\n    if ($x %\
    \ 2 == 0) {\n        $result = $x;\n    } else {\n        $result = $x + 1;\n\
    \    }\n    if ($result > $y) {\n        $result = -1;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7z1ftdz.php:29\n\
    Stack trace:\n#0 /tmp/tmpq7z1ftdz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq7z1ftdz.php\
    \ on line 29\n"
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else if ($x % 2 == 1) {\n\t\
    \treturn $x + 1;\n\t} else if ($y % 2 == 0) {\n\t\treturn $y;\n\t} else if ($y\
    \ % 2 == 1) {\n\t\treturn $y - 1;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_b7sv7b4.php:29\n\
    Stack trace:\n#0 /tmp/tmp_b7sv7b4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_b7sv7b4.php\
    \ on line 29\n"
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Write your code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn8ta3zj1.php:19\n\
    Stack trace:\n#0 /tmp/tmpn8ta3zj1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpn8ta3zj1.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return\
    \ choose_num($x + 1, $y);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0zpunht.php:23\n\
    Stack trace:\n#0 /tmp/tmpg0zpunht.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg0zpunht.php\
    \ on line 23\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi29w_591.php:18\n\
    Stack trace:\n#0 /tmp/tmpi29w_591.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi29w_591.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else if ($x + 1 <= $y) {\n\t\
    \treturn $x + 1;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphce1xvgj.php:25\n\
    Stack trace:\n#0 /tmp/tmphce1xvgj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphce1xvgj.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Your code here!\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy0aum93v.php:18\n\
    Stack trace:\n#0 /tmp/tmpy0aum93v.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpy0aum93v.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        $x++;\n   \
    \     if ($x > $y) {\n            return -1;\n        } else {\n            return\
    \ $x;\n        }\n    }\n}\n\n$__fp = fopen(\"php://stdin\", \"r\");\n\nfscanf($__fp,\
    \ \"%d\", $_x);\nfscanf($__fp, \"%d\", $_y);\n$res = choose_num($_x, $_y);\nprint($res);\n\
    \nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3yvzjy07.php:39\n\
    Stack trace:\n#0 /tmp/tmp3yvzjy07.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp3yvzjy07.php\
    \ on line 39\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x % 2 ==\
    \ 1) {\n        $x++;\n        return $x;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp___1rtwf.php:23\n\
    Stack trace:\n#0 /tmp/tmp___1rtwf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp___1rtwf.php\
    \ on line 23\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else if ($x + 1 == $y) {\n\t\
    \treturn -1;\n\t} else {\n\t\treturn choose_num($x + 1, $y);\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpdeej88.php:25\n\
    Stack trace:\n#0 /tmp/tmpjpdeej88.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjpdeej88.php\
    \ on line 25\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// TODO: Fill in the code here\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkvp1kj2.php:19\n\
    Stack trace:\n#0 /tmp/tmpvkvp1kj2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpvkvp1kj2.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in this function\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlk3rcb7.php:18\n\
    Stack trace:\n#0 /tmp/tmpwlk3rcb7.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwlk3rcb7.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else {\n        $x = $x + 1;\n        return $x;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzo5wbd1.php:25\n\
    Stack trace:\n#0 /tmp/tmpbzo5wbd1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbzo5wbd1.php\
    \ on line 25\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            $max = $i;\n        }\n    }\n    return $max;\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Fill in the code here\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7m2zj2i0.php:18\n\
    Stack trace:\n#0 /tmp/tmp7m2zj2i0.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7m2zj2i0.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n  if ($x % 2\
    \ == 0) {\n    return $x;\n  } else if ($x + 1 <= $y) {\n    return $x + 1;\n\
    \  } else {\n    return -1;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4fwn4omf.php:29\n\
    Stack trace:\n#0 /tmp/tmp4fwn4omf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4fwn4omf.php\
    \ on line 29\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if($x%2==0){\n        return $x;\n    }\n    else{\n        $x++;\n     \
    \   return choose_num($x,$y);\n    }\n}\n\n$__fp = fopen(\"php://stdin\", \"r\"\
    );\n\nfscanf($__fp, \"%d\", $_x);\nfscanf($__fp, \"%d\", $_y);\n\n$res = choose_num($_x,\
    \ $_y);\necho $res;\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7g08zuz.php:37\n\
    Stack trace:\n#0 /tmp/tmph7g08zuz.php(47): test()\n#1 {main}\n  thrown in /tmp/tmph7g08zuz.php\
    \ on line 37\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x % 2 == 1 && $x\
    \ + 1 <= $y) {\n        return $x + 1;\n    } else {\n        return -1;\n   \
    \ }\n}\n\n$__fp = fopen(\"php://stdin\", \"r\");\n\nfscanf($__fp, \"%d\", $_x);\n\
    fscanf($__fp, \"%d\", $_y);\n\n$res = choose_num($_x, $_y);\nprint ($res);\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu4h9n88i.php:37\n\
    Stack trace:\n#0 /tmp/tmpu4h9n88i.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpu4h9n88i.php\
    \ on line 37\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else {\n\t\t$x++;\n\t\tif ($x\
    \ > $y) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn $x;\n\t\t}\n\t}\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g3ste69.php:28\n\
    Stack trace:\n#0 /tmp/tmp8g3ste69.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8g3ste69.php\
    \ on line 28\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60otqw5u.php:19\n\
    Stack trace:\n#0 /tmp/tmp60otqw5u.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp60otqw5u.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n    if ($x % 2 == 0) {\n        return $x;\n \
    \   } else if ($x + 1 <= $y && ($x + 1) % 2 == 0) {\n        return $x + 1;\n\
    \    } else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5bc5d0ne.php:26\n\
    Stack trace:\n#0 /tmp/tmp5bc5d0ne.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5bc5d0ne.php\
    \ on line 26\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    print $max;\n}\n\nchoose_num(12,\
    \ 15);\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1414\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaoeubxzg.php:30\n\
    Stack trace:\n#0 /tmp/tmpaoeubxzg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpaoeubxzg.php\
    \ on line 30\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n  $max = -1;\n\
    \  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      $max = $i;\n\
    \    }\n  }\n  print $max;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d8z3jrj.php:28\n\
    Stack trace:\n#0 /tmp/tmp_d8z3jrj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_d8z3jrj.php\
    \ on line 28\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x % 2 ==\
    \ 1) {\n        $x++;\n        return $x;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpih8e0r50.php:24\n\
    Stack trace:\n#0 /tmp/tmpih8e0r50.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpih8e0r50.php\
    \ on line 24\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n    $biggest = -1;\n    for ($i = $x; $i\
    \ <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest = $i;\n   \
    \     }\n    }\n    return $biggest;\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqtbycdfb.php:19\n\
    Stack trace:\n#0 /tmp/tmpqtbycdfb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqtbycdfb.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// TODO: Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysu1p0bi.php:19\n\
    Stack trace:\n#0 /tmp/tmpysu1p0bi.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpysu1p0bi.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu015hh26.php:19\n\
    Stack trace:\n#0 /tmp/tmpu015hh26.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu015hh26.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x > $y) {\n        return -1;\n    }\n    if ($x % 2 == 0) {\n     \
    \   return $x;\n    }\n    return choose_num($x + 1, $y);\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps60ekcw1.php:29\n\
    Stack trace:\n#0 /tmp/tmps60ekcw1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps60ekcw1.php\
    \ on line 29\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxg4e4lw.php:19\n\
    Stack trace:\n#0 /tmp/tmpkxg4e4lw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkxg4e4lw.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    $numbers = range($x, $y);\n \
    \   $even_numbers = array_filter($numbers, function($number) {\n        return\
    \ $number % 2 == 0;\n    });\n    if (count($even_numbers) == 0) {\n        return\
    \ -1;\n    }\n    return max($even_numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nafz38n.php:28\n\
    Stack trace:\n#0 /tmp/tmp7nafz38n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7nafz38n.php\
    \ on line 28\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcp7bzb7j.php:19\n\
    Stack trace:\n#0 /tmp/tmpcp7bzb7j.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcp7bzb7j.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n\t// To print results to the standard output\
    \ you can use print\n\t// Example:\n\t// print \"Hello world!\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsq3ni0wz.php:22\n\
    Stack trace:\n#0 /tmp/tmpsq3ni0wz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsq3ni0wz.php\
    \ on line 22\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n2ovl9y.php:18\n\
    Stack trace:\n#0 /tmp/tmp1n2ovl9y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1n2ovl9y.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60otqw5u.php:19\n\
    Stack trace:\n#0 /tmp/tmp60otqw5u.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp60otqw5u.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60otqw5u.php:19\n\
    Stack trace:\n#0 /tmp/tmp60otqw5u.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp60otqw5u.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n    $max = -1;\n    for ($i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            if ($i > $max) {\n\
    \                $max = $i;\n            }\n        }\n    }\n    return $max;\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefuo1mq3.php:19\n\
    Stack trace:\n#0 /tmp/tmpefuo1mq3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpefuo1mq3.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else if ($x + 1 <= $y) {\n\t\
    \treturn $x + 1;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphce1xvgj.php:25\n\
    Stack trace:\n#0 /tmp/tmphce1xvgj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphce1xvgj.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n  if ($x > $y)\
    \ {\n    $tmp = $x;\n    $x = $y;\n    $y = $tmp;\n  }\n  $result = -1;\n  for\
    \ ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      $result = $i;\n \
    \   }\n  }\n  print $result;\n}\n\nchoose_num(12, 15);\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1414\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpivwr1akv.php:35\n\
    Stack trace:\n#0 /tmp/tmpivwr1akv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpivwr1akv.php\
    \ on line 35\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan5rxmda.php:18\n\
    Stack trace:\n#0 /tmp/tmpan5rxmda.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpan5rxmda.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$biggest = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 ==\
    \ 0) {\n\t\t\t$biggest = $i;\n\t\t}\n\t}\n\treturn $biggest;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpno_ov6r9.php:21\n\
    Stack trace:\n#0 /tmp/tmpno_ov6r9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpno_ov6r9.php\
    \ on line 21\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi29w_591.php:18\n\
    Stack trace:\n#0 /tmp/tmpi29w_591.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi29w_591.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: implement this function\n    $biggest = -1;\n    for ($i\
    \ = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest =\
    \ $i;\n        }\n    }\n    return $biggest;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else if ($x % 2 == 1) {\n        $x++;\n        return $x;\n    }\
    \ else if ($y % 2 == 0) {\n        return $y;\n    } else if ($y % 2 == 1) {\n\
    \        $y--;\n        return $y;\n    } else {\n        return -1;\n    }\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq2aezgjl.php:31\n\
    Stack trace:\n#0 /tmp/tmpq2aezgjl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpq2aezgjl.php\
    \ on line 31\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $biggest = $i;\n        }\n    }\n    return $biggest;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgasxtlgy.php:19\n\
    Stack trace:\n#0 /tmp/tmpgasxtlgy.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgasxtlgy.php\
    \ on line 19\n"
  timestamp: 1659730238
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$biggest = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 ==\
    \ 0) {\n\t\t\t$biggest = $i;\n\t\t}\n\t}\n\treturn $biggest;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu015hh26.php:19\n\
    Stack trace:\n#0 /tmp/tmpu015hh26.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu015hh26.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in the code here\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkllzdb70.php:19\n\
    Stack trace:\n#0 /tmp/tmpkllzdb70.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkllzdb70.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest_even = -1;\n    for ($i = $x; $i <= $y; $i++) {\n      \
    \  if ($i % 2 == 0) {\n            $biggest_even = $i;\n        }\n    }\n   \
    \ return $biggest_even;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    print $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu40j0yp0.php:29\n\
    Stack trace:\n#0 /tmp/tmpu40j0yp0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu40j0yp0.php\
    \ on line 29\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <= $y) {\n\
    \        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2wnejrk.php:29\n\
    Stack trace:\n#0 /tmp/tmpl2wnejrk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpl2wnejrk.php\
    \ on line 29\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18qm0iil.php:18\n\
    Stack trace:\n#0 /tmp/tmp18qm0iil.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp18qm0iil.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60otqw5u.php:19\n\
    Stack trace:\n#0 /tmp/tmp60otqw5u.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp60otqw5u.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n    $max = -1;\n    for ($i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            if ($i > $max) {\n\
    \                $max = $i;\n            }\n        }\n    }\n    return $max;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8xbmjcs.php:18\n\
    Stack trace:\n#0 /tmp/tmpe8xbmjcs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe8xbmjcs.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 ==\
    \ $y) {\n        return -1;\n    } else {\n        return choose_num($x + 1, $y);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqo21bf1h.php:25\n\
    Stack trace:\n#0 /tmp/tmpqo21bf1h.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqo21bf1h.php\
    \ on line 25\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qtg4p1l.php:18\n\
    Stack trace:\n#0 /tmp/tmp7qtg4p1l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7qtg4p1l.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$i = $x;\n\twhile ($i <= $y) {\n\t\tif ($i % 2 == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i++;\n\t}\n\treturn -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt56_n2nc.php:26\n\
    Stack trace:\n#0 /tmp/tmpt56_n2nc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpt56_n2nc.php\
    \ on line 26\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddpflwa_.php:19\n\
    Stack trace:\n#0 /tmp/tmpddpflwa_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpddpflwa_.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return\
    \ choose_num($x + 1, $y);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0zpunht.php:23\n\
    Stack trace:\n#0 /tmp/tmpg0zpunht.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg0zpunht.php\
    \ on line 23\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n2ovl9y.php:18\n\
    Stack trace:\n#0 /tmp/tmp1n2ovl9y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1n2ovl9y.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$even = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0)\
    \ {\n\t\t\t$even = $i;\n\t\t}\n\t}\n\treturn $even;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0 && $i > $biggest) {\n            $biggest = $i;\n        }\n    }\n\
    \    return $biggest;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplx44sc_i.php:19\n\
    Stack trace:\n#0 /tmp/tmplx44sc_i.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplx44sc_i.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n    if ($x % 2 == 0) {\n        return $x;\n \
    \   } else if ($x % 2 == 1) {\n        $x = $x + 1;\n        return $x;\n    }\
    \ else if ($x % 2 == 0 && $y % 2 == 0) {\n        return $y;\n    } else if ($x\
    \ % 2 == 0 && $y % 2 == 1) {\n        $y = $y - 1;\n        return $y;\n    }\
    \ else if ($x % 2 == 1 && $y % 2 == 0) {\n        $x = $x + 1;\n        return\
    \ $x;\n    } else if ($x % 2 == 1 && $y % 2 == 1) {\n        $x = $x + 1;\n  \
    \      $y = $y - 1;\n        return $y;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbe89g95z.php:37\n\
    Stack trace:\n#0 /tmp/tmpbe89g95z.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbe89g95z.php\
    \ on line 37\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi29w_591.php:18\n\
    Stack trace:\n#0 /tmp/tmpi29w_591.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi29w_591.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n    if ($x % 2 == 0) {\n        return $x;\n \
    \   } else if ($x % 2 == 1) {\n        $x++;\n        return $x;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek4hynir.php:25\n\
    Stack trace:\n#0 /tmp/tmpek4hynir.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpek4hynir.php\
    \ on line 25\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 ==\
    \ $y) {\n        return -1;\n    } else {\n        return choose_num($x + 1, $y);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02bimg40.php:24\n\
    Stack trace:\n#0 /tmp/tmp02bimg40.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp02bimg40.php\
    \ on line 24\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    } else {\n        return $x + 1;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uvey_rc.php:24\n\
    Stack trace:\n#0 /tmp/tmp7uvey_rc.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7uvey_rc.php\
    \ on line 24\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu015hh26.php:19\n\
    Stack trace:\n#0 /tmp/tmpu015hh26.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu015hh26.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi29w_591.php:18\n\
    Stack trace:\n#0 /tmp/tmpi29w_591.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi29w_591.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n2ovl9y.php:18\n\
    Stack trace:\n#0 /tmp/tmp1n2ovl9y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1n2ovl9y.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if($x%2==0)\n    {\n        if($y%2==0)\n        {\n            if($x>$y)\n\
    \            {\n                return $x;\n            }\n            else\n\
    \            {\n                return $y;\n            }\n        }\n       \
    \ else\n        {\n            return $x;\n        }\n    }\n    else\n    {\n\
    \        if($y%2==0)\n        {\n            return $y;\n        }\n        else\n\
    \        {\n            return -1;\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1b37o2x.php:51\n\
    Stack trace:\n#0 /tmp/tmpc1b37o2x.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpc1b37o2x.php\
    \ on line 51\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Write your code here\n    // Hint: You can use the modulo\
    \ operator to check if a number is even.\n    // For example:\n    // >>> $x =\
    \ 10\n    // >>> $x % 2\n    // 0\n    // >>> $x = 11\n    // >>> $x % 2\n   \
    \ // 1\n    // >>> $x = 12\n    // >>> $x % 2\n    // 0\n    // >>> $x = 13\n\
    \    // >>> $x % 2\n    // 1\n    // ...\n    // TODO: Write your code here\n\
    \    // Hint: You can use the modulo operator to check if a number is even.\n\
    \    // For example:\n    // >>> $x = 10\n    // >>> $x % 2\n    // 0\n    //\
    \ >>> $x = 11\n    // >>> $x % 2\n    // 1\n    // >>> $x = 12\n    // >>> $x\
    \ % 2\n    // 0\n    // >>> $x = 13\n    // >>> $x % 2\n    // 1\n    // ...\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return $x +\
    \ 1;\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeo2m4zxm.php:55\n\
    Stack trace:\n#0 /tmp/tmpeo2m4zxm.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpeo2m4zxm.php\
    \ on line 55\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$max = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0\
    \ && $i > $max) {\n\t\t\t$max = $i;\n\t\t}\n\t}\n\treturn $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n    if ($x % 2 == 0) {\n      \
    \  return $x;\n    } else if ($x % 2 != 0 && $y % 2 == 0) {\n        return $y;\n\
    \    } else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnngu165q.php:26\n\
    Stack trace:\n#0 /tmp/tmpnngu165q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnngu165q.php\
    \ on line 26\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu015hh26.php:19\n\
    Stack trace:\n#0 /tmp/tmpu015hh26.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu015hh26.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($x % 2 == 0) {\n\
    \        return $x;\n    }\n    return choose_num($x + 1, $y);\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx9rruu1.php:25\n\
    Stack trace:\n#0 /tmp/tmpjx9rruu1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjx9rruu1.php\
    \ on line 25\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n    $even_numbers = array();\n  \
    \  for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            array_push($even_numbers,\
    \ $i);\n        }\n    }\n    if (count($even_numbers) == 0) {\n        return\
    \ -1;\n    } else {\n        return max($even_numbers);\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0)\
    \ {\n            $max = $i;\n        }\n    }\n    print $max;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu40j0yp0.php:29\n\
    Stack trace:\n#0 /tmp/tmpu40j0yp0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu40j0yp0.php\
    \ on line 29\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8z9oe32.php:24\n\
    Stack trace:\n#0 /tmp/tmpe8z9oe32.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe8z9oe32.php\
    \ on line 24\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi29w_591.php:18\n\
    Stack trace:\n#0 /tmp/tmpi29w_591.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi29w_591.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result = $i;\n        }\n    }\n    print $result;\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_md5_8yi.php:29\n\
    Stack trace:\n#0 /tmp/tmp_md5_8yi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_md5_8yi.php\
    \ on line 29\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmrdk44dd.php:19\n\
    Stack trace:\n#0 /tmp/tmpmrdk44dd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmrdk44dd.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8z9oe32.php:24\n\
    Stack trace:\n#0 /tmp/tmpe8z9oe32.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe8z9oe32.php\
    \ on line 24\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi29w_591.php:18\n\
    Stack trace:\n#0 /tmp/tmpi29w_591.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi29w_591.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n2ovl9y.php:18\n\
    Stack trace:\n#0 /tmp/tmp1n2ovl9y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1n2ovl9y.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qtg4p1l.php:18\n\
    Stack trace:\n#0 /tmp/tmp7qtg4p1l.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7qtg4p1l.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8z9oe32.php:24\n\
    Stack trace:\n#0 /tmp/tmpe8z9oe32.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpe8z9oe32.php\
    \ on line 24\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n2ovl9y.php:18\n\
    Stack trace:\n#0 /tmp/tmp1n2ovl9y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1n2ovl9y.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y\
    \ = $temp;\n    }\n    for ($i = $y; $i >= $x; $i--) {\n        if ($i % 2 ==\
    \ 0) {\n            return $i;\n        }\n    }\n    return -1;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslrm8wel.php:29\n\
    Stack trace:\n#0 /tmp/tmpslrm8wel.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpslrm8wel.php\
    \ on line 29\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n    if ($x % 2 == 0) {\n        return $x;\n \
    \   } else if ($x % 2 == 1) {\n        $x = $x + 1;\n        return $x;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtiafbtf.php:25\n\
    Stack trace:\n#0 /tmp/tmpdtiafbtf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdtiafbtf.php\
    \ on line 25\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8xbmjcs.php:18\n\
    Stack trace:\n#0 /tmp/tmpe8xbmjcs.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe8xbmjcs.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return\
    \ choose_num($x + 1, $y);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0zpunht.php:23\n\
    Stack trace:\n#0 /tmp/tmpg0zpunht.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg0zpunht.php\
    \ on line 23\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // write your code here\n    // please return a number\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmduq0_e.php:19\n\
    Stack trace:\n#0 /tmp/tmpzmduq0_e.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzmduq0_e.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in the code here\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n2ovl9y.php:18\n\
    Stack trace:\n#0 /tmp/tmp1n2ovl9y.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1n2ovl9y.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Fill in the code here\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkllzdb70.php:19\n\
    Stack trace:\n#0 /tmp/tmpkllzdb70.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpkllzdb70.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Fill in this function\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    }\n    else if ($x % 2 != 0) {\n        $x = $x + 1;\n        return\
    \ $x;\n    }\n    else if ($x % 2 != 0 && $y % 2 != 0) {\n        return -1;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzllkesz.php:28\n\
    Stack trace:\n#0 /tmp/tmpvzllkesz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvzllkesz.php\
    \ on line 28\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59v_epfq.php:18\n\
    Stack trace:\n#0 /tmp/tmp59v_epfq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp59v_epfq.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    return $x;\n  } else if ($x + 1 <= $y) {\n\
    \    return $x + 1;\n  } else {\n    return -1;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6aodzf_m.php:25\n\
    Stack trace:\n#0 /tmp/tmp6aodzf_m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6aodzf_m.php\
    \ on line 25\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // your code goes here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzy2hjovr.php:19\n\
    Stack trace:\n#0 /tmp/tmpzy2hjovr.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzy2hjovr.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmrdk44dd.php:19\n\
    Stack trace:\n#0 /tmp/tmpmrdk44dd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmrdk44dd.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\treturn $x;\n\t} else {\n\t\t$x++;\n\t\tif ($x\
    \ > $y) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn $x;\n\t\t}\n\t}\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct8yxr7y.php:27\n\
    Stack trace:\n#0 /tmp/tmpct8yxr7y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpct8yxr7y.php\
    \ on line 27\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp98dv4ret.php:18\n\
    Stack trace:\n#0 /tmp/tmp98dv4ret.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp98dv4ret.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $even = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $even = $i;\n        }\n    }\n    return $even;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return\
    \ choose_num($x + 1, $y);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0zpunht.php:23\n\
    Stack trace:\n#0 /tmp/tmpg0zpunht.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg0zpunht.php\
    \ on line 23\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $even_numbers = array();\n    for ($i = $x; $i <= $y; $i++) {\n \
    \       if ($i % 2 == 0) {\n            array_push($even_numbers, $i);\n     \
    \   }\n    }\n    if (count($even_numbers) > 0) {\n        return max($even_numbers);\n\
    \    } else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Implement this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpefuo1mq3.php:19\n\
    Stack trace:\n#0 /tmp/tmpefuo1mq3.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpefuo1mq3.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $result = -1;\n    if ($x > $y) {\n        $temp = $x;\n        $x\
    \ = $y;\n        $y = $temp;\n    }\n    for ($i = $x; $i <= $y; $i++) {\n   \
    \     if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn78nbm9s.php:31\n\
    Stack trace:\n#0 /tmp/tmpn78nbm9s.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpn78nbm9s.php\
    \ on line 31\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu015hh26.php:19\n\
    Stack trace:\n#0 /tmp/tmpu015hh26.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu015hh26.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb4xiagz.php:18\n\
    Stack trace:\n#0 /tmp/tmprb4xiagz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprb4xiagz.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n  if ($x % 2\
    \ == 0) {\n    return $x;\n  } else {\n    $x++;\n    if ($x > $y) {\n      return\
    \ -1;\n    } else {\n      return $x;\n    }\n  }\n}\n\n$__fp = fopen(\"php://stdin\"\
    , \"r\");\n\nfscanf($__fp, \"%d\", $_x);\nfscanf($__fp, \"%d\", $_y);\n$res =\
    \ choose_num($_x, $_y);\nprint($res);\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkft4qhgg.php:39\n\
    Stack trace:\n#0 /tmp/tmpkft4qhgg.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkft4qhgg.php\
    \ on line 39\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n    $biggest = -1;\n    for ($i = $x; $i\
    \ <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $biggest = $i;\n   \
    \     }\n    }\n    return $biggest;\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan5rxmda.php:18\n\
    Stack trace:\n#0 /tmp/tmpan5rxmda.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpan5rxmda.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36839lsd.php:18\n\
    Stack trace:\n#0 /tmp/tmp36839lsd.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp36839lsd.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu015hh26.php:19\n\
    Stack trace:\n#0 /tmp/tmpu015hh26.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu015hh26.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $biggest = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 ==\
    \ 0) {\n      $biggest = $i;\n    }\n  }\n  return $biggest;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n    if ($x % 2 == 0) {\n        return $x;\n\
    \    } else {\n        return $x + 1;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdklc6t0j.php:24\n\
    Stack trace:\n#0 /tmp/tmpdklc6t0j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdklc6t0j.php\
    \ on line 24\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n    if ($x % 2 == 0) {\n        return $x;\n \
    \   } else if ($x % 2 == 1) {\n        return $x + 1;\n    } else if ($y % 2 ==\
    \ 0) {\n        return $y;\n    } else if ($y % 2 == 1) {\n        return $y -\
    \ 1;\n    } else {\n        return -1;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprf5zn9de.php:30\n\
    Stack trace:\n#0 /tmp/tmprf5zn9de.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprf5zn9de.php\
    \ on line 30\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2trbi34.php:19\n\
    Stack trace:\n#0 /tmp/tmpv2trbi34.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv2trbi34.php\
    \ on line 19\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddpflwa_.php:19\n\
    Stack trace:\n#0 /tmp/tmpddpflwa_.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpddpflwa_.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Your code here!\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu015hh26.php:19\n\
    Stack trace:\n#0 /tmp/tmpu015hh26.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpu015hh26.php\
    \ on line 19\n"
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfb6wbrn.php:21\n\
    Stack trace:\n#0 /tmp/tmpqfb6wbrn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqfb6wbrn.php\
    \ on line 21\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan5rxmda.php:18\n\
    Stack trace:\n#0 /tmp/tmpan5rxmda.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpan5rxmda.php\
    \ on line 18\n"
  timestamp: 1659793729
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i %\
    \ 2 == 0 && $i > $max) {\n            $max = $i;\n        }\n    }\n    return\
    \ $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659793729
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else if ($x + 1 <=\
    \ $y) {\n        return $x + 1;\n    } else {\n        return -1;\n    }\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykvjvtqf.php:25\n\
    Stack trace:\n#0 /tmp/tmpykvjvtqf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpykvjvtqf.php\
    \ on line 25\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_iqu642.php:18\n\
    Stack trace:\n#0 /tmp/tmpm_iqu642.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpm_iqu642.php\
    \ on line 18\n"
  timestamp: 1659730194

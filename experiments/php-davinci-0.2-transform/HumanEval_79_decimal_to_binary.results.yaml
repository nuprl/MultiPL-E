language: php
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "db1111db\ndb000001db\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpc1_0mvqg.php:28\nStack trace:\n#0 /tmp/tmpc1_0mvqg.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpc1_0mvqg.php on line 28\n"
  timestamp: 1659730665
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659730665
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = 'db' . $binary . 'db';\n \
    \   return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32) . \"\\n\"\
    ;\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "db1111db\ndb000001db\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp1fhoetmw.php:29\nStack trace:\n#0 /tmp/tmp1fhoetmw.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1fhoetmw.php on line 29\n"
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111bddb\n100000bddb\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp63tgfpxh.php:28\nStack trace:\n#0 /tmp/tmp63tgfpxh.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmp63tgfpxh.php on line 28\n"
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\".$binary.\"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\".$binary.\"db\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = 'db' . $binary . 'db';\n \
    \   return $binary;\n}\necho decimal_to_binary(15);\necho \"\\n\";\necho decimal_to_binary(32);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = 'db' . $binary . 'db';\n \
    \   return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = 'db' . $binary . 'db';\n \
    \   return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\".$binary.\"db\";\n \
    \   return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111bddb\n100000bddb\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpeat19ykh.php:27\nStack trace:\n#0 /tmp/tmpeat19ykh.php(33): test()\n\
    #1 {main}\n  thrown in /tmp/tmpeat19ykh.php on line 27\n"
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\".$binary.\"db\";\n \
    \   return $binary;\n}\necho decimal_to_binary(15);\necho \"\\n\";\necho decimal_to_binary(32);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\".$binary.\"db\";\n \
    \   return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while($decimal > 0) {\n    $binary .= $decimal % 2;\n\
    \    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek059exq.php:26\n\
    Stack trace:\n#0 /tmp/tmpek059exq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpek059exq.php\
    \ on line 26\n"
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "db1111db\ndb000001db\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpc1_0mvqg.php:28\nStack trace:\n#0 /tmp/tmpc1_0mvqg.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpc1_0mvqg.php on line 28\n"
  timestamp: 1659730665
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n\t$binary = decbin($decimal);\n\t$binary = \"db\" . $binary . \"db\";\n\t\
    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db$binary\" . \"db\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n\t$binary = \"db\";\n\twhile ($decimal > 0) {\n\t\t$binary .= $decimal %\
    \ 2;\n\t\t$decimal = floor($decimal / 2);\n\t}\n\treturn strrev($binary) . \"\
    db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcr369hqy.php:26\n\
    Stack trace:\n#0 /tmp/tmpcr369hqy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcr369hqy.php\
    \ on line 26\n"
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph49o2rrs.php:26\n\
    Stack trace:\n#0 /tmp/tmph49o2rrs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmph49o2rrs.php\
    \ on line 26\n"
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\".$binary.\"db\";\n  return\
    \ $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db$binary\" . \"db\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\".$binary.\"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  $binary = \"db\" . $binary . \"db\";\n \
    \ return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = \"db\";\n    while ($decimal > 0) {\n        $binary .= $decimal\
    \ % 2;\n        $decimal = floor($decimal / 2);\n    }\n    return strrev($binary)\
    \ . \"db\";\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgj56k5bv.php:26\n\
    Stack trace:\n#0 /tmp/tmpgj56k5bv.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgj56k5bv.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    return \"db\" . $binary . \"db\";\n\
    }\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = \"db\";\n  while ($decimal > 0) {\n    $binary .= $decimal %\
    \ 2;\n    $decimal = floor($decimal / 2);\n  }\n  return $binary . \"db\";\n}\n\
    \nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1d9fhl37.php:26\n\
    Stack trace:\n#0 /tmp/tmp1d9fhl37.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1d9fhl37.php\
    \ on line 26\n"
  timestamp: 1659730626
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n  $binary = decbin($decimal);\n  return \"db\" . $binary . \"db\";\n}\n\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\necho decimal_to_binary(15) . \"\\n\";\necho decimal_to_binary(32)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1659798154
- exit_code: 0
  program: "<?php\n// You will be given a number in decimal form and your task is\
    \ to convert it to\n// binary format. The function should return a string, with\
    \ each character representing a binary\n// number. Each character in the string\
    \ will be '0' or '1'.\n// There will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\n// The extra characters are there\
    \ to help with the format.\n// Examples:\n// >>> decimal_to_binary(15)\n// \"\
    db1111db\"\n// >>> decimal_to_binary(32)\n// \"db100000db\"\nfunction decimal_to_binary($decimal)\
    \ {\n    $binary = decbin($decimal);\n    $binary = \"db\" . $binary . \"db\"\
    ;\n    return $binary;\n}\n\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730626

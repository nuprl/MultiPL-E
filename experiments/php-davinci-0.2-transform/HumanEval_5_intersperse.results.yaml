language: php
name: HumanEval_5_intersperse
results:
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) {\n    return $numbers;\n  } else\
    \ {\n    return array_merge(array($numbers[0]), array_fill(0, count($numbers)\
    \ - 1, $delimeter), array_slice($numbers, 1));\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqu4dyr5.php:21\n\
    Stack trace:\n#0 /tmp/tmpzqu4dyr5.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpzqu4dyr5.php\
    \ on line 21\n"
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array();\n    $result[] = $numbers[0];\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  $i = 0;\n  foreach ($numbers as $number)\
    \ {\n    $result[] = $number;\n    if ($i < count($numbers) - 1) {\n      $result[]\
    \ = $delimeter;\n    }\n    $i++;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $i = 0;\n    foreach ($numbers as\
    \ $number) {\n        if ($i > 0) {\n            $result[] = $delimeter;\n   \
    \     }\n        $result[] = $number;\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) {\n    return $numbers;\n  }\n  $result\
    \ = array($numbers[0]);\n  for ($i = 1; $i < count($numbers); $i++) {\n    $result[]\
    \ = $delimeter;\n    $result[] = $numbers[$i];\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   }\n    $result = array($numbers[0]);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach ($numbers as $number) {\n   \
    \ $result[] = $number;\n    $result[] = $delimeter;\n  }\n  array_pop($result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input list `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730288

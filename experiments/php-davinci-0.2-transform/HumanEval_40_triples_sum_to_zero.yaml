name: HumanEval_40_triples_sum_to_zero
language: php
prompt: "<?php\n// triples_sum_to_zero takes a list of integers as an input.\n// it\
  \ returns True if there are three distinct elements in the list that\n// sum to\
  \ zero, and False otherwise.\n// >>> triples_sum_to_zero(array(1, 3, 5, 0))\n//\
  \ false\n// >>> triples_sum_to_zero(array(1, 3, -2, 1))\n// true\n// >>> triples_sum_to_zero(array(1,\
  \ 2, 3, 7))\n// false\n// >>> triples_sum_to_zero(array(2, 4, -5, 3, 9, 7))\n//\
  \ true\n// >>> triples_sum_to_zero(array(1))\n// false\nfunction triples_sum_to_zero($l)\
  \ {\n"
tests: "function candidate(...$args) {\n    return triples_sum_to_zero(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, 5, -1))\
  \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 3, -2, 1)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 5, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
  \ 4, -5, 3, 9, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n \
  \   if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(100, 3, 5, -100)) !== false) { throw new\
  \ Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\n", "  $n = count($l);\n  if ($n < 3) {\n    return false;\n  }\n\
    \  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n   \
    \   for ($k = $j + 1; $k < $n; $k++) {\n        if ($l[$i] + $l[$j] + $l[$k] ==\
    \ 0) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n", "\t$n = count($l);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i +\
    \ 1; $j < $n; $j++) {\n\t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif ($l[$i]\
    \ + $l[$j] + $l[$k] == 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn false;\n}\n", "  $n = count($l);\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    for ($j = $i + 1; $j < $n; $j++) {\n      for ($k = $j + 1; $k < $n;\
    \ $k++) {\n        if ($l[$i] + $l[$j] + $l[$k] == 0) {\n          return true;\n\
    \        }\n      }\n    }\n  }\n  return false;\n}\n", "    // your code here\n\
    \    $count = count($l);\n    if ($count < 3) {\n        return false;\n    }\n\
    \    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count;\
    \ $j++) {\n            for ($k = $j + 1; $k < $count; $k++) {\n              \
    \  if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return true;\n  \
    \              }\n            }\n        }\n    }\n    return false;\n}\n", " \
    \   $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n      \
    \          if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "  $count = count($l);\n  if ($count < 3) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $count; $i++) {\n    for ($j = $i + 1; $j < $count; $j++) {\n      for\
    \ ($k = $j + 1; $k < $count; $k++) {\n        if ($l[$i] + $l[$j] + $l[$k] ==\
    \ 0) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n\
    }\n", "    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return\
    \ True;\n                }\n            }\n        }\n    }\n    return False;\n\
    }\n", "  // TODO: implement me!\n  return false;\n}\n", "    $n = count($l);\n\
    \    if ($n < 3) {\n        return false;\n    }\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n   \
    \                 return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n", "\t$result = false;\n\t$len = count($l);\n\t\
    for ($i = 0; $i < $len; $i++) {\n\t\tfor ($j = $i + 1; $j < $len; $j++) {\n\t\t\
    \tfor ($k = $j + 1; $k < $len; $k++) {\n\t\t\t\tif ($l[$i] + $l[$j] + $l[$k] ==\
    \ 0) {\n\t\t\t\t\t$result = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n    }\n    return false;\n\
    }\n", "  // your code here\n}\n", "\t$result = false;\n\t$n = count($l);\n\tfor\
    \ ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tfor\
    \ ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif ($l[$i] + $l[$j] + $l[$k] == 0) {\n\
    \t\t\t\t\t$result = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n", "    if (count($l) < 3) {\n        return false;\n    }\n    for ($i = 0;\
    \ $i < count($l) - 2; $i++) {\n        for ($j = $i + 1; $j < count($l) - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < count($l); $k++) {\n                if\
    \ ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return true;\n      \
    \          }\n            }\n        }\n    }\n    return false;\n}\n", "    $n\
    \ = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n            \
    \    if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "    // your code here\n    $count = count($l);\n    if ($count < 3) {\n       \
    \ return false;\n    }\n    for ($i = 0; $i < $count - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count - 1; $j++) {\n            for ($k = $j + 1; $k < $count;\
    \ $k++) {\n                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n            \
    \        return true;\n                }\n            }\n        }\n    }\n  \
    \  return false;\n}\n", "  // your code here\n}\n", "    $n = count($l);\n   \
    \ if ($n < 3) {\n        return false;\n    }\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n   \
    \                 return true;\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n", "\t$count = count($l);\n\tif ($count < 3) {\n\
    \t\treturn false;\n\t}\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $count; $j++) {\n\t\t\tfor ($k = $j + 1; $k < $count; $k++) {\n\t\t\
    \t\tif ($l[$i] + $l[$j] + $l[$k] == 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

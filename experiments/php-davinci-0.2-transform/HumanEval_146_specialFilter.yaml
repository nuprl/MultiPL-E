name: HumanEval_146_specialFilter
language: php
prompt: "<?php\n// Write a function that takes an array of numbers as input and returns\
  \ \n// the number of elements in the array that are greater than 10 and both \n\
  // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
  // >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
  \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n"
tests: "function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !==\
  \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2,\
  \ -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
  \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n \
  \   if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    $count = 0;\n    foreach ($nums as $num) {\n        if ($num >\
    \ 10 && $num % 2 == 1 && $num % 10 == 1) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n", "\t$count = 0;\n\tforeach ($nums as $num) {\n\
    \t\tif ($num > 10) {\n\t\t\t$first = substr($num, 0, 1);\n\t\t\t$last = substr($num,\
    \ -1);\n\t\t\tif ($first % 2 != 0 && $last % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $count;\n}\n", "\t$count = 0;\n\tforeach ($nums as $num)\
    \ {\n\t\tif ($num > 10) {\n\t\t\t$first = $num % 10;\n\t\t\t$last = $num / 10;\n\
    \t\t\tif ($first % 2 != 0 && $last % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $count;\n}\n", "    $count = 0;\n    foreach ($nums as $num)\
    \ {\n        if ($num > 10 && $num % 2 != 0 && $num % 10 != 0) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n", "\t$count = 0;\n\tforeach\
    \ ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 != 0 && $num % 10 != 0) {\n\
    \t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $count = 0;\n    foreach\
    \ ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && $num % 10 != 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n", "\t$count\
    \ = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 != 0 && $num\
    \ % 10 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "\t$count\
    \ = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$first = substr($num,\
    \ 0, 1);\n\t\t\t$last = substr($num, -1);\n\t\t\tif ($first % 2 != 0 && $last\
    \ % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n",
  "  $count = 0;\n  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 != 0\
    \ && $num % 10 != 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n", " \
    \   $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num\
    \ % 2 != 0 && $num % 10 != 0) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n", "    $count = 0;\n    foreach ($nums as $num) {\n    \
    \    if ($num > 10) {\n            $first = substr($num, 0, 1);\n            $last\
    \ = substr($num, -1);\n            if ($first % 2 != 0 && $last % 2 != 0) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\n", "    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 &&\
    \ $num % 2 == 1 && $num % 10 == 1) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n", "    $count = 0;\n    foreach ($nums as $num) {\n \
    \       if ($num > 10) {\n            $firstDigit = substr($num, 0, 1);\n    \
    \        $lastDigit = substr($num, -1);\n            if ($firstDigit % 2 != 0\
    \ && $lastDigit % 2 != 0) {\n                $count++;\n            }\n      \
    \  }\n    }\n    return $count;\n}\n", "    $count = 0;\n    foreach ($nums as\
    \ $num) {\n        if ($num > 10 && $num % 2 != 0 && $num % 10 != 0) {\n     \
    \       $count++;\n        }\n    }\n    return $count;\n}\n", "\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 != 0 && $num % 5 !=\
    \ 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && $num\
    \ % 10 != 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums);\necho \"\\n\"\
    ;\n$nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums);\necho \"\
    \\n\";", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num\
    \ % 2 != 0 && $num % 5 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t\
    $firstDigit = $num % 10;\n\t\t\t$lastDigit = $num / 10;\n\t\t\t$lastDigit = (int)$lastDigit;\n\
    \t\t\t$lastDigit = $lastDigit % 10;\n\t\t\tif ($firstDigit % 2 != 0 && $lastDigit\
    \ % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\n\
    $nums = array(15, -73, 14, -15);\necho specialFilter($nums);\necho \"\\n\";\n\
    $nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums);\necho \"\\\
    n\";", "\t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num\
    \ % 2 != 0 && $num % 10 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\necho specialFilter(array(15, -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"\\n\";", "\t$count = 0;\n\tforeach ($nums as\
    \ $num) {\n\t\tif ($num > 10 && $num % 2 == 1 && ($num % 10) % 2 == 1) {\n\t\t\
    \t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_26_remove_duplicates
language: php
prompt: "<?php\n// From a list of integers, remove all elements that occur more than\
  \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates(array(1,\
  \ 2, 3, 2, 4))\n// array(1, 3, 4)\nfunction remove_duplicates($numbers) {\n"
tests: "function candidate(...$args) {\n    return remove_duplicates(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
  \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $result = array();\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n",
  "    $numbers = array_unique($numbers);\n    return $numbers;\n}\n", "    $unique_numbers\
    \ = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique_numbers)) {\n            $unique_numbers[] = $number;\n        }\n \
    \   }\n    return $unique_numbers;\n}\n", "\t$result = array();\n\tforeach ($numbers\
    \ as $number) {\n\t\tif (!in_array($number, $result)) {\n\t\t\t$result[] = $number;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "    $result = array();\n    $seen = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $seen)) {\n\
    \            $result[] = $number;\n            $seen[] = $number;\n        }\n\
    \    }\n    return $result;\n}\n", "    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $result)) {\n            $result[] = $number;\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    $occurrences = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    $counts = array_count_values($numbers);\n    foreach ($numbers as $number)\
    \ {\n        if ($counts[$number] == 1) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n", "    $uniques = array();\n    foreach\
    \ ($numbers as $number) {\n        if (!in_array($number, $uniques)) {\n     \
    \       $uniques[] = $number;\n        }\n    }\n    return $uniques;\n}\n", " \
    \   $unique_numbers = array();\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n", "\t$numbers = array_unique($numbers);\n\
    \treturn $numbers;\n}\n", "    $result = array();\n    $counts = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($counts[$number] == 1) {\n \
    \           $result[] = $number;\n        }\n    }\n    return $result;\n}\n",
  "    $result = array();\n    $counts = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($counts[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    $count = array_count_values($numbers);\n    foreach ($numbers as $number)\
    \ {\n        if ($count[$number] == 1) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n", "    $result = array();\n    foreach\
    \ ($numbers as $number) {\n        if (!in_array($number, $result)) {\n      \
    \      $result[] = $number;\n        }\n    }\n    return $result;\n}\n", "  \
    \  $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

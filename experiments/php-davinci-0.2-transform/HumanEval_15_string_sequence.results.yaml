language: php
name: HumanEval_15_string_sequence
results:
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" \" . $i;\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" \" . $i;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3lskp6o_.php:20\n\
    Stack trace:\n#0 /tmp/tmp3lskp6o_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3lskp6o_.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" \" . $i;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3lskp6o_.php:20\n\
    Stack trace:\n#0 /tmp/tmp3lskp6o_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3lskp6o_.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730132
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= \" \" . $i;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp99cpu8h3.php:20\n\
    Stack trace:\n#0 /tmp/tmp99cpu8h3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp99cpu8h3.php\
    \ on line 20\n"
  timestamp: 1659730163
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $str = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $str .= $i . \" \";\n  }\n  return trim($str);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730163
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38xh2135.php:20\n\
    Stack trace:\n#0 /tmp/tmp38xh2135.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp38xh2135.php\
    \ on line 20\n"
  timestamp: 1659730132
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy60zup9h.php:20\n\
    Stack trace:\n#0 /tmp/tmpy60zup9h.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpy60zup9h.php\
    \ on line 20\n"
  timestamp: 1659730132

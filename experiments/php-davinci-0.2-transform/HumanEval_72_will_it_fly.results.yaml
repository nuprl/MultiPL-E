language: php
name: HumanEval_72_will_it_fly
results:
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $left = 0;\n  $right = $len - 1;\n  while ($left < $right) {\n\
    \    if ($q[$left] != $q[$right]) {\n      return false;\n    }\n    $left++;\n\
    \    $right--;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $half = floor($len / 2);\n  for ($i = 0; $i < $half; $i++) {\n\
    \    if ($q[$i] != $q[$len - $i - 1]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $reverse = array_reverse($q);\n\
    \        if ($q == $reverse) {\n            return true;\n        }\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $reverse = array_reverse($q);\n\
    \        if ($q == $reverse) {\n            return true;\n        }\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len; $i++) {\n    if ($q[$i] != $q[$len -\
    \ $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $i = 0;\n  $j = $len - 1;\n  while ($i < $j) {\n    if ($q[$i]\
    \ != $q[$j]) {\n      return false;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $palindrome = true;\n    foreach\
    \ ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum > $w) {\n   \
    \     return false;\n    }\n    $q_reverse = array_reverse($q);\n    for ($i =\
    \ 0; $i < count($q); $i++) {\n        if ($q[$i] != $q_reverse[$i]) {\n      \
    \      $palindrome = false;\n        }\n    }\n    if ($palindrome) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $q_reverse = array_reverse($q);\n\
    \        if ($q == $q_reverse) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $len = count($q);\n  for ($i = 0; $i < $len; $i++) {\n    if\
    \ ($q[$i] != $q[$len - 1 - $i]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  foreach ($q as $v) {\n    $sum\
    \ += $v;\n  }\n  if ($sum > $w) {\n    return false;\n  }\n  $i = 0;\n  $j = count($q)\
    \ - 1;\n  while ($i < $j) {\n    if ($q[$i] != $q[$j]) {\n      return false;\n\
    \    }\n    $i++;\n    $j--;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  for ($i = 0; $i < count($q); $i++)\
    \ {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return false;\n  }\n  $q_rev\
    \ = array_reverse($q);\n  for ($i = 0; $i < count($q); $i++) {\n    if ($q[$i]\
    \ != $q_rev[$i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $q = array_reverse($q);\n \
    \   foreach ($q as $key => $value) {\n        $sum += $value;\n        if ($sum\
    \ > $w) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb0t_2clv.php:35\n\
    Stack trace:\n#0 /tmp/tmpb0t_2clv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb0t_2clv.php\
    \ on line 35\n"
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    $i =\
    \ 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    foreach ($q as $value) {\n        $sum += $value;\n    }\n    if ($sum <=\
    \ $w) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $half = floor($len / 2);\n  for ($i = 0; $i < $half; $i++) {\n\
    \    if ($q[$i] != $q[$len - $i - 1]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  foreach ($q as $key => $value)\
    \ {\n    $sum += $value;\n  }\n  if ($sum <= $w) {\n    $reverse = array_reverse($q);\n\
    \    if ($q == $reverse) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $is_palindrome = true;\n  \
    \  $len = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            $is_palindrome = false;\n\
    \        }\n    }\n    return $sum <= $w && $is_palindrome;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $i = 0;\n  $j = count($q) - 1;\n\
    \  while ($i < $j) {\n    if ($q[$i] != $q[$j]) {\n      return false;\n    }\n\
    \    $i++;\n    $j--;\n  }\n  foreach ($q as $e) {\n    $sum += $e;\n  }\n  return\
    \ $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $i = 0;\n  $j = $len - 1;\n  while ($i < $j) {\n    if ($q[$i]\
    \ != $q[$j]) {\n      return false;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    $q_reversed = array_reverse($q);\n    if ($q == $q_reversed)\
    \ {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $palindrome = true;\n    $length\
    \ = count($q);\n    for ($i = 0; $i < $length; $i++) {\n        $sum += $q[$i];\n\
    \        if ($q[$i] != $q[$length - $i - 1]) {\n            $palindrome = false;\n\
    \        }\n    }\n    return $sum <= $w && $palindrome;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $palindrome = true;\n    $length\
    \ = count($q);\n    for ($i = 0; $i < $length; $i++) {\n        $sum += $q[$i];\n\
    \        if ($q[$i] != $q[$length - $i - 1]) {\n            $palindrome = false;\n\
    \        }\n    }\n    return $sum <= $w && $palindrome;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $i = 0;\n  $j = $len - 1;\n  while ($i < $j) {\n    if ($q[$i]\
    \ != $q[$j]) {\n      return false;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $q_rev = array_reverse($q);\n    if\
    \ ($q_rev == $q) {\n        return true;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $length = count($q);\n    for\
    \ ($i = 0; $i < $length; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        if ($q[$i] != $q[$length - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho will_it_fly(array(1, 2), 5) . \"\\\
    n\";\necho will_it_fly(array(3, 2, 3), 1) . \"\\n\";\necho will_it_fly(array(3,\
    \ 2, 3), 9) . \"\\n\";\necho will_it_fly(array(3), 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $i = 0;\n    $j = count($q)\
    \ - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return\
    \ false;\n        }\n        $i++;\n        $j--;\n    }\n    foreach ($q as $item)\
    \ {\n        $sum += $item;\n    }\n    return $sum <= $w;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $count = count($q);\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $count = $count / 2;\n    for ($i\
    \ = 0; $i < $count; $i++) {\n        if ($q[$i] != $q[$count - $i - 1]) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.5 to int loses precision\
    \ in /tmp/tmp620abhwm.php on line 28\n\nDeprecated: Implicit conversion from float\
    \ -0.5 to int loses precision in /tmp/tmp620abhwm.php on line 28\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp620abhwm.php:40\nStack trace:\n\
    #0 /tmp/tmp620abhwm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp620abhwm.php\
    \ on line 40\n"
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $i = 0;\n  $j = count($q) - 1;\n\
    \  while ($i < $j) {\n    if ($q[$i] != $q[$j]) {\n      return false;\n    }\n\
    \    $i++;\n    $j--;\n  }\n  foreach ($q as $v) {\n    $sum += $v;\n  }\n  return\
    \ $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len; $i++) {\n    if ($q[$i] != $q[$len -\
    \ $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = $len / 2;\n    for ($i = 0;\
    \ $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (count($q) == 1) {\n        return true;\n\
    \    }\n    $sum = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j)\
    \ {\n        if ($q[$i] != $q[$j]) {\n            return false;\n        }\n \
    \       $sum += $q[$i];\n        $i++;\n        $j--;\n    }\n    if ($i == $j)\
    \ {\n        $sum += $q[$i];\n    }\n    return $sum <= $w;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $q_sum = array_sum($q);\n    $q_rev = array_reverse($q);\n\
    \    if ($q_sum <= $w && $q == $q_rev) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $n = count($q);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $n / 2; $i++) {\n       \
    \ if ($q[$i] != $q[$n - $i - 1]) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len; $i++) {\n    if ($q[$i] != $q[$len -\
    \ $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $i = 0;\n    $j = count($q)\
    \ - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return\
    \ false;\n        }\n        $i++;\n        $j--;\n    }\n    foreach ($q as $item)\
    \ {\n        $sum += $item;\n    }\n    return $sum <= $w;\n}\n\n$q = array(3,\
    \ 2, 3);\n$w = 9;\necho will_it_fly($q, $w);\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $length = count($q);\n    for\
    \ ($i = 0; $i < $length; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        if ($q[$i] !== $q[$length - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $i = 0;\n  $j = $len - 1;\n  while ($i < $j) {\n    if ($q[$i]\
    \ != $q[$j]) {\n      return false;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $mid = floor($len / 2);\n  for ($i = 0; $i < $mid; $i++) {\n\
    \    if ($q[$i] != $q[$len - $i - 1]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $i = 0;\n  $j = $len - 1;\n  while ($i < $j) {\n    if ($q[$i]\
    \ != $q[$j]) {\n      return false;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $i = 0;\n  $j = $len - 1;\n  while ($i < $j) {\n    if ($q[$i]\
    \ != $q[$j]) {\n      return false;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $mid = floor($len / 2);\n  for ($i = 0; $i < $mid; $i++) {\n\
    \    if ($q[$i] != $q[$len - $i - 1]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $reverse = array_reverse($q);\n\
    \        if ($q == $reverse) {\n            return true;\n        }\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $palindrome = true;\n  for ($i\
    \ = 0; $i < count($q); $i++) {\n    $sum += $q[$i];\n    if ($q[$i] != $q[count($q)\
    \ - $i - 1]) {\n      $palindrome = false;\n    }\n  }\n  return $sum <= $w &&\
    \ $palindrome;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len; $i++) {\n    if ($q[$i] != $q[$len -\
    \ $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $q = array_reverse($q);\n\
    \        if ($q == $q) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprilhz5m0.php:37\n\
    Stack trace:\n#0 /tmp/tmprilhz5m0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprilhz5m0.php\
    \ on line 37\n"
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $i = 0;\n    $j = count($q)\
    \ - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return\
    \ false;\n        }\n        $i++;\n        $j--;\n    }\n    foreach ($q as $item)\
    \ {\n        $sum += $item;\n    }\n    return $sum <= $w;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len; $i++) {\n    if ($q[$i] != $q[$len -\
    \ $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $i = 0;\n  $j = $len - 1;\n  while ($i < $j) {\n    if ($q[$i]\
    \ != $q[$j]) {\n      return false;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $length = count($q);\n    for\
    \ ($i = 0; $i < $length; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $is_palindrome = true;\n    for ($i\
    \ = 0; $i < $length; $i++) {\n        if ($q[$i] != $q[$length - $i - 1]) {\n\
    \            $is_palindrome = false;\n            break;\n        }\n    }\n \
    \   return $is_palindrome;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $i = 0;\n  $j = count($q) - 1;\n\
    \  while ($i < $j) {\n    if ($q[$i] != $q[$j]) {\n      return false;\n    }\n\
    \    $i++;\n    $j--;\n  }\n  foreach ($q as $item) {\n    $sum += $item;\n  }\n\
    \  return $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    $i =\
    \ 0;\n    $j = $len - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    foreach ($q as $v) {\n        $sum += $v;\n    }\n    return $sum <= $w;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\t$len = count($q);\n\tfor ($i =\
    \ 0; $i < $len; $i++) {\n\t\t$sum += $q[$i];\n\t}\n\tif ($sum > $w) {\n\t\treturn\
    \ false;\n\t}\n\tfor ($i = 0; $i < $len / 2; $i++) {\n\t\tif ($q[$i] != $q[$len\
    \ - $i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $half = floor($len / 2);\n  for ($i = 0; $i < $half; $i++) {\n\
    \    if ($q[$i] != $q[$len - $i - 1]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    $i =\
    \ 0;\n    while ($i < $len) {\n        $sum += $q[$i];\n        $i++;\n    }\n\
    \    if ($sum > $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len\
    \ - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return\
    \ false;\n        }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n\
    \        if ($q[$i] != $q[$j]) {\n            return false;\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len; $i++) {\n    if ($q[$i] != $q[$len -\
    \ $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $reverse = array_reverse($q);\n  if ($q == $reverse) {\n    return\
    \ true;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $palindrome = true;\n  $length\
    \ = count($q);\n  for ($i = 0; $i < $length; $i++) {\n    $sum += $q[$i];\n  \
    \  if ($q[$i] != $q[$length - $i - 1]) {\n      $palindrome = false;\n    }\n\
    \  }\n  return $sum <= $w && $palindrome;\n}\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $q_reverse = array_reverse($q);\n\
    \        if ($q == $q_reverse) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $mid = floor($len / 2);\n  for ($i = 0; $i < $mid; $i++) {\n\
    \    if ($q[$i] != $q[$len - $i - 1]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $reverse = array_reverse($q);\n\
    \        if ($q == $reverse) {\n            return true;\n        }\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $item) {\n \
    \       $sum += $item;\n    }\n    if ($sum > $w) {\n        return false;\n \
    \   }\n    $reverse = array_reverse($q);\n    if ($q == $reverse) {\n        return\
    \ true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len; $i++) {\n    if ($q[$i] != $q[$len -\
    \ $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  foreach ($q as $value) {\n    $sum\
    \ += $value;\n  }\n  if ($sum <= $w) {\n    $reverse = array_reverse($q);\n  \
    \  if ($q == $reverse) {\n      return true;\n    }\n  }\n  return false;\n}\n\
    \nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $is_palindrome = true;\n  for ($i = 0; $i < $len / 2; $i++) {\n\
    \    if ($q[$i] != $q[$len - $i - 1]) {\n      $is_palindrome = false;\n     \
    \ break;\n    }\n  }\n  return $is_palindrome;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    $palindrome = true;\n    for ($i = 0; $i < count($q) / 2;\
    \ $i++) {\n        if ($q[$i] != $q[count($q) - $i - 1]) {\n            $palindrome\
    \ = false;\n        }\n    }\n    return $palindrome;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $left = 0;\n  $right = $len - 1;\n  while ($left < $right) {\n\
    \    if ($q[$left] != $q[$right]) {\n      return false;\n    }\n    $left++;\n\
    \    $right--;\n  }\n  return true;\n}\n\n$q = array(1, 2);\n$w = 5;\necho will_it_fly($q,\
    \ $w) . \"\\n\";\n$q = array(3, 2, 3);\n$w = 1;\necho will_it_fly($q, $w) . \"\
    \\n\";\n$q = array(3, 2, 3);\n$w = 9;\necho will_it_fly($q, $w) . \"\\n\";\n$q\
    \ = array(3);\n$w = 5;\necho will_it_fly($q, $w) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $item) {\n \
    \       $sum += $item;\n    }\n    if ($sum > $w) {\n        return false;\n \
    \   }\n    $q_reverse = array_reverse($q);\n    if ($q == $q_reverse) {\n    \
    \    return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $item) {\n \
    \       $sum += $item;\n    }\n    if ($sum > $w) {\n        return false;\n \
    \   }\n    $reverse = array_reverse($q);\n    if ($q == $reverse) {\n        return\
    \ true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum > $w) {\n        return false;\n\
    \    }\n    $q_reverse = array_reverse($q);\n    if ($q == $q_reverse) {\n   \
    \     return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $length = count($q);\n    for\
    \ ($i = 0; $i < $length; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        if ($q[$i] != $q[$length - $i - 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 255
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\tforeach ($q as $value) {\n\t\t\
    $sum += $value;\n\t}\n\tif ($sum <= $w) {\n\t\t$q = array_reverse($q);\n\t\tif\
    \ ($q == $q) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5segw63.php:37\n\
    Stack trace:\n#0 /tmp/tmpw5segw63.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpw5segw63.php\
    \ on line 37\n"
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $q_len = count($q);\n    for\
    \ ($i = 0; $i < $q_len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $q_rev = array_reverse($q);\n   \
    \ for ($i = 0; $i < $q_len; $i++) {\n        if ($q[$i] != $q_rev[$i]) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $q_reverse = array_reverse($q);\n\
    \        if ($q == $q_reverse) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $q_len = count($q);\n    for\
    \ ($i = 0; $i < $q_len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $q_rev = array_reverse($q);\n   \
    \ for ($i = 0; $i < $q_len; $i++) {\n        if ($q[$i] != $q_rev[$i]) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  for ($i = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len\
    \ - $i - 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $value) {\n\
    \        $sum += $value;\n    }\n    if ($sum <= $w) {\n        $reverse = array_reverse($q);\n\
    \        if ($q == $reverse) {\n            return true;\n        }\n    }\n \
    \   return false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    $is_even\
    \ = $len % 2 == 0;\n    for ($i = 0; $i < $mid; $i++) {\n        if ($q[$i] !=\
    \ $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $half = floor($len / 2);\n    for ($i\
    \ = 0; $i < $half; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $left = 0;\n  $right = $len - 1;\n  while ($left < $right) {\n\
    \    if ($q[$left] != $q[$right]) {\n      return false;\n    }\n    $left++;\n\
    \    $right--;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\t$len = count($q);\n\tfor ($i =\
    \ 0; $i < $len; $i++) {\n\t\t$sum += $q[$i];\n\t}\n\tif ($sum > $w) {\n\t\treturn\
    \ false;\n\t}\n\t$i = 0;\n\t$j = $len - 1;\n\twhile ($i < $j) {\n\t\tif ($q[$i]\
    \ != $q[$j]) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t\t$j--;\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $reverse = array_reverse($q);\n   \
    \ if ($q == $reverse) {\n        return true;\n    }\n    return false;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $mid = floor($len / 2);\n    for ($i\
    \ = 0; $i < $mid; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $item) {\n \
    \       $sum += $item;\n    }\n    if ($sum > $w) {\n        return false;\n \
    \   }\n    $q_reverse = array_reverse($q);\n    if ($q == $q_reverse) {\n    \
    \    return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n \
    \       if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $i = 0;\n  $j = $len - 1;\n  while ($i < $j) {\n    if ($q[$i]\
    \ != $q[$j]) {\n      return false;\n    }\n    $i++;\n    $j--;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $left = 0;\n    $right = $len - 1;\n\
    \    while ($left < $right) {\n        if ($q[$left] != $q[$right]) {\n      \
    \      return false;\n        }\n        $left++;\n        $right--;\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (count($q) == 1) {\n        return true;\n\
    \    }\n    $sum = 0;\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j)\
    \ {\n        if ($q[$i] != $q[$j]) {\n            return false;\n        }\n \
    \       $sum += $q[$i];\n        $i++;\n        $j--;\n    }\n    if ($i == $j)\
    \ {\n        $sum += $q[$i];\n    }\n    return $sum <= $w;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $left = 0;\n  $right = $len - 1;\n  while ($left < $right) {\n\
    \    if ($q[$left] != $q[$right]) {\n      return false;\n    }\n    $left++;\n\
    \    $right--;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $q_len = count($q);\n    for\
    \ ($i = 0; $i < $q_len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum\
    \ > $w) {\n        return false;\n    }\n    $q_rev = array_reverse($q);\n   \
    \ if ($q === $q_rev) {\n        return true;\n    }\n    return false;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659800392
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $left = 0;\n  $right = $len - 1;\n  while ($left < $right) {\n\
    \    if ($q[$left] != $q[$right]) {\n      return false;\n    }\n    $left++;\n\
    \    $right--;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923
- exit_code: 0
  program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730923

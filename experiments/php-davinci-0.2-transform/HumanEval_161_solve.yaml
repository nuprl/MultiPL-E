name: HumanEval_161_solve
language: php
prompt: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
  \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n// If\
  \ the string contains no letters, reverse the string.\n// The function should return\
  \ the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>>\
  \ solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve($s)\
  \ {\n"
tests: "function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"\
  #$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#ccc\"\
  ) !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $s = str_split($s);\n    $res = [];\n    $letters = range('a',\
    \ 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s\
    \ as $char) {\n        if (in_array($char, $letters)) {\n            $res[] =\
    \ strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n      \
    \  } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n", "    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result .= strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\necho solve(\"1234\");\n\
    echo \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\");\necho\
    \ \"\\n\";", "    $s = str_split($s);\n    $result = [];\n    $isLetter = false;\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $result[] = strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $isLetter ? implode('', $result) : strrev(implode('',\
    \ $result));\n}\n", "    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (isset($letters[$char]))\
    \ {\n            $result[] = $char === strtolower($char) ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\n$s = \"1234\";\necho solve($s);\n\
    echo \"\\n\";\n$s = \"ab\";\necho solve($s);\necho \"\\n\";\n$s = \"#a@C\";\n\
    echo solve($s);\necho \"\\n\";", "    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n   \
    \     if (strpos($letters, $char) !== false) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result;\n}\n", "    $s\
    \ = str_split($s);\n    $letters = [];\n    foreach ($s as $key => $value) {\n\
    \        if (ctype_alpha($value)) {\n            $letters[] = $key;\n        }\n\
    \    }\n    if (empty($letters)) {\n        return strrev($s);\n    }\n    foreach\
    \ ($letters as $key => $value) {\n        if (ctype_upper($s[$value])) {\n   \
    \         $s[$value] = strtolower($s[$value]);\n        } else {\n           \
    \ $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n", "    $s = str_split($s);\n    $letters = [];\n    foreach ($s as $key =>\
    \ $value) {\n        if (ctype_alpha($value)) {\n            $letters[] = $key;\n\
    \        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n  \
    \  }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\necho solve(\"1234\");\necho \"<br>\";\necho solve(\"ab\");\necho \"<br>\";\n\
    echo solve(\"#a@C\");", "    $s = str_split($s);\n    $result = [];\n    $hasLetter\
    \ = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n \
    \           $hasLetter = true;\n            $result[] = strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result[]\
    \ = $char;\n        }\n    }\n    return $hasLetter ? implode('', $result) : strrev(implode('',\
    \ $result));\n}\n", "    $s = str_split($s);\n    $letters = array_filter($s,\
    \ function($x) {\n        return ctype_alpha($x);\n    });\n    if (count($letters)\
    \ == 0) {\n        return strrev($s);\n    }\n    $s = array_map(function($x)\
    \ {\n        if (ctype_alpha($x)) {\n            return strtoupper($x) == $x ?\
    \ strtolower($x) : strtoupper($x);\n        }\n        return $x;\n    }, $s);\n\
    \    return implode('', $s);\n}\n", "    $letters = str_split($s);\n    $result\
    \ = \"\";\n    $hasLetter = false;\n    foreach ($letters as $letter) {\n    \
    \    if (ctype_alpha($letter)) {\n            $hasLetter = true;\n           \
    \ $result .= strtoupper($letter) == $letter ? strtolower($letter) : strtoupper($letter);\n\
    \        } else {\n            $result .= $letter;\n        }\n    }\n    return\
    \ $hasLetter ? $result : strrev($s);\n}\n", "    $s = str_split($s);\n    $letters\
    \ = [];\n    $others = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $letters[] = $char;\n        } else {\n            $others[]\
    \ = $char;\n        }\n    }\n    $letters = array_map(function($char) {\n   \
    \     return ctype_upper($char) ? strtolower($char) : strtoupper($char);\n   \
    \ }, $letters);\n    return implode('', array_merge($letters, $others));\n}\n",
  "    $s = str_split($s);\n    $result = '';\n    $isLetter = false;\n    foreach\
    \ ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter =\
    \ true;\n            $result .= strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $isLetter ? $result : strrev($result);\n}\n", "    $s\
    \ = str_split($s);\n    $letters = [];\n    $numbers = [];\n    foreach ($s as\
    \ $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $value;\n        } else {\n            $numbers[] = $value;\n        }\n \
    \   }\n    if (count($letters) > 0) {\n        foreach ($letters as $key => $value)\
    \ {\n            if (ctype_lower($value)) {\n                $letters[$key] =\
    \ strtoupper($value);\n            } else {\n                $letters[$key] =\
    \ strtolower($value);\n            }\n        }\n        $letters = array_reverse($letters);\n\
    \        $s = array_merge($letters, $numbers);\n    } else {\n        $s = array_reverse($numbers);\n\
    \    }\n    return implode('', $s);\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }", "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n", "    if (preg_match('/[a-zA-Z]/',\
    \ $s)) {\n        return strtolower($s) ^ strtoupper($s) ^ $s;\n    } else {\n\
    \        return strrev($s);\n    }\n}\n", "    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    if (strlen($result)\
    \ == 0) {\n        return strrev($s);\n    }\n    return $result;\n}\n", "   \
    \ $s = str_split($s);\n    $letters = [];\n    $others = [];\n    foreach ($s\
    \ as $char) {\n        if (ctype_alpha($char)) {\n            $letters[] = $char;\n\
    \        } else {\n            $others[] = $char;\n        }\n    }\n    $letters\
    \ = array_map(function($letter) {\n        return ctype_upper($letter) ? strtolower($letter)\
    \ : strtoupper($letter);\n    }, $letters);\n    $s = array_merge($letters, $others);\n\
    \    return implode('', $s);\n}\n", "    $s = str_split($s);\n    $result = [];\n\
    \    $hasLetter = false;\n    foreach ($s as $char) {\n        if (ctype_alpha($char))\
    \ {\n            $hasLetter = true;\n            $result[] = strtolower($char)\
    \ == $char ? strtoupper($char) : strtolower($char);\n        } else {\n      \
    \      $result[] = $char;\n        }\n    }\n    if (!$hasLetter) {\n        $result\
    \ = array_reverse($result);\n    }\n    return implode('', $result);\n}\n", " \
    \   $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $result .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $result .= $s[$i];\n  \
    \      }\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

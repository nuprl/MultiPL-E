name: HumanEval_163_generate_integers
language: php
prompt: "<?php\n// Given two positive integers a and b, return the even digits between\
  \ a\n// and b, in ascending order.\n// For example:\n// >>> generate_integers(2,\
  \ 8)\n// array(2, 4, 6, 8)\n// >>> generate_integers(8, 2)\n// array(2, 4, 6, 8)\n\
  // >>> generate_integers(10, 14)\n// array()\nfunction generate_integers($a, $b)\
  \ {\n"
tests: "function candidate(...$args) {\n    return generate_integers(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(2, 10) !== array(2, 4, 6, 8)) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(10, 2) !== array(2,\
  \ 4, 6, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(132, 2)\
  \ !== array(2, 4, 6, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
  \ 89) !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $evens = [];\n    $min = min($a, $b);\n    $max = max($a, $b);\n\
    \    for ($i = $min; $i <= $max; $i++) {\n        if ($i % 2 == 0) {\n       \
    \     $evens[] = $i;\n        }\n    }\n    return $evens;\n}\n", "    $result\
    \ = [];\n    $start = min($a, $b);\n    $end = max($a, $b);\n    for ($i = $start;\
    \ $i <= $end; $i++) {\n        if ($i % 2 == 0) {\n            $result[] = $i;\n\
    \        }\n    }\n    return $result;\n}\n", "    $result = [];\n    if ($a >\
    \ $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n \
    \   for ($i = $a; $i <= $b; $i++) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $i;\n        }\n    }\n    return $result;\n}\n", "    $result = [];\n   \
    \ $min = min($a, $b);\n    $max = max($a, $b);\n    for ($i = $min; $i <= $max;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $result[] = $i;\n        }\n\
    \    }\n    return $result;\n}\n", "  $result = [];\n  $start = min($a, $b);\n\
    \  $end = max($a, $b);\n  for ($i = $start; $i <= $end; $i++) {\n    if ($i %\
    \ 2 == 0) {\n      $result[] = $i;\n    }\n  }\n  return $result;\n}\n", "  $even_numbers\
    \ = array();\n  if ($a > $b) {\n    $temp = $a;\n    $a = $b;\n    $b = $temp;\n\
    \  }\n  for ($i = $a; $i <= $b; $i++) {\n    if ($i % 2 == 0) {\n      array_push($even_numbers,\
    \ $i);\n    }\n  }\n  return $even_numbers;\n}\n", "  $result = [];\n  if ($a\
    \ < $b) {\n    for ($i = $a; $i <= $b; $i++) {\n      if ($i % 2 == 0) {\n   \
    \     $result[] = $i;\n      }\n    }\n  } else {\n    for ($i = $a; $i >= $b;\
    \ $i--) {\n      if ($i % 2 == 0) {\n        $result[] = $i;\n      }\n    }\n\
    \  }\n  return $result;\n}\n", "  $evens = [];\n  $min = min($a, $b);\n  $max\
    \ = max($a, $b);\n  for ($i = $min; $i <= $max; $i++) {\n    if ($i % 2 === 0)\
    \ {\n      $evens[] = $i;\n    }\n  }\n  return $evens;\n}\n", "  $result = [];\n\
    \  if ($a < $b) {\n    for ($i = $a; $i <= $b; $i++) {\n      if ($i % 2 == 0)\
    \ {\n        $result[] = $i;\n      }\n    }\n  } else {\n    for ($i = $a; $i\
    \ >= $b; $i--) {\n      if ($i % 2 == 0) {\n        $result[] = $i;\n      }\n\
    \    }\n  }\n  return $result;\n}\n", "    $evens = array();\n    if ($a > $b)\
    \ {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    for\
    \ ($i = $a; $i <= $b; $i++) {\n        if ($i % 2 == 0) {\n            $evens[]\
    \ = $i;\n        }\n    }\n    return $evens;\n}\n", "    $evens = array();\n\
    \    $min = min($a, $b);\n    $max = max($a, $b);\n    for ($i = $min; $i <= $max;\
    \ $i++) {\n        if ($i % 2 == 0) {\n            $evens[] = $i;\n        }\n\
    \    }\n    return $evens;\n}\n", "    $a = $a % 2 == 0 ? $a : $a + 1;\n    $b\
    \ = $b % 2 == 0 ? $b : $b - 1;\n    if ($a > $b) {\n        $temp = $a;\n    \
    \    $a = $b;\n        $b = $temp;\n    }\n    $result = array();\n    for ($i\
    \ = $a; $i <= $b; $i += 2) {\n        $result[] = $i;\n    }\n    return $result;\n\
    }\n", "  if ($a > $b) {\n    $temp = $a;\n    $a = $b;\n    $b = $temp;\n  }\n\
    \  $result = array();\n  for ($i = $a; $i <= $b; $i++) {\n    if ($i % 2 == 0)\
    \ {\n      $result[] = $i;\n    }\n  }\n  return $result;\n}\n", "    $result\
    \ = [];\n    $min = min($a, $b);\n    $max = max($a, $b);\n    for ($i = $min;\
    \ $i <= $max; $i++) {\n        if ($i % 2 == 0) {\n            $result[] = $i;\n\
    \        }\n    }\n    return $result;\n}\n", "  $evens = array();\n  $min = min($a,\
    \ $b);\n  $max = max($a, $b);\n  for ($i = $min; $i <= $max; $i++) {\n    if ($i\
    \ % 2 == 0) {\n      $evens[] = $i;\n    }\n  }\n  return $evens;\n}\nprint_r(generate_integers(2,\
    \ 8));\nprint_r(generate_integers(8, 2));\nprint_r(generate_integers(10, 14));",
  "  $result = [];\n  $min = min($a, $b);\n  $max = max($a, $b);\n  for ($i = $min;\
    \ $i <= $max; $i++) {\n    if ($i % 2 == 0) {\n      $result[] = $i;\n    }\n\
    \  }\n  return $result;\n}\n", "\t$evens = array();\n\t$min = min($a, $b);\n\t\
    $max = max($a, $b);\n\tfor ($i = $min; $i <= $max; $i++) {\n\t\tif ($i % 2 ==\
    \ 0) {\n\t\t\t$evens[] = $i;\n\t\t}\n\t}\n\treturn $evens;\n}\n", "  $result =\
    \ [];\n  if ($a > $b) {\n    $temp = $a;\n    $a = $b;\n    $b = $temp;\n  }\n\
    \  for ($i = $a; $i <= $b; $i++) {\n    if ($i % 2 == 0) {\n      $result[] =\
    \ $i;\n    }\n  }\n  return $result;\n}\n", "    $result = [];\n    if ($a > $b)\
    \ {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    for\
    \ ($i = $a; $i <= $b; $i++) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $i;\n        }\n    }\n    return $result;\n}\n", "    $even_digits = array();\n\
    \    if ($a > $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n\
    \    }\n    for ($i = $a; $i <= $b; $i++) {\n        if ($i % 2 == 0) {\n    \
    \        array_push($even_digits, $i);\n        }\n    }\n    return $even_digits;\n\
    }"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

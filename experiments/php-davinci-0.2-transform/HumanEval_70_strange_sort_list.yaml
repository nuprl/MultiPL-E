name: HumanEval_70_strange_sort_list
language: php
prompt: "<?php\n// Given list of integers, return list in strange order.\n// Strange\
  \ sorting, is when you start with the minimum value,\n// then maximum of the remaining\
  \ integers, then minimum and so on.\n// Examples:\n// >>> strange_sort_list(array(1,\
  \ 2, 3, 4))\n// array(1, 4, 2, 3)\n// >>> strange_sort_list(array(5, 5, 5, 5))\n\
  // array(5, 5, 5, 5)\n// >>> strange_sort_list(array())\n// array()\nfunction strange_sort_list($lst)\
  \ {\n"
tests: "function candidate(...$args) {\n    return strange_sort_list(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
  \ 4, 2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
  \ 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 7, 8, 9, 1))\
  \ !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1,\
  \ 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
  \ 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(111111)) !== array(111111)) { throw\
  \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if (empty($lst)) {\n        return $lst;\n    }\n    sort($lst);\n\
    \    $res = array();\n    $i = 0;\n    $j = count($lst) - 1;\n    while ($i <=\
    \ $j) {\n        $res[] = $lst[$i];\n        $i++;\n        if ($i <= $j) {\n\
    \            $res[] = $lst[$j];\n            $j--;\n        }\n    }\n    return\
    \ $res;\n}\n", "    $result = array();\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    while (count($lst)\
    \ > 0) {\n        $min = min($lst);\n        $max = max($lst);\n        $min_index\
    \ = array_search($min, $lst);\n        $max_index = array_search($max, $lst);\n\
    \        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    $result = array();\n    $min = min($lst);\n \
    \   $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n", "    // Your code here\n}\n", "  if (empty($lst))\
    \ {\n    return $lst;\n  }\n  sort($lst);\n  $result = array();\n  $i = 0;\n \
    \ $j = count($lst) - 1;\n  while ($i <= $j) {\n    $result[] = $lst[$i];\n   \
    \ if ($i != $j) {\n      $result[] = $lst[$j];\n    }\n    $i++;\n    $j--;\n\
    \  }\n  return $result;\n}\n", "    $result = array();\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index\
    \ = array_search($max, $lst);\n    $result[] = $min;\n    $result[] = $max;\n\
    \    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $min_index = array_search($min, $lst);\n        $max_index = array_search($max,\
    \ $lst);\n        $result[] = $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n\
    \        unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n\
    \    return $result;\n}\n\n$lst = array(1, 2, 3, 4);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array(5, 5, 5, 5);\nprint_r(strange_sort_list($lst));\n\
    echo \"\\n\";\n$lst = array();\nprint_r(strange_sort_list($lst));\necho \"\\n\"\
    ;", "    $sorted_lst = array();\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $sorted_lst[] = $min;\n    $sorted_lst[] = $max;\n    $lst = array_diff($lst,\
    \ array($min, $max));\n    while (count($lst) > 0) {\n        $min = min($lst);\n\
    \        $max = max($lst);\n        $sorted_lst[] = $min;\n        $sorted_lst[]\
    \ = $max;\n        $lst = array_diff($lst, array($min, $max));\n    }\n    return\
    \ $sorted_lst;\n}\n", "    $result = array();\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $i = 0;\n    while (count($lst) > 0) {\n        if ($i % 2\
    \ == 0) {\n            $result[] = $min;\n            unset($lst[array_search($min,\
    \ $lst)]);\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            unset($lst[array_search($max, $lst)]);\n            $max\
    \ = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n}\n", " \
    \   $result = array();\n    $min = min($lst);\n    $max = max($lst);\n    $min_index\
    \ = array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n  \
    \  $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n  \
    \  unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $lst_count =\
    \ count($lst);\n    if ($lst_count > 0) {\n        $result = array_merge($result,\
    \ strange_sort_list($lst));\n    }\n    return $result;\n}\n", "    $result =\
    \ array();\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    if (count($lst) == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    if (count($lst) == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    if (count($lst) == 0) {\n        return $result;\n\
    \    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_", "    $result = array();\n    $min = min($lst);\n    $max\
    \ = max($lst);\n    $min_index = array_search($min, $lst);\n    $max_index = array_search($max,\
    \ $lst);\n    $result[] = $min;\n    $result[] = $max;\n    unset($lst[$min_index]);\n\
    \    unset($lst[$max_index]);\n    $lst = array_values($lst);\n    $count = count($lst);\n\
    \    for ($i = 0; $i < $count; $i++) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $min_index = array_search($min, $lst);\n        $max_index\
    \ = array_search($max, $lst);\n        $result[] = $min;\n        $result[] =\
    \ $max;\n        unset($lst[$min_index]);\n        unset($lst[$max_index]);\n\
    \        $lst = array_values($lst);\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    $min = min($lst);\n    $max = max($lst);\n    $min_index = array_search($min,\
    \ $lst);\n    $max_index = array_search($max, $lst);\n    $result[] = $min;\n\
    \    $result[] = $max;\n    unset($lst[$min_index]);\n    unset($lst[$max_index]);\n\
    \    $lst = array_values($lst);\n    while (count($lst) > 0) {\n        $min =\
    \ min($lst);\n        $max = max($lst);\n        $min_index = array_search($min,\
    \ $lst);\n        $max_index = array_search($max, $lst);\n        $result[] =\
    \ $min;\n        $result[] = $max;\n        unset($lst[$min_index]);\n       \
    \ unset($lst[$max_index]);\n        $lst = array_values($lst);\n    }\n    return\
    \ $result;\n}\n", "    $result = array();\n    $min = min($lst);\n    $max = max($lst);\n\
    \    $result[] = $min;\n    $result[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n    while(count($lst) > 0) {\n        $min = min($lst);\n        $max\
    \ = max($lst);\n        $result[] = $min;\n        $result[] = $max;\n       \
    \ $lst = array_diff($lst, array($min, $max));\n    }\n    return $result;\n}\n",
  "    $result = array();\n    $min = min($lst);\n    $max = max($lst);\n    $i =\
    \ 0;\n    while (count($lst) > 0) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = $min;\n            $min = min($lst);\n        } else {\n            $result[]\
    \ = $max;\n            $max = max($lst);\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n", "    $result = array();\n    $min = min($lst);\n   \
    \ $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst =\
    \ array_diff($lst, array($min, $max));\n    while (count($lst) > 0) {\n      \
    \  $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n \
    \       $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $result[] = $min;\n    $result[] = $max;\n    $lst\
    \ = array_diff($lst, array($min, $max));\n    while (count($lst) > 0) {\n    \
    \    $min = min($lst);\n        $max = max($lst);\n        $result[] = $min;\n\
    \        $result[] = $max;\n        $lst = array_diff($lst, array($min, $max));\n\
    \    }\n    return $result;\n}\n", "    if (count($lst) == 0) {\n        return\
    \ $lst;\n    }\n    $min = min($lst);\n    $max = max($lst);\n    $min_index =\
    \ array_search($min, $lst);\n    $max_index = array_search($max, $lst);\n    $lst[$min_index]\
    \ = $max;\n    $lst[$max_index] = $min;\n    return $lst;\n}\n", "    $min = min($lst);\n\
    \    $max = max($lst);\n    $result = array();\n    $i = 0;\n    while (count($lst)\
    \ > 0) {\n        if ($i % 2 == 0) {\n            $result[] = $min;\n        \
    \    $min_key = array_search($min, $lst);\n            unset($lst[$min_key]);\n\
    \            $min = min($lst);\n        } else {\n            $result[] = $max;\n\
    \            $max_key = array_search($max, $lst);\n            unset($lst[$max_key]);\n\
    \            $max = max($lst);\n        }\n        $i++;\n    }\n    return $result;\n\
    }\n", "    if (count($lst) == 0) {\n        return $lst;\n    }\n    $min = min($lst);\n\
    \    $max = max($lst);\n    $new_lst = array();\n    $new_lst[] = $min;\n    $new_lst[]\
    \ = $max;\n    $lst = array_diff($lst, array($min, $max));\n    $lst = array_values($lst);\n\
    \    while (count($lst) > 0) {\n        $min = min($lst);\n        $max = max($lst);\n\
    \        $new_lst[] = $min;\n        $new_lst[] = $max;\n        $lst = array_diff($lst,\
    \ array($min, $max));\n        $lst = array_values($lst);\n    }\n    return $new_lst;\n\
    }\n", "  $sorted = array();\n  $min = min($lst);\n  $max = max($lst);\n  $sorted[]\
    \ = $min;\n  $sorted[] = $max;\n  $lst = array_diff($lst, array($min, $max));\n\
    \  while (count($lst) > 0) {\n    $min = min($lst);\n    $max = max($lst);\n \
    \   $sorted[] = $min;\n    $sorted[] = $max;\n    $lst = array_diff($lst, array($min,\
    \ $max));\n  }\n  return $sorted;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

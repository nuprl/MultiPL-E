language: php
name: HumanEval_97_multiply
results:
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412) . \"\\\
    n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\n\
    echo multiply(14, -15) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9xnjfen.php:30\n\
    Stack trace:\n#0 /tmp/tmpm9xnjfen.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm9xnjfen.php\
    \ on line 30\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqvuovl1.php:26\n\
    Stack trace:\n#0 /tmp/tmplqvuovl1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplqvuovl1.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbuy798y.php:34\n\
    Stack trace:\n#0 /tmp/tmpvbuy798y.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvbuy798y.php\
    \ on line 34\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020,\
    \ 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a % 10);\n    $b = abs($b % 10);\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\necho \"\
    <br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1659730787
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbuy798y.php:34\n\
    Stack trace:\n#0 /tmp/tmpvbuy798y.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvbuy798y.php\
    \ on line 34\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return abs($a % 10) * abs($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho multiply(19, 28);\necho multiply(2020, 1851);\n\
    echo multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1672020'
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjdmb9r2.php:25\n\
    Stack trace:\n#0 /tmp/tmpkjdmb9r2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkjdmb9r2.php\
    \ on line 25\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,\
    \ -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujhdp3tl.php:34\n\
    Stack trace:\n#0 /tmp/tmpujhdp3tl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpujhdp3tl.php\
    \ on line 34\n"
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4f5wit1a.php:35\n\
    Stack trace:\n#0 /tmp/tmp4f5wit1a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4f5wit1a.php\
    \ on line 35\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020,\
    \ 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return $a % 10 * $b % 10;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl0mtdqqs.php:24\n\
    Stack trace:\n#0 /tmp/tmpl0mtdqqs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpl0mtdqqs.php\
    \ on line 24\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqvuovl1.php:26\n\
    Stack trace:\n#0 /tmp/tmplqvuovl1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplqvuovl1.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoo_0tlz6.php:25\n\
    Stack trace:\n#0 /tmp/tmpoo_0tlz6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpoo_0tlz6.php\
    \ on line 25\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    echo multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return $a % 10 * $b % 10;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpalj628gp.php:25\n\
    Stack trace:\n#0 /tmp/tmpalj628gp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpalj628gp.php\
    \ on line 25\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujhdp3tl.php:34\n\
    Stack trace:\n#0 /tmp/tmpujhdp3tl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpujhdp3tl.php\
    \ on line 34\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,\
    \ -15);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16<br>72<br>0<br>-20<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpry9kwx_5.php:34\nStack trace:\n#0 /tmp/tmpry9kwx_5.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpry9kwx_5.php on line 34\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a % 10);\n    $b = abs($b % 10);\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\necho multiply(148, 412);\necho \"<br>\";\necho\
    \ multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\"\
    ;\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a % 10);\n    $b = abs($b % 10);\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\
    \\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzhr2dptx.php:28\n\
    Stack trace:\n#0 /tmp/tmpzhr2dptx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzhr2dptx.php\
    \ on line 28\n"
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4f5wit1a.php:35\n\
    Stack trace:\n#0 /tmp/tmp4f5wit1a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4f5wit1a.php\
    \ on line 35\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjdmb9r2.php:25\n\
    Stack trace:\n#0 /tmp/tmpkjdmb9r2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkjdmb9r2.php\
    \ on line 25\n"
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\
    \\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbuy798y.php:34\n\
    Stack trace:\n#0 /tmp/tmpvbuy798y.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvbuy798y.php\
    \ on line 34\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjdmb9r2.php:25\n\
    Stack trace:\n#0 /tmp/tmpkjdmb9r2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkjdmb9r2.php\
    \ on line 25\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,\
    \ -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,\
    \ -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4f5wit1a.php:35\n\
    Stack trace:\n#0 /tmp/tmp4f5wit1a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4f5wit1a.php\
    \ on line 35\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujhdp3tl.php:34\n\
    Stack trace:\n#0 /tmp/tmpujhdp3tl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpujhdp3tl.php\
    \ on line 34\n"
  timestamp: 1659799078
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = (string)$a;\n  $b = (string)$b;\n  return (int)$a[strlen($a)-1]\
    \ * (int)$b[strlen($b)-1];\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = $a % 10;\n    $b = $b\
    \ % 10;\n    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqvuovl1.php:26\n\
    Stack trace:\n#0 /tmp/tmplqvuovl1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplqvuovl1.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n    $a = $a[strlen($a) -\
    \ 1];\n    $b = $b[strlen($b) - 1];\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659799079
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o1nywyt.php:26\n\
    Stack trace:\n#0 /tmp/tmp4o1nywyt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4o1nywyt.php\
    \ on line 26\n"
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730748
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1659799078

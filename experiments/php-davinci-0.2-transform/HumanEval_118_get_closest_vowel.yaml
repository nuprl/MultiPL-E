name: HumanEval_118_get_closest_vowel
language: php
prompt: "<?php\n// You are given a word. Your task is to find the closest vowel that\
  \ stands between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel($word)\
  \ {\n"
tests: "function candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Above\") !== \"\
  o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index =\
    \ -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return \"\"\
    ;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n            break;\n        }\n    }\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_index = $i;\n            $consonant_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found && $consonant_found)\
    \ {\n        return $word[$vowel_index];\n    } else {\n        return '';\n \
    \   }\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_consonant_index\
    \ = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $closest_vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants)) {\n   \
    \         $closest_consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($closest_vowel_index - $closest_consonant_index == 1) {\n        return\
    \ '';\n    }\n    return $closest_vowel;\n}\n", "    $vowels = \"aeiou\";\n  \
    \  $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_distance = $word_length;\n    for ($i = 0; $i <\
    \ $word_length; $i++) {\n        $char = $word[$i];\n        if (strpos($vowels,\
    \ $char) !== false) {\n            $distance = $word_length - $i;\n          \
    \  if ($distance < $closest_vowel_distance) {\n                $closest_vowel\
    \ = $char;\n                $closest_vowel_distance = $distance;\n           \
    \ }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    $vowel_char = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n   \
    \     if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n  \
    \          $vowel_found = true;\n            $vowel_char = $word[$i];\n      \
    \      break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i = $vowel_index\
    \ + 1; $i < count($word); $i++) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                $vowel_distance = $i - $vowel_index;\n                break;\n\
    \            }\n        }\n    }\n    if ($vowel_distance == 1) {\n        return\
    \ strtoupper($vowel_char);\n    } else {\n        return '';\n    }\n}\n", " \
    \   $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_position = 0;\n    $vowel_distance\
    \ = 0;\n    $vowel_distance_temp = 0;\n    $vowel_position_temp = 0;\n    $vowel_found\
    \ = false;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_found = true;\n            $vowel_position_temp\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_found) {\n     \
    \   for ($i = $vowel_position_temp - 1; $i >= 0; $i--) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $vowel_distance_temp = $vowel_position_temp - $i;\n\
    \                if ($vowel_distance_temp > $vowel_distance) {\n             \
    \       $vowel_distance = $vowel_distance_temp;\n                    $vowel_position\
    \ = $vowel_position_temp;\n                }\n                break;\n       \
    \     }\n        }\n    }\n    if ($vowel_position == 0) {\n        return \"\"\
    ;\n    } else {\n        return $word[$vowel_position];\n    }\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "\t$vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"b\", \"c\"\
    , \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word = strtolower($word);\n\
    \t$word_array = str_split($word);\n\t$word_array_length = count($word_array);\n\
    \t$vowel_index = 0;\n\t$consonant_index = 0;\n\t$vowel_index_array = array();\n\
    \t$consonant_index_array = array();\n\t$vowel_index_array_length = 0;\n\t$consonant_index_array_length\
    \ = 0;\n\t$vowel_index_array_length_array = array();\n\t$vowel_index_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array = array();\n\t$vowel_index_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array = array();\n\
    \t$vowel_index_array_length_array_length_array_length_array_length = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    for ($i = $word_length - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if\
    \ ($i > 0 && in_array($word[$i - 1], $consonants)) {\n                if ($i <\
    \ $word_length - 1 && in_array($word[$i + 1], $consonants)) {\n              \
    \      $closest_vowel = $word[$i];\n                    break;\n             \
    \   }\n            }\n        }\n    }\n    return $closest_vowel;\n}\n", "  \
    \  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word\
    \ = strtolower($word);\n    $word_array = str_split($word);\n    $word_length\
    \ = count($word_array);\n    $result = \"\";\n    for ($i = $word_length - 1;\
    \ $i > 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n       \
    \     if (in_array($word_array[$i - 1], $consonants)) {\n                $result\
    \ = $word_array[$i];\n                break;\n            }\n        }\n    }\n\
    \    return $result;\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $vowel_index = 0;\n    $vowel_index_array\
    \ = array();\n    $vowel_index_array_length = 0;\n    $consonant_index = 0;\n\
    \    $consonant_index_array = array();\n    $consonant_index_array_length = 0;\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_index_array\
    \ = array();\n    $closest_vowel_index_array_length = 0;\n    $closest_vowel_index_array_length_array\
    \ = array();\n    $closest_vowel_index_array_length_array_length = 0;\n    $closest_vowel_index_array_length_array_length_array\
    \ = array();\n    $closest_vowel_index_array_length_array_length_array_length\
    \ = 0;\n    $closest_vowel_index_array_length_array_length_array_length_array\
    \ = array();\n    $closest_vowel_index_array_length_array_length_array_length_array_length\
    \ = 0;\n    $closest_vowel_index_array_length_array_length_array_length_array_length_array\
    \ = array();\n    $closest_vowel_index_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n    $closest_vowel_index", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $word = strtolower($word);\n    $word_len = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index === -1) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == 0) {\n                return \"\";\n    \
    \        }\n            if (!in_array($word[$i - 1], $vowels)) {\n           \
    \     return $word[$i];\n            }\n        }\n    }\n    return \"\";\n}\n",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $vowel_index = -1;\n    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n \
    \       if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    if ($vowel_index == -1) {\n       \
    \ return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n    \
    \    if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return \"\";\n}\n", "    $vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = $word_length;\n    for\
    \ ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            if ($i > 0 && $i < $word_length - 1) {\n                if (!in_array($word[$i\
    \ - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {\n                   \
    \ if ($i < $closest_vowel_index) {\n                        $closest_vowel_index\
    \ = $i;\n                        $closest_vowel = $word[$i];\n               \
    \     }\n                }\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_distance = 0;\n    for ($i = 0;\
    \ $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels)) {\n  \
    \          $vowel_distance = 0;\n            for ($j = $i + 1; $j < $word_length;\
    \ $j++) {\n                if (in_array($word[$j], $vowels)) {\n             \
    \       break;\n                }\n                $vowel_distance++;\n      \
    \      }\n            if ($vowel_distance > 0 && ($closest_vowel_distance == 0\
    \ || $vowel_distance < $closest_vowel_distance)) {\n                $closest_vowel\
    \ = $word[$i];\n                $closest_vowel_distance = $vowel_distance;\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "  $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n  $word = strtolower($word);\n\
    \  $word_length = strlen($word);\n  $vowel_index = 0;\n  $vowel_distance = 0;\n\
    \  $vowel_distance_temp = 0;\n  $vowel_index_temp = 0;\n  for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n    if (in_array($word[$i], $vowels)) {\n      $vowel_index_temp\
    \ = $i;\n      $vowel_distance_temp = $word_length - $i;\n      if ($vowel_distance_temp\
    \ > $vowel_distance) {\n        $vowel_distance = $vowel_distance_temp;\n    \
    \    $vowel_index = $vowel_index_temp;\n      }\n    }\n  }\n  if ($vowel_index\
    \ == 0) {\n    return \"\";\n  }\n  return $word[$vowel_index];\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    for ($i\
    \ = count($word_array) - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n           \
    \ $consonant_index = $i;\n            $consonant_found = true;\n            break;\n\
    \        }\n    }\n    if ($vowel_found && $consonant_found) {\n        $closest_vowel\
    \ = $word_array[$vowel_index];\n        $closest_vowel_index = $vowel_index;\n\
    \        for ($i = $vowel_index - 1; $i > $consonant_index; $i--) {\n        \
    \    if (in_array($word_array[$i], $vowels)) {\n                $closest_vowel\
    \ = $word_array[$i];\n                $closest_vowel_index = $i;\n           \
    \ }\n        }\n    }\n    return $closest", "    $vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = -1;\n    $closest_vowel_distance\
    \ = -1;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($vowel_distance < $closest_vowel_distance ||\
    \ $closest_vowel_distance == -1) {\n                $closest_vowel_distance =\
    \ $vowel_distance;\n                $closest_vowel_index = $vowel_index;\n   \
    \             $closest_vowel = $word[$i];\n            }\n        }\n    }\n \
    \   if ($closest_vowel_index == 0 || $closest_vowel_index == $word_length - 1)\
    \ {\n        return \"\";\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $word_length - $i;\n            if\
    \ ($vowel_distance < $closest_vowel_distance) {\n                $closest_vowel\
    \ = $word[$i];\n                $closest_vowel_distance = $vowel_distance;\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = array();\n    foreach ($word\
    \ as $key => $value) {\n        if (in_array($value, $vowels)) {\n           \
    \ $vowel_index[] = $key;\n        }\n    }\n    $vowel_index = array_reverse($vowel_index);\n\
    \    $result = \"\";\n    foreach ($vowel_index as $key => $value) {\n       \
    \ if ($value == 0) {\n            continue;\n        }\n        if (in_array($word[$value\
    \ - 1], $vowels)) {\n            continue;\n        }\n        if ($value == count($word)\
    \ - 1) {\n            $result = $word[$value];\n            break;\n        }\n\
    \        if (in_array($word[$value + 1], $vowels)) {\n            continue;\n\
    \        }\n        $result = $word[$value];\n        break;\n    }\n    return\
    \ $result;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n \
    \   $word_array = str_split($word);\n    $word_array_length = count($word_array);\n\
    \    $vowel_index = -1;\n    for ($i = $word_array_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (!in_array($word_array[$i], $vowels)) {\n            return $word_array[$vowel_index];\n\
    \        }\n    }\n    return \"\";\n}\n", "\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n\t$word_array = str_split($word);\n\
    \t$word_array_length = count($word_array);\n\t$vowel_index = 0;\n\t$consonant_index\
    \ = 0;\n\t$vowel_index_array = array();\n\t$consonant_index_array = array();\n\
    \t$vowel_index_array_length = 0;\n\t$consonant_index_array_length = 0;\n\t$closest_vowel\
    \ = '';\n\t$closest_vowel_index = 0;\n\t$closest_vowel_index_array = array();\n\
    \t$closest_vowel_index_array_length = 0;\n\t$closest_vowel_index_array_length_temp\
    \ = 0;\n\t$closest_vowel_index_array_length_temp_array = array();\n\t$closest_vowel_index_array_length_temp_array_length\
    \ = 0;\n\t$closest_vowel_index_array_length_temp_array_length_temp = 0;\n\t$closest_vowel_index_array_length_temp_array_length_temp_array\
    \ = array();\n\t$closest_vowel_index_array_length_temp_array_length_temp_array_length\
    \ = 0;\n\t$closest_vowel_index_array_length_temp_array_length_temp_array_length_temp\
    \ = 0;\n\t$closest_vowel_index_array_length_temp_array_length_temp_array_length_temp_array\
    \ = array();\n\t$closest_vowel_index_array_length_temp_array_length_temp", " \
    \   $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = 0;\n    $vowel_found = false;\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n            break;\n        }\n    }\n    if\
    \ ($vowel_found) {\n        for ($i = $vowel_index + 1; $i < count($word); $i++)\
    \ {\n            if (!in_array($word[$i], $vowels)) {\n                return\
    \ $word[$vowel_index];\n            }\n        }\n    }\n    return \"\";\n}\n",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array\
    \ = str_split($word);\n    $word_array_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $vowel_position = 0;\n    $consonant_position = 0;\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_position = 0;\n    $closest_vowel_distance = 0;\n\
    \    $closest_vowel_distance_temp = 0;\n    $closest_vowel_position_temp = 0;\n\
    \    $closest_vowel_temp = \"\";\n    $closest_vowel_found = false;\n    $closest_vowel_distance_temp\
    \ = 0;\n    $closest_vowel_position_temp = 0;\n    $closest_vowel_temp = \"\"\
    ;\n    $closest_vowel_found = false;\n    for ($i = 0; $i < $word_array_length;\
    \ $i++) {\n        $vowel_found = false;\n        $consonant_found = false;\n\
    \        $vowel_position = 0;\n        $consonant_position = 0;\n        $vowel_index\
    \ = 0;\n        $consonant_index = 0;\n        $closest_vowel_distance_temp =\
    \ 0;\n        $closest_vowel_position_temp = 0;\n        $closest_vowel_temp =\
    \ \"\";\n        $closest_vowel_found = false;\n", "    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == $word_length - 1)\
    \ {\n                return \"\";\n            }\n            if (!in_array($word[$i\
    \ + 1], $vowels)) {\n                return $word[$i];\n            }\n      \
    \  }\n    }\n    return \"\";\n}\n", "  $vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n  $word_array = str_split($word);\n  $word_array_length = count($word_array);\n\
    \  $vowel_index = -1;\n  $consonant_index = -1;\n  $vowel_found = false;\n  $consonant_found\
    \ = false;\n  for ($i = $word_array_length - 1; $i >= 0; $i--) {\n    if (in_array($word_array[$i],\
    \ $vowels)) {\n      $vowel_index = $i;\n      $vowel_found = true;\n    }\n \
    \   if (!in_array($word_array[$i], $vowels)) {\n      $consonant_index = $i;\n\
    \      $consonant_found = true;\n    }\n    if ($vowel_found && $consonant_found)\
    \ {\n      return $word_array[$vowel_index];\n    }\n  }\n  return \"\";\n}\n\n\
    echo get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word =\
    \ strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel =\
    \ '';\n    $closest_vowel_distance = 0;\n    for ($i = 0; $i < $word_length; $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = 0;\n            for ($j = $i + 1; $j < $word_length; $j++) {\n           \
    \     if (in_array($word[$j], $vowels)) {\n                    break;\n      \
    \          }\n                $vowel_distance++;\n            }\n            if\
    \ ($vowel_distance > 0 && ($closest_vowel_distance == 0 || $vowel_distance < $closest_vowel_distance))\
    \ {\n                $closest_vowel = $word[$i];\n                $closest_vowel_distance\
    \ = $vowel_distance;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    $vowel_char = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n   \
    \     if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n  \
    \          $vowel_found = true;\n            $vowel_char = $word[$i];\n      \
    \      break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i = $vowel_index\
    \ + 1; $i < count($word); $i++) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                $vowel_distance = $i - $vowel_index;\n                break;\n\
    \            }\n        }\n    }\n    if ($vowel_distance == 1) {\n        return\
    \ $vowel_char;\n    } else {\n        return '';\n    }\n}\n", "    $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_distance = 0;\n    $consonant_distance\
    \ = 0;\n    $closest_vowel = '';\n    $closest_vowel_distance = 0;\n    $closest_vowel_index\
    \ = 0;\n    $closest_consonant_index = 0;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            for ($j = $i; $j < $word_length; $j++) {\n              \
    \  if (in_array($word[$j], $consonants)) {\n                    $consonant_index\
    \ = $j;\n                    $vowel_distance = $consonant_index - $vowel_index;\n\
    \                    if ($vowel_distance > $closest_vowel_distance) {\n      \
    \                  $closest_vowel_distance = $vowel_distance;\n              \
    \          $closest_vowel_index = $vowel_index;\n                        $closest_consonant_index\
    \ = $consonant_index;\n                        $closest_vowel = $word[$vowel_index];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\n\
    echo get_closest_vowel", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_array\
    \ = str_split($word);\n    $word_array_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_distance_temp = 0;\n\
    \    $closest_vowel_index_temp = 0;\n    $closest_vowel_temp = '';\n    $closest_vowel_temp_index\
    \ = 0;\n    $closest_vowel_temp_distance = 0;\n    $closest_vowel_temp_distance_temp\
    \ = 0;\n    $closest_vowel_temp_index_temp = 0;\n    $closest_vowel_temp_temp\
    \ = '';\n    $closest_vowel_temp_temp_index = 0;\n    $closest_vowel_temp_temp_distance\
    \ = 0;\n    $closest_vowel_temp_temp_distance_temp = 0;\n    $closest_vowel_temp_temp_index_temp\
    \ = 0;\n    $closest_vowel_temp_temp_temp = '';\n    $closest_vowel_temp_temp_temp_index\
    \ = 0;\n    $closest_vowel_temp_temp_temp_distance = 0;\n    $closest_vowel_temp_temp_temp_distance_temp\
    \ = 0;\n    $closest_vowel_", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"\
    u\");\n\t$consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\",\
    \ \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\");\n\t$word = strtolower($word);\n\t$word_array = str_split($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$consonant_index = 0;\n\
    \t$vowel_found = false;\n\t$consonant_found = false;\n\t$vowel_index_array = array();\n\
    \t$consonant_index_array = array();\n\t$vowel_index_array_length = 0;\n\t$consonant_index_array_length\
    \ = 0;\n\t$vowel_index_array_index = 0;\n\t$consonant_index_array_index = 0;\n\
    \t$vowel_index_array_index_2 = 0;\n\t$consonant_index_array_index_2 = 0;\n\t$vowel_index_array_index_3\
    \ = 0;\n\t$consonant_index_array_index_3 = 0;\n\t$vowel_index_array_index_4 =\
    \ 0;\n\t$consonant_index_array_index_4 = 0;\n\t$vowel_index_array_index_5 = 0;\n\
    \t$consonant_index_array_index_5 = 0;\n\t$vowel_index_array_index_6 = 0;\n\t$consonant_index_array_index_6\
    \ = 0;\n\t$vowel_index_array_index_7 = 0;\n\t$consonant_index_array_index_7 =\
    \ 0;\n\t$vowel_index_array_index_8 = 0;\n\t$consonant_index_array_index_8 = 0;\n\
    \t$vowel_index_array_index_", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    for ($i = $word_length\
    \ - 1; $i > 0; $i--) {\n        if (in_array($word[$i], $vowels) && !in_array($word[$i\
    \ - 1], $vowels)) {\n            return $word[$i];\n        }\n    }\n    return\
    \ '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $vowel_found =\
    \ false;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        if ($vowel_index\
    \ == 0) {\n            return $word[$vowel_index];\n        } else {\n       \
    \     $vowel_found = false;\n            for ($i = $vowel_index + 1; $i < count($word);\
    \ $i++) {\n                if (!in_array($word[$i], $vowels)) {\n            \
    \        $vowel_found = true;\n                    break;\n                }\n\
    \            }\n            if ($vowel_found) {\n                return $word[$vowel_index];\n\
    \            } else {\n                return '';\n            }\n        }\n\
    \    } else {\n        return '';\n    }\n}\n", "    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = -1;\n    $consonant_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($vowel_index == -1 || $consonant_index == -1) {\n        return '';\n\
    \    }\n    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n\
    \    $closest_vowel_distance = 0;\n    for ($i=0; $i < $word_length; $i++) { \n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_distance = $word_length - $vowel_index;\n            if ($vowel_distance\
    \ > $closest_vowel_distance) {\n                $closest_vowel_distance = $vowel_distance;\n\
    \                $closest_vowel_index = $vowel_index;\n                $closest_vowel\
    \ = $word[$vowel_index];\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $word = strtolower($word);\n    $word_array = str_split($word);\n    $vowel_index\
    \ = -1;\n    $consonant_index = -1;\n    $closest_vowel = \"\";\n    $closest_vowel_distance\
    \ = -1;\n    for ($i = 0; $i < count($word_array); $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            if ($consonant_index\
    \ != -1) {\n                if ($vowel_index - $consonant_index < $closest_vowel_distance\
    \ || $closest_vowel_distance == -1) {\n                    $closest_vowel_distance\
    \ = $vowel_index - $consonant_index;\n                    $closest_vowel = $word_array[$i];\n\
    \                }\n            }\n        } else if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n        }\n    }\n    return\
    \ $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_position\
    \ = 0;\n    $vowel_distance = $word_length;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $distance\
    \ = $word_length - $i;\n            if ($distance < $vowel_distance) {\n     \
    \           $vowel_distance = $distance;\n                $vowel_position = $i;\n\
    \            }\n        }\n    }\n    if ($vowel_distance == $word_length) {\n\
    \        return '';\n    }\n    return $word[$vowel_position];\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == 0) {\n                return \"\";\n    \
    \        }\n            if (!in_array($word[$i - 1], $vowels)) {\n           \
    \     return $word[$i];\n            }\n        }\n    }\n    return \"\";\n}\n",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $i = $word_length - 1;\n    while ($i\
    \ >= 0) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i ==\
    \ 0) {\n                return \"\";\n            }\n            if (in_array($word[$i\
    \ - 1], $vowels)) {\n                $i--;\n                continue;\n      \
    \      }\n            return $word[$i];\n        }\n        $i--;\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n\
    \    $closest_vowel_distance = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            if ($i == 0) {\n   \
    \             if (in_array($word[$i + 1], $consonants)) {\n                  \
    \  $closest_vowel = $word[$i];\n                    $closest_vowel_index = $i;\n\
    \                    $closest_vowel_distance = 1;\n                }\n       \
    \     } elseif ($i == $word_length - 1) {\n                if (in_array($word[$i\
    \ - 1], $consonants)) {\n                    $closest_vowel = $word[$i];\n   \
    \                 $closest_vowel_index = $i;\n                    $closest_vowel_distance\
    \ = 1;\n                }\n            } else {\n                if (in_array($word[$i\
    \ - 1], $consonants) && in_array($word[$i + 1], $consonants)) {\n            \
    \        $closest_vowel = $word[$i];\n                    $closest_vowel_index\
    \ = $i;\n                    $closest_vowel_distance = 1;\n                }\n\
    \            }\n        }\n    }\n    for ($i = $closest_vowel_index + 1; $i <\
    \ $word_length; $i++) {\n        if (in_array($word", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n\
    \    $word_array = str_split($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    $vowel_count\
    \ = 0;\n    $consonant_count = 0;\n    $vowel_index_array = array();\n    $consonant_index_array\
    \ = array();\n    $vowel_index_array_count = 0;\n    $consonant_index_array_count\
    \ = 0;\n    $vowel_index_array_count_array = array();\n    $consonant_index_array_count_array\
    \ = array();\n    $vowel_index_array_count_array_count = 0;\n    $consonant_index_array_count_array_count\
    \ = 0;\n    $vowel_index_array_count_array_count_array = array();\n    $consonant_index_array_count_array_count_array\
    \ = array();\n    $vowel_index_array_count_array_count_array_count = 0;\n    $consonant_index_array_count_array_count_array_count\
    \ = 0;\n    $vowel_index_array_count_array_count_array_count_array = array();\n\
    \    $consonant_index_array_count_array_count_array_count_array = array();\n \
    \   $vowel_index_array_count_array_count_array_count_array_count = 0;\n    $consonant_index_array_count_array_count_array_count_array_count\
    \ = 0;\n    $vowel_index_array_count_array_count_array_", "    $vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word_array = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $vowel_index_array = [];\n    $consonant_index_array\
    \ = [];\n    $result = \"\";\n    for ($i = 0; $i < count($word_array); $i++)\
    \ {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index_array[]\
    \ = $i;\n            $vowel_found = true;\n        }\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_index_array[] = $i;\n            $consonant_found\
    \ = true;\n        }\n    }\n    if ($vowel_found && $consonant_found) {\n   \
    \     $vowel_index = $vowel_index_array[count($vowel_index_array) - 1];\n    \
    \    $consonant_index = $consonant_index_array[count($consonant_index_array) -\
    \ 1];\n        if ($vowel_index > $consonant_index) {\n            $result = $word_array[$vowel_index];\n\
    \        }\n    }\n    return $result;\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho \"<br>\";\necho get_closest_vowel(\"FULL\");\necho \"<br>\";\necho get_closest_vowel(\"\
    quick\");\necho \"<br>\";\necho get_closest_vowel(\"ab", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n   \
    \ $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = 0;\n   \
    \ for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $left_consonant_index = $i - 1;\n            $right_consonant_index\
    \ = $i + 1;\n            while ($left_consonant_index >= 0 && !in_array($word[$left_consonant_index],\
    \ $consonants)) {\n                $left_consonant_index--;\n            }\n \
    \           while ($right_consonant_index < $word_length && !in_array($word[$right_consonant_index],\
    \ $consonants)) {\n                $right_consonant_index++;\n            }\n\
    \            if ($left_consonant_index >= 0 && $right_consonant_index < $word_length)\
    \ {\n                $vowel_distance = $right_consonant_index - $left_consonant_index;\n\
    \                if ($closest_vowel_distance == 0 || $vowel_distance < $closest_vowel_distance)\
    \ {\n                    $closest_vowel_distance = $vowel_distance;\n        \
    \            $closest_vowel_index = $i;\n                }\n            }\n  \
    \      }\n    }\n    if ($closest_vowel_index > 0) {\n        $closest_vowel =\
    \ $word[$closest_v", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\");\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_reversed = array_reverse($word_array);\n    $vowel_index = 0;\n\
    \    $vowel_found = false;\n    $vowel_found_index = 0;\n    $consonant_found\
    \ = false;\n    $consonant_found_index = 0;\n    $vowel_found_index_reversed =\
    \ 0;\n    $consonant_found_index_reversed = 0;\n    $vowel_found_index_reversed_2\
    \ = 0;\n    $consonant_found_index_reversed_2 = 0;\n    $vowel_found_index_reversed_3\
    \ = 0;\n    $consonant_found_index_reversed_3 = 0;\n    $vowel_found_index_reversed_4\
    \ = 0;\n    $consonant_found_index_reversed_4 = 0;\n    $vowel_found_index_reversed_5\
    \ = 0;\n    $consonant_found_index_reversed_5 = 0;\n    $vowel_found_index_reversed_6\
    \ = 0;\n    $consonant_found_index_reversed_6 = 0;\n    $vowel_found_index_reversed_7\
    \ = 0;\n    $consonant_found_index_reversed_7 = 0;\n    $vowel_found_index_reversed_8\
    \ = 0;\n    $consonant_found_index_reversed_8 = 0;\n    $vowel_found_index_reversed_",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $word_length - $i;\n            if\
    \ ($vowel_distance < $closest_vowel_distance) {\n                $closest_vowel\
    \ = $word[$i];\n                $closest_vowel_distance = $vowel_distance;\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word\
    \ = str_split($word);\n    $vowel_index = 0;\n    $vowel_distance = 0;\n    $closest_vowel\
    \ = '';\n    $closest_vowel_distance = 0;\n    foreach ($word as $index => $letter)\
    \ {\n        if (in_array($letter, $vowels)) {\n            $vowel_index = $index;\n\
    \            $vowel_distance = count($word) - $vowel_index;\n            if ($vowel_distance\
    \ > $closest_vowel_distance) {\n                $closest_vowel = $letter;\n  \
    \              $closest_vowel_distance = $vowel_distance;\n            }\n   \
    \     }\n    }\n    return $closest_vowel;\n}\n", "    $vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index = $word_length;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && in_array($word[$i - 1], $consonants)\
    \ && $i < $word_length - 1 && in_array($word[$i + 1], $consonants)) {\n      \
    \          if ($i < $closest_vowel_index) {\n                    $closest_vowel_index\
    \ = $i;\n                    $closest_vowel = $word[$i];\n                }\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word_array = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $closest_vowel = \"\";\n\
    \    $closest_vowel_index = 0;\n    $closest_consonant_index = 0;\n    $closest_distance\
    \ = 0;\n    $distance = 0;\n    for ($i = count($word_array) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            for ($j = $vowel_index - 1; $j >= 0; $j--) {\n          \
    \      if (in_array($word_array[$j], $consonants)) {\n                    $consonant_index\
    \ = $j;\n                    $distance = $vowel_index - $consonant_index;\n  \
    \                  if ($closest_distance == 0 || $distance < $closest_distance)\
    \ {\n                        $closest_distance = $distance;\n                \
    \        $closest_vowel = $word_array[$vowel_index];\n                       \
    \ $closest_vowel_index = $vowel_index;\n                        $closest_consonant_index\
    \ = $consonant_index;\n                    }\n                    break;\n   \
    \             }\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\"\
    , \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n\
    \    $word_array_reversed = array_reverse($word_array);\n    $vowel_index = 0;\n\
    \    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found =\
    \ false;\n    $vowel_index_array = array();\n    $consonant_index_array = array();\n\
    \    $vowel_index_array_reversed = array();\n    $consonant_index_array_reversed\
    \ = array();\n    $vowel_index_array_reversed_index = 0;\n    $consonant_index_array_reversed_index\
    \ = 0;\n    $vowel_index_array_reversed_index_array = array();\n    $consonant_index_array_reversed_index_array\
    \ = array();\n    $vowel_index_array_reversed_index_array_reversed = array();\n\
    \    $consonant_index_array_reversed_index_array_reversed = array();\n    $vowel_index_array_reversed_index_array_reversed_index\
    \ = 0;\n    $consonant_index_array_reversed_index_array_reversed_index = 0;\n\
    \    $vowel_index_array_reversed_index_array_reversed_index_array = array();\n\
    \    $consonant_index_array_reversed_index_array_reversed_index_array = array();\n\
    \    $vowel_index_array_reversed_index_array_reversed_index_array_reversed = array();\n\
    \    $consonant_", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n\
    \    $closest_consonant_index = 0;\n    $closest_consonant_index_2 = 0;\n    $closest_vowel_distance\
    \ = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel_index = $i;\n            $closest_vowel\
    \ = $word[$i];\n            break;\n        }\n    }\n    for ($i = $closest_vowel_index;\
    \ $i < $word_length; $i++) {\n        if (in_array($word[$i], $consonants)) {\n\
    \            $closest_consonant_index = $i;\n            break;\n        }\n \
    \   }\n    for ($i = $closest_consonant_index; $i < $word_length; $i++) {\n  \
    \      if (in_array($word[$i], $consonants)) {\n            $closest_consonant_index_2\
    \ = $i;\n            break;\n        }\n    }\n    $closest_vowel_distance = $closest_consonant_index_2\
    \ - $closest_vowel_index;\n    if ($closest_vowel_distance > 1) {\n        return\
    \ $closest_vowel;\n    } else {\n        return '';\n    }\n}\necho get_clos",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_index_array = array();\n    $consonant_index_array = array();\n\
    \    for ($i = 0; $i < $word_array_length; $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            array_push($vowel_index_array,\
    \ $vowel_index);\n        }\n        if (in_array($word_array[$i], $consonants))\
    \ {\n            $consonant_index = $i;\n            array_push($consonant_index_array,\
    \ $consonant_index);\n        }\n    }\n    $vowel_index_array_length = count($vowel_index_array);\n\
    \    $consonant_index_array_length = count($consonant_index_array);\n    $vowel_index_array_length_minus_one\
    \ = $vowel_index_array_length - 1;\n    $consonant_index_array_length_minus_one\
    \ = $consonant_index_array_length - 1;\n    $vowel_index_array_length_minus_two\
    \ = $vowel_index_array_length - 2;\n    $consonant_index_array_length_minus_two\
    \ = $consonant_index_array_length - 2;\n    $vowel_index_array_length_minus_three\
    \ = $vowel_index_array", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_index = $word_length;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i > 0\
    \ && $i < $word_length - 1) {\n                if (!in_array($word[$i - 1], $vowels)\
    \ && !in_array($word[$i + 1], $vowels)) {\n                    if ($i < $closest_vowel_index)\
    \ {\n                        $closest_vowel_index = $i;\n                    \
    \    $closest_vowel = $word[$i];\n                    }\n                }\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word =\
    \ strtolower($word);\n    $word_array = str_split($word);\n    $word_array_length\
    \ = count($word_array);\n    $vowel_index = -1;\n    $consonant_index = -1;\n\
    \    $closest_vowel = \"\";\n    for ($i = $word_array_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n  \
    \          $consonant_index = $i;\n            break;\n        }\n    }\n    if\
    \ ($vowel_index != -1 && $consonant_index != -1) {\n        $closest_vowel = $word_array[$vowel_index];\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $result = \"\";\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n     \
    \   if (in_array($word[$i], $vowels)) {\n            if ($i == count($word) -\
    \ 1) {\n                $result = \"\";\n                break;\n            }\
    \ else if (in_array($word[$i + 1], $consonants)) {\n                $result =\
    \ $word[$i];\n                break;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n \
    \   $word = strtolower($word);\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $vowel_index = 0;\n    $vowel_count = 0;\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_count++;\n\
    \            if ($vowel_count == 2) {\n                $vowel_index = $i;\n  \
    \              break;\n            }\n        }\n    }\n    if ($vowel_count ==\
    \ 2) {\n        $vowel_index = count($word) - $vowel_index;\n        return $word[$vowel_index];\n\
    \    } else {\n        return \"\";\n    }\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word_array = str_split($word);\n    $word_array_length = count($word_array);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $vowel_index_array = [];\n    $consonant_index_array\
    \ = [];\n    for ($i = $word_array_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            array_push($vowel_index_array, $vowel_index);\n        }\n      \
    \  if (in_array($word_array[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n            array_push($consonant_index_array,\
    \ $consonant_index);\n        }\n        if ($vowel_found && $consonant_found)\
    \ {\n            $vowel_found = false;\n            $consonant_found = false;\n\
    \        }\n    }\n    $vowel_index_array_length = count($vowel_index_array);\n\
    \    $consonant_index_array_length = count($consonant_index_array);\n    $vowel_index_array_last_index\
    \ = $vowel_index_array_length - 1;\n    $consonant_index_array_last_index = $consonant_index_array_length\
    \ - 1;\n    $vowel_index_array_last_", "    $vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n    $word = strtolower($word);\n    $word_len = strlen($word);\n\
    \    $vowel_index = -1;\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n     \
    \   if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n    \
    \        break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_array\
    \ = str_split($word);\n    $word_array_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    for ($i = $word_array_length - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n  \
    \          $consonant_index = $i;\n            break;\n        }\n    }\n    if\
    \ ($vowel_index == 0 || $consonant_index == 0) {\n        return '';\n    }\n\
    \    return $word_array[$vowel_index];\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = str_split($word);\n    $word = array_reverse($word);\n  \
    \  $vowel = '';\n    $consonant = '';\n    foreach ($word as $key => $value) {\n\
    \        if (in_array($value, $vowels)) {\n            $vowel = $value;\n    \
    \        break;\n        }\n    }\n    foreach ($word as $key => $value) {\n \
    \       if (!in_array($value, $vowels)) {\n            $consonant = $value;\n\
    \            break;\n        }\n    }\n    if ($vowel == '' || $consonant == '')\
    \ {\n        return '';\n    }\n    return $vowel;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n    $vowel_index = 0;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == 0) {\n        return '';\n    }\n    for ($i =\
    \ $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = strtolower($word);\n\
    \  $word_length = strlen($word);\n  $closest_vowel = '';\n  $closest_vowel_distance\
    \ = 0;\n  for ($i = 0; $i < $word_length; $i++) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $vowel_distance = $word_length - $i;\n      if ($closest_vowel_distance\
    \ == 0 || $vowel_distance < $closest_vowel_distance) {\n        $closest_vowel\
    \ = $word[$i];\n        $closest_vowel_distance = $vowel_distance;\n      }\n\
    \    }\n  }\n  return $closest_vowel;\n}\n", "    $vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel = \"\";\n    $prev = \"\";\n  \
    \  $next = \"\";\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            if ($i == 0) {\n \
    \               $prev = \"\";\n            } else {\n                $prev = $word[$i\
    \ - 1];\n            }\n            if ($i == count($word) - 1) {\n          \
    \      $next = \"\";\n            } else {\n                $next = $word[$i +\
    \ 1];\n            }\n            if ($prev != \"\" && $next != \"\") {\n    \
    \            break;\n            }\n        }\n    }\n    if ($prev == \"\" ||\
    \ $next == \"\") {\n        return \"\";\n    } else {\n        return $vowel;\n\
    \    }\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $word = strtolower($word);\n    $word_length = strlen($word);\n    for\
    \ ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            if ($i == $word_length - 1) {\n                return \"\";\n\
    \            } else {\n                if (in_array($word[$i + 1], $consonants))\
    \ {\n                    return $word[$i];\n                }\n            }\n\
    \        }\n    }\n    return \"\";\n}\n", "    $vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n    $word_array = str_split($word);\n    $word_array_reverse\
    \ = array_reverse($word_array);\n    $vowel_found = false;\n    $vowel_index =\
    \ 0;\n    $vowel_letter = \"\";\n    for ($i = 0; $i < count($word_array_reverse);\
    \ $i++) {\n        if ($vowel_found) {\n            if (!in_array($word_array_reverse[$i],\
    \ $vowels)) {\n                $vowel_letter = $word_array_reverse[$vowel_index];\n\
    \                break;\n            }\n        } else {\n            if (in_array($word_array_reverse[$i],\
    \ $vowels)) {\n                $vowel_found = true;\n                $vowel_index\
    \ = $i;\n            }\n        }\n    }\n    return $vowel_letter;\n}\n", " \
    \   $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $left_consonant_index = $i - 1;\n            $right_consonant_index\
    \ = $i + 1;\n            while ($left_consonant_index >= 0 && !in_array($word[$left_consonant_index],\
    \ $consonants)) {\n                $left_consonant_index--;\n            }\n \
    \           while ($right_consonant_index < $word_length && !in_array($word[$right_consonant_index],\
    \ $consonants)) {\n                $right_consonant_index++;\n            }\n\
    \            if ($left_consonant_index >= 0 && $right_consonant_index < $word_length)\
    \ {\n                $distance = $right_consonant_index - $left_consonant_index\
    \ - 1;\n                if ($distance < $closest_vowel_distance) {\n         \
    \           $closest_vowel_distance = $distance;\n                    $closest_vowel_index\
    \ = $i;\n                }\n            }\n        }\n    }\n    if ($closest_vowel_index\
    \ > 0) {\n        $closest_vowel = $word[$closest_vowel_index];\n    }\n    return\
    \ $closest_vowel;", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\");\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    $vowel_index_array\
    \ = array();\n    $consonant_index_array = array();\n    $closest_vowel = \"\"\
    ;\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_distance_array\
    \ = array();\n    $closest_vowel_index_array = array();\n    $closest_vowel_index_array_length\
    \ = 0;\n    $closest_vowel_index_array_index = 0;\n    $closest_vowel_index_array_index_length\
    \ = 0;\n    $closest_vowel_index_array_index_index = 0;\n    $closest_vowel_index_array_index_index_length\
    \ = 0;\n    $closest_vowel_index_array_index_index_index = 0;\n    $closest_vowel_index_array_index_index_index_length\
    \ = 0;\n    $closest_vowel_index_array_index_index_index_index = 0;\n    $closest_vowel_index_array_index_index_index_index_length\
    \ = 0;\n    $closest_vowel_index_array_index_index_index_index_index = 0;\n",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $closest_vowel = $word[$i];\n\
    \            break;\n        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word_array = str_split($word);\n    $word_length = count($word_array);\n\
    \    $last_consonant_index = 0;\n    $first_consonant_index = 0;\n    $closest_vowel_index\
    \ = 0;\n    $closest_vowel = '';\n    for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word_array[$i], $consonants)) {\n            $last_consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $last_consonant_index\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n\
    \            $first_consonant_index = $i;\n            break;\n        }\n   \
    \ }\n    if ($first_consonant_index === 0) {\n        return '';\n    }\n    for\
    \ ($i = $first_consonant_index + 1; $i < $last_consonant_index; $i++) {\n    \
    \    if (in_array($word_array[$i], $vowels)) {\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ===\
    \ 0) {\n        return '';\n    }\n    $closest_vowel = $word_array[$closest_vowel_index];\n\
    \    return $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\");\necho \"\\\
    n\";\necho get_closest_", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n   \
    \ $word = strtolower($word);\n    $word_len = strlen($word);\n    $i = $word_len\
    \ - 1;\n    $vowel_pos = -1;\n    while ($i >= 0) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos = $i;\n            break;\n        }\n \
    \       $i--;\n    }\n    if ($vowel_pos == -1) {\n        return '';\n    }\n\
    \    $i = $vowel_pos - 1;\n    while ($i >= 0) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_pos];\n        }\n        $i--;\n\
    \    }\n    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n    $word = strtolower($word);\n    $word_array =\
    \ str_split($word);\n    $word_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $vowel_index_array = array();\n    $vowel_index_array_length = 0;\n\
    \    $consonant_index = 0;\n    $consonant_index_array = array();\n    $consonant_index_array_length\
    \ = 0;\n    $closest_vowel = \"\";\n    for ($i = 0; $i < $word_length; $i++)\
    \ {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            array_push($vowel_index_array, $vowel_index);\n        }\n\
    \        if (in_array($word_array[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n            array_push($consonant_index_array, $consonant_index);\n \
    \       }\n    }\n    $vowel_index_array_length = count($vowel_index_array);\n\
    \    $consonant_index_array_length = count($consonant_index_array);\n    if ($vowel_index_array_length\
    \ == 0 || $consonant_index_array_length == 0) {\n        return $closest_vowel;\n\
    \    }\n    for ($i = 0; $i < $vowel_index_array_length; $i++) {\n        for\
    \ ($j = 0; $j < $consonant_index_array_length; $j++) {\n            if ($vowel_index",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n    $word = str_split($word);\n    $result = '';\n    $index = 0;\n \
    \   $distance = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == 0) {\n          \
    \      break;\n            }\n            if (in_array($word[$i - 1], $consonants))\
    \ {\n                if ($i == count($word) - 1) {\n                    $result\
    \ = $word[$i];\n                    break;\n                }\n              \
    \  if (in_array($word[$i + 1], $consonants)) {\n                    $result =\
    \ $word[$i];\n                    break;\n                }\n            }\n \
    \       }\n    }\n    return $result;\n}\necho get_closest_vowel(\"yogurt\") .\
    \ \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == $word_length - 1)\
    \ {\n                return '';\n            }\n            if (in_array($word[$i\
    \ + 1], $vowels)) {\n                continue;\n            }\n            return\
    \ $word[$i];\n        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n   \
    \     if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n  \
    \          break;\n        }\n    }\n    if ($vowel_index == 0) {\n        return\
    \ '';\n    }\n    $vowel_index_left = $vowel_index - 1;\n    $vowel_index_right\
    \ = $vowel_index + 1;\n    if (in_array($word[$vowel_index_left], $vowels) ||\
    \ in_array($word[$vowel_index_right], $vowels)) {\n        return '';\n    }\n\
    \    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"yogurt\") . \"\
    \\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word_array = str_split($word);\n    $word_length = count($word_array);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $vowel_position = 0;\n    $consonant_position\
    \ = 0;\n    $closest_vowel = '';\n    $closest_vowel_position = 0;\n    $closest_vowel_distance\
    \ = 0;\n    $closest_vowel_distance_temp = 0;\n    $closest_vowel_position_temp\
    \ = 0;\n    $closest_vowel_temp = '';\n    $closest_vowel_found = false;\n   \
    \ $closest_vowel_distance_temp = 0;\n    $closest_vowel_position_temp = 0;\n \
    \   $closest_vowel_temp = '';\n    $closest_vowel_found = false;\n    $closest_vowel_distance_temp\
    \ = 0;\n    $closest_vowel_position_temp = 0;\n    $closest_vowel_temp = '';\n\
    \    $closest_vowel_found = false;\n    $closest_vowel_distance_temp = 0;\n  \
    \  $closest_vowel_position_temp = 0;\n    $closest_vowel_temp = '';\n    $closest_vowel_found\
    \ = false;\n    $closest_vowel_distance_temp = 0;\n    $closest_vowel", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $i = $word_length - 1;\n    $vowel_index\
    \ = -1;\n    while ($i >= 0) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            break;\n        }\n        $i--;\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    $i = $vowel_index\
    \ - 1;\n    while ($i >= 0) {\n        if (!in_array($word[$i], $vowels)) {\n\
    \            return $word[$vowel_index];\n        }\n        $i--;\n    }\n  \
    \  return \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $closest_vowel = $word[$i];\n            break;\n        }\n    }\n    return\
    \ $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = str_split($word);\n    $vowel_index = 0;\n    $vowel_distance = 0;\n    for\
    \ ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            break;\n        }\n    }\n  \
    \  for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $vowel_index - $i;\n            break;\n\
    \        }\n    }\n    if ($vowel_distance == 0) {\n        return '';\n    }\n\
    \    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"yogurt\") . \"\
    \\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word =\
    \ strtolower($word);\n    $word_array = str_split($word);\n    $word_array_length\
    \ = count($word_array);\n    $vowel_index = 0;\n    $consonant_index = 0;\n  \
    \  $vowel_found = false;\n    $consonant_found = false;\n    $vowel_index_array\
    \ = array();\n    $consonant_index_array = array();\n    $vowel_index_array_length\
    \ = 0;\n    $consonant_index_array_length = 0;\n    $closest_vowel = \"\";\n \
    \   $closest_vowel_index = 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_distance_array\
    \ = array();\n    $closest_vowel_distance_array_length = 0;\n    $closest_vowel_distance_index\
    \ = 0;\n    $closest_vowel_distance_index_array = array();\n    $closest_vowel_distance_index_array_length\
    \ = 0;\n    $closest_vowel_distance_index_array_length_2 = 0;\n    $closest_vowel_distance_index_array_length_3\
    \ = 0;\n    $closest_vowel_distance_index_array_length_4 = 0;\n    $closest_vowel_distance_index_array_length_5\
    \ = 0;\n    $closest_vowel_distance_index_array_length_6 = 0;\n    $closest_vowel_distance_index_array_length_7\
    \ = 0;\n    $cl", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word =\
    \ strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel =\
    \ '';\n    $closest_vowel_distance = $word_length;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $word_length - $i;\n            if ($vowel_distance < $closest_vowel_distance)\
    \ {\n                $closest_vowel = $word[$i];\n                $closest_vowel_distance\
    \ = $vowel_distance;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    $consonant_index = -1;\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($consonant_index == -1) {\n        return \"\";\n    }\n    $consonant_index\
    \ = -1;\n    for ($i = $vowel_index + 1; $i < $word_length; $i++) {\n        if\
    \ (!in_array($word[$i], $vowels)) {\n            $consonant_index = $i;\n    \
    \        break;\n        }\n    }\n    if ($consonant_index == -1) {\n       \
    \ return \"\";\n    }\n    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $result = '';\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n        }\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            $consonant_found\
    \ = true;\n        }\n        if ($vowel_found && $consonant_found) {\n      \
    \      if ($vowel_index > $consonant_index) {\n                $result = $word[$vowel_index];\n\
    \                break;\n            }\n        }\n    }\n    return $result;\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_consonant_index\
    \ = 0;\n    $closest_consonant_index_2 = 0;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel_index\
    \ = $i;\n            for ($j = $i; $j >= 0; $j--) {\n                if (in_array($word[$j],\
    \ $consonants)) {\n                    $closest_consonant_index = $j;\n      \
    \              break;\n                }\n            }\n            for ($k =\
    \ $i; $k < $word_length; $k++) {\n                if (in_array($word[$k], $consonants))\
    \ {\n                    $closest_consonant_index_2 = $k;\n                  \
    \  break;\n                }\n            }\n            if ($closest_consonant_index_2\
    \ - $closest_vowel_index > $closest_vowel_index - $closest_consonant_index) {\n\
    \                $closest_vowel = $word[$closest_vowel_index];\n            }\n\
    \        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_v",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n    $word = strtolower($word);\n    $vowel_index = -1;\n    $consonant_index\
    \ = -1;\n    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n        }\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($vowel_index > $consonant_index) {\n        return $word[$vowel_index];\n\
    \    }\n    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $result = \"\";\n    for ($i = count($word_array)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n \
    \           $vowel_index = $i;\n            break;\n        }\n    }\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($vowel_index > $consonant_index) {\n        $result =\
    \ $word_array[$vowel_index];\n    }\n    return $result;\n}\n", "    $vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word_array = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $closest_vowel = \"\";\n\
    \    $closest_vowel_distance = 0;\n    for ($i = count($word_array) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_distance = count($word_array) - $vowel_index;\n  \
    \          if ($vowel_distance > $closest_vowel_distance) {\n                $closest_vowel\
    \ = $word_array[$i];\n                $closest_vowel_distance = $vowel_distance;\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n    $result = '';\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == count($word) - 1) {\n                continue;\n\
    \            }\n            if (in_array($word[$i + 1], $vowels)) {\n        \
    \        continue;\n            }\n            $result = $word[$i];\n        \
    \    break;\n        }\n    }\n    return $result;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n   \
    \ $word = strtolower($word);\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $result = '';\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i + 1 < count($word) && in_array($word[$i + 1],\
    \ $consonants)) {\n                $result = $word[$i];\n                break;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array\
    \ = str_split($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found\
    \ = false;\n    $consonant_found = false;\n    $vowel_position = 0;\n    $consonant_position\
    \ = 0;\n    $vowel_position_array = array();\n    $consonant_position_array =\
    \ array();\n    $vowel_position_array_index = 0;\n    $consonant_position_array_index\
    \ = 0;\n    $vowel_position_array_length = 0;\n    $consonant_position_array_length\
    \ = 0;\n    $closest_vowel = \"\";\n    $closest_vowel_position = 0;\n    $closest_vowel_position_index\
    \ = 0;\n    $closest_vowel_position_array = array();\n    $closest_vowel_position_array_index\
    \ = 0;\n    $closest_vowel_position_array_length = 0;\n    $closest_vowel_position_array_length_index\
    \ = 0;\n    $closest_vowel_position_array_length_index_value = 0;\n    $closest_vowel_position_array_length_index_value_index\
    \ = 0;\n    $closest_vowel_position_array_length_index_value_index_value = 0;\n\
    \    $closest_vowel_position_array_length_index_value_index_value_index = 0;\n\
    \    $closest_vowel_position_array_length_index_value_index_value_index_value",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            if ($i > 0 && !in_array($word[$i\
    \ - 1], $vowels)) {\n                $closest_vowel = $word[$i];\n           \
    \     $closest_vowel_index = $i;\n                break;\n            }\n    \
    \    }\n    }\n    if ($closest_vowel_index == $word_length) {\n        return\
    \ '';\n    }\n    return $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    for ($i\
    \ = 0; $i < count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            $vowel_found = true;\n          \
    \  break;\n        }\n    }\n    for ($i = $vowel_index + 1; $i < count($word);\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n            break;\n        }\n\
    \    }\n    if ($vowel_found && $consonant_found) {\n        return $word[$vowel_index];\n\
    \    } else {\n        return '';\n    }\n}\n", "    $vowels = array(\"a\", \"\
    e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_len = strlen($word);\n\
    \    $i = $word_len - 1;\n    $vowel_pos = -1;\n    while ($i >= 0) {\n      \
    \  if (in_array($word[$i], $vowels)) {\n            $vowel_pos = $i;\n       \
    \     break;\n        }\n        $i--;\n    }\n    if ($vowel_pos == -1) {\n \
    \       return \"\";\n    }\n    $i = $vowel_pos - 1;\n    while ($i >= 0) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_pos];\n\
    \        }\n        $i--;\n    }\n    return \"\";\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_len\
    \ = strlen($word);\n    $vowel_pos = 0;\n    $vowel_pos_arr = array();\n    for\
    \ ($i = 0; $i < $word_len; $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_pos_arr[] = $i;\n        }\n    }\n    if (count($vowel_pos_arr)\
    \ == 0) {\n        return \"\";\n    }\n    $vowel_pos = $vowel_pos_arr[count($vowel_pos_arr)\
    \ - 1];\n    if ($vowel_pos == $word_len - 1) {\n        return \"\";\n    }\n\
    \    return $word[$vowel_pos];\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\\
    n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $vowel_count = 0;\n    for ($i = count($word_array) - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_count++;\n        } else {\n            if ($vowel_count\
    \ == 1) {\n                return $word_array[$vowel_index];\n            } else\
    \ {\n                $vowel_count = 0;\n            }\n        }\n    }\n    return\
    \ '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == $word_length - 1) {\n                continue;\n\
    \            }\n            if ($i == 0) {\n                continue;\n      \
    \      }\n            if (in_array($word[$i + 1], $vowels)) {\n              \
    \  continue;\n            }\n            if (in_array($word[$i - 1], $vowels))\
    \ {\n                continue;\n            }\n            $closest_vowel = $word[$i];\n\
    \            $closest_vowel_index = $i;\n            break;\n        }\n    }\n\
    \    return $closest_vowel;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = $word_length;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($vowel_distance < $closest_vowel_distance)\
    \ {\n                $closest_vowel_distance = $vowel_distance;\n            \
    \    $closest_vowel_index = $vowel_index;\n                $closest_vowel = $word[$i];\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n    $vowel_pos\
    \ = array();\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos[] = $i;\n        }\n    }\n    if (count($vowel_pos)\
    \ == 0) {\n        return \"\";\n    }\n    $vowel_pos = array_reverse($vowel_pos);\n\
    \    for ($i = 0; $i < count($vowel_pos); $i++) {\n        if ($vowel_pos[$i]\
    \ != count($word) - 1) {\n            if (!in_array($word[$vowel_pos[$i] + 1],\
    \ $vowels)) {\n                return $word[$vowel_pos[$i]];\n            }\n\
    \        }\n    }\n    return \"\";\n}\n", "    $vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word = strtolower($word);\n   \
    \ $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    for ($i = 0; $i < count($word); $i++)\
    \ {\n        if (in_array($word[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n            break;\n        }\n\
    \    }\n    if ($vowel_found && $consonant_found) {\n        if ($vowel_index\
    \ < $consonant_index) {\n            return $word[$vowel_index];\n        }\n\
    \    }\n    return \"\";\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $vowel_distance = 0;\n    $consonant_distance = 0;\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_distance = 0;\n    for ($i = count($word_array)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n \
    \           $vowel_found = true;\n            $vowel_index = $i;\n           \
    \ $vowel_distance = count($word_array) - $i;\n        }\n        if (!in_array($word_array[$i],\
    \ $vowels)) {\n            $consonant_found = true;\n            $consonant_index\
    \ = $i;\n            $consonant_distance = count($word_array) - $i;\n        }\n\
    \        if ($vowel_found && $consonant_found) {\n            if ($vowel_distance\
    \ - $consonant_distance < $closest_vowel_distance || $closest_vowel_distance ==\
    \ 0) {\n                $closest_vowel_distance = $vowel_distance - $consonant_distance;\n\
    \                $closest_vowel = $word_array[$vowel_index];\n            }\n\
    \            $vowel_found = false;\n            $consonant_found = false;\n  \
    \      }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $closest_vowel = \"\";\n\
    \    $closest_vowel_distance = 0;\n    $closest_vowel_index = 0;\n    for ($i\
    \ = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            $vowel_distance = $word_length -\
    \ $vowel_index;\n            if ($vowel_distance > $closest_vowel_distance) {\n\
    \                $closest_vowel_distance = $vowel_distance;\n                $closest_vowel_index\
    \ = $vowel_index;\n                $closest_vowel = $word[$closest_vowel_index];\n\
    \            }\n        }\n    }\n    if ($closest_vowel_index == 0) {\n     \
    \   return \"\";\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $result = '';\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if (isset($word[$i + 1]) && !in_array($word[$i + 1],\
    \ $vowels)) {\n                $result = $word[$i];\n                break;\n\
    \            }\n        }\n    }\n    return $result;\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $i = 0;\n    $vowel = '';\n    while ($i < count($word)) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            break;\n        }\n\
    \        $i++;\n    }\n    if ($vowel == '') {\n        return '';\n    }\n  \
    \  $i++;\n    while ($i < count($word)) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $vowel;\n        }\n        $i++;\n    }\n    return '';\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return '';\n    }\n    $consonant_index = -1;\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($consonant_index == -1) {\n        return '';\n    }\n    $consonant_index\
    \ = -1;\n    for ($i = $vowel_index + 1; $i < $word_length; $i++) {\n        if\
    \ (!in_array($word[$i], $vowels)) {\n            $consonant_index = $i;\n    \
    \        break;\n        }\n    }\n    if ($consonant_index == -1) {\n       \
    \ return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $closest_vowel = $word[$i];\n\
    \            if ($i > 0 && !in_array($word[$i - 1], $vowels)) {\n            \
    \    break;\n            }\n        }\n    }\n    return $closest_vowel;\n}\n",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $result = '';\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $result = $word[$i];\n            break;\n        }\n    }\n    return $result;\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\n\
    echo get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word =\
    \ strtolower($word);\n    $word_array = str_split($word);\n    $word_array_length\
    \ = count($word_array);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = 0;\n    for ($i = $word_array_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $closest_vowel = $word_array[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ 0) {\n        return \"\";\n    }\n    for ($i = $closest_vowel_index - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n     \
    \       return $closest_vowel;\n        }\n    }\n    return \"\";\n}\n\necho\
    \ get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") .\
    \ \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word =\
    \ strtolower($word);\n    $len = strlen($word);\n    $i = $len - 1;\n    $vowel\
    \ = '';\n    while ($i > 0) {\n        if (in_array($word[$i], $vowels)) {\n \
    \           $vowel = $word[$i];\n            if (!in_array($word[$i - 1], $vowels))\
    \ {\n                break;\n            }\n        }\n        $i--;\n    }\n\
    \    return $vowel;\n}\n", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n\t$word = strtolower($word);\n\t$word_length = strlen($word);\n\t$vowel_index\
    \ = 0;\n\t$vowel_distance = 0;\n\t$vowel_distance_min = $word_length;\n\tfor ($i\
    \ = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\
    \t\t$vowel_distance = $word_length - $i;\n\t\t\tif ($vowel_distance < $vowel_distance_min)\
    \ {\n\t\t\t\t$vowel_distance_min = $vowel_distance;\n\t\t\t\t$vowel_index = $i;\n\
    \t\t\t}\n\t\t}\n\t}\n\tif ($vowel_distance_min == $word_length) {\n\t\treturn\
    \ \"\";\n\t}\n\treturn $word[$vowel_index];\n}\n", "    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index + 1; $i < $word_length; $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $vowel_distance = $i - $vowel_index;\n        \
    \        break;\n            }\n        }\n    }\n    if ($vowel_distance > 0)\
    \ {\n        return $word[$vowel_index];\n    } else {\n        return '';\n \
    \   }\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ 0) {\n        return '';\n    }\n    for ($i = $closest_vowel_index - 1; $i\
    \ >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $closest_vowel;\n        }\n    }\n    return '';\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = -1;\n    $consonant_index = -1;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n        } else {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n        }\n        if ($vowel_found\
    \ && $consonant_found) {\n            break;\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        return $word[$vowel_index];\n    } else {\n\
    \        return '';\n    }\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$closest_vowel = '';\n\t$closest_vowel_index\
    \ = 0;\n\t$closest_vowel_distance = 0;\n\tfor ($i = 0; $i < $word_length; $i++)\
    \ {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\t\
    $vowel_distance = 0;\n\t\t\tfor ($j = $i; $j < $word_length; $j++) {\n\t\t\t\t\
    if (in_array($word[$j], $consonants)) {\n\t\t\t\t\t$vowel_distance = $j - $vowel_index;\n\
    \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($vowel_distance > 0) {\n\t\t\t\
    \tif ($closest_vowel_distance == 0) {\n\t\t\t\t\t$closest_vowel_distance = $vowel_distance;\n\
    \t\t\t\t\t$closest_vowel_index = $vowel_index;\n\t\t\t\t} elseif ($vowel_distance\
    \ < $closest_vowel_distance) {\n\t\t\t\t\t$closest_vowel_distance = $vowel_distance;\n\
    \t\t\t\t\t$closest_vowel_index = $vowel_index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    }\n\tif ($closest_vowel_distance > 0) {\n\t\t$", "    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $word = str_split($word);\n    $result = \"\";\n    for\
    \ ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $result = $word[$i];\n            break;\n        }\n    }\n\
    \    return $result;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\"\
    , \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $closest_vowel = \"\";\n\
    \    $closest_vowel_index = 0;\n    $closest_consonant_index = 0;\n    $closest_distance\
    \ = 0;\n    for ($i = 0; $i < count($word_array); $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            for ($j = $i; $j <\
    \ count($word_array); $j++) {\n                if (in_array($word_array[$j], $consonants))\
    \ {\n                    $consonant_index = $j;\n                    if ($closest_distance\
    \ == 0) {\n                        $closest_distance = $consonant_index - $vowel_index;\n\
    \                        $closest_vowel = $word_array[$vowel_index];\n       \
    \                 $closest_vowel_index = $vowel_index;\n                     \
    \   $closest_consonant_index = $consonant_index;\n                    } else {\n\
    \                        if ($consonant_index - $vowel_index < $closest_distance)\
    \ {\n                            $closest_distance = $consonant_index - $vowel_index;\n\
    \                            $closest_vowel = $word_array[$vowel_index];\n   \
    \                         $closest_vowel_index = $vowel_index;\n             \
    \               $closest_consonant_index = $consonant_index;\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word =\
    \ str_split($word);\n    $vowel_index = -1;\n    $consonant_index = -1;\n    for\
    \ ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n        }\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n        }\n        if ($vowel_index\
    \ != -1 && $consonant_index != -1) {\n            break;\n        }\n    }\n \
    \   if ($vowel_index != -1 && $consonant_index != -1) {\n        return $word[$vowel_index];\n\
    \    } else {\n        return \"\";\n    }\n}\n", "    $vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $closest_vowel = \"\";\n  \
    \  for ($i = $word_array_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $closest_vowel = $word_array[$i];\n            break;\n\
    \        }\n    }\n    if ($closest_vowel == \"\") {\n        return \"\";\n \
    \   }\n    for ($i = $word_array_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            if ($i == 0) {\n                return \"\";\n\
    \            }\n            if (in_array($word_array[$i - 1], $consonants)) {\n\
    \                return $closest_vowel;\n            }\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == 0) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n \
    \   $word_length = count($word_array);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    $vowel_index_array\
    \ = array();\n    $consonant_index_array = array();\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index_array[]\
    \ = $i;\n            $vowel_found = true;\n        }\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_index_array[] = $i;\n            $consonant_found\
    \ = true;\n        }\n    }\n    if ($vowel_found && $consonant_found) {\n   \
    \     $vowel_index = end($vowel_index_array);\n        $consonant_index = end($consonant_index_array);\n\
    \        if ($vowel_index > $consonant_index) {\n            return $word_array[$vowel_index];\n\
    \        }\n    }\n    return \"\";\n}\necho get_closest_vowel(\"yogurt\") . \"\
    \\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $count = count($word);\n    for ($i =\
    \ 0; $i < $count; $i++) {\n        if (in_array($word[$i], $vowels)) {\n     \
    \       if ($i == 0) {\n                return \"\";\n            } else {\n \
    \               if (in_array($word[$i - 1], $vowels)) {\n                    return\
    \ \"\";\n                } else {\n                    return $word[$i];\n   \
    \             }\n            }\n        }\n    }\n    return \"\";\n}\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $word = strtolower($word);\n    $word = str_split($word);\n    $word\
    \ = array_reverse($word);\n    $vowel_pos = 0;\n    $consonant_pos = 0;\n    $vowel_pos_arr\
    \ = array();\n    $consonant_pos_arr = array();\n    $result = '';\n    foreach\
    \ ($word as $key => $value) {\n        if (in_array($value, $vowels)) {\n    \
    \        $vowel_pos = $key;\n            $vowel_pos_arr[] = $vowel_pos;\n    \
    \    } else {\n            $consonant_pos = $key;\n            $consonant_pos_arr[]\
    \ = $consonant_pos;\n        }\n    }\n    $vowel_pos_arr = array_reverse($vowel_pos_arr);\n\
    \    $consonant_pos_arr = array_reverse($consonant_pos_arr);\n    foreach ($vowel_pos_arr\
    \ as $key => $value) {\n        if ($value > $consonant_pos_arr[$key]) {\n   \
    \         $result = $word[$value];\n            break;\n        }\n    }\n   \
    \ return $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word_arr\
    \ = str_split($word);\n    $result = '';\n    $min_distance = strlen($word);\n\
    \    for ($i = 0; $i < count($word_arr); $i++) {\n        if (in_array($word_arr[$i],\
    \ $vowels)) {\n            $left_consonant = false;\n            $right_consonant\
    \ = false;\n            for ($j = $i - 1; $j >= 0; $j--) {\n                if\
    \ (!in_array($word_arr[$j], $vowels)) {\n                    $left_consonant =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      for ($j = $i + 1; $j < count($word_arr); $j++) {\n                if (!in_array($word_arr[$j],\
    \ $vowels)) {\n                    $right_consonant = true;\n                \
    \    break;\n                }\n            }\n            if ($left_consonant\
    \ && $right_consonant) {\n                $distance = $i - $j;\n             \
    \   if ($distance < $min_distance) {\n                    $min_distance = $distance;\n\
    \                    $result = $word_arr[$i];\n                }\n           \
    \ }\n        }\n    }\n    return $result;\n}\n", "    $vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    $word = str_split($word);\n    $result = \"\";\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $result = $word[$i];\n            break;\n        }\n\
    \    }\n    return $result;\n}\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"];\n    $word = strtolower($word);\n    $word_len = strlen($word);\n\
    \    $result = \"\";\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            if ($i == $word_len - 1) {\n \
    \               $result = \"\";\n                break;\n            } else {\n\
    \                if (in_array($word[$i + 1], $consonants)) {\n               \
    \     $result = $word[$i];\n                    break;\n                }\n  \
    \          }\n        }\n    }\n    return $result;\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word =\
    \ str_split($word);\n    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_distance_temp\
    \ = 0;\n    $vowel_index_temp = 0;\n    $vowel_found = false;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index_temp = $i;\n            $vowel_distance_temp = count($word)\
    \ - $i;\n            if ($vowel_found) {\n                if ($vowel_distance_temp\
    \ < $vowel_distance) {\n                    $vowel_distance = $vowel_distance_temp;\n\
    \                    $vowel_index = $vowel_index_temp;\n                }\n  \
    \          } else {\n                $vowel_distance = $vowel_distance_temp;\n\
    \                $vowel_index = $vowel_index_temp;\n                $vowel_found\
    \ = true;\n            }\n        }\n    }\n    if ($vowel_found) {\n        return\
    \ $word[$vowel_index];\n    } else {\n        return \"\";\n    }\n}\n", "   \
    \ $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return '';\n    }\n    $vowel_index_left = $vowel_index - 1;\n    $vowel_index_right\
    \ = $vowel_index + 1;\n    while ($vowel_index_left >= 0 && $vowel_index_right\
    \ < $word_length) {\n        if (in_array($word[$vowel_index_left], $vowels) &&\
    \ in_array($word[$vowel_index_right], $vowels)) {\n            $vowel_index_left--;\n\
    \            $vowel_index_right++;\n        } else {\n            break;\n   \
    \     }\n    }\n    if ($vowel_index_left < 0) {\n        return $word[$vowel_index];\n\
    \    }\n    if ($vowel_index_right >= $word_length) {\n        return $word[$vowel_index];\n\
    \    }\n    $left_distance = $vowel_index - $vowel_index_left;\n    $right_distance\
    \ = $vowel_index_right - $vowel_index;\n    if ($left_distance < $right_distance)\
    \ {\n        return $word[$vowel_index];\n    } else {\n        return $word[$vowel_index_right];\n\
    \    }\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $closest_vowel = $word[$i];\n            $closest_vowel_index = $i;\n  \
    \          break;\n        }\n    }\n    if ($closest_vowel_index == 0) {\n  \
    \      return '';\n    }\n    if (in_array($word[$closest_vowel_index - 1], $vowels))\
    \ {\n        return '';\n    }\n    if (in_array($word[$closest_vowel_index +\
    \ 1], $vowels)) {\n        return '';\n    }\n    return $closest_vowel;\n}\n\n\
    echo get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");", "    $vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    $word = str_split($word);\n    $result = \"\";\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \        }\n        if (!in_array($word[$i], $vowels) && $vowel_found) {\n   \
    \         $consonant_index = $i;\n            $consonant_found = true;\n     \
    \   }\n        if ($vowel_found && $consonant_found) {\n            $result =\
    \ $word[$vowel_index];\n            break;\n        }\n    }\n    return $result;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $word_length - $i;\n            if\
    \ ($vowel_distance < $closest_vowel_distance) {\n                $closest_vowel\
    \ = $word[$i];\n                $closest_vowel_distance = $vowel_distance;\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = $word_length;\n\
    \    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $word = strtolower($word);\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $closest_vowel = '';\n    for ($i = 0; $i\
    \ < count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n     \
    \       $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    if ($vowel_found) {\n        for ($i = $vowel_index + 1;\
    \ $i < count($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n\
    \                $consonant_index = $i;\n                $consonant_found = true;\n\
    \                break;\n            }\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        $closest_vowel = $word[$vowel_index];\n    }\n\
    \    return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $closest_vowel = '';\n    $closest_vowel_index = 0;\n    for ($i = $word_length\
    \ - 1; $i > 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n        \
    \    if (in_array($word[$i - 1], $consonants) && in_array($word[$i + 1], $consonants))\
    \ {\n                $closest_vowel = $word[$i];\n                $closest_vowel_index\
    \ = $i;\n                break;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word_array = str_split($word);\n\
    \    $word_array_reverse = array_reverse($word_array);\n    $vowel_index = 0;\n\
    \    $vowel_index_reverse = 0;\n    $vowel_index_array = [];\n    $vowel_index_array_reverse\
    \ = [];\n    $vowel_index_array_reverse_final = [];\n    $vowel_index_array_final\
    \ = [];\n    $vowel_index_array_final_reverse = [];\n    $vowel_index_array_final_reverse_final\
    \ = [];\n    $vowel_index_array_final_final = [];\n    $vowel_index_array_final_final_reverse\
    \ = [];\n    $vowel_index_array_final_final_reverse_final = [];\n    $vowel_index_array_final_final_final\
    \ = [];\n    $vowel_index_array_final_final_final_reverse = [];\n    $vowel_index_array_final_final_final_reverse_final\
    \ = [];\n    $vowel_index_array_final_final_final_final = [];\n    $vowel_index_array_final_final_final_final_reverse\
    \ = [];\n    $vowel_index_array_final_final_final_final_reverse_final = [];\n\
    \    $vowel_index_array_final_final_final_final_final = [];\n    $vowel_index_array_final_final_final_final_final_reverse\
    \ = [];\n    $vowel_index_array_final_final_final_final_final_reverse_final =\
    \ [];\n    $vowel_index_array_final_final_final_final_final_final = [];\n    $vowel_index_array_final_final_final_final_final_final_reverse\
    \ = [];\n    $vowel_index_array_final_final_final_final_final_final_reverse_final\
    \ = [];\n    $vowel_index_array_final_final_", "    $vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"];\n    $word = str_split($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = -1;\n    $closest_consonant_index = -1;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $closest_vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants)) {\n   \
    \         $closest_consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($closest_vowel_index == -1 || $closest_consonant_index == -1) {\n   \
    \     return \"\";\n    }\n    return $closest_vowel;\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_distance = $word_length;\n   \
    \ for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_distance = $word_length - $i;\n            if ($vowel_distance\
    \ < $closest_vowel_distance) {\n                $closest_vowel = $word[$i];\n\
    \                $closest_vowel_distance = $vowel_distance;\n            }\n \
    \       }\n    }\n    return $closest_vowel;\n}\n", "  $vowels = array(\"a\",\
    \ \"e\", \"i\", \"o\", \"u\");\n  $consonants = array(\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n  $word_arr = str_split($word);\n\
    \  $word_arr_rev = array_reverse($word_arr);\n  $vowel_index = 0;\n  $consonant_index\
    \ = 0;\n  $vowel_found = false;\n  $consonant_found = false;\n  $vowel_count =\
    \ 0;\n  $consonant_count = 0;\n  $vowel_index_arr = array();\n  $consonant_index_arr\
    \ = array();\n  for ($i = 0; $i < count($word_arr_rev); $i++) {\n    if (in_array($word_arr_rev[$i],\
    \ $vowels)) {\n      $vowel_found = true;\n      $vowel_index = $i;\n      $vowel_index_arr[]\
    \ = $vowel_index;\n      $vowel_count++;\n    }\n    if (in_array($word_arr_rev[$i],\
    \ $consonants)) {\n      $consonant_found = true;\n      $consonant_index = $i;\n\
    \      $consonant_index_arr[] = $consonant_index;\n      $consonant_count++;\n\
    \    }\n    if ($vowel_found && $consonant_found) {\n      break;\n    }\n  }\n\
    \  if ($vowel_found && $consonant_found) {\n    if ($vowel_index < $consonant_index)\
    \ {\n      return $word_arr_rev[$vowel_index];\n    }\n  }\n  if ($vowel_count\
    \ > 1) {\n    $vowel_index_arr_rev = array_reverse($vow", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $word_array = str_split($word);\n    $word_array_reversed\
    \ = array_reverse($word_array);\n    $vowel_index = 0;\n    $vowel_position =\
    \ 0;\n    $vowel_found = false;\n    $vowel_position_found = false;\n    $vowel_position_array\
    \ = array();\n    $vowel_position_array_reversed = array();\n    $vowel_position_array_reversed_sorted\
    \ = array();\n    $vowel_position_array_sorted = array();\n    $vowel_position_array_sorted_reversed\
    \ = array();\n    $vowel_position_array_sorted_reversed_filtered = array();\n\
    \    $vowel_position_array_sorted_reversed_filtered_reversed = array();\n    $vowel_position_array_sorted_reversed_filtered_reversed_sorted\
    \ = array();\n    $vowel_position_array_sorted_reversed_filtered_reversed_sorted_reversed\
    \ = array();\n    $vowel_position_array_sorted_reversed_filtered_reversed_sorted_reversed_filtered\
    \ = array();\n    $vowel_position_array_sorted_reversed_filtered_reversed_sorted_reversed_filtered_reversed\
    \ = array();\n    $vowel_position_array_sorted_reversed_filtered_reversed_sorted_reversed_filtered_reversed_sorted\
    \ = array();\n    $vowel_position_array_sorted_reversed_filtered_reversed_sorted_reversed_filtered_reversed_sorted_reversed\
    \ = array();\n    $vowel_position_array_sorted_reversed_filtered_reversed_sorted_reversed_filtered_reversed_sorted",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_length = count($word_array);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $closest_vowel = $word_array[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ 0) {\n        return '';\n    }\n    for ($i = $closest_vowel_index - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n     \
    \       return $closest_vowel;\n        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_len\
    \ = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_len - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index === -1) {\n\
    \        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $result = '';\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $result = $word[$i];\n            break;\n        }\n    }\n    if ($result\
    \ == '') {\n        return $result;\n    }\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $consonants)) {\n           \
    \ $result = '';\n            break;\n        }\n    }\n    return $result;\n}\n\
    \necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel\
    \ = '';\n    $consonant = '';\n    for ($i = 0; $i < count($word); $i++) {\n \
    \       if (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n\
    \            break;\n        }\n    }\n    for ($i = 0; $i < count($word); $i++)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant = $word[$i];\n\
    \            break;\n        }\n    }\n    if ($vowel == '' || $consonant == '')\
    \ {\n        return '';\n    }\n    return $vowel;\n}\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    for ($i\
    \ = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            if ($i == $word_length - 1) {\n                return '';\n \
    \           }\n            if (!in_array($word[$i + 1], $vowels)) {\n        \
    \        return $word[$i];\n            }\n        }\n    }\n    return '';\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = 0;\n    $closest_vowel_distance = 0;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_distance = $word_length - $vowel_index;\n        \
    \    if ($vowel_distance > $closest_vowel_distance) {\n                $closest_vowel_distance\
    \ = $vowel_distance;\n                $closest_vowel_index = $vowel_index;\n \
    \               $closest_vowel = $word[$i];\n            }\n        }\n    }\n\
    \    if ($closest_vowel_index == 0) {\n        return \"\";\n    }\n    return\
    \ $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    for ($i = $word_length - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel\
    \ = $word[$i];\n            break;\n        }\n    }\n    if ($closest_vowel ==\
    \ '') {\n        return '';\n    }\n    for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $consonants)) {\n            if ($i == 0)\
    \ {\n                return '';\n            }\n            if (in_array($word[$i\
    \ - 1], $consonants)) {\n                return $closest_vowel;\n            }\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = 0;\n    $vowel_distance = 0;\n    $closest_vowel = '';\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n\
    \            $vowel_distance = $vowel_index - $i;\n            $closest_vowel\
    \ = $word[$vowel_index];\n            break;\n        }\n    }\n    return $closest_vowel;\n\
    }\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"quick\") . PHP_EOL;\necho get_closest_vowel(\"\
    ab\") . PHP_EOL;", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $closest_vowel = \"\";\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $consonants)) {\n            $consonant_index = $i;\n \
    \           $consonant_found = true;\n            break;\n        }\n    }\n \
    \   if ($vowel_found && $consonant_found) {\n        $closest_vowel = $word[$vowel_index];\n\
    \    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") .\
    \ \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ 0) {\n        return '';\n    }\n    for ($i = $closest_vowel_index - 1; $i\
    \ >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $closest_vowel;\n        }\n    }\n    return '';\n}\n", "    $vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strrev($word);\n    $last_vowel\
    \ = \"\";\n    $last_consonant = \"\";\n    for ($i = 0; $i < strlen($word); $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $last_vowel = $word[$i];\n\
    \            if ($last_consonant != \"\") {\n                return strrev($last_vowel);\n\
    \            }\n        } else {\n            $last_consonant = $word[$i];\n \
    \           if ($last_vowel != \"\") {\n                return strrev($last_vowel);\n\
    \            }\n        }\n    }\n    return \"\";\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n   \
    \ $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return '';\n    }\n    $left_consonant_index\
    \ = -1;\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $left_consonant_index = $i;\n            break;\n\
    \        }\n    }\n    if ($left_consonant_index == -1) {\n        return '';\n\
    \    }\n    $right_consonant_index = -1;\n    for ($i = $vowel_index + 1; $i <\
    \ $word_length; $i++) {\n        if (in_array($word[$i], $consonants)) {\n   \
    \         $right_consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($right_consonant_index == -1) {\n        return '';\n    }\n    return\
    \ $word[$vowel_index];\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\");\n    $word = strtolower($word);\n    $word_array =\
    \ str_split($word);\n    $word_array_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $vowel_index_array = array();\n    $consonant_index_array = array();\n\
    \    $vowel_index_array_length = 0;\n    $consonant_index_array_length = 0;\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    $closest_vowel_distance_array = array();\n    $closest_vowel_distance_array_length\
    \ = 0;\n    $closest_vowel_distance_index = 0;\n    $closest_vowel_distance_index_array\
    \ = array();\n    $closest_vowel_distance_index_array_length = 0;\n    $closest_vowel_distance_index_array_length_min\
    \ = 0;\n    $closest_vowel_distance_index_array_length_max = 0;\n    $closest_vowel_distance_index_array_length_min_index\
    \ = 0;\n    $closest_vowel_distance_index_array_length_max_index = 0;\n    $closest_vowel_distance_index_array_length_min_index_array\
    \ = array();\n    $closest_vowel_distance_index_array_length_", "    $vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strrev($word);\n    $result\
    \ = \"\";\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $result = $word[$i];\n            break;\n        }\n\
    \    }\n    return strrev($result);\n}\n\necho get_closest_vowel(\"yogurt\") .\
    \ \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            if ($i == $word_length\
    \ - 1) {\n                return \"\";\n            }\n            else if ($i\
    \ == 0) {\n                return \"\";\n            }\n            else if (!in_array($word[$i\
    \ - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {\n                return\
    \ $word[$i];\n            }\n        }\n    }\n    return \"\";\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index === -1) {\n\
    \        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word = strtolower($word);\n    $word_array\
    \ = str_split($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found\
    \ = false;\n    $consonant_found = false;\n    $vowel_index_array = array();\n\
    \    $consonant_index_array = array();\n    for ($i = 0; $i < count($word_array);\
    \ $i++) {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_index_array[]\
    \ = $i;\n        }\n        if (in_array($word_array[$i], $consonants)) {\n  \
    \          $consonant_index_array[] = $i;\n        }\n    }\n    for ($i = 0;\
    \ $i < count($vowel_index_array); $i++) {\n        for ($j = 0; $j < count($consonant_index_array);\
    \ $j++) {\n            if ($vowel_index_array[$i] > $consonant_index_array[$j])\
    \ {\n                $vowel_index = $vowel_index_array[$i];\n                $consonant_index\
    \ = $consonant_index_array[$j];\n                $vowel_found = true;\n      \
    \          $consonant_found = true;\n                break;\n            }\n \
    \       }\n        if ($vowel_found && $consonant_found) {\n            break;\n\
    \        }\n    }\n    if ($vowel_found && $consonant_found) {\n        return\
    \ $word_array[$vowel_index];\n    } else {\n       ", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = $word_length;\n    for ($i\
    \ = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ $word_length) {\n        return '';\n    }\n    for ($i = $closest_vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      return $closest_vowel;\n        }\n    }\n    return '';\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $len\
    \ = strlen($word);\n    $i = $len - 1;\n    while ($i > 0) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if (!in_array($word[$i - 1], $vowels)) {\n        \
    \        return $word[$i];\n            }\n        }\n        $i--;\n    }\n \
    \   return '';\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word\
    \ = strtolower($word);\n    $word_len = strlen($word);\n    $result = '';\n  \
    \  $min_distance = $word_len;\n    for ($i = 0; $i < $word_len; $i++) {\n    \
    \    if (in_array($word[$i], $vowels)) {\n            $left_consonant = $i - 1;\n\
    \            $right_consonant = $i + 1;\n            while ($left_consonant >=\
    \ 0 && in_array($word[$left_consonant], $vowels)) {\n                $left_consonant--;\n\
    \            }\n            while ($right_consonant < $word_len && in_array($word[$right_consonant],\
    \ $vowels)) {\n                $right_consonant++;\n            }\n          \
    \  if ($left_consonant >= 0 && $right_consonant < $word_len) {\n             \
    \   $distance = $right_consonant - $left_consonant - 1;\n                if ($distance\
    \ < $min_distance) {\n                    $min_distance = $distance;\n       \
    \             $result = $word[$i];\n                }\n            }\n       \
    \ }\n    }\n    return $result;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n    $word_length\
    \ = count($word_array);\n    $vowel_index = 0;\n    $consonant_index = 0;\n  \
    \  $vowel_found = false;\n    $consonant_found = false;\n    $vowel_position =\
    \ 0;\n    $consonant_position = 0;\n    $closest_vowel = \"\";\n    $closest_vowel_position\
    \ = 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_index = 0;\n    $closest_vowel_found\
    \ = false;\n    $closest_vowel_found_index = 0;\n    $closest_vowel_found_position\
    \ = 0;\n    $closest_vowel_found_distance = 0;\n    $closest_vowel_found_distance_index\
    \ = 0;\n    $closest_vowel_found_distance_position = 0;\n    $closest_vowel_found_distance_found\
    \ = false;\n    $closest_vowel_found_distance_found_index = 0;\n    $closest_vowel_found_distance_found_position\
    \ = 0;\n    $closest_vowel_found_distance_found_distance = 0;\n    $closest_vowel_found_distance_found_distance_index\
    \ = 0;\n    $closest_vowel_found_distance_found_distance_position = 0;\n    $closest_vowel_found_distance_found_distance_found\
    \ = false;\n    $closest_vowel_found_", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                $vowel_distance = $vowel_index - $i;\n                break;\n\
    \            }\n        }\n    }\n    return $vowel_distance;\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array\
    \ = str_split($word);\n    $word_length = count($word_array);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $vowel_position = 0;\n    $consonant_position = 0;\n    $vowel_distance\
    \ = 0;\n    $consonant_distance = 0;\n    $closest_vowel = \"\";\n    $closest_vowel_distance\
    \ = 0;\n    $closest_vowel_position = 0;\n    $closest_consonant_distance = 0;\n\
    \    $closest_consonant_position = 0;\n    $closest_consonant = \"\";\n    $closest_vowel_found\
    \ = false;\n    $closest_consonant_found = false;\n    $vowel_found_first = false;\n\
    \    $consonant_found_first = false;\n    $closest_vowel_found_first = false;\n\
    \    $closest_consonant_found_first = false;\n    $closest_vowel_found_second\
    \ = false;\n    $closest_consonant_found_second = false;\n    $closest_vowel_found_third\
    \ = false;\n    $closest_consonant_found_third = false;\n    $closest_vowel_found_fourth\
    \ = false;\n    $closest_consonant_found_fourth = false;\n    $closest_vowel_found_fifth\
    \ = false;\n    $closest_conson", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_index = $word_length;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     if ($i == $word_length - 1) {\n                continue;\n            }\n\
    \            if ($i == 0) {\n                continue;\n            }\n      \
    \      if (in_array($word[$i + 1], $vowels)) {\n                continue;\n  \
    \          }\n            if (in_array($word[$i - 1], $vowels)) {\n          \
    \      continue;\n            }\n            if ($i < $closest_vowel_index) {\n\
    \                $closest_vowel_index = $i;\n                $closest_vowel =\
    \ $word[$i];\n            }\n        }\n    }\n    return $closest_vowel;\n}\n",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = 0;\n    $vowel_distance = 0;\n\
    \    $closest_vowel = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $vowel_index - $i;\n            break;\n        }\n    }\n    if ($vowel_distance\
    \ > 1) {\n        $closest_vowel = $word[$vowel_index];\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    $consonant_index = -1;\n    $vowel_index_array = array();\n    $consonant_index_array\
    \ = array();\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            array_push($vowel_index_array,\
    \ $vowel_index);\n        }\n        if (in_array($word[$i], $consonants)) {\n\
    \            $consonant_index = $i;\n            array_push($consonant_index_array,\
    \ $consonant_index);\n        }\n    }\n    $vowel_index_array_length = count($vowel_index_array);\n\
    \    $consonant_index_array_length = count($consonant_index_array);\n    $vowel_index_array_last_index\
    \ = $vowel_index_array_length - 1;\n    $consonant_index_array_last_index = $consonant_index_array_length\
    \ - 1;\n    $vowel_index_array_last_value = $vowel_index_array[$vowel_index_array_last_index];\n\
    \    $consonant_index_array_last_value = $consonant_index_array[$consonant_index_array_last_index];\n\
    \    if ($vowel_index_array_last_value < $consonant_index_array_last_value) {\n\
    \        return \"\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word =\
    \ str_split($word);\n    $word = array_reverse($word);\n    $result = '';\n  \
    \  $is_vowel = false;\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $is_vowel = true;\n            $result = $value;\n\
    \        } else {\n            if ($is_vowel) {\n                break;\n    \
    \        }\n        }\n    }\n    return $result;\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel = '';\n    $consonant = '';\n \
    \   $result = '';\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel = $value;\n            break;\n        }\n \
    \   }\n    foreach ($word as $key => $value) {\n        if (!in_array($value,\
    \ $vowels)) {\n            $consonant = $value;\n            break;\n        }\n\
    \    }\n    if ($vowel && $consonant) {\n        $result = $vowel;\n    }\n  \
    \  return $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return '';\n    }\n    $vowel_index_left = -1;\n    for ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants)) {\n   \
    \         $vowel_index_left = $i;\n            break;\n        }\n    }\n    if\
    \ ($vowel_index_left == -1) {\n        return '';\n    }\n    $vowel_index_right\
    \ = -1;\n    for ($i = $vowel_index + 1; $i < $word_length; $i++) {\n        if\
    \ (in_array($word[$i], $consonants)) {\n            $vowel_index_right = $i;\n\
    \            break;\n        }\n    }\n    if ($vowel_index_right == -1) {\n \
    \       return '';\n    }\n    $vowel_index_left_distance = $vowel_index - $vowel_index_left;\n\
    \    $vowel_index_right_distance = $vowel_index_right - $vowel_index;\n    if\
    \ ($vowel_index_left_distance < $vowel_index_right_distance", "    $vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $found = false;\n    for\
    \ ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            $found = true;\n            break;\n\
    \        }\n    }\n    if (!$found) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($consonant_index == 0) {\n        return \"\";\n    }\n    return $word[$vowel_index];\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return '';\n    }\n    $left_consonant_index = -1;\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $left_consonant_index = $i;\n            break;\n        }\n\
    \    }\n    $right_consonant_index = -1;\n    for ($i = $vowel_index + 1; $i <\
    \ $word_length; $i++) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      $right_consonant_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($left_consonant_index == -1 || $right_consonant_index == -1) {\n      \
    \  return '';\n    }\n    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == $word_length - 1)\
    \ {\n                return \"\";\n            }\n            if (!in_array($word[$i\
    \ + 1], $vowels)) {\n                return $word[$i];\n            }\n      \
    \  }\n    }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && in_array($word[$i - 1], $consonants))\
    \ {\n                if ($i < $word_length - 1 && in_array($word[$i + 1], $consonants))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel = $word[$i];\n                        $closest_vowel_index\
    \ = $i;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($vowel_distance > $closest_vowel_distance)\
    \ {\n                $closest_vowel_distance = $vowel_distance;\n            \
    \    $closest_vowel_index = $vowel_index;\n                $closest_vowel = $word[$vowel_index];\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == $word_length - 1)\
    \ {\n                return '';\n            }\n            if (!in_array($word[$i\
    \ + 1], $vowels)) {\n                return $word[$i];\n            }\n      \
    \  }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = str_split($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    $closest_consonant_index = 0;\n    $closest_consonant_distance = 0;\n\
    \    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            $closest_vowel_distance = 0;\n            for ($j = $i; $j\
    \ < count($word); $j++) {\n                if (in_array($word[$j], $consonants))\
    \ {\n                    $closest_consonant_index = $j;\n                    $closest_consonant_distance\
    \ = $j - $i;\n                    break;\n                }\n            }\n \
    \       }\n        if (in_array($word[$i], $consonants)) {\n            for ($j\
    \ = $i; $j < count($word); $j++) {\n                if (in_array($word[$j], $vowels))\
    \ {\n                    if ($closest_vowel_distance == 0) {\n               \
    \         $closest_vowel = $word[$j];\n                        $closest_vowel_index\
    \ = $j;\n                        $closest_vowel_distance = $j - $i;\n        \
    \            } else {\n                        if ($j - $i < $closest_vowel_distance)\
    \ {\n                            $closest_", "    $vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"];\n    $word_array = str_split($word);\n    $word_length\
    \ = count($word_array);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = 0;\n    $closest_vowel_distance = 0;\n    $closest_consonant_index = 0;\n\
    \    $closest_consonant_distance = 0;\n    for ($i = $word_length - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n            $closest_vowel\
    \ = $word_array[$i];\n            $closest_vowel_index = $i;\n            break;\n\
    \        }\n    }\n    for ($i = $closest_vowel_index; $i >= 0; $i--) {\n    \
    \    if (in_array($word_array[$i], $consonants)) {\n            $closest_consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    $closest_vowel_distance = $closest_vowel_index\
    \ - $closest_consonant_index;\n    if ($closest_vowel_distance > 1) {\n      \
    \  return $closest_vowel;\n    } else {\n        return \"\";\n    }\n}\n", " \
    \   $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word_array = str_split($word);\n\
    \    $word_length = count($word_array);\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    $closest_vowel = \"\";\n    $closest_distance = 0;\n    for ($i =\
    \ $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($vowel_distance > $closest_distance) {\n  \
    \              $closest_vowel = $word_array[$i];\n                $closest_distance\
    \ = $vowel_distance;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = \"aeiou\";\n    $vowel_index = -1;\n    $word_length = strlen($word);\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (strpos($vowels,\
    \ $word[$i]) !== false) {\n            $vowel_index = $i;\n            break;\n\
    \        }\n    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n\
    \    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (strpos($vowels,\
    \ $word[$i]) === false) {\n            return $word[$vowel_index];\n        }\n\
    \    }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n  \
    \  $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $result = '';\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $result = $word[$i];\n            break;\n        }\n    }\n    if ($result\
    \ == '') {\n        return $result;\n    }\n    for ($i = $word_length - 1; $i\
    \ >= 0; $i--) {\n        if (in_array($word[$i], $consonants)) {\n           \
    \ if ($i == $word_length - 1) {\n                return '';\n            }\n \
    \           if (in_array($word[$i + 1], $consonants)) {\n                return\
    \ $result;\n            }\n        }\n    }\n    return '';\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = '';\n    $closest_vowel_index = 0;\n    $closest_consonant_index = 0;\n  \
    \  $closest_consonant_index_2 = 0;\n    for ($i = 0; $i < $word_length; $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $word_length - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants)) {\n        \
    \    $closest_consonant_index = $i;\n            break;\n        }\n    }\n  \
    \  for ($i = $closest_vowel_index; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $closest_consonant_index_2 = $i;\n            break;\n\
    \        }\n    }\n    if ($closest_consonant_index_2 > $closest_consonant_index)\
    \ {\n        $closest_vowel = $word[$closest_vowel_index];\n    }\n    return\
    \ $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\", "    $vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = 0;\n    $closest_vowel_distance = 0;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_distance = $word_length - $vowel_index;\n        \
    \    if ($vowel_distance > $closest_vowel_distance) {\n                $closest_vowel_distance\
    \ = $vowel_distance;\n                $closest_vowel_index = $vowel_index;\n \
    \               $closest_vowel = $word[$vowel_index];\n            }\n       \
    \ }\n    }\n    return $closest_vowel;\n}\n", "  $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n  $word = strtolower($word);\n  $word_length = strlen($word);\n  $closest_vowel\
    \ = '';\n  $closest_vowel_index = 0;\n  for ($i = $word_length - 1; $i >= 0; $i--)\
    \ {\n    if (in_array($word[$i], $vowels)) {\n      $closest_vowel = $word[$i];\n\
    \      $closest_vowel_index = $i;\n      break;\n    }\n  }\n  if ($closest_vowel_index\
    \ == 0) {\n    return '';\n  }\n  for ($i = $closest_vowel_index - 1; $i >= 0;\
    \ $i--) {\n    if (!in_array($word[$i], $vowels)) {\n      return $closest_vowel;\n\
    \    }\n  }\n  return '';\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "\t$vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\t$word_length\
    \ = strlen($word);\n\tfor ($i = $word_length - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif ($i == 0) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tif (!in_array($word[$i\
    \ - 1], $vowels)) {\n\t\t\t\treturn $word[$i];\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    $vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $vowel_distance) {\n                       \
    \ $vowel_distance = $i;\n                        $vowel_index = $i;\n        \
    \            }\n                }\n            }\n        }\n    }\n    if ($vowel_index\
    \ == 0) {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n", " \
    \   $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n   \
    \ $word_length = strlen($word);\n    $closest_vowel = '';\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $closest_vowel = $word[$i];\n            break;\n        }\n    }\n    return\
    \ $closest_vowel;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word_arr\
    \ = str_split($word);\n    $word_arr_rev = array_reverse($word_arr);\n    $vowel_index\
    \ = 0;\n    $vowel_index_arr = [];\n    $vowel_index_arr_rev = [];\n    $vowel_index_arr_rev_filtered\
    \ = [];\n    $vowel_index_arr_rev_filtered_sorted = [];\n    $vowel_index_arr_rev_filtered_sorted_first\
    \ = [];\n    $vowel_index_arr_rev_filtered_sorted_first_rev = [];\n    $vowel_index_arr_rev_filtered_sorted_first_rev_first\
    \ = [];\n    $vowel_index_arr_rev_filtered_sorted_first_rev_first_index = 0;\n\
    \    $vowel_index_arr_rev_filtered_sorted_first_rev_first_index_rev = 0;\n   \
    \ $vowel_index_arr_rev_filtered_sorted_first_rev_first_index_rev_first = 0;\n\
    \    $vowel_index_arr_rev_filtered_sorted_first_rev_first_index_rev_first_rev\
    \ = 0;\n    $vowel_index_arr_rev_filtered_sorted_first_rev_first_index_rev_first_rev_first\
    \ = 0;\n    $vowel_index_arr_rev_filtered_sorted_first_rev_first_index_rev_first_rev_first_rev\
    \ = 0;\n    $vowel_index_arr_rev_filtered_sorted_first_rev_first_index_rev_first_rev_first_rev_first\
    \ = 0;\n    $vowel_index_arr_rev_filtered_sorted_first_rev_first_index_rev_first_rev_first_rev_first_rev\
    \ = 0;\n    $vowel_index_arr_rev_filtered_sorted_first_rev_first_", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z');\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_reverse = array_reverse($word_array);\n    $closest_vowel = '';\n\
    \    $closest_vowel_index = 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_distance_temp\
    \ = 0;\n    $closest_vowel_index_temp = 0;\n    $closest_vowel_index_temp_2 =\
    \ 0;\n    $closest_vowel_distance_temp_2 = 0;\n    $closest_vowel_index_temp_3\
    \ = 0;\n    $closest_vowel_distance_temp_3 = 0;\n    $closest_vowel_index_temp_4\
    \ = 0;\n    $closest_vowel_distance_temp_4 = 0;\n    $closest_vowel_index_temp_5\
    \ = 0;\n    $closest_vowel_distance_temp_5 = 0;\n    $closest_vowel_index_temp_6\
    \ = 0;\n    $closest_vowel_distance_temp_6 = 0;\n    $closest_vowel_index_temp_7\
    \ = 0;\n    $closest_vowel_distance_temp_7 = 0;\n    $closest_vowel_index_temp_8\
    \ = 0;\n    $closest_vowel_distance_temp_8 = 0;\n    $closest_vowel_index_temp_9\
    \ = 0;\n    $closest_vowel_distance_temp", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $closest_vowel = '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n \
    \       if (in_array($word[$i], $vowels)) {\n            $closest_vowel = $word[$i];\n\
    \            break;\n        }\n    }\n    return $closest_vowel;\n}\n", "   \
    \ $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $len = strlen($word);\n    $i = $len - 1;\n    $prev = '';\n    $next = '';\n\
    \    $result = '';\n    while ($i >= 0) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $next = $word[$i];\n            if ($prev != '') {\n        \
    \        $result = $next;\n                break;\n            }\n        } else\
    \ {\n            $prev = $word[$i];\n        }\n        $i--;\n    }\n    return\
    \ $result;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word =\
    \ strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel =\
    \ '';\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            break;\n \
    \       }\n    }\n    if ($closest_vowel) {\n        for ($i = $word_length -\
    \ 1; $i >= 0; $i--) {\n            if (in_array($word[$i], $vowels)) {\n     \
    \           continue;\n            } else {\n                if ($i == 0) {\n\
    \                    return '';\n                }\n                if (in_array($word[$i\
    \ - 1], $vowels)) {\n                    return $closest_vowel;\n            \
    \    }\n            }\n        }\n    }\n    return '';\n}\n", "    $vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($closest_vowel_index ==\
    \ 0) {\n        return \"\";\n    }\n    for ($i = $closest_vowel_index - 1; $i\
    \ >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $closest_vowel;\n        }\n    }\n    return \"\";\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\"\
    , \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n\
    \    $word_length = count($word_array);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    $vowel_position\
    \ = 0;\n    $consonant_position = 0;\n    $closest_vowel = \"\";\n    for ($i\
    \ = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_found = true;\n            $vowel_index = $i;\n\
    \            $vowel_position = $i;\n        }\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_found = true;\n            $consonant_index\
    \ = $i;\n            $consonant_position = $i;\n        }\n        if ($vowel_found\
    \ && $consonant_found) {\n            $closest_vowel = $word_array[$vowel_index];\n\
    \            break;\n        }\n    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word_arr = str_split($word);\n    $word_arr_rev = array_reverse($word_arr);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = 0; $i < count($word_arr_rev); $i++)\
    \ {\n        if (!$vowel_found && in_array($word_arr_rev[$i], $vowels)) {\n  \
    \          $vowel_index = $i;\n            $vowel_found = true;\n        }\n \
    \       if (!$consonant_found && in_array($word_arr_rev[$i], $consonants)) {\n\
    \            $consonant_index = $i;\n            $consonant_found = true;\n  \
    \      }\n        if ($vowel_found && $consonant_found) {\n            break;\n\
    \        }\n    }\n    if ($vowel_found && $consonant_found && $vowel_index >\
    \ $consonant_index) {\n        return $word_arr_rev[$vowel_index];\n    }\n  \
    \  return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = 0;\n    $vowel_found = false;\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n            break;\n        }\n    }\n    if\
    \ ($vowel_found) {\n        for ($i = $vowel_index; $i < count($word); $i++) {\n\
    \            if (!in_array($word[$i], $vowels)) {\n                return strtoupper($word[$vowel_index]);\n\
    \            }\n        }\n    }\n    return '';\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"b\", \"c\", \"d\"\
    , \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    $vowel_position\
    \ = 0;\n    $consonant_position = 0;\n    $closest_vowel = \"\";\n    $closest_vowel_position\
    \ = 0;\n    $closest_vowel_distance = 0;\n    $closest_vowel_distance_temp = 0;\n\
    \    $closest_vowel_position_temp = 0;\n    $closest_vowel_temp = \"\";\n    $closest_vowel_found\
    \ = false;\n    $closest_vowel_distance_temp = 0;\n    $closest_vowel_position_temp\
    \ = 0;\n    $closest_vowel_temp = \"\";\n    $closest_vowel_found = false;\n \
    \   $closest_vowel_distance_temp = 0;\n    $closest_vowel_position_temp = 0;\n\
    \    $closest_vowel_temp = \"\";\n    $closest_vowel_found = false;\n    $closest_vowel_distance_temp\
    \ = 0;\n    $closest_vowel_position_temp = 0;\n    $closest_vowel_temp = \"\"\
    ;\n    $closest_vowel_found = false;\n    $closest_vowel_distance_temp = 0;\n\
    \    $closest_v", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_pos = [];\n    $consonant_pos = [];\n    foreach ($word as $key =>\
    \ $value) {\n        if (in_array($value, $vowels)) {\n            $vowel_pos[]\
    \ = $key;\n        } else {\n            $consonant_pos[] = $key;\n        }\n\
    \    }\n    if (count($vowel_pos) == 0 || count($consonant_pos) == 0) {\n    \
    \    return '';\n    }\n    $closest_vowel = '';\n    $closest_distance = 0;\n\
    \    foreach ($vowel_pos as $vowel) {\n        foreach ($consonant_pos as $consonant)\
    \ {\n            if ($vowel < $consonant) {\n                $distance = $consonant\
    \ - $vowel;\n                if ($closest_distance == 0 || $distance < $closest_distance)\
    \ {\n                    $closest_distance = $distance;\n                    $closest_vowel\
    \ = $word[$vowel];\n                }\n            }\n        }\n    }\n    return\
    \ $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n    $word = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return \"\"\
    ;\n}\n", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word_length\
    \ = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_index_arr = array();\n\tfor\
    \ ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\
    \t\t\t$vowel_index_arr[] = $i;\n\t\t}\n\t}\n\t$vowel_index_arr_length = count($vowel_index_arr);\n\
    \tif ($vowel_index_arr_length == 0) {\n\t\treturn \"\";\n\t}\n\t$vowel_index =\
    \ $vowel_index_arr[$vowel_index_arr_length - 1];\n\tif ($vowel_index == 0) {\n\
    \t\treturn \"\";\n\t}\n\tif ($vowel_index == $word_length - 1) {\n\t\treturn \"\
    \";\n\t}\n\tif (in_array($word[$vowel_index - 1], $vowels)) {\n\t\treturn \"\"\
    ;\n\t}\n\tif (in_array($word[$vowel_index + 1], $vowels)) {\n\t\treturn \"\";\n\
    \t}\n\treturn $word[$vowel_index];\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = strtolower($word);\n    $word = str_split($word);\n    $word\
    \ = array_reverse($word);\n    $vowel_index = 0;\n    $vowel_found = false;\n\
    \    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index + 1; $i < count($word); $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                return $word[$vowel_index];\n            }\n  \
    \      }\n    }\n    return '';\n}\n", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $word = strtolower($word);\n    $word_length = strlen($word);\n \
    \   $vowel_index = 0;\n    $vowel_distance = 0;\n    $closest_vowel = '';\n  \
    \  for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == 0) {\n        return '';\n    }\n    for ($i =\
    \ $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $vowel_distance = $vowel_index - $i;\n            $closest_vowel\
    \ = $word[$vowel_index];\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            if ($vowel_index - $i < $vowel_distance) {\n                $vowel_distance\
    \ = $vowel_index - $i;\n                $closest_vowel = $word[$vowel_index];\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_distance_min\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $word_length - $i;\n            if\
    \ ($vowel_distance < $vowel_distance_min) {\n                $vowel_distance_min\
    \ = $vowel_distance;\n                $vowel_index = $i;\n            }\n    \
    \    }\n    }\n    if ($vowel_distance_min == $word_length) {\n        return\
    \ '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split($word);\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    $closest_vowel = '';\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $vowel_index - $i;\n            $closest_vowel = $word[$vowel_index];\n  \
    \          break;\n        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_118_get_closest_vowel
language: php
prompt: "<?php\n// You are given a word. Your task is to find the closest vowel that\
  \ stands between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel($word)\
  \ {\n"
tests: "function candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Above\") !== \"\
  o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $vowel_index =\
    \ -1;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return \"\"\
    ;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n            break;\n        }\n    }\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_index = $i;\n            $consonant_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found && $consonant_found)\
    \ {\n        return $word[$vowel_index];\n    } else {\n        return '';\n \
    \   }\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_consonant_index\
    \ = 0;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$i];\n            $closest_vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $closest_vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants)) {\n   \
    \         $closest_consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($closest_vowel_index - $closest_consonant_index == 1) {\n        return\
    \ '';\n    }\n    return $closest_vowel;\n}\n", "    $vowels = \"aeiou\";\n  \
    \  $word = strtolower($word);\n    $word_length = strlen($word);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_distance = $word_length;\n    for ($i = 0; $i <\
    \ $word_length; $i++) {\n        $char = $word[$i];\n        if (strpos($vowels,\
    \ $char) !== false) {\n            $distance = $word_length - $i;\n          \
    \  if ($distance < $closest_vowel_distance) {\n                $closest_vowel\
    \ = $char;\n                $closest_vowel_distance = $distance;\n           \
    \ }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    $vowel_char = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n   \
    \     if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n  \
    \          $vowel_found = true;\n            $vowel_char = $word[$i];\n      \
    \      break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i = $vowel_index\
    \ + 1; $i < count($word); $i++) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                $vowel_distance = $i - $vowel_index;\n                break;\n\
    \            }\n        }\n    }\n    if ($vowel_distance == 1) {\n        return\
    \ strtoupper($vowel_char);\n    } else {\n        return '';\n    }\n}\n", " \
    \   $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_position = 0;\n    $vowel_distance\
    \ = 0;\n    $vowel_distance_temp = 0;\n    $vowel_position_temp = 0;\n    $vowel_found\
    \ = false;\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_found = true;\n            $vowel_position_temp\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_found) {\n     \
    \   for ($i = $vowel_position_temp - 1; $i >= 0; $i--) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $vowel_distance_temp = $vowel_position_temp - $i;\n\
    \                if ($vowel_distance_temp > $vowel_distance) {\n             \
    \       $vowel_distance = $vowel_distance_temp;\n                    $vowel_position\
    \ = $vowel_position_temp;\n                }\n                break;\n       \
    \     }\n        }\n    }\n    if ($vowel_position == 0) {\n        return \"\"\
    ;\n    } else {\n        return $word[$vowel_position];\n    }\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "\t$vowels =\
    \ array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"b\", \"c\"\
    , \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word = strtolower($word);\n\
    \t$word_array = str_split($word);\n\t$word_array_length = count($word_array);\n\
    \t$vowel_index = 0;\n\t$consonant_index = 0;\n\t$vowel_index_array = array();\n\
    \t$consonant_index_array = array();\n\t$vowel_index_array_length = 0;\n\t$consonant_index_array_length\
    \ = 0;\n\t$vowel_index_array_length_array = array();\n\t$vowel_index_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array = array();\n\t$vowel_index_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array = array();\n\
    \t$vowel_index_array_length_array_length_array_length_array_length = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n    $word_length\
    \ = strlen($word);\n    $closest_vowel = '';\n    for ($i = $word_length - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if\
    \ ($i > 0 && in_array($word[$i - 1], $consonants)) {\n                if ($i <\
    \ $word_length - 1 && in_array($word[$i + 1], $consonants)) {\n              \
    \      $closest_vowel = $word[$i];\n                    break;\n             \
    \   }\n            }\n        }\n    }\n    return $closest_vowel;\n}\n", "  \
    \  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $word\
    \ = strtolower($word);\n    $word_array = str_split($word);\n    $word_length\
    \ = count($word_array);\n    $result = \"\";\n    for ($i = $word_length - 1;\
    \ $i > 0; $i--) {\n        if (in_array($word_array[$i], $vowels)) {\n       \
    \     if (in_array($word_array[$i - 1], $consonants)) {\n                $result\
    \ = $word_array[$i];\n                break;\n            }\n        }\n    }\n\
    \    return $result;\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $consonants = array('b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z');\n    $word = strtolower($word);\n    $word_array = str_split($word);\n\
    \    $word_array_length = count($word_array);\n    $vowel_index = 0;\n    $vowel_index_array\
    \ = array();\n    $vowel_index_array_length = 0;\n    $consonant_index = 0;\n\
    \    $consonant_index_array = array();\n    $consonant_index_array_length = 0;\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_index_array\
    \ = array();\n    $closest_vowel_index_array_length = 0;\n    $closest_vowel_index_array_length_array\
    \ = array();\n    $closest_vowel_index_array_length_array_length = 0;\n    $closest_vowel_index_array_length_array_length_array\
    \ = array();\n    $closest_vowel_index_array_length_array_length_array_length\
    \ = 0;\n    $closest_vowel_index_array_length_array_length_array_length_array\
    \ = array();\n    $closest_vowel_index_array_length_array_length_array_length_array_length\
    \ = 0;\n    $closest_vowel_index_array_length_array_length_array_length_array_length_array\
    \ = array();\n    $closest_vowel_index_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n    $closest_vowel_index", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $word = strtolower($word);\n    $word_len = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = $word_len - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index === -1) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == 0) {\n                return \"\";\n    \
    \        }\n            if (!in_array($word[$i - 1], $vowels)) {\n           \
    \     return $word[$i];\n            }\n        }\n    }\n    return \"\";\n}\n",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $vowel_index = -1;\n    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n \
    \       if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    if ($vowel_index == -1) {\n       \
    \ return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n    \
    \    if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return \"\";\n}\n", "    $vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = $word_length;\n    for\
    \ ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            if ($i > 0 && $i < $word_length - 1) {\n                if (!in_array($word[$i\
    \ - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {\n                   \
    \ if ($i < $closest_vowel_index) {\n                        $closest_vowel_index\
    \ = $i;\n                        $closest_vowel = $word[$i];\n               \
    \     }\n                }\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_distance = 0;\n    for ($i = 0;\
    \ $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels)) {\n  \
    \          $vowel_distance = 0;\n            for ($j = $i + 1; $j < $word_length;\
    \ $j++) {\n                if (in_array($word[$j], $vowels)) {\n             \
    \       break;\n                }\n                $vowel_distance++;\n      \
    \      }\n            if ($vowel_distance > 0 && ($closest_vowel_distance == 0\
    \ || $vowel_distance < $closest_vowel_distance)) {\n                $closest_vowel\
    \ = $word[$i];\n                $closest_vowel_distance = $vowel_distance;\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n", "  $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n  $word = strtolower($word);\n\
    \  $word_length = strlen($word);\n  $vowel_index = 0;\n  $vowel_distance = 0;\n\
    \  $vowel_distance_temp = 0;\n  $vowel_index_temp = 0;\n  for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n    if (in_array($word[$i], $vowels)) {\n      $vowel_index_temp\
    \ = $i;\n      $vowel_distance_temp = $word_length - $i;\n      if ($vowel_distance_temp\
    \ > $vowel_distance) {\n        $vowel_distance = $vowel_distance_temp;\n    \
    \    $vowel_index = $vowel_index_temp;\n      }\n    }\n  }\n  if ($vowel_index\
    \ == 0) {\n    return \"\";\n  }\n  return $word[$vowel_index];\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = strtolower($word);\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found\
    \ = false;\n    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    for ($i\
    \ = count($word_array) - 1; $i >= 0; $i--) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word_array[$i], $consonants)) {\n           \
    \ $consonant_index = $i;\n            $consonant_found = true;\n            break;\n\
    \        }\n    }\n    if ($vowel_found && $consonant_found) {\n        $closest_vowel\
    \ = $word_array[$vowel_index];\n        $closest_vowel_index = $vowel_index;\n\
    \        for ($i = $vowel_index - 1; $i > $consonant_index; $i--) {\n        \
    \    if (in_array($word_array[$i], $vowels)) {\n                $closest_vowel\
    \ = $word_array[$i];\n                $closest_vowel_index = $i;\n           \
    \ }\n        }\n    }\n    return $closest", "    $vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n    $word_length = strlen($word);\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = -1;\n    $closest_vowel_distance\
    \ = -1;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($vowel_distance < $closest_vowel_distance ||\
    \ $closest_vowel_distance == -1) {\n                $closest_vowel_distance =\
    \ $vowel_distance;\n                $closest_vowel_index = $vowel_index;\n   \
    \             $closest_vowel = $word[$i];\n            }\n        }\n    }\n \
    \   if ($closest_vowel_index == 0 || $closest_vowel_index == $word_length - 1)\
    \ {\n        return \"\";\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $word_length - $i;\n            if\
    \ ($vowel_distance < $closest_vowel_distance) {\n                $closest_vowel\
    \ = $word[$i];\n                $closest_vowel_distance = $vowel_distance;\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

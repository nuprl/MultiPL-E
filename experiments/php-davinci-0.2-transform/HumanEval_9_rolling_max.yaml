name: HumanEval_9_rolling_max
language: php
prompt: "<?php\n// From a given list of integers, generate a list of rolling maximum\
  \ element found until given moment\n// in the sequence.\n// >>> rolling_max(array(1,\
  \ 2, 3, 2, 3, 4, 2))\n// array(1, 2, 3, 3, 3, 4, 4)\nfunction rolling_max($numbers)\
  \ {\n"
tests: "function candidate(...$args) {\n    return rolling_max(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 3, 2, 1))\
  \ !== array(4, 4, 4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
  \ 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $max = array();\n    $max[] = $numbers[0];\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        $max[] = max($max[$i - 1], $numbers[$i]);\n\
    \    }\n    return $max;\n}\n", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $max_so_far\
    \ = $numbers[0];\n    $result = array($max_so_far);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max_so_far = max($max_so_far, $numbers[$i]);\n        $result[]\
    \ = $max_so_far;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n    }\n \
    \   return $result;\n}\n", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $result = array();\n\
    \    $max = $numbers[0];\n    $result[] = $max;\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n        $result[] = $max;\n    }\n    return $result;\n}\n", "   \
    \ $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i < count($numbers);\
    \ $i++) {\n        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    $max = $numbers[0];\n\
    \    $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n     \
    \   if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n    }\n \
    \   return $result;\n}\n", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n    }\n \
    \   return $result;\n}\n", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $rolling_max\
    \ = array();\n    $max = 0;\n    foreach ($numbers as $number) {\n        $max\
    \ = max($max, $number);\n        $rolling_max[] = $max;\n    }\n    return $rolling_max;\n\
    }\n", "    $max = $numbers[0];\n    $result = array($max);\n    for ($i = 1; $i\
    \ < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n      \
    \  $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n    }\n \
    \   return $result;\n}\n", "    $result = array();\n    $max = $numbers[0];\n\
    \    $result[] = $max;\n    for ($i = 1; $i < count($numbers); $i++) {\n     \
    \   if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n        }\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n    }\n \
    \   return $result;\n}\n", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n", "    $max = $numbers[0];\n\
    \    $result = array($max);\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $max = max($max, $numbers[$i]);\n        $result[] = $max;\n    }\n \
    \   return $result;\n}\n", "    $max = $numbers[0];\n    $result = array($max);\n\
    \    for ($i = 1; $i < count($numbers); $i++) {\n        $max = max($max, $numbers[$i]);\n\
    \        $result[] = $max;\n    }\n    return $result;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_19_sort_numbers
language: php
prompt: "<?php\n// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest to\
  \ largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\nfunction\
  \ sort_numbers($numbers) {\n"
tests: "function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
  \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
  \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\");\
  \ }\n}\n\ntest();"
completions: ["  $numbers = explode(\" \", $numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return convert_number($number);\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) {\n    return convert_number($number);\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ number_to_numeral($number);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return numeral_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "  $numbers =\
    \ explode(\" \", $numbers);\n  $numbers = array_map(function($number) {\n    return\
    \ number_to_int($number);\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        switch ($number) {\n            case\
    \ 'zero':\n                return 0;\n            case 'one':\n              \
    \  return 1;\n            case 'two':\n                return 2;\n           \
    \ case 'three':\n                return 3;\n            case 'four':\n       \
    \         return 4;\n            case 'five':\n                return 5;\n   \
    \         case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", " \
    \   $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_int($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return int_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", " \
    \   $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_digit($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return digit_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return array_search($number, [\"zero\", \"one\", \"two\", \"three\",\
    \ \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"]);\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"][$number];\n    }, $numbers);\n    return implode(\" \"\
    , $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers_map\
    \ = array(\n        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n \
    \       'three' => 3,\n        'four' => 4,\n        'five' => 5,\n        'six'\
    \ => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n \
    \   );\n    $numbers_map_reverse = array_flip($numbers_map);\n    $numbers_map_reverse[0]\
    \ = 'zero';\n    $numbers_map_reverse[1] = 'one';\n    $numbers_map_reverse[2]\
    \ = 'two';\n    $numbers_map_reverse[3] = 'three';\n    $numbers_map_reverse[4]\
    \ = 'four';\n    $numbers_map_reverse[5] = 'five';\n    $numbers_map_reverse[6]\
    \ = 'six';\n    $numbers_map_reverse[7] = 'seven';\n    $numbers_map_reverse[8]\
    \ = 'eight';\n    $numbers_map_reverse[9] = 'nine';\n    $numbers_map_reverse[10]\
    \ = 'ten';\n    $numbers_map_reverse[11] = 'eleven';\n    $numbers_map_reverse[12]\
    \ = 'twelve';\n    $numbers_map_reverse[13] = 'thirteen';\n    $numbers_map_reverse[14]\
    \ = 'fourteen';\n    $numbers_map_reverse[15] = 'fifteen';\n    $numbers_map_reverse[16]\
    \ = 'sixteen';\n    $numbers_map_reverse[17] = 'seventeen';\n    $numbers_map_reverse[18]\
    \ = 'eighteen';\n    $numbers_map_reverse[19] = 'nineteen';\n    $numbers_map_reverse[20]\
    \ = 'twenty';\n    $numbers_map_reverse[30] = 'thirty';\n    $numbers_map_reverse[40]\
    \ = 'forty';\n    $numbers_", "  $numbers = explode(\" \", $numbers);\n  $numbers\
    \ = array_map(function($number) {\n    return array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n", "    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", " \
    \   $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return number_to_numeral($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return numeral_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        return number_to_int($number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return int_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "    $numbers\
    \ = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n\
    \        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \        }\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        switch ($number) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", " \
    \ $numbers = explode(\" \", $numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return number_to_int($number);\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) {\n    return int_to_number($number);\n\
    \  }, $numbers);\n  return implode(\" \", $numbers);\n}\n", "    $numbers = explode(\"\
    \ \", $numbers);\n    $numbers = array_map(function($number) {\n        return\
    \ number_to_numeral($number);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return numeral_to_number($number);\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n", "  $numbers =\
    \ explode(\" \", $numbers);\n  $numbers = array_map(function($number) {\n    return\
    \ strlen($number);\n  }, $numbers);\n  sort($numbers);\n  return implode(\" \"\
    , $numbers);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers =\
    \ array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n", "    $numbers_array = explode(\" \", $numbers);\n\
    \    $numbers_array = array_map(function($number) {\n        return $number ==\
    \ \"zero\" ? 0 :\n               $number == \"one\" ? 1 :\n               $number\
    \ == \"two\" ? 2 :\n               $number == \"three\" ? 3 :\n              \
    \ $number == \"four\" ? 4 :\n               $number == \"five\" ? 5 :\n      \
    \         $number == \"six\" ? 6 :\n               $number == \"seven\" ? 7 :\n\
    \               $number == \"eight\" ? 8 :\n               $number == \"nine\"\
    \ ? 9 :\n               $number;\n    }, $numbers_array);\n    sort($numbers_array);\n\
    \    $numbers_array = array_map(function($number) {\n        return $number ==\
    \ 0 ? \"zero\" :\n               $number == 1 ? \"one\" :\n               $number\
    \ == 2 ? \"two\" :\n               $number == 3 ? \"three\" :\n              \
    \ $number == 4 ? \"four\" :\n               $number == 5 ? \"five\" :\n      \
    \         $number == 6 ? \"six\" :\n               $number == 7 ? \"seven\" :\n\
    \               $number == 8 ? \"eight\" :\n               $number == 9 ? \"nine\"\
    \ :\n               $number;\n    }, $numbers_array);\n    return implode(\" \"\
    , $numbers_array);\n}\n", "    $numbers = explode(\" \", $numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return convert_number($number);\n \
    \   }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

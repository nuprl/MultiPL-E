language: php
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $has_even = false;\n    $digits = str_split($num);\n   \
    \ foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$value = strval($value);\n\t\t$is_unique = true;\n\t\t\
    for ($i = 0; $i < strlen($value); $i++) {\n\t\t\tif ($value[$i] % 2 == 0) {\n\t\
    \t\t\t$is_unique = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($is_unique)\
    \ {\n\t\t\tarray_push($result, intval($value));\n\t\t}\n\t}\n\tsort($result);\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num_str = (string)$num;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n            if\
    \ ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $digits = str_split($num);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $str = (string)$value;\n        $is_unique\
    \ = true;\n        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i]\
    \ % 2 == 0) {\n                $is_unique = false;\n                break;\n \
    \           }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$x = array(15,\
    \ 33, 1422, 1);\nprint_r(unique_digits($x));\necho \"\\n\";\n$x = array(152, 323,\
    \ 1422, 10);\nprint_r(unique_digits($x));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\nArray\n(\n)\n\
    \n"
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $digits = str_split($number);\n        $has_even_digit\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even_digit = true;\n                break;\n \
    \           }\n        }\n        if (!$has_even_digit) {\n            $result[]\
    \ = $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1dcsh67.php:27\n\
    Stack trace:\n#0 /tmp/tmpa1dcsh67.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa1dcsh67.php\
    \ on line 27\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $num_str = (string)$num;\n    $has_even = false;\n    for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n      if ($num_str[$i] % 2 == 0) {\n\
    \        $has_even = true;\n        break;\n      }\n    }\n    if (!$has_even)\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $num) {\n\t\t$has_even = false;\n\t\t$num_str = (string)$num;\n\t\tfor\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n\t\t\tif ($num_str[$i] % 2 == 0) {\n\
    \t\t\t\t$has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even)\
    \ {\n\t\t\t$result[] = $num;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $digits = str_split($num);\n        \
    \    $flag = true;\n            foreach ($digits as $digit) {\n              \
    \  if ($digit % 2 == 0) {\n                    $flag = false;\n              \
    \      break;\n                }\n            }\n            if ($flag) {\n  \
    \              $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $digits = str_split($value);\n        $is_unique\
    \ = true;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_unique = false;\n                break;\n        \
    \    }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strlen($number) == 1) {\n           \
    \ $result[] = $number;\n        } else {\n            $has_even = false;\n   \
    \         $digits = str_split($number);\n            foreach ($digits as $digit)\
    \ {\n                if ($digit % 2 == 0) {\n                    $has_even = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!$has_even) {\n                $result[] = $number;\n            }\n      \
    \  }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strlen($value) == 1) {\n      $result[] = $value;\n\
    \    } else {\n      $has_even = false;\n      $digits = str_split($value);\n\
    \      foreach ($digits as $digit) {\n        if ($digit % 2 == 0) {\n       \
    \   $has_even = true;\n          break;\n        }\n      }\n      if (!$has_even)\
    \ {\n        $result[] = $value;\n      }\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $value = strval($value);\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($value); $i++) {\n            if\
    \ ($value[$i] % 2 == 0) {\n                $has_even = true;\n               \
    \ break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = intval($value);\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strlen($number) == 1) {\n           \
    \ $result[] = $number;\n        } else {\n            $has_even = false;\n   \
    \         for ($i = 0; $i < strlen($number); $i++) {\n                if ($number[$i]\
    \ % 2 == 0) {\n                    $has_even = true;\n                    break;\n\
    \                }\n            }\n            if (!$has_even) {\n           \
    \     $result[] = $number;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlr8unrp.php:37\n\
    Stack trace:\n#0 /tmp/tmpxlr8unrp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxlr8unrp.php\
    \ on line 37\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\twhile ($value > 0) {\n\t\t\t$digit\
    \ = $value % 10;\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even = true;\n\t\t\
    \t\tbreak;\n\t\t\t}\n\t\t\t$value = (int)($value / 10);\n\t\t}\n\t\tif (!$has_even)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph6o94eco.php:35\n\
    Stack trace:\n#0 /tmp/tmph6o94eco.php(41): test()\n#1 {main}\n  thrown in /tmp/tmph6o94eco.php\
    \ on line 35\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        for ($i\
    \ = 0; $i < strlen($value); $i++) {\n            if ($value[$i] % 2 == 0) {\n\
    \                $has_even_digit = true;\n                break;\n           \
    \ }\n        }\n        if (!$has_even_digit) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnblx05oy.php:33\n\
    Stack trace:\n#0 /tmp/tmpnblx05oy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnblx05oy.php\
    \ on line 33\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $digits = str_split($number);\n        $has_even_digit\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even_digit = true;\n                break;\n \
    \           }\n        }\n        if (!$has_even_digit) {\n            $result[]\
    \ = $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $flag = true;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $flag = false;\n                    break;\n        \
    \        }\n            }\n            if ($flag) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpmr3o03dw.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpmr3o03dw.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpmr3o03dw.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpmr3o03dw.php:37\nStack trace:\n#0 /tmp/tmpmr3o03dw.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmr3o03dw.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $digits = str_split($num);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $has_even_digit = false;\n    $digits = str_split($value);\n\
    \    foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even_digit\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even_digit) {\n     \
    \ $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $has_even = true;\n                    break;\n  \
    \              }\n            }\n            if (!$has_even) {\n             \
    \   $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp3qc7hzg2.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp3qc7hzg2.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp3qc7hzg2.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3qc7hzg2.php:37\nStack trace:\n#0 /tmp/tmp3qc7hzg2.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3qc7hzg2.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $digits = str_split($value);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $has_even = false;\n    $num_str = (string)$num;\n    for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n      if ($num_str[$i] % 2 == 0) {\n\
    \        $has_even = true;\n        break;\n      }\n    }\n    if (!$has_even)\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $flag = true;\n            for ($i =\
    \ 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0) {\n\
    \                    $flag = false;\n                    break;\n            \
    \    }\n            }\n            if ($flag) {\n                array_push($result,\
    \ $value);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp8tbw1pez.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp8tbw1pez.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp8tbw1pez.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8tbw1pez.php:37\nStack trace:\n#0 /tmp/tmp8tbw1pez.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8tbw1pez.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    if (strlen(strval($number)) == 1) {\n      $result[]\
    \ = $number;\n    } else {\n      $digits = str_split(strval($number));\n    \
    \  $has_even = FALSE;\n      foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $has_even = TRUE;\n          break;\n        }\n    \
    \  }\n      if (!$has_even) {\n        $result[] = $number;\n      }\n    }\n\
    \  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $hasEven = false;\n        $numStr = (string)$num;\n\
    \        for ($i = 0; $i < strlen($numStr); $i++) {\n            if ($numStr[$i]\
    \ % 2 == 0) {\n                $hasEven = true;\n                break;\n    \
    \        }\n        }\n        if (!$hasEven) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (has_unique_digits($number)) {\n     \
    \       $result[] = $number;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_unique_digits()\
    \ in /tmp/tmp_tgthj8s.php:13\nStack trace:\n#0 /tmp/tmp_tgthj8s.php(22): unique_digits(Array)\n\
    #1 /tmp/tmp_tgthj8s.php(26): candidate(Array)\n#2 /tmp/tmp_tgthj8s.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_tgthj8s.php on line 13\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strpos(strval($value), '2') === false\
    \ &&\n            strpos(strval($value), '4') === false &&\n            strpos(strval($value),\
    \ '6') === false &&\n            strpos(strval($value), '8') === false &&\n  \
    \          strpos(strval($value), '0') === false) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $even = true;\n                break;\n            }\n       \
    \ }\n        if (!$even) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1dcsh67.php:27\n\
    Stack trace:\n#0 /tmp/tmpa1dcsh67.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa1dcsh67.php\
    \ on line 27\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $has_even_digit = false;\n    $digits = str_split($value);\n\
    \    foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even_digit\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even_digit) {\n     \
    \ $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $has_even = true;\n                    break;\n  \
    \              }\n            }\n            if (!$has_even) {\n             \
    \   array_push($result, $value);\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp71qsjxul.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp71qsjxul.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp71qsjxul.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp71qsjxul.php:37\nStack trace:\n#0 /tmp/tmp71qsjxul.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp71qsjxul.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $digits = str_split($value);\n    \
    \        $unique = true;\n            foreach ($digits as $digit) {\n        \
    \        if ($digit % 2 == 0) {\n                    $unique = false;\n      \
    \              break;\n                }\n            }\n            if ($unique)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $has_even = false;\n    while ($num > 0) {\n      $digit\
    \ = $num % 10;\n      if ($digit % 2 == 0) {\n        $has_even = true;\n    \
    \    break;\n      }\n      $num = (int)($num / 10);\n    }\n    if (!$has_even)\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmploe4p7c5.php:35\n\
    Stack trace:\n#0 /tmp/tmploe4p7c5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmploe4p7c5.php\
    \ on line 35\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strlen($value) == 1) {\n\t\t\tarray_push($result,\
    \ $value);\n\t\t} else {\n\t\t\t$flag = true;\n\t\t\tfor ($i = 0; $i < strlen($value);\
    \ $i++) {\n\t\t\t\tif ($value[$i] % 2 == 0) {\n\t\t\t\t\t$flag = false;\n\t\t\t\
    \t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($flag) {\n\t\t\t\tarray_push($result,\
    \ $value);\n\t\t\t}\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpaal2jvus.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpaal2jvus.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpaal2jvus.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpaal2jvus.php:37\nStack trace:\n#0 /tmp/tmpaal2jvus.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaal2jvus.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num_str = (string)$num;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n            if\
    \ ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $digits = str_split($number);\n        $is_unique\
    \ = true;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_unique = false;\n                break;\n        \
    \    }\n        }\n        if ($is_unique) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $is_unique = true;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $is_unique = false;\n                break;\n            }\n \
    \       }\n        if ($is_unique) {\n            $result[] = $value;\n      \
    \  }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $str = (string)$value;\n           \
    \ $has_even = false;\n            for ($i = 0; $i < strlen($str); $i++) {\n  \
    \              if ($str[$i] % 2 == 0) {\n                    $has_even = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!$has_even) {\n                array_push($result, $value);\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $str = strval($num);\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $digits = str_split($num);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $digits = str_split($value);\n    \
    \        $has_even = false;\n            foreach ($digits as $digit) {\n     \
    \           if ($digit % 2 == 0) {\n                    $has_even = true;\n  \
    \                  break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $str = (string)$value;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n            if ((int)$str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $i) {\n    $has_even = false;\n    $num = $i;\n    while ($num > 0) {\n\
    \      $digit = $num % 10;\n      if ($digit % 2 == 0) {\n        $has_even =\
    \ true;\n        break;\n      }\n      $num = floor($num / 10);\n    }\n    if\
    \ (!$has_even) {\n      $result[] = $i;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $is_unique = true;\n        $value_string\
    \ = strval($value);\n        for ($i = 0; $i < strlen($value_string); $i++) {\n\
    \            if ($value_string[$i] % 2 == 0) {\n                $is_unique = false;\n\
    \                break;\n            }\n        }\n        if ($is_unique) {\n\
    \            array_push($result, $value);\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $digits = str_split($value);\n    \
    \        $has_even = false;\n            foreach ($digits as $digit) {\n     \
    \           if ($digit % 2 == 0) {\n                    $has_even = true;\n  \
    \                  break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $str = (string)$num;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ((int)$str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $has_even = false;\n            for ($i\
    \ = 0; $i < strlen($num); $i++) {\n                if ($num[$i] % 2 == 0) {\n\
    \                    $has_even = true;\n                    break;\n         \
    \       }\n            }\n            if (!$has_even) {\n                $result[]\
    \ = $num;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpr3dj3lex.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpr3dj3lex.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpr3dj3lex.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpr3dj3lex.php:37\nStack trace:\n#0 /tmp/tmpr3dj3lex.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpr3dj3lex.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $digits = str_split($num);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $num;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strlen($value) == 1) {\n\t\t\t$result[] = $value;\n\
    \t\t} else {\n\t\t\t$str = strval($value);\n\t\t\t$flag = true;\n\t\t\tfor ($i\
    \ = 0; $i < strlen($str); $i++) {\n\t\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t\t\
    $flag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($flag) {\n\t\t\
    \t\t$result[] = $value;\n\t\t\t}\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $has_even = true;\n                    break;\n  \
    \              }\n            }\n            if (!$has_even) {\n             \
    \   $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp3qc7hzg2.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp3qc7hzg2.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp3qc7hzg2.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3qc7hzg2.php:37\nStack trace:\n#0 /tmp/tmp3qc7hzg2.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3qc7hzg2.php on line 37\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $i) {\n\t\t$has_even = false;\n\t\twhile ($i > 0) {\n\t\t\tif ($i % 2\
    \ == 0) {\n\t\t\t\t$has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$i = (int)($i\
    \ / 10);\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[] = $i;\n\t\t}\n\t}\n\t\
    sort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp70io0eaa.php:34\n\
    Stack trace:\n#0 /tmp/tmp70io0eaa.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp70io0eaa.php\
    \ on line 34\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $value = str_split($value);\n     \
    \       $has_even = false;\n            foreach ($value as $digit) {\n       \
    \         if ($digit % 2 == 0) {\n                    $has_even = true;\n    \
    \                break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = implode($value);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc2_0b0co.php:38\n\
    Stack trace:\n#0 /tmp/tmpc2_0b0co.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc2_0b0co.php\
    \ on line 38\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $str = (string)$value;\n        $hasEven =\
    \ false;\n        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i]\
    \ % 2 == 0) {\n                $hasEven = true;\n                break;\n    \
    \        }\n        }\n        if (!$hasEven) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $has_even = false;\n            for ($i\
    \ = 0; $i < strlen($num); $i++) {\n                if ($num[$i] % 2 == 0) {\n\
    \                    $has_even = true;\n                    break;\n         \
    \       }\n            }\n            if (!$has_even) {\n                $result[]\
    \ = $num;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpr3dj3lex.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpr3dj3lex.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpr3dj3lex.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpr3dj3lex.php:37\nStack trace:\n#0 /tmp/tmpr3dj3lex.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpr3dj3lex.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $value_string\
    \ = (string)$value;\n        for ($i = 0; $i < strlen($value_string); $i++) {\n\
    \            if ((int)$value_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strlen($number) == 1) {\n           \
    \ $result[] = $number;\n        } else {\n            $has_even = false;\n   \
    \         for ($i = 0; $i < strlen($number); $i++) {\n                if ($number[$i]\
    \ % 2 == 0) {\n                    $has_even = true;\n                    break;\n\
    \                }\n            }\n            if (!$has_even) {\n           \
    \     $result[] = $number;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlr8unrp.php:37\n\
    Stack trace:\n#0 /tmp/tmpxlr8unrp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxlr8unrp.php\
    \ on line 37\n"
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $digits = str_split($value);\n    \
    \        $is_unique = true;\n            foreach ($digits as $digit) {\n     \
    \           if ($digit % 2 == 0) {\n                    $is_unique = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($is_unique) {\n                $result[] = $value;\n            }\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $digits = str_split($num);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $num;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $digits = str_split($value);\n    \
    \        $has_even = false;\n            foreach ($digits as $digit) {\n     \
    \           if ($digit % 2 == 0) {\n                    $has_even = true;\n  \
    \                  break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $has_even = false;\n    $digits = str_split($num);\n   \
    \ foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strlen($number) == 1) {\n           \
    \ $result[] = $number;\n        } else {\n            $hasEven = false;\n    \
    \        for ($i = 0; $i < strlen($number); $i++) {\n                if ($number[$i]\
    \ % 2 == 0) {\n                    $hasEven = true;\n                    break;\n\
    \                }\n            }\n            if (!$hasEven) {\n            \
    \    $result[] = $number;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpdz4c7ajn.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpdz4c7ajn.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpdz4c7ajn.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpdz4c7ajn.php:37\nStack trace:\n#0 /tmp/tmpdz4c7ajn.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdz4c7ajn.php on line 37\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $key => $value) {\n\t\t$value = (string)$value;\n\t\t$even = false;\n\
    \t\tfor ($i=0; $i < strlen($value); $i++) { \n\t\t\tif ($value[$i] % 2 == 0) {\n\
    \t\t\t\t$even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$even) {\n\t\t\
    \t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\n\
    $x = array(15, 33, 1422, 1);\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpi7osrago.php:36\nStack trace:\n\
    #0 /tmp/tmpi7osrago.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpi7osrago.php\
    \ on line 36\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $i) {\n    $has_even = false;\n    $num = $i;\n    while ($num > 0) {\n\
    \      $digit = $num % 10;\n      if ($digit % 2 == 0) {\n        $has_even =\
    \ true;\n        break;\n      }\n      $num = (int)($num / 10);\n    }\n    if\
    \ (!$has_even) {\n      $result[] = $i;\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $has_even = true;\n                    break;\n  \
    \              }\n            }\n            if (!$has_even) {\n             \
    \   $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp3qc7hzg2.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp3qc7hzg2.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp3qc7hzg2.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3qc7hzg2.php:37\nStack trace:\n#0 /tmp/tmp3qc7hzg2.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3qc7hzg2.php on line 37\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strlen($value) == 1) {\n\t\t\tarray_push($result,\
    \ $value);\n\t\t} else {\n\t\t\t$is_unique = true;\n\t\t\tfor ($i = 0; $i < strlen($value);\
    \ $i++) {\n\t\t\t\tif ($value[$i] % 2 == 0) {\n\t\t\t\t\t$is_unique = false;\n\
    \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($is_unique) {\n\t\t\t\tarray_push($result,\
    \ $value);\n\t\t\t}\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp538m8g9s.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp538m8g9s.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp538m8g9s.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp538m8g9s.php:37\nStack trace:\n#0 /tmp/tmp538m8g9s.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp538m8g9s.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $str = (string)$value;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $has_even_digit = false;\n        while ($number\
    \ > 0) {\n            $digit = $number % 10;\n            if ($digit % 2 == 0)\
    \ {\n                $has_even_digit = true;\n                break;\n       \
    \     }\n            $number = (int)($number / 10);\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk30ntbue.php:35\n\
    Stack trace:\n#0 /tmp/tmpk30ntbue.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk30ntbue.php\
    \ on line 35\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $n) {\n        $digits = str_split($n);\n        $has_even =\
    \ false;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $has_even = true;\n                break;\n          \
    \  }\n        }\n        if (!$has_even) {\n            $result[] = $n;\n    \
    \    }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $y = array();\n    foreach\
    \ ($x as $i) {\n        $i = strval($i);\n        $flag = true;\n        for ($j\
    \ = 0; $j < strlen($i); $j++) {\n            if ($i[$j] % 2 == 0) {\n        \
    \        $flag = false;\n                break;\n            }\n        }\n  \
    \      if ($flag) {\n            array_push($y, intval($i));\n        }\n    }\n\
    \    sort($y);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $digits = str_split($value);\n        $is_unique\
    \ = true;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_unique = false;\n                break;\n        \
    \    }\n        }\n        if ($is_unique) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $num) {\n\t\t$str = (string)$num;\n\t\t$has_even = false;\n\t\tfor ($i\
    \ = 0; $i < strlen($str); $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $num;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_xchvr7.php:27\n\
    Stack trace:\n#0 /tmp/tmpp_xchvr7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp_xchvr7.php\
    \ on line 27\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $y = array();\n    foreach\
    \ ($x as $i) {\n        if (strlen($i) == 1) {\n            $y[] = $i;\n     \
    \   } else {\n            $z = str_split($i);\n            $flag = true;\n   \
    \         foreach ($z as $j) {\n                if ($j % 2 == 0) {\n         \
    \           $flag = false;\n                    break;\n                }\n  \
    \          }\n            if ($flag) {\n                $y[] = $i;\n         \
    \   }\n        }\n    }\n    sort($y);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $unique_digits = [];\n \
    \   foreach ($x as $number) {\n        $number_string = strval($number);\n   \
    \     $has_even_digit = false;\n        for ($i = 0; $i < strlen($number_string);\
    \ $i++) {\n            if ($number_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $unique_digits[] = $number;\n        }\n    }\n    sort($unique_digits);\n\
    \    return $unique_digits;\n}\n\n$x = [15, 33, 1422, 1];\necho implode(', ',\
    \ unique_digits($x)) . \"\\n\";\n\n$x = [152, 323, 1422, 10];\necho implode(',\
    \ ', unique_digits($x)) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: '1, 15, 33


    '
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_xchvr7.php:27\n\
    Stack trace:\n#0 /tmp/tmpp_xchvr7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp_xchvr7.php\
    \ on line 27\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $n) {\n        $digits = str_split($n);\n        $has_even =\
    \ false;\n        foreach ($digits as $d) {\n            if ($d % 2 == 0) {\n\
    \                $has_even = true;\n                break;\n            }\n  \
    \      }\n        if (!$has_even) {\n            $result[] = $n;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $even = false;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $even = true;\n                    break;\n         \
    \       }\n            }\n            if (!$even) {\n                array_push($result,\
    \ $value);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpnifycj9f.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpnifycj9f.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpnifycj9f.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpnifycj9f.php:37\nStack trace:\n#0 /tmp/tmpnifycj9f.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnifycj9f.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $digits = str_split($number);\n        $is_unique\
    \ = true;\n        foreach ($digits as $digit) {\n            if ($digit % 2 ==\
    \ 0) {\n                $is_unique = false;\n                break;\n        \
    \    }\n        }\n        if ($is_unique) {\n            $result[] = $number;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $number_string = strval($number);\n     \
    \   $has_even_digit = false;\n        for ($i = 0; $i < strlen($number_string);\
    \ $i++) {\n            if ($number_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            array_push($result, $number);\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $digits = str_split($num);\n        \
    \    $has_even = false;\n            foreach ($digits as $digit) {\n         \
    \       if ($digit % 2 == 0) {\n                    $has_even = true;\n      \
    \              break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $digits = str_split($number);\n        $has_even_digit\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even_digit = true;\n                break;\n \
    \           }\n        }\n        if (!$has_even_digit) {\n            $result[]\
    \ = $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $num_str = (string)$num;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $num_str = (string)$num;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ((int)$num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1dcsh67.php:27\n\
    Stack trace:\n#0 /tmp/tmpa1dcsh67.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpa1dcsh67.php\
    \ on line 27\n"
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strlen($number) == 1) {\n           \
    \ $result[] = $number;\n        } else {\n            $has_even = false;\n   \
    \         for ($i = 0; $i < strlen($number); $i++) {\n                if ($number[$i]\
    \ % 2 == 0) {\n                    $has_even = true;\n                    break;\n\
    \                }\n            }\n            if (!$has_even) {\n           \
    \     $result[] = $number;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$x = array(15, 33, 1422, 1);\nprint_r(unique_digits($x));\n\
    echo \"\\n\";\n$x = array(152, 323, 1422, 10);\nprint_r(unique_digits($x));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp0nitqx7l.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp0nitqx7l.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp0nitqx7l.php on line 18\nArray\n(\n    [0] => 1\n\
    )\n\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp0nitqx7l.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp0nitqx7l.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp0nitqx7l.php on line 18\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp0nitqx7l.php on line 18\nArray\n\
    (\n)\n\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp0nitqx7l.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp0nitqx7l.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp0nitqx7l.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp0nitqx7l.php:43\nStack trace:\n#0 /tmp/tmp0nitqx7l.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0nitqx7l.php on line 43\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    if (strlen($number) == 1) {\n      $result[] = $number;\n\
    \    } else {\n      $is_even = false;\n      for ($i = 0; $i < strlen($number);\
    \ $i++) {\n        if ($number[$i] % 2 == 0) {\n          $is_even = true;\n \
    \         break;\n        }\n      }\n      if (!$is_even) {\n        $result[]\
    \ = $number;\n      }\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp93vq1aov.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp93vq1aov.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp93vq1aov.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp93vq1aov.php:37\nStack trace:\n#0 /tmp/tmp93vq1aov.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp93vq1aov.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen(strval($value)) == 1) {\n     \
    \       array_push($result, $value);\n        } else {\n            $str = strval($value);\n\
    \            $flag = true;\n            for ($i = 0; $i < strlen($str); $i++)\
    \ {\n                if (intval($str[$i]) % 2 == 0) {\n                    $flag\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($flag) {\n                array_push($result, $value);\n       \
    \     }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $digits = str_split($num);\n        \
    \    $is_unique = true;\n            foreach ($digits as $digit) {\n         \
    \       if ($digit % 2 == 0) {\n                    $is_unique = false;\n    \
    \                break;\n                }\n            }\n            if ($is_unique)\
    \ {\n                $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $n) {\n        $digits = str_split($n);\n        $has_even =\
    \ false;\n        foreach ($digits as $d) {\n            if ($d % 2 == 0) {\n\
    \                $has_even = true;\n                break;\n            }\n  \
    \      }\n        if (!$has_even) {\n            $result[] = $n;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $num) {\n\t\t$num = (string)$num;\n\t\t$has_even = false;\n\t\tfor ($i\
    \ = 0; $i < strlen($num); $i++) {\n\t\t\tif ($num[$i] % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = (int)$num;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $digits = str_split($value);\n        $is_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $is_even = true;\n                break;\n        \
    \    }\n        }\n        if (!$is_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $has_even_digit = false;\n        $number_string\
    \ = (string) $number;\n        for ($i = 0; $i < strlen($number_string); $i++)\
    \ {\n            if ($number_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\necho '<pre>';\nprint_r(unique_digits(array(15, 33,\
    \ 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho '</pre>';\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n\
    )\n</pre>"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $has_even = false;\n    $digits = str_split($num);\n   \
    \ foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $is_unique = true;\n            $str_value\
    \ = (string)$value;\n            for ($i = 0; $i < strlen($str_value); $i++) {\n\
    \                if ($str_value[$i] % 2 == 0) {\n                    $is_unique\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($is_unique) {\n                array_push($result, $value);\n  \
    \          }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strpos($value, '2') === false &&\n   \
    \         strpos($value, '4') === false &&\n            strpos($value, '6') ===\
    \ false &&\n            strpos($value, '8') === false) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnsifjnvq.php:30\n\
    Stack trace:\n#0 /tmp/tmpnsifjnvq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnsifjnvq.php\
    \ on line 30\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $value = (string)$value;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($value); $i++) {\n            if\
    \ ((int)$value[$i] % 2 == 0) {\n                $has_even = true;\n          \
    \      break;\n            }\n        }\n        if (!$has_even) {\n         \
    \   $result[] = (int)$value;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $num = str_split($num);\n           \
    \ $has_even = false;\n            foreach ($num as $digit) {\n               \
    \ if ($digit % 2 == 0) {\n                    $has_even = true;\n            \
    \        break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = implode('', $num);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe17vwqa5.php:38\n\
    Stack trace:\n#0 /tmp/tmpe17vwqa5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe17vwqa5.php\
    \ on line 38\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$hasEven = false;\n\t\t$digits = str_split($value);\n\t\
    \tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$hasEven\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$hasEven) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $is_even = false;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $is_even = true;\n                    break;\n      \
    \          }\n            }\n            if (!$is_even) {\n                array_push($result,\
    \ $value);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp17kh0z1n.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp17kh0z1n.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp17kh0z1n.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp17kh0z1n.php:37\nStack trace:\n#0 /tmp/tmp17kh0z1n.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp17kh0z1n.php on line 37\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $i) {\n        if (strlen($i) == 1) {\n            $result[]\
    \ = $i;\n        } else {\n            $has_even = false;\n            for ($j\
    \ = 0; $j < strlen($i); $j++) {\n                if ($i[$j] % 2 == 0) {\n    \
    \                $has_even = true;\n                    break;\n             \
    \   }\n            }\n            if (!$has_even) {\n                $result[]\
    \ = $i;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpewh36btn.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpewh36btn.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpewh36btn.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpewh36btn.php:37\nStack trace:\n#0 /tmp/tmpewh36btn.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpewh36btn.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $str = strval($value);\n          \
    \  $flag = true;\n            for ($i = 0; $i < strlen($str); $i++) {\n      \
    \          if ($str[$i] % 2 == 0) {\n                    $flag = false;\n    \
    \                break;\n                }\n            }\n            if ($flag)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $n) {\n    $has_even = false;\n    while ($n > 0) {\n      if ($n % 2\
    \ == 0) {\n        $has_even = true;\n        break;\n      }\n      $n /= 10;\n\
    \    }\n    if (!$has_even) {\n      $result[] = $n;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpn3t_vnkl.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmpn3t_vnkl.php on line 15\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpn3t_vnkl.php\
    \ on line 15\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmpn3t_vnkl.php on line 15\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmpn3t_vnkl.php on\
    \ line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3t_vnkl.php:34\n\
    Stack trace:\n#0 /tmp/tmpn3t_vnkl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpn3t_vnkl.php\
    \ on line 34\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $value = strval($value);\n\
    \        for ($i = 0; $i < strlen($value); $i++) {\n            if ($value[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = intval($value);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\t$digits = str_split($value);\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $digits = str_split($num);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $num;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num_str = (string)$num;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n            if\
    \ ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $digits = str_split($value);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $has_even = true;\n                    break;\n  \
    \              }\n            }\n            if (!$has_even) {\n             \
    \   array_push($result, $value);\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp71qsjxul.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp71qsjxul.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp71qsjxul.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp71qsjxul.php:37\nStack trace:\n#0 /tmp/tmp71qsjxul.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp71qsjxul.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num = (string)$num;\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($num); $i++) {\n            if ($num[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = (int)$num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $digits = str_split($value);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $flag = true;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $flag = false;\n                    break;\n        \
    \        }\n            }\n            if ($flag) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpmr3o03dw.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpmr3o03dw.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpmr3o03dw.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpmr3o03dw.php:37\nStack trace:\n#0 /tmp/tmpmr3o03dw.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmr3o03dw.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $digits = str_split($num);\n        \
    \    $has_even = false;\n            foreach ($digits as $digit) {\n         \
    \       if ($digit % 2 == 0) {\n                    $has_even = true;\n      \
    \              break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $num_str = (string)$num;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ((int)$num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $flag = true;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $flag = false;\n                    break;\n        \
    \        }\n            }\n            if ($flag) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpmr3o03dw.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpmr3o03dw.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpmr3o03dw.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpmr3o03dw.php:37\nStack trace:\n#0 /tmp/tmpmr3o03dw.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmr3o03dw.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $is_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $is_even = true;\n                break;\n            }\n    \
    \    }\n        if (!$is_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num_str = (string)$num;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n            if\
    \ ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $has_even_digit = false;\n        $number_string\
    \ = (string) $number;\n        for ($i = 0; $i < strlen($number_string); $i++)\
    \ {\n            if ($number_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $has_even_digit = false;\n    $digits = str_split($value);\n\
    \    foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even_digit\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even_digit) {\n     \
    \ $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $has_even = true;\n                    break;\n  \
    \              }\n            }\n            if (!$has_even) {\n             \
    \   $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp3qc7hzg2.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp3qc7hzg2.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp3qc7hzg2.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3qc7hzg2.php:37\nStack trace:\n#0 /tmp/tmp3qc7hzg2.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3qc7hzg2.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $str = strval($value);\n        $is_unique\
    \ = true;\n        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i]\
    \ % 2 == 0) {\n                $is_unique = false;\n                break;\n \
    \           }\n        }\n        if ($is_unique) {\n            array_push($result,\
    \ $value);\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $even = true;\n                break;\n            }\n       \
    \ }\n        if (!$even) {\n            $result[] = $value;\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $digits = str_split($num);\n        \
    \    $has_even = false;\n            foreach ($digits as $digit) {\n         \
    \       if ($digit % 2 == 0) {\n                    $has_even = true;\n      \
    \              break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strlen(strval($number)) == 1) {\n   \
    \         $result[] = $number;\n        } else {\n            $digits = str_split(strval($number));\n\
    \            $is_unique = true;\n            foreach ($digits as $digit) {\n \
    \               if ($digit % 2 == 0) {\n                    $is_unique = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($is_unique) {\n                $result[] = $number;\n            }\n      \
    \  }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $digits = str_split($value);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $has_even = false;\n            $num_str\
    \ = strval($num);\n            for ($i = 0; $i < strlen($num_str); $i++) {\n \
    \               if ($num_str[$i] % 2 == 0) {\n                    $has_even =\
    \ true;\n                    break;\n                }\n            }\n      \
    \      if (!$has_even) {\n                $result[] = $num;\n            }\n \
    \       }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $digits = str_split($number);\n        $has_even_digit\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even_digit = true;\n                break;\n \
    \           }\n        }\n        if (!$has_even_digit) {\n            $result[]\
    \ = $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        while ($num > 0)\
    \ {\n            $digit = $num % 10;\n            if ($digit % 2 == 0) {\n   \
    \             $has_even = true;\n                break;\n            }\n     \
    \       $num = (int)($num / 10);\n        }\n        if (!$has_even) {\n     \
    \       $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdx8k2es.php:35\n\
    Stack trace:\n#0 /tmp/tmphdx8k2es.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphdx8k2es.php\
    \ on line 35\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (has_even_digit($num)) {\n            continue;\n\
    \        }\n        $result[] = $num;\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpcetymii7.php:13\nStack trace:\n#0 /tmp/tmpcetymii7.php(23): unique_digits(Array)\n\
    #1 /tmp/tmpcetymii7.php(27): candidate(Array)\n#2 /tmp/tmpcetymii7.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcetymii7.php on line 13\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    if (strpos(strval($number), '2') === false &&\n     \
    \   strpos(strval($number), '4') === false &&\n        strpos(strval($number),\
    \ '6') === false &&\n        strpos(strval($number), '8') === false) {\n     \
    \ $result[] = $number;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuihg5dvz.php:30\n\
    Stack trace:\n#0 /tmp/tmpuihg5dvz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpuihg5dvz.php\
    \ on line 30\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strlen($number) == 1) {\n           \
    \ $result[] = $number;\n        } else {\n            $is_unique = true;\n   \
    \         $number_str = strval($number);\n            for ($i = 0; $i < strlen($number_str);\
    \ $i++) {\n                if ($number_str[$i] % 2 == 0) {\n                 \
    \   $is_unique = false;\n                    break;\n                }\n     \
    \       }\n            if ($is_unique) {\n                $result[] = $number;\n\
    \            }\n        }\n    }\n    sort($result);\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $str = strval($num);\n            $has_even\
    \ = false;\n            for ($i = 0; $i < strlen($str); $i++) {\n            \
    \    if ($str[$i] % 2 == 0) {\n                    $has_even = true;\n       \
    \             break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strlen($value) == 1) {\n      $result[] = $value;\n\
    \    } else {\n      $str = strval($value);\n      $flag = true;\n      for ($i\
    \ = 0; $i < strlen($str); $i++) {\n        if ($str[$i] % 2 == 0) {\n        \
    \  $flag = false;\n          break;\n        }\n      }\n      if ($flag) {\n\
    \        $result[] = $value;\n      }\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num_str = (string)$num;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n            if\
    \ ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $is_even = false;\n            $num_str\
    \ = strval($num);\n            for ($i = 0; $i < strlen($num_str); $i++) {\n \
    \               if ($num_str[$i] % 2 == 0) {\n                    $is_even = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!$is_even) {\n                $result[] = $num;\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $has_even = false;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $has_even = true;\n                    break;\n  \
    \              }\n            }\n            if (!$has_even) {\n             \
    \   $result[] = $value;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp3qc7hzg2.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp3qc7hzg2.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp3qc7hzg2.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp3qc7hzg2.php:37\nStack trace:\n#0 /tmp/tmp3qc7hzg2.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3qc7hzg2.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $digits = str_split($num);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($value);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729992
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        while ($num > 0)\
    \ {\n            $digit = $num % 10;\n            if ($digit % 2 == 0) {\n   \
    \             $has_even = true;\n                break;\n            }\n     \
    \       $num = floor($num / 10);\n        }\n        if (!$has_even) {\n     \
    \       $result[] = $num;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmh6od1ak.php:35\n\
    Stack trace:\n#0 /tmp/tmpmh6od1ak.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmh6od1ak.php\
    \ on line 35\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $value = (string)$value;\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($value); $i++) {\n            if\
    \ ($value[$i] % 2 == 0) {\n                $has_even = true;\n               \
    \ break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $value;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9yt_mkkl.php:34\n\
    Stack trace:\n#0 /tmp/tmp9yt_mkkl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9yt_mkkl.php\
    \ on line 34\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $is_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $is_even = true;\n                break;\n            }\n    \
    \    }\n        if (!$is_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strpos(strval($value), '2') === false\
    \ &&\n            strpos(strval($value), '4') === false &&\n            strpos(strval($value),\
    \ '6') === false &&\n            strpos(strval($value), '8') === false &&\n  \
    \          strpos(strval($value), '0') === false) {\n            $result[] = $value;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\t$digits = str_split($value);\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    if (has_unique_digits($number)) {\n      $result[] =\
    \ $number;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_unique_digits()\
    \ in /tmp/tmpvycnelfg.php:13\nStack trace:\n#0 /tmp/tmpvycnelfg.php(22): unique_digits(Array)\n\
    #1 /tmp/tmpvycnelfg.php(26): candidate(Array)\n#2 /tmp/tmpvycnelfg.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvycnelfg.php on line 13\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $number) {\n\t\tif (strlen($number) == 1) {\n\t\t\t$result[] = $number;\n\
    \t\t} else {\n\t\t\t$digits = str_split($number);\n\t\t\t$is_unique = true;\n\t\
    \t\tforeach ($digits as $digit) {\n\t\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t\t\
    $is_unique = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($is_unique)\
    \ {\n\t\t\t\t$result[] = $number;\n\t\t\t}\n\t\t}\n\t}\n\tsort($result);\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $has_even = false;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            if ($num_str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $has_even = false;\n    $digits = str_split($num);\n   \
    \ foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $has_even\
    \ = true;\n        break;\n      }\n    }\n    if (!$has_even) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $has_even = false;\n    $num_str = (string)$num;\n    for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n      if ($num_str[$i] % 2 == 0) {\n\
    \        $has_even = true;\n        break;\n      }\n    }\n    if (!$has_even)\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value, '4')\
    \ === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp_xchvr7.php:27\n\
    Stack trace:\n#0 /tmp/tmpp_xchvr7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpp_xchvr7.php\
    \ on line 27\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $hasEven = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $hasEven = true;\n                break;\n            }\n    \
    \    }\n        if (!$hasEven) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    $digits = str_split($num);\n    $is_unique = true;\n   \
    \ foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $is_unique\
    \ = false;\n        break;\n      }\n    }\n    if ($is_unique) {\n      $result[]\
    \ = $num;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $num_str = strval($num);\n          \
    \  $is_unique = true;\n            for ($i = 0; $i < strlen($num_str); $i++) {\n\
    \                if ($num_str[$i] % 2 == 0) {\n                    $is_unique\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if ($is_unique) {\n                $result[] = $num;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $digits = str_split($num);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $value_string\
    \ = (string)$value;\n        for ($i = 0; $i < strlen($value_string); $i++) {\n\
    \            if ((int)$value_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    if (strlen($number) == 1) {\n      $result[] = $number;\n\
    \    } else {\n      $digits = str_split($number);\n      $is_unique = true;\n\
    \      foreach ($digits as $digit) {\n        if ($digit % 2 == 0) {\n       \
    \   $is_unique = false;\n          break;\n        }\n      }\n      if ($is_unique)\
    \ {\n        $result[] = $number;\n      }\n    }\n  }\n  sort($result);\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $digits = str_split($value);\n    \
    \        $has_even = false;\n            foreach ($digits as $digit) {\n     \
    \           if ($digit % 2 == 0) {\n                    $has_even = true;\n  \
    \                  break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $value;\n            }\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            $result[]\
    \ = $value;\n        } else {\n            $flag = true;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $flag = false;\n                    break;\n        \
    \        }\n            }\n            if ($flag) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpmr3o03dw.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpmr3o03dw.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpmr3o03dw.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpmr3o03dw.php:37\nStack trace:\n#0 /tmp/tmpmr3o03dw.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmr3o03dw.php on line 37\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strpos(strval($value), '2') === false &&\n       \
    \ strpos(strval($value), '4') === false &&\n        strpos(strval($value), '6')\
    \ === false &&\n        strpos(strval($value), '8') === false) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bmjpl12.php:30\n\
    Stack trace:\n#0 /tmp/tmp9bmjpl12.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9bmjpl12.php\
    \ on line 30\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen(strval($value)) == 1) {\n     \
    \       $result[] = $value;\n        } else {\n            $value = strval($value);\n\
    \            $is_even = false;\n            for ($i = 0; $i < strlen($value);\
    \ $i++) {\n                if ($value[$i] % 2 == 0) {\n                    $is_even\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!$is_even) {\n                $result[] = $value;\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1rdrmw7.php:38\n\
    Stack trace:\n#0 /tmp/tmpa1rdrmw7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpa1rdrmw7.php\
    \ on line 38\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $even = false;\n            for ($i\
    \ = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 == 0)\
    \ {\n                    $even = true;\n                    break;\n         \
    \       }\n            }\n            if (!$even) {\n                array_push($result,\
    \ $value);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpnifycj9f.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpnifycj9f.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpnifycj9f.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpnifycj9f.php:37\nStack trace:\n#0 /tmp/tmpnifycj9f.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnifycj9f.php on line 37\n"
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif (strlen($value) == 1) {\n\t\t\tarray_push($result,\
    \ $value);\n\t\t} else {\n\t\t\t$flag = true;\n\t\t\tfor ($i = 0; $i < strlen($value);\
    \ $i++) {\n\t\t\t\tif ($value[$i] % 2 == 0) {\n\t\t\t\t\t$flag = false;\n\t\t\t\
    \t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($flag) {\n\t\t\t\tarray_push($result,\
    \ $value);\n\t\t\t}\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpaal2jvus.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpaal2jvus.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpaal2jvus.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpaal2jvus.php:37\nStack trace:\n#0 /tmp/tmpaal2jvus.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaal2jvus.php on line 37\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$has_even = false;\n\t\t$digits = str_split($value);\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        if (strlen(strval($number)) == 1) {\n   \
    \         array_push($result, $number);\n        } else {\n            $is_unique\
    \ = true;\n            for ($i = 0; $i < strlen(strval($number)); $i++) {\n  \
    \              if (intval(strval($number)[$i]) % 2 == 0) {\n                 \
    \   $is_unique = false;\n                    break;\n                }\n     \
    \       }\n            if ($is_unique) {\n                array_push($result,\
    \ $number);\n            }\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (strlen(strval($value)) == 1) {\n      array_push($result,\
    \ $value);\n    } else {\n      $digits = str_split(strval($value));\n      $has_even\
    \ = false;\n      foreach ($digits as $digit) {\n        if ($digit % 2 == 0)\
    \ {\n          $has_even = true;\n          break;\n        }\n      }\n     \
    \ if (!$has_even) {\n        array_push($result, $value);\n      }\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $even = false;\n        while ($value > 0)\
    \ {\n            if ($value % 2 == 0) {\n                $even = true;\n     \
    \           break;\n            }\n            $value = (int)($value / 10);\n\
    \        }\n        if (!$even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp087_oohx.php:34\n\
    Stack trace:\n#0 /tmp/tmp087_oohx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp087_oohx.php\
    \ on line 34\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $has_even = false;\n            $digits\
    \ = str_split($num);\n            foreach ($digits as $digit) {\n            \
    \    if ($digit % 2 == 0) {\n                    $has_even = true;\n         \
    \           break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $has_even_digit = false;\n    $value_string = (string)$value;\n\
    \    for ($i = 0; $i < strlen($value_string); $i++) {\n      if ((int)$value_string[$i]\
    \ % 2 == 0) {\n        $has_even_digit = true;\n        break;\n      }\n    }\n\
    \    if (!$has_even_digit) {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even_digit = false;\n        $value_str\
    \ = (string)$value;\n        for ($i = 0; $i < strlen($value_str); $i++) {\n \
    \           if ($value_str[$i] % 2 == 0) {\n                $has_even_digit =\
    \ true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $num) {\n\t\t$num = (string)$num;\n\t\t$has_even = false;\n\t\tfor ($i\
    \ = 0; $i < strlen($num); $i++) {\n\t\t\tif ($num[$i] % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = (int)$num;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $str = strval($value);\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i]\
    \ % 2 == 0) {\n                $has_even = true;\n                break;\n   \
    \         }\n        }\n        if (!$has_even) {\n            array_push($result,\
    \ $value);\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $is_unique = true;\n            for\
    \ ($i = 0; $i < strlen($value); $i++) {\n                if ($value[$i] % 2 ==\
    \ 0) {\n                    $is_unique = false;\n                    break;\n\
    \                }\n            }\n            if ($is_unique) {\n           \
    \     array_push($result, $value);\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp82o5gl4c.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp82o5gl4c.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp82o5gl4c.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp82o5gl4c.php:36\nStack trace:\n#0 /tmp/tmp82o5gl4c.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp82o5gl4c.php on line 36\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $digits = str_split($value);\n     \
    \       $is_even = false;\n            foreach ($digits as $digit) {\n       \
    \         if ($digit % 2 == 0) {\n                    $is_even = true;\n     \
    \               break;\n                }\n            }\n            if (!$is_even)\
    \ {\n                array_push($result, $value);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 255
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $num) {\n\t\t$num = (string)$num;\n\t\t$has_even = false;\n\t\tfor ($i\
    \ = 0; $i < strlen($num); $i++) {\n\t\t\tif ($num[$i] % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$result[]\
    \ = $num;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5gd8u_mo.php:34\n\
    Stack trace:\n#0 /tmp/tmp5gd8u_mo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5gd8u_mo.php\
    \ on line 34\n"
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (strlen($value) == 1) {\n            array_push($result,\
    \ $value);\n        } else {\n            $str = strval($value);\n           \
    \ $is_unique = true;\n            for ($i = 0; $i < strlen($str); $i++) {\n  \
    \              if ($str[$i] % 2 == 0) {\n                    $is_unique = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ ($is_unique) {\n                array_push($result, $value);\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[]\
    \ = $num;\n        } else {\n            $digits = str_split($num);\n        \
    \    $has_even = false;\n            foreach ($digits as $digit) {\n         \
    \       if ($digit % 2 == 0) {\n                    $has_even = true;\n      \
    \              break;\n                }\n            }\n            if (!$has_even)\
    \ {\n                $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $has_even_digit = false;\n        $digits\
    \ = str_split($number);\n        foreach ($digits as $digit) {\n            if\
    \ ($digit % 2 == 0) {\n                $has_even_digit = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even_digit) {\n      \
    \      $result[] = $number;\n        }\n    }\n    sort($result);\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$str = (string)$value;\n\t\t$has_even = false;\n\t\tfor\
    \ ($i = 0; $i < strlen($str); $i++) {\n\t\t\tif ((int)$str[$i] % 2 == 0) {\n\t\
    \t\t\t$has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\
    \t\t\t$result[] = $value;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $num_str = strval($num);\n        $has_even\
    \ = false;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n            if\
    \ ($num_str[$i] % 2 == 0) {\n                $has_even = true;\n             \
    \   break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        $has_even = false;\n        $digits = str_split($value);\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = true;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        $digits = str_split($num);\n        $has_even\
    \ = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $num;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659729991
- exit_code: 0
  program: "<?php\n// Given a list of positive integers x. return a sorted list of\
    \ all \n// elements that hasn't any even digit.\n// Note: Returned list should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $number_string = (string) $number;\n    \
    \    $has_even_digit = false;\n        for ($i = 0; $i < strlen($number_string);\
    \ $i++) {\n            if ($number_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $result[] = $number;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792871

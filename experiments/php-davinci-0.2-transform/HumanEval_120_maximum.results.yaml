language: php
name: HumanEval_120_maximum
results:
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $i = 0;\n    while ($i < $k) {\n        $max =\
    \ -1000;\n        $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $maxIndex = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        unset($arr[$maxIndex]);\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfv7y7jqt.php:41\n\
    Stack trace:\n#0 /tmp/tmpfv7y7jqt.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpfv7y7jqt.php\
    \ on line 41\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $count = count($arr);\n    if ($count < $k) {\n\
    \        return $result;\n    }\n    $max = $arr[0];\n    $min = $arr[0];\n  \
    \  for ($i = 0; $i < $count; $i++) {\n        if ($arr[$i] > $max) {\n       \
    \     $max = $arr[$i];\n        }\n        if ($arr[$i] < $min) {\n          \
    \  $min = $arr[$i];\n        }\n    }\n    $bucket = [];\n    $bucket_count =\
    \ $max - $min + 1;\n    for ($i = 0; $i < $bucket_count; $i++) {\n        $bucket[$i]\
    \ = 0;\n    }\n    for ($i = 0; $i < $count; $i++) {\n        $bucket[$arr[$i]\
    \ - $min]++;\n    }\n    $index = 0;\n    for ($i = $bucket_count - 1; $i >= 0;\
    \ $i--) {\n        while ($bucket[$i] > 0) {\n            $arr[$index++] = $i\
    \ + $min;\n            $bucket[$i]--;\n        }\n    }\n    for ($i = 0; $i <\
    \ $k; $i++) {\n        $result[] = $arr[$i];\n    }\n    return $result;\n}\n\n\
    $arr = [-3, -4, 5];\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = [4, -4, 4];\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => -3\n    [2] => -4\n)\nArray\n(\n   \
    \ [0] => 4\n    [1] => 4\n)\nArray\n(\n    [0] => 2\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp66_vs9ww.php:73\nStack trace:\n#0 /tmp/tmp66_vs9ww.php(86):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp66_vs9ww.php on line 73\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = -1000;\n        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $max_index = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        unset($arr[$max_index]);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4fl37f1.php:39\n\
    Stack trace:\n#0 /tmp/tmpj4fl37f1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpj4fl37f1.php\
    \ on line 39\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $len = count($arr);\n    if ($k > $len) {\n  \
    \      return $result;\n    }\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = $arr[$i];\n        $index = $i;\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        $arr[$index] = $arr[$i];\n        $arr[$i] = $max;\n    }\n    return\
    \ $result;\n}\n\n$arr = [-3, -4, 5];\n$k = 3;\nvar_dump(maximum($arr, $k));\n\n\
    $arr = [4, -4, 4];\n$k = 2;\nvar_dump(maximum($arr, $k));\n\n$arr = [-3, 2, 1,\
    \ 2, -1, -2, 1];\n$k = 1;\nvar_dump(maximum($arr, $k));\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(-3)\n  [2]=>\n  int(-4)\n\
    }\narray(2) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(4)\n}\narray(1) {\n  [0]=>\n\
    \  int(2)\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplyso0vj7.php:55\n\
    Stack trace:\n#0 /tmp/tmplyso0vj7.php(68): test()\n#1 {main}\n  thrown in /tmp/tmplyso0vj7.php\
    \ on line 55\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    for ($i = 0; $i < $k; $i++) {\n        $max =\
    \ -1000;\n        $index = -1;\n        for ($j = 0; $j < count($arr); $j++) {\n\
    \            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n      \
    \          $index = $j;\n            }\n        }\n        array_push($result,\
    \ $max);\n        unset($arr[$index]);\n        $arr = array_values($arr);\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6wg21vil.php:40\n\
    Stack trace:\n#0 /tmp/tmp6wg21vil.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp6wg21vil.php\
    \ on line 40\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = -1000;\n        $maxIndex = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $maxIndex = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        unset($arr[$maxIndex]);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40o87y0b.php:39\n\
    Stack trace:\n#0 /tmp/tmp40o87y0b.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp40o87y0b.php\
    \ on line 39\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $arr = array_unique($arr);\n    sort($arr);\n\
    \    $arr = array_reverse($arr);\n    for ($i = 0; $i < $k; $i++) {\n        $result[]\
    \ = $arr[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp415_6vi1.php:33\n\
    Stack trace:\n#0 /tmp/tmp415_6vi1.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp415_6vi1.php\
    \ on line 33\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $i = 0;\n    $j = 0;\n    $len = count($arr);\n\
    \    while ($i < $k) {\n        $max = $arr[$j];\n        $index = $j;\n     \
    \   for ($j; $j < $len; $j++) {\n            if ($arr[$j] > $max) {\n        \
    \        $max = $arr[$j];\n                $index = $j;\n            }\n     \
    \   }\n        $result[$i] = $max;\n        $i++;\n        $j = $index + 1;\n\
    \    }\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => \n    [2] => \n)\nArray\n(\n    [0]\
    \ => 4\n    [1] => 4\n)\nArray\n(\n    [0] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp4m4foskb.php:54\nStack trace:\n#0 /tmp/tmp4m4foskb.php(67):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4m4foskb.php on line 54\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $max = -1000;\n    $max_index = 0;\n    for ($i\
    \ = 0; $i < $k; $i++) {\n        for ($j = 0; $j < count($arr); $j++) {\n    \
    \        if ($arr[$j] > $max) {\n                $max = $arr[$j];\n          \
    \      $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        $arr[$max_index] = -1000;\n        $max = -1000;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadtogax6.php:39\n\
    Stack trace:\n#0 /tmp/tmpadtogax6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpadtogax6.php\
    \ on line 39\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $count = 0;\n    $i = 0;\n    $j = 0;\n    while\
    \ ($count < $k) {\n        if ($arr[$i] > $arr[$j]) {\n            $result[] =\
    \ $arr[$i];\n            $i++;\n        } else {\n            $result[] = $arr[$j];\n\
    \            $j++;\n        }\n        $count++;\n    }\n    return $result;\n\
    }\n\n$arr = [-3, -4, 5];\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr = [4, -4,\
    \ 4];\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = [-3, 2, 1, 2, -1, -2, 1];\n\
    $k = 1;\nprint_r(maximum($arr, $k));\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -3\n    [1] => -3\n    [2] => -4\n)\nArray\n(\n  \
    \  [0] => 4\n    [1] => 4\n)\nArray\n(\n    [0] => -3\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp36p1g384.php:51\nStack trace:\n#0 /tmp/tmp36p1g384.php(64):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp36p1g384.php on line 51\n"
  timestamp: 1659730151
- exit_code: 0
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $count = count($arr);\n    if ($count ==\
    \ 0) {\n        return $result;\n    }\n    if ($count == 1) {\n        return\
    \ $arr;\n    }\n    if ($k == 0) {\n        return $result;\n    }\n    if ($k\
    \ == 1) {\n        $max = $arr[0];\n        for ($i = 1; $i < $count; $i++) {\n\
    \            if ($arr[$i] > $max) {\n                $max = $arr[$i];\n      \
    \      }\n        }\n        $result[] = $max;\n        return $result;\n    }\n\
    \    if ($k == $count) {\n        sort($arr);\n        return $arr;\n    }\n \
    \   $result = array_slice($arr, 0, $k);\n    sort($result);\n    for ($i = $k;\
    \ $i < $count; $i++) {\n        if ($arr[$i] > $result[0]) {\n            $result[0]\
    \ = $arr[$i];\n            sort($result);\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $size = count($arr);\n    if ($size == 0)\
    \ {\n        return $result;\n    }\n    if ($k == 0) {\n        return $result;\n\
    \    }\n    if ($k > $size) {\n        return $result;\n    }\n    for ($i = 0;\
    \ $i < $k; $i++) {\n        $result[$i] = $arr[$i];\n    }\n    for ($i = $k;\
    \ $i < $size; $i++) {\n        $min = $result[0];\n        $min_index = 0;\n \
    \       for ($j = 1; $j < $k; $j++) {\n            if ($result[$j] < $min) {\n\
    \                $min = $result[$j];\n                $min_index = $j;\n     \
    \       }\n        }\n        if ($arr[$i] > $min) {\n            $result[$min_index]\
    \ = $arr[$i];\n        }\n    }\n    return $result;\n}\n\n$arr = array(-3, -4,\
    \ 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\n$arr =\
    \ array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = array();\n$k = 1;\n$result = maximum($arr, $k);\nprint_r($result);\n\n\
    $arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 0;\n$result = maximum($arr, $k);\n\
    print_r($result);\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 8;\n$result =\
    \ maximum($arr, $k);\nprint_r($result);\nfunction candidate(...$args) {\n    return\
    \ maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -3\n    [1] => -4\n    [2] => 5\n)\nArray\n(\n   \
    \ [0] => 4\n    [1] => 4\n)\nArray\n(\n    [0] => 2\n)\nArray\n(\n)\nArray\n(\n\
    )\nArray\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqwjvard.php:82\n\
    Stack trace:\n#0 /tmp/tmpzqwjvard.php(95): test()\n#1 {main}\n  thrown in /tmp/tmpzqwjvard.php\
    \ on line 82\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $max = -1000;\n    $max_index = 0;\n    for\
    \ ($i = 0; $i < $k; $i++) {\n        for ($j = 0; $j < count($arr); $j++) {\n\
    \            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n      \
    \          $max_index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        $arr[$max_index] = -1001;\n        $max = -1000;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4),\
    \ 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62a_wjar.php:40\n\
    Stack trace:\n#0 /tmp/tmp62a_wjar.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp62a_wjar.php\
    \ on line 40\n"
  timestamp: 1659730151
- exit_code: 0
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = [];\n    $count = count($arr);\n    if ($count == 0) {\n\
    \        return $result;\n    }\n    if ($k == 0) {\n        return $result;\n\
    \    }\n    if ($k > $count) {\n        return $arr;\n    }\n    $result = array_slice($arr,\
    \ 0, $k);\n    sort($result);\n    for ($i = $k; $i < $count; $i++) {\n      \
    \  if ($arr[$i] > $result[0]) {\n            $result[0] = $arr[$i];\n        \
    \    sort($result);\n        }\n    }\n    return $result;\n}\n\n$arr = [-3, -4,\
    \ 5];\n$k = 3;\n$result = maximum($arr, $k);\nvar_dump($result);\n\n$arr = [4,\
    \ -4, 4];\n$k = 2;\n$result = maximum($arr, $k);\nvar_dump($result);\n\n$arr =\
    \ [-3, 2, 1, 2, -1, -2, 1];\n$k = 1;\n$result = maximum($arr, $k);\nvar_dump($result);\n\
    function candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(-4)\n  [1]=>\n  int(-3)\n  [2]=>\n  int(5)\n\
    }\narray(2) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(4)\n}\narray(1) {\n  [0]=>\n\
    \  int(2)\n}\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $max = array();\n    $max_index = array();\n\
    \    $max_count = 0;\n    $arr_count = count($arr);\n    for ($i = 0; $i < $arr_count;\
    \ $i++) {\n        if ($max_count < $k) {\n            $max[] = $arr[$i];\n  \
    \          $max_index[] = $i;\n            $max_count++;\n        } else {\n \
    \           $min = min($max);\n            $min_index = array_search($min, $max);\n\
    \            if ($arr[$i] > $min) {\n                $max[$min_index] = $arr[$i];\n\
    \                $max_index[$min_index] = $i;\n            }\n        }\n    }\n\
    \    sort($max_index);\n    foreach ($max_index as $index) {\n        $result[]\
    \ = $arr[$index];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3hnogkg.php:49\n\
    Stack trace:\n#0 /tmp/tmpm3hnogkg.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpm3hnogkg.php\
    \ on line 49\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $i = 0;\n    while ($i < $k) {\n        $max\
    \ = -1000;\n        $max_index = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $max_index = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        unset($arr[$max_index]);\n        $i++;\n    }\n    return $result;\n\
    }\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr, $k));\n\n$arr =\
    \ array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr = array(-3, 2,\
    \ 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => -3\n    [2] => -1000\n)\nArray\n(\n\
    \    [0] => 4\n    [1] => -4\n)\nArray\n(\n    [0] => 2\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpjn2jbrlc.php:52\nStack trace:\n#0 /tmp/tmpjn2jbrlc.php(65):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjn2jbrlc.php on line 52\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n\tif ($k == 0) return array();\n\tif ($k == 1) return array(max($arr));\n\
    \t$result = array();\n\t$max = max($arr);\n\t$result[] = $max;\n\t$arr = array_diff($arr,\
    \ array($max));\n\treturn array_merge($result, maximum($arr, $k - 1));\n}\n\n\
    $arr = array(-3, -4, 5);\n$k = 3;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = array(4, -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\n\
    \n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr, $k);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return maximum(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4,\
    \ -3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ -4, 4), 2) !== array(4, 4)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !==\
    \ array(2, 20, 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => -3\n    [2] => -4\n)\nArray\n(\n   \
    \ [0] => 4\n    [1] => -4\n)\nArray\n(\n    [0] => 2\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpttau78oq.php:46\nStack trace:\n#0 /tmp/tmpttau78oq.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpttau78oq.php on line 46\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $length = count($arr);\n    if ($k > $length)\
    \ {\n        return $result;\n    }\n    for ($i = 0; $i < $k; $i++) {\n     \
    \   $result[$i] = $arr[$i];\n    }\n    for ($i = $k; $i < $length; $i++) {\n\
    \        $min = $result[0];\n        $minIndex = 0;\n        for ($j = 1; $j <\
    \ $k; $j++) {\n            if ($result[$j] < $min) {\n                $min = $result[$j];\n\
    \                $minIndex = $j;\n            }\n        }\n        if ($arr[$i]\
    \ > $min) {\n            $result[$minIndex] = $arr[$i];\n        }\n    }\n  \
    \  sort($result);\n    return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\n\
    $result = maximum($arr, $k);\nprint_r($result);\necho \"\\n\";\n\n$arr = array(4,\
    \ -4, 4);\n$k = 2;\n$result = maximum($arr, $k);\nprint_r($result);\necho \"\\\
    n\";\n\n$arr = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\n$result = maximum($arr,\
    \ $k);\nprint_r($result);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => -4\n    [1] => -3\n    [2] => 5\n)\n\nArray\n(\n \
    \   [0] => 4\n    [1] => 4\n)\n\nArray\n(\n    [0] => 2\n)\n\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpepxtib64.php:75\nStack trace:\n#0 /tmp/tmpepxtib64.php(78):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpepxtib64.php on line 75\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    for ($i = 0; $i < $k; $i++) {\n        $max\
    \ = -1000;\n        $index = -1;\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $index = $j;\n            }\n        }\n        $result[] = $max;\n\
    \        unset($arr[$index]);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return maximum(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-3,\
    \ -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(123, -123,\
    \ 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 15, 0,\
    \ 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0,\
    \ 5, -7), 1) !== array(5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptpx94tjv.php:39\n\
    Stack trace:\n#0 /tmp/tmptpx94tjv.php(52): test()\n#1 {main}\n  thrown in /tmp/tmptpx94tjv.php\
    \ on line 39\n"
  timestamp: 1659730151
- exit_code: 255
  program: "<?php\n// Given an array arr of integers and a positive integer k, return\
    \ a sorted list \n// of length k with the maximum k numbers in arr.\n// Example\
    \ 1:\n// >>> maximum(array(-3, -4, 5), 3)\n// array(-4, -3, 5)\n// Example 2:\n\
    // >>> maximum(array(4, -4, 4), 2)\n// array(4, 4)\n// Example 3:\n// >>> maximum(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1)\n// array(2)\n// Note:\n// 1. The length of the array\
    \ will be in the range of [1, 1000].\n// 2. The elements in the array will be\
    \ in the range of [-1000, 1000].\n// 3. 0 <= k <= len(arr)\nfunction maximum($arr,\
    \ $k) {\n    $result = array();\n    $max = $arr[0];\n    $max_index = 0;\n  \
    \  for ($i = 0; $i < $k; $i++) {\n        for ($j = 0; $j < count($arr); $j++)\
    \ {\n            if ($arr[$j] > $max) {\n                $max = $arr[$j];\n  \
    \              $max_index = $j;\n            }\n        }\n        $result[] =\
    \ $max;\n        $arr[$max_index] = -1000;\n        $max = -1000;\n    }\n   \
    \ return $result;\n}\n\n$arr = array(-3, -4, 5);\n$k = 3;\nprint_r(maximum($arr,\
    \ $k));\n\n$arr = array(4, -4, 4);\n$k = 2;\nprint_r(maximum($arr, $k));\n\n$arr\
    \ = array(-3, 2, 1, 2, -1, -2, 1);\n$k = 1;\nprint_r(maximum($arr, $k));\nfunction\
    \ candidate(...$args) {\n    return maximum(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, -4, 4), 2) !==\
    \ array(4, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20,\
    \ 123)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-123,\
    \ 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8,\
    \ 0, 0, 3, 5, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 10), 2) !==\
    \ array(-10, 10)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => -3\n    [2] => -4\n)\nArray\n(\n   \
    \ [0] => 4\n    [1] => 4\n)\nArray\n(\n    [0] => 2\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpixz0p3op.php:51\nStack trace:\n#0 /tmp/tmpixz0p3op.php(64):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpixz0p3op.php on line 51\n"
  timestamp: 1659730151

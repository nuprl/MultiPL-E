name: HumanEval_157_right_angle_triangle
language: php
prompt: "<?php\n// Given the lengths of the three sides of a triangle. Return True\
  \ if the three\n// sides form a right-angled triangle, False otherwise.\n// A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
  // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
  \ 2, 3)\n// false\nfunction right_angle_triangle($a, $b, $c) {\n"
tests: "function candidate(...$args) {\n    return right_angle_triangle(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(3, 4, 5) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 3) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 6, 8) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 2) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(7, 24, 25) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 5, 7) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(5, 12, 13) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(15, 8, 17) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(48, 55, 73) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 1, 1) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 10) !== false) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    // Write your code here\n    $max = max($a, $b, $c);\n    if ($max\
    \ == $a) {\n        return $b * $b + $c * $c == $a * $a;\n    } else if ($max\
    \ == $b) {\n        return $a * $a + $c * $c == $b * $b;\n    } else {\n     \
    \   return $a * $a + $b * $b == $c * $c;\n    }\n}\n", "    $hypotenuse = max($a,\
    \ $b, $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c -\
    \ $hypotenuse - $cathetus1;\n    return $hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "  $hypotenuse = max($a, $b,\
    \ $c);\n  $side1 = min($a, $b, $c);\n  $side2 = $a + $b + $c - $hypotenuse - $side1;\n\
    \  return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n}\n\
    \necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "    $sides = array($a, $b, $c);\n    sort($sides);\n   \
    \ return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", " \
    \ // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example:\n  // print \"Hello world!\";\n  $result = false;\n\
    \  if ($a > 0 && $b > 0 && $c > 0) {\n    if (($a * $a + $b * $b == $c * $c) ||\
    \ ($a * $a + $c * $c == $b * $b) || ($b * $b + $c * $c == $a * $a)) {\n      $result\
    \ = true;\n    }\n  }\n  return $result;\n}\n", "    $sides = [$a, $b, $c];\n\
    \    sort($sides);\n    return $sides[0] ** 2 + $sides[1] ** 2 == $sides[2] **\
    \ 2;\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n  return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    $hypotenuse = max($a,\
    \ $b, $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c -\
    \ $hypotenuse - $cathetus1;\n    return $hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    $sides = [$a, $b, $c];\n\
    \    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\n", "  $a2 = $a * $a;\n  $b2 = $b * $b;\n  $c2 = $c * $c;\n  if ($a2\
    \ + $b2 == $c2) {\n    return true;\n  } else if ($a2 + $c2 == $b2) {\n    return\
    \ true;\n  } else if ($b2 + $c2 == $a2) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n   \
    \ $hypotenuse = $sides[2];\n    $adjacent = $sides[1];\n    $opposite = $sides[0];\n\
    \    $hypotenuse_squared = pow($hypotenuse, 2);\n    $adjacent_squared = pow($adjacent,\
    \ 2);\n    $opposite_squared = pow($opposite, 2);\n    if ($hypotenuse_squared\
    \ == $adjacent_squared + $opposite_squared) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n", "    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n\
    \    return $hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2;\n}\n", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $result = false;\n    if\
    \ ($a > 0 && $b > 0 && $c > 0) {\n        if ($a * $a + $b * $b == $c * $c) {\n\
    \            $result = true;\n        }\n        if ($a * $a + $c * $c == $b *\
    \ $b) {\n            $result = true;\n        }\n        if ($b * $b + $c * $c\
    \ == $a * $a) {\n            $result = true;\n        }\n    }\n    return $result;\n\
    }\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    $sides = array($a,\
    \ $b, $c);\n    sort($sides);\n    return $sides[0] * $sides[0] + $sides[1] *\
    \ $sides[1] == $sides[2] * $sides[2];\n}\n", "    $sides = [$a, $b, $c];\n   \
    \ sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1 = $sides[1];\n \
    \   $cathetus2 = $sides[0];\n    $hypotenuse_squared = pow($hypotenuse, 2);\n\
    \    $cathetus1_squared = pow($cathetus1, 2);\n    $cathetus2_squared = pow($cathetus2,\
    \ 2);\n    $sum_of_squares = $cathetus1_squared + $cathetus2_squared;\n    return\
    \ $hypotenuse_squared == $sum_of_squares;\n}\n", "  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\n\
    \  // print \"Hello world!\";\n  $hypotenuse = max($a, $b, $c);\n  $side1 = min($a,\
    \ $b, $c);\n  $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n  if ($hypotenuse\
    \ * $hypotenuse == $side1 * $side1 + $side2 * $side2) {\n    return true;\n  }\
    \ else {\n    return false;\n  }\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n\
    \  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n\
    \  return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 *\
    \ $cathetus2;\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return\
    \ pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $result = false;\n    if\
    \ ($a > 0 && $b > 0 && $c > 0) {\n        if ($a*$a + $b*$b == $c*$c) {\n    \
    \        $result = true;\n        }\n        if ($a*$a + $c*$c == $b*$b) {\n \
    \           $result = true;\n        }\n        if ($b*$b + $c*$c == $a*$a) {\n\
    \            $result = true;\n        }\n    }\n    return $result;\n}\n", " \
    \   // Write your code here\n    $result = false;\n    if ($a > 0 && $b > 0 &&\
    \ $c > 0) {\n        if ($a * $a + $b * $b == $c * $c || $a * $a + $c * $c ==\
    \ $b * $b || $b * $b + $c * $c == $a * $a) {\n            $result = true;\n  \
    \      }\n    }\n    return $result;\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\necho\
    \ right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3)\
    \ . \"\\n\";", "    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n \
    \   if ($a2 + $b2 == $c2) {\n        return true;\n    } elseif ($a2 + $c2 ==\
    \ $b2) {\n        return true;\n    } elseif ($b2 + $c2 == $a2) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n", "  // Write your code\
    \ here\n  // To print results to the standard output you can use print\n  // Example:\n\
    \  // print \"Hello world!\";\n  if (($a*$a + $b*$b) == $c*$c || ($a*$a + $c*$c)\
    \ == $b*$b || ($b*$b + $c*$c) == $a*$a) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return\
    \ pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) ? \"true\\n\" : \"false\\n\";\necho right_angle_triangle(1, 2, 3) ? \"\
    true\\n\" : \"false\\n\";", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    $hypotenuse = array_pop($sides);\n    $sum_of_squares = array_reduce($sides,\
    \ function($sum, $side) {\n        return $sum + pow($side, 2);\n    }, 0);\n\
    \    return pow($hypotenuse, 2) == $sum_of_squares;\n}\n", "    // Write your\
    \ code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $result = false;\n    $sides\
    \ = array($a, $b, $c);\n    sort($sides);\n    if ($sides[0] * $sides[0] + $sides[1]\
    \ * $sides[1] == $sides[2] * $sides[2]) {\n        $result = true;\n    }\n  \
    \  return $result;\n}\n", "  // Write your code here\n  // To print results to\
    \ the standard output you can use print\n  // Example:\n  // print \"Hello world!\"\
    ;\n}", "  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n}", "    $sides\
    \ = array($a, $b, $c);\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1\
    \ = $sides[1];\n    $cathetus2 = $sides[0];\n    $sum_of_squares = pow($cathetus1,\
    \ 2) + pow($cathetus2, 2);\n    $square_of_hypotenuse = pow($hypotenuse, 2);\n\
    \    return $sum_of_squares == $square_of_hypotenuse;\n}\n", "  if ($a > $b &&\
    \ $a > $c) {\n    return pow($a, 2) == pow($b, 2) + pow($c, 2);\n  } else if ($b\
    \ > $a && $b > $c) {\n    return pow($b, 2) == pow($a, 2) + pow($c, 2);\n  } else\
    \ {\n    return pow($c, 2) == pow($a, 2) + pow($b, 2);\n  }\n}\n", "  $hypotenuse\
    \ = max($a, $b, $c);\n  $others = array_diff([$a, $b, $c], [$hypotenuse]);\n \
    \ $sum_of_squares = array_reduce($others, function($acc, $val) {\n    return $acc\
    \ + pow($val, 2);\n  }, 0);\n  return pow($hypotenuse, 2) == $sum_of_squares;\n\
    }\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "  // Your code here\n}", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n\
    \  return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 *\
    \ $cathetus2;\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n  return\
    \ pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  $sides\
    \ = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 =\
    \ $sides[1];\n  $cathetus2 = $sides[0];\n  return $hypotenuse * $hypotenuse ==\
    \ $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    $hypotenuse =\
    \ max($a, $b, $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b\
    \ + $c - $hypotenuse - $cathetus1;\n    return $hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $hypotenuse = max($a, $b, $c);\n    $cathetus1\
    \ = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n\
    \    if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}", " \
    \ // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example:\n  // print \"Hello world!\";\n}", "    $hypotenuse\
    \ = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = $a + $b + $c\
    \ - $hypotenuse - $side1;\n    $hypotenuse_squared = pow($hypotenuse, 2);\n  \
    \  $side1_squared = pow($side1, 2);\n    $side2_squared = pow($side2, 2);\n  \
    \  return $hypotenuse_squared == $side1_squared + $side2_squared;\n}\n", "   \
    \ if ($a == 0 || $b == 0 || $c == 0) {\n        return false;\n    }\n    if ($a\
    \ > $b && $a > $c) {\n        return $a * $a == $b * $b + $c * $c;\n    }\n  \
    \  if ($b > $a && $b > $c) {\n        return $b * $b == $a * $a + $c * $c;\n \
    \   }\n    if ($c > $a && $c > $b) {\n        return $c * $c == $a * $a + $b *\
    \ $b;\n    }\n    return false;\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "  // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example:\n  // print \"Hello world!\";\n  $sides = array($a,\
    \ $b, $c);\n  sort($sides);\n  if($sides[0] * $sides[0] + $sides[1] * $sides[1]\
    \ == $sides[2] * $sides[2])\n    return true;\n  else\n    return false;\n}",
  "  $hypotenuse = max($a, $b, $c);\n  $side1 = ($a == $hypotenuse) ? $b : $a;\n \
    \ $side2 = ($c == $hypotenuse) ? $b : $c;\n  return ($hypotenuse ** 2 == $side1\
    \ ** 2 + $side2 ** 2);\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho\
    \ right_angle_triangle(1, 2, 3) . \"\\n\";", "    $hypotenuse = max($a, $b, $c);\n\
    \    $side1 = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n\
    \    return $hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2;\n}\n", "  $sides =\
    \ [$a, $b, $c];\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n\
    \  $cathetus2 = $sides[0];\n  return $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2\
    \ ** 2;\n}\n", "    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n \
    \   if ($a2 + $b2 == $c2) {\n        return true;\n    } elseif ($a2 + $c2 ==\
    \ $b2) {\n        return true;\n    } elseif ($b2 + $c2 == $a2) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}", "    $a2 = $a * $a;\n\
    \    $b2 = $b * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n       \
    \ return true;\n    } else if ($a2 + $c2 == $b2) {\n        return true;\n   \
    \ } else if ($b2 + $c2 == $a2) {\n        return true;\n    } else {\n       \
    \ return false;\n    }\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $side1\
    \ = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    return\
    \ $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n}\n", "   \
    \ // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example:\n    // print \"Hello world!\";\n    $hypotenuse\
    \ = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c)\
    \ - $hypotenuse - $side1;\n    if ($hypotenuse * $hypotenuse == $side1 * $side1\
    \ + $side2 * $side2) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}", "    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse =\
    \ $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n    return\
    \ $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}\n", "  $sides = array($a,\
    \ $b, $c);\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $leg1 = $sides[0];\n\
    \  $leg2 = $sides[1];\n  return $hypotenuse * $hypotenuse == $leg1 * $leg1 + $leg2\
    \ * $leg2;\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "  $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  $hypotenuse\
    \ = max($a, $b, $c);\n  $adjacent = min($a, $b, $c);\n  $opposite = $a + $b +\
    \ $c - $hypotenuse - $adjacent;\n  return $hypotenuse ** 2 == $adjacent ** 2 +\
    \ $opposite ** 2;\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "    if ($a > $b && $a > $c) {\n        if ($a * $a == $b\
    \ * $b + $c * $c) {\n            return true;\n        }\n    } else if ($b >\
    \ $a && $b > $c) {\n        if ($b * $b == $a * $a + $c * $c) {\n            return\
    \ true;\n        }\n    } else if ($c > $a && $c > $b) {\n        if ($c * $c\
    \ == $a * $a + $b * $b) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n  return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $hypotenuse = max($a, $b,\
    \ $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n    return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2;\n}", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\necho\
    \ right_angle_triangle(3, 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3)\
    \ . PHP_EOL;", "    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n \
    \   if ($a2 + $b2 == $c2) {\n        return true;\n    } else if ($a2 + $c2 ==\
    \ $b2) {\n        return true;\n    } else if ($b2 + $c2 == $a2) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n", "    $hypotenuse =\
    \ max($a, $b, $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a + $b\
    \ + $c - $hypotenuse - $cathetus1;\n    return $hypotenuse ** 2 == $cathetus1\
    \ ** 2 + $cathetus2 ** 2;\n}\n", "  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example:\n  // print \"Hello\
    \ world!\";\n  $a = pow($a, 2);\n  $b = pow($b, 2);\n  $c = pow($c, 2);\n  if\
    \ ($a + $b == $c || $a + $c == $b || $b + $c == $a) {\n    return true;\n  }\n\
    \  return false;\n}", "    // Write your code here\n    // To print results to\
    \ the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    if ($a == 0 || $b == 0 || $c == 0) {\n        return false;\n\
    \    }\n    $max = max($a, $b, $c);\n    $min = min($a, $b, $c);\n    $mid = $a\
    \ + $b + $c - $max - $min;\n    if ($max * $max == $min * $min + $mid * $mid)\
    \ {\n        return true;\n    }\n    return false;\n}\n", "  $sides = [$a, $b,\
    \ $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "    // Write your code here\n    // To print results to\
    \ the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    if(($a*$a+$b*$b==$c*$c)||($a*$a+$c*$c==$b*$b)||($b*$b+$c*$c==$a*$a)){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }\n}", " \
    \   // Write your code here\n    $arr = [$a, $b, $c];\n    sort($arr);\n    if\
    \ ($arr[0] * $arr[0] + $arr[1] * $arr[1] == $arr[2] * $arr[2]) {\n        return\
    \ true;\n    }\n    return false;\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  $a = $sides[0];\n  $b = $sides[1];\n  $c = $sides[2];\n  if ($a * $a + $b *\
    \ $b == $c * $c) {\n    return true;\n  }\n  return false;\n}\n", "  $sides =\
    \ [$a, $b, $c];\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n\
    \  $cathetus2 = $sides[0];\n  if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2) {\n    return true;\n  } else {\n    return false;\n\
    \  }\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n  return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "    if ($a > $b && $a >\
    \ $c) {\n        return $a * $a == $b * $b + $c * $c;\n    } else if ($b > $a\
    \ && $b > $c) {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n\
    \        return $c * $c == $a * $a + $b * $b;\n    }\n}\n", "  $sides = array($a,\
    \ $b, $c);\n  sort($sides);\n  if ($sides[0] * $sides[0] + $sides[1] * $sides[1]\
    \ == $sides[2] * $sides[2]) {\n    return true;\n  }\n  return false;\n}\n", " \
    \ // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example:\n  // print \"Hello world!\";\n  $hypotenuse = max($a,\
    \ $b, $c);\n  $side1 = min($a, $b, $c);\n  $side2 = ($a + $b + $c) - $hypotenuse\
    \ - $side1;\n  if ($hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\n", "    $sides =\
    \ array($a, $b, $c);\n    sort($sides);\n    return ($sides[0] * $sides[0] + $sides[1]\
    \ * $sides[1]) == $sides[2] * $sides[2];\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2\
    \ = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n    } elseif\
    \ ($a2 + $c2 == $b2) {\n        return true;\n    } elseif ($b2 + $c2 == $a2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \ $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\"\
    ;\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    $hypotenuse = max($a,\
    \ $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse\
    \ - $side1;\n    return pow($hypotenuse, 2) == pow($side1, 2) + pow($side2, 2);\n\
    }\n", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example:\n    // print \"Hello world!\";\n    $hypotenuse\
    \ = max($a, $b, $c);\n    $cathetus1 = min($a, $b, $c);\n    $cathetus2 = $a +\
    \ $b + $c - $hypotenuse - $cathetus1;\n    return $hypotenuse * $hypotenuse ==\
    \ $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "  // Your code here\n\
    }\n", "  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n}", "    $sides\
    \ = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "    $sides = array($a, $b, $c);\n    sort($sides);\n    if ($sides[0] * $sides[0]\
    \ + $sides[1] * $sides[1] == $sides[2] * $sides[2]) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "  $hypotenuse = max($a, $b,\
    \ $c);\n  $cathetus1 = $a + $b + $c - $hypotenuse;\n  $cathetus2 = $a + $b + $c\
    \ - $hypotenuse - $cathetus1;\n  return $hypotenuse ** 2 == $cathetus1 ** 2 +\
    \ $cathetus2 ** 2;\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a,\
    \ $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n    return $hypotenuse\
    \ * $hypotenuse == $side1 * $side1 + $side2 * $side2;\n}\n", "    // Write your\
    \ code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n}", "  $sides = [$a, $b, $c];\n\
    \  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2\
    \ = $sides[0];\n  return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2;\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\necho\
    \ right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3)\
    \ . \"\\n\";", "  $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    // Your\
    \ code here\n}\n", "    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example:\n    // print \"Hello world!\"\
    ;\n    if ($a > $b && $a > $c) {\n        if ($a * $a == $b * $b + $c * $c) {\n\
    \            return true;\n        }\n    } else if ($b > $a && $b > $c) {\n \
    \       if ($b * $b == $a * $a + $c * $c) {\n            return true;\n      \
    \  }\n    } else if ($c > $a && $c > $b) {\n        if ($c * $c == $a * $a + $b\
    \ * $b) {\n            return true;\n        }\n    }\n    return false;\n}\n",
  "  $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n\
    \    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "    $sides = array($a, $b, $c);\n    sort($sides);\n    $hypotenuse = $sides[2];\n\
    \    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n    $hypotenuse_squared\
    \ = pow($hypotenuse, 2);\n    $cathetus1_squared = pow($cathetus1, 2);\n    $cathetus2_squared\
    \ = pow($cathetus2, 2);\n    $sum_of_squares = $cathetus1_squared + $cathetus2_squared;\n\
    \    if ($hypotenuse_squared == $sum_of_squares) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", " \
    \ $sides = array($a, $b, $c);\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\"\
    ;\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    $sides = [$a, $b, $c];\n\
    \    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\n", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return $sides[0]\
    \ * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2];\n}\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    $sides\
    \ = array($a, $b, $c);\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $adjacent\
    \ = $sides[1];\n    $opposite = $sides[0];\n    if ($hypotenuse * $hypotenuse\
    \ == $adjacent * $adjacent + $opposite * $opposite) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "    if ($a > $b && $a > $c)\
    \ {\n        return $a * $a == $b * $b + $c * $c;\n    } else if ($b > $a && $b\
    \ > $c) {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n      \
    \  return $c * $c == $a * $a + $b * $b;\n    }\n}\n", "    if ($a > $b && $a >\
    \ $c) {\n        return $a * $a == $b * $b + $c * $c;\n    } else if ($b > $a\
    \ && $b > $c) {\n        return $b * $b == $a * $a + $c * $c;\n    } else {\n\
    \        return $c * $c == $a * $a + $b * $b;\n    }\n}\n", "  $sides = [$a, $b,\
    \ $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "    // Your code here\n}\n", "  // Your code here\n}", " \
    \ $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\"\
    ;\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    $triangle = array($a,\
    \ $b, $c);\n    sort($triangle);\n    $hypotenuse = $triangle[2];\n    $cathetus1\
    \ = $triangle[1];\n    $cathetus2 = $triangle[0];\n    return $hypotenuse * $hypotenuse\
    \ == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    $sides = array($a,\
    \ $b, $c);\n    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2)\
    \ == pow($sides[2], 2);\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n\
    \  if ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n    return true;\n  }\n  return false;\n}\n", "    // Write your code here\n\
    \    $max = max($a, $b, $c);\n    if ($max == $a) {\n        return $b * $b +\
    \ $c * $c == $a * $a;\n    } else if ($max == $b) {\n        return $a * $a +\
    \ $c * $c == $b * $b;\n    } else {\n        return $a * $a + $b * $b == $c *\
    \ $c;\n    }\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse\
    \ = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n  return\
    \ $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}\n", "    $sides =\
    \ [$a, $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1\
    \ = $sides[1];\n    $cathetus2 = $sides[0];\n    $hypotenuse_squared = pow($hypotenuse,\
    \ 2);\n    $cathetus1_squared = pow($cathetus1, 2);\n    $cathetus2_squared =\
    \ pow($cathetus2, 2);\n    $sum_cathetus_squared = $cathetus1_squared + $cathetus2_squared;\n\
    \    if ($hypotenuse_squared == $sum_cathetus_squared) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2\
    \ = $c * $c;\n    if ($a2 + $b2 == $c2 || $a2 + $c2 == $b2 || $b2 + $c2 == $a2)\
    \ {\n        return true;\n    }\n    return false;\n}\n", "  $sides = [$a, $b,\
    \ $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse\
    \ = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n   \
    \ return $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}\n", "    $sides\
    \ = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $adjacent\
    \ = $sides[1];\n    $opposite = $sides[0];\n    if ($hypotenuse ** 2 == $adjacent\
    \ ** 2 + $opposite ** 2) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n \
    \   return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n",
  "  // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example:\n  // print \"Hello world!\";\n  $hypotenuse = max($a,\
    \ $b, $c);\n  $cathetus1 = min($a, $b, $c);\n  $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n  return ($hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 **\
    \ 2);\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example:\n  // print \"Hello world!\";\n  $hypotenuse\
    \ = max($a, $b, $c);\n  $cathetus1 = min($a, $b, $c);\n  $cathetus2 = $a + $b\
    \ + $c - $hypotenuse - $cathetus1;\n  return $hypotenuse * $hypotenuse == $cathetus1\
    \ * $cathetus1 + $cathetus2 * $cathetus2;\n}\n", "    if ($a > $b && $a > $c)\
    \ {\n        if ($a * $a == $b * $b + $c * $c) {\n            return true;\n \
    \       }\n    } else if ($b > $a && $b > $c) {\n        if ($b * $b == $a * $a\
    \ + $c * $c) {\n            return true;\n        }\n    } else if ($c > $a &&\
    \ $c > $b) {\n        if ($c * $c == $a * $a + $b * $b) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n", "    if ($a > $b && $a > $c)\
    \ {\n        if ($a * $a == $b * $b + $c * $c) {\n            return true;\n \
    \       }\n    } else if ($b > $a && $b > $c) {\n        if ($b * $b == $a * $a\
    \ + $c * $c) {\n            return true;\n        }\n    } else if ($c > $a &&\
    \ $c > $b) {\n        if ($c * $c == $a * $a + $b * $b) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n", "    $hypotenuse = max($a,\
    \ $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = $a + $b + $c - $hypotenuse\
    \ - $side1;\n    return $hypotenuse ** 2 == $side1 ** 2 + $side2 ** 2;\n}\n",
  "    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 =\
    \ ($a + $b + $c) - $hypotenuse - $side1;\n    return $hypotenuse * $hypotenuse\
    \ == $side1 * $side1 + $side2 * $side2;\n}\n", "  if ($a == 0 || $b == 0 || $c\
    \ == 0) {\n    return false;\n  }\n  $sides = array($a, $b, $c);\n  sort($sides);\n\
    \  $a = $sides[0];\n  $b = $sides[1];\n  $c = $sides[2];\n  return $a * $a + $b\
    \ * $b == $c * $c;\n}\n", "  // Write your code here\n  // To print results to\
    \ the standard output you can use print\n  // Example:\n  // print \"Hello world!\"\
    ;\n}", "    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n\
    \    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n    $hypotenuse_squared\
    \ = pow($hypotenuse, 2);\n    $cathetus1_squared = pow($cathetus1, 2);\n    $cathetus2_squared\
    \ = pow($cathetus2, 2);\n    $sum_of_squares = $cathetus1_squared + $cathetus2_squared;\n\
    \    if ($hypotenuse_squared == $sum_of_squares) {\n        return true;\n   \
    \ } else {\n        return false;\n    }\n}\n", "    $a2 = $a * $a;\n    $b2 =\
    \ $b * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n\
    \    } else if ($a2 + $c2 == $b2) {\n        return true;\n    } else if ($b2\
    \ + $c2 == $a2) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example:\n  // print \"Hello world!\";\n}", " \
    \ $sides = array($a, $b, $c);\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\"\
    ;\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  $sides = [$a, $b, $c];\n\
    \  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "  // Write your code here\n  // To print results to the\
    \ standard output you can use print\n  // Example:\n  // print \"Hello world!\"\
    ;\n  $result = false;\n  $sides = array($a, $b, $c);\n  sort($sides);\n  if ($sides[0]\
    \ * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2]) {\n    $result\
    \ = true;\n  }\n  return $result;\n}\n", "    // Write your code here\n    $a2\
    \ = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2)\
    \ {\n        return true;\n    } else if ($a2 + $c2 == $b2) {\n        return\
    \ true;\n    } else if ($b2 + $c2 == $a2) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n", "  // Write your code here\n  $sides\
    \ = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $adjacent =\
    \ $sides[1];\n  $opposite = $sides[0];\n  if ($hypotenuse * $hypotenuse == $adjacent\
    \ * $adjacent + $opposite * $opposite) {\n    return true;\n  }\n  return false;\n\
    }\n", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example:\n    // print \"Hello world!\";\n    if ($a\
    \ == 0 || $b == 0 || $c == 0) {\n        return false;\n    }\n    $max = max($a,\
    \ $b, $c);\n    $min = min($a, $b, $c);\n    $mid = $a + $b + $c - $max - $min;\n\
    \    if ($max * $max == $min * $min + $mid * $mid) {\n        return true;\n \
    \   }\n    return false;\n}\n", "    if ($a > $b && $a > $c) {\n        return\
    \ $a * $a == $b * $b + $c * $c;\n    } else if ($b > $a && $b > $c) {\n      \
    \  return $b * $b == $a * $a + $c * $c;\n    } else {\n        return $c * $c\
    \ == $a * $a + $b * $b;\n    }\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    return ($sides[0] ** 2 + $sides[1] ** 2 == $sides[2] ** 2);\n}\n", "    if\
    \ ($a > $b && $a > $c) {\n        return pow($a, 2) == pow($b, 2) + pow($c, 2);\n\
    \    } else if ($b > $a && $b > $c) {\n        return pow($b, 2) == pow($a, 2)\
    \ + pow($c, 2);\n    } else {\n        return pow($c, 2) == pow($a, 2) + pow($b,\
    \ 2);\n    }\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example:\n  // print \"Hello world!\";\n  $sides\
    \ = array($a, $b, $c);\n  sort($sides);\n  if ($sides[0] * $sides[0] + $sides[1]\
    \ * $sides[1] == $sides[2] * $sides[2]) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}", "    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse\
    \ = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n   \
    \ return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n\
    }\n", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example:\n    // print \"Hello world!\";\n    $max\
    \ = max($a, $b, $c);\n    $sum = $a + $b + $c;\n    if ($max * $max == $sum -\
    \ $max * $max) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n\
    \    $side2 = $a + $b + $c - $hypotenuse - $side1;\n    return $hypotenuse * $hypotenuse\
    \ == $side1 * $side1 + $side2 * $side2;\n}\n", "    $sides = [$a, $b, $c];\n \
    \   sort($sides);\n    return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2],\
    \ 2);\n}\n", "  // Write your code here\n  // To print results to the standard\
    \ output you can use print\n  // Example:\n  // print \"Hello world!\";\n  $sides\
    \ = array($a, $b, $c);\n  sort($sides);\n  if ($sides[0] * $sides[0] + $sides[1]\
    \ * $sides[1] == $sides[2] * $sides[2]) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}", "    $sides = [$a, $b, $c];\n    sort($sides);\n    return\
    \ pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "  $sides\
    \ = [$a, $b, $c];\n  sort($sides);\n  $a = $sides[0];\n  $b = $sides[1];\n  $c\
    \ = $sides[2];\n  return pow($a, 2) + pow($b, 2) == pow($c, 2);\n}\n", "  $a2\
    \ = $a * $a;\n  $b2 = $b * $b;\n  $c2 = $c * $c;\n  if ($a2 + $b2 == $c2) {\n\
    \    return true;\n  } elseif ($a2 + $c2 == $b2) {\n    return true;\n  } elseif\
    \ ($b2 + $c2 == $a2) {\n    return true;\n  } else {\n    return false;\n  }\n\
    }\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  return $sides[0] ** 2 + $sides[1]\
    \ ** 2 == $sides[2] ** 2;\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\n\
    echo right_angle_triangle(1, 2, 3) . \"\\n\";", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  return pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\necho\
    \ right_angle_triangle(3, 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3)\
    \ . PHP_EOL;", "    $hypotenuse = max($a, $b, $c);\n    $side1 = min($a, $b, $c);\n\
    \    $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n    return $hypotenuse *\
    \ $hypotenuse == $side1 * $side1 + $side2 * $side2;\n}\n", "  // Write your code\
    \ here\n  // To print results to the standard output you can use print\n  // Example:\n\
    \  // print \"Hello world!\";\n}", "  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example:\n  // print \"Hello\
    \ world!\";\n  $a2 = $a * $a;\n  $b2 = $b * $b;\n  $c2 = $c * $c;\n  if ($a2 +\
    \ $b2 == $c2) {\n    return true;\n  } else if ($a2 + $c2 == $b2) {\n    return\
    \ true;\n  } else if ($b2 + $c2 == $a2) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n", "    if ($a > $b && $a > $c) {\n        return $a * $a ==\
    \ $b * $b + $c * $c;\n    } else if ($b > $a && $b > $c) {\n        return $b\
    \ * $b == $a * $a + $c * $c;\n    } else {\n        return $c * $c == $a * $a\
    \ + $b * $b;\n    }\n}\n", "    $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 =\
    \ $c * $c;\n    if ($a2 + $b2 == $c2) {\n        return true;\n    } elseif ($a2\
    \ + $c2 == $b2) {\n        return true;\n    } elseif ($b2 + $c2 == $a2) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\n", "  $sides\
    \ = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\"\
    ;\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    $hypotenuse = 0;\n    $cathetus1 = 0;\n \
    \   $cathetus2 = 0;\n    if ($a > $b && $a > $c) {\n        $hypotenuse = $a;\n\
    \        $cathetus1 = $b;\n        $cathetus2 = $c;\n    } else if ($b > $a &&\
    \ $b > $c) {\n        $hypotenuse = $b;\n        $cathetus1 = $a;\n        $cathetus2\
    \ = $c;\n    } else {\n        $hypotenuse = $c;\n        $cathetus1 = $a;\n \
    \       $cathetus2 = $b;\n    }\n    $hypotenuse_square = pow($hypotenuse, 2);\n\
    \    $cathetus1_square = pow($cathetus1, 2);\n    $cathetus2_square = pow($cathetus2,\
    \ 2);\n    if ($hypotenuse_square == $cathetus1_square + $cathetus2_square) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n", "  $sides\
    \ = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 =\
    \ $sides[1];\n  $cathetus2 = $sides[0];\n  return $hypotenuse ** 2 == $cathetus1\
    \ ** 2 + $cathetus2 ** 2;\n}\n", "  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example:\n  // print \"Hello\
    \ world!\";\n  $hypotenuse = max($a, $b, $c);\n  $cathetus1 = min($a, $b, $c);\n\
    \  $cathetus2 = ($a + $b + $c) - $hypotenuse - $cathetus1;\n  if ($hypotenuse\
    \ * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\n", "    $hypotenuse = max($a,\
    \ $b, $c);\n    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse\
    \ - $side1;\n    return pow($hypotenuse, 2) == pow($side1, 2) + pow($side2, 2);\n\
    }\n", "  $hypotenuse = max($a, $b, $c);\n  $side1 = min($a, $b, $c);\n  $side2\
    \ = $a + $b + $c - $hypotenuse - $side1;\n  return $hypotenuse * $hypotenuse ==\
    \ $side1 * $side1 + $side2 * $side2;\n}\n\necho right_angle_triangle(3, 4, 5)\
    \ . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  // Write your\
    \ code here\n  // To print results to the standard output you can use print\n\
    \  // Example:\n  // print \"Hello world!\";\n  $sides = array($a, $b, $c);\n\
    \  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2\
    \ = $sides[0];\n  $hypotenuse_squared = pow($hypotenuse, 2);\n  $cathetus1_squared\
    \ = pow($cathetus1, 2);\n  $cathetus2_squared = pow($cathetus2, 2);\n  $sum_of_squares\
    \ = $cathetus1_squared + $cathetus2_squared;\n  if ($hypotenuse_squared == $sum_of_squares)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}", "    $sides = [$a,\
    \ $b, $c];\n    sort($sides);\n    $a = $sides[0];\n    $b = $sides[1];\n    $c\
    \ = $sides[2];\n    return $a * $a + $b * $b == $c * $c;\n}\n", "  $sides = [$a,\
    \ $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) + pow($sides[1], 2) ==\
    \ pow($sides[2], 2);\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho\
    \ right_angle_triangle(1, 2, 3) . \"\\n\";", "  if ($a > $b && $a > $c) {\n  \
    \  return $a * $a == $b * $b + $c * $c;\n  } else if ($b > $a && $b > $c) {\n\
    \    return $b * $b == $a * $a + $c * $c;\n  } else {\n    return $c * $c == $a\
    \ * $a + $b * $b;\n  }\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  return\
    \ pow($sides[0], 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  $hypotenuse\
    \ = max($a, $b, $c);\n  $side1 = min($a, $b, $c);\n  $side2 = $a + $b + $c - $hypotenuse\
    \ - $side1;\n  return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 *\
    \ $side2;\n}\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "    // Write your code here\n    // To print results to\
    \ the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    if ($a > $b && $a > $c) {\n        if ($a * $a == $b * $b + $c\
    \ * $c) {\n            return true;\n        }\n    } else if ($b > $a && $b >\
    \ $c) {\n        if ($b * $b == $a * $a + $c * $c) {\n            return true;\n\
    \        }\n    } else if ($c > $a && $c > $b) {\n        if ($c * $c == $a *\
    \ $a + $b * $b) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) +\
    \ pow($sides[1], 2) == pow($sides[2], 2);\n}\necho right_angle_triangle(3, 4,\
    \ 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $hypotenuse = max($a, $b,\
    \ $c);\n    $side1 = min($a, $b, $c);\n    $side2 = ($a + $b + $c) - $hypotenuse\
    \ - $side1;\n    if ($hypotenuse * $hypotenuse == $side1 * $side1 + $side2 * $side2)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n", " \
    \   $a2 = $a * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2\
    \ == $c2) {\n        return true;\n    } elseif ($a2 + $c2 == $b2) {\n       \
    \ return true;\n    } elseif ($b2 + $c2 == $a2) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n", "  if ($a > $b && $a > $c) {\n \
    \   return pow($a, 2) == pow($b, 2) + pow($c, 2);\n  } else if ($b > $a && $b\
    \ > $c) {\n    return pow($b, 2) == pow($a, 2) + pow($c, 2);\n  } else {\n   \
    \ return pow($c, 2) == pow($a, 2) + pow($b, 2);\n  }\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . PHP_EOL;\necho right_angle_triangle(1, 2, 3) . PHP_EOL;", "  $sides\
    \ = array($a, $b, $c);\n  sort($sides);\n  if ($sides[0] * $sides[0] + $sides[1]\
    \ * $sides[1] == $sides[2] * $sides[2]) {\n    return true;\n  }\n  return false;\n\
    }\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "  $hypotenuse = max($a, $b, $c);\n  $cathetus1 = min($a,\
    \ $b, $c);\n  $cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n  return\
    \ $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}\n", "  $a2 = $a *\
    \ $a;\n  $b2 = $b * $b;\n  $c2 = $c * $c;\n  if ($a2 + $b2 == $c2) {\n    return\
    \ true;\n  } else if ($a2 + $c2 == $b2) {\n    return true;\n  } else if ($b2\
    \ + $c2 == $a2) {\n    return true;\n  } else {\n    return false;\n  }\n}\n",
  "  $sides = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $catheti\
    \ = $sides[0] * $sides[0] + $sides[1] * $sides[1];\n  return $hypotenuse * $hypotenuse\
    \ == $catheti;\n}\n", "    $hypotenuse = max($a, $b, $c);\n    $cathetus1 = min($a,\
    \ $b, $c);\n    $cathetus2 = $a + $b + $c - $hypotenuse - $cathetus1;\n    return\
    \ $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n\
    }\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  return pow($sides[0], 2) +\
    \ pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "  // Write your code here\n\
    }\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  $a = $sides[0];\n  $b = $sides[1];\n\
    \  $c = $sides[2];\n  return $a * $a + $b * $b == $c * $c;\n}\n\necho right_angle_triangle(3,\
    \ 4, 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  $hypotenuse\
    \ = max($a, $b, $c);\n  $side1 = min($a, $b, $c);\n  $side2 = $a + $b + $c - $hypotenuse\
    \ - $side1;\n  return $hypotenuse * $hypotenuse == $side1 * $side1 + $side2 *\
    \ $side2;\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  $hypotenuse = $sides[2];\n\
    \  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n  return $hypotenuse **\
    \ 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n}\n", "  $sides = [$a, $b, $c];\n \
    \ sort($sides);\n  $hypotenuse = $sides[2];\n  $leg1 = $sides[0];\n  $leg2 = $sides[1];\n\
    \  return ($hypotenuse * $hypotenuse) == ($leg1 * $leg1) + ($leg2 * $leg2);\n\
    }\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "  $triangle = array($a, $b, $c);\n  sort($triangle);\n \
    \ $hypotenuse = $triangle[2];\n  $cathetus1 = $triangle[1];\n  $cathetus2 = $triangle[0];\n\
    \  return pow($hypotenuse, 2) == pow($cathetus1, 2) + pow($cathetus2, 2);\n}\n",
  "    // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example:\n    // print \"Hello world!\";\n    $a2 = $a\
    \ * $a;\n    $b2 = $b * $b;\n    $c2 = $c * $c;\n    if ($a2 + $b2 == $c2 || $a2\
    \ + $c2 == $b2 || $b2 + $c2 == $a2) {\n        return true;\n    }\n    return\
    \ false;\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n    $hypotenuse\
    \ = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n   \
    \ return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2;\n\
    }\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  if ($sides[0] * $sides[0]\
    \ + $sides[1] * $sides[1] == $sides[2] * $sides[2]) {\n    return true;\n  }\n\
    \  return false;\n}\n\necho right_angle_triangle(3, 4, 5) . \"\\n\";\necho right_angle_triangle(1,\
    \ 2, 3) . \"\\n\";", "    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse\
    \ = $sides[2];\n    $cathetus1 = $sides[1];\n    $cathetus2 = $sides[0];\n   \
    \ $hypotenuse_squared = pow($hypotenuse, 2);\n    $cathetus1_squared = pow($cathetus1,\
    \ 2);\n    $cathetus2_squared = pow($cathetus2, 2);\n    $sum_of_squares = $cathetus1_squared\
    \ + $cathetus2_squared;\n    if ($hypotenuse_squared == $sum_of_squares) {\n \
    \       return true;\n    } else {\n        return false;\n    }\n}\n", "    $sides\
    \ = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse = $sides[2];\n    $cathetus1\
    \ = $sides[1];\n    $cathetus2 = $sides[0];\n    $hypotenuse_squared = pow($hypotenuse,\
    \ 2);\n    $cathetus1_squared = pow($cathetus1, 2);\n    $cathetus2_squared =\
    \ pow($cathetus2, 2);\n    $sum_of_squares = $cathetus1_squared + $cathetus2_squared;\n\
    \    return $hypotenuse_squared == $sum_of_squares;\n}\n", "  if ($a > $b && $a\
    \ > $c) {\n    return $a * $a == $b * $b + $c * $c;\n  } else if ($b > $a && $b\
    \ > $c) {\n    return $b * $b == $a * $a + $c * $c;\n  } else {\n    return $c\
    \ * $c == $a * $a + $b * $b;\n  }\n}\n", "  if ($a == 0 || $b == 0 || $c == 0)\
    \ {\n    return false;\n  }\n  $sides = array($a, $b, $c);\n  sort($sides);\n\
    \  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2 = $sides[0];\n\
    \  if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1 + $cathetus2 * $cathetus2)\
    \ {\n    return true;\n  }\n  return false;\n}\n", "  $sides = [$a, $b, $c];\n\
    \  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n  $cathetus2\
    \ = $sides[0];\n  return $hypotenuse ** 2 == $cathetus1 ** 2 + $cathetus2 ** 2;\n\
    }\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n    return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "  $hypotenuse = max($a,\
    \ $b, $c);\n  $cathetus1 = min($a, $b, $c);\n  $cathetus2 = $a + $b + $c - $hypotenuse\
    \ - $cathetus1;\n  return $hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2;\n}\n", "    $sides = array($a, $b, $c);\n    sort($sides);\n\
    \    $hypotenuse = $sides[2];\n    $leg1 = $sides[0];\n    $leg2 = $sides[1];\n\
    \    if ($hypotenuse * $hypotenuse == $leg1 * $leg1 + $leg2 * $leg2) {\n     \
    \   return true;\n    } else {\n        return false;\n    }\n}\n", "    $sides\
    \ = [$a, $b, $c];\n    sort($sides);\n    return pow($sides[0], 2) + pow($sides[1],\
    \ 2) == pow($sides[2], 2);\n}\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n\
    \  if ($sides[0] * $sides[0] + $sides[1] * $sides[1] == $sides[2] * $sides[2])\
    \ {\n    return true;\n  }\n  return false;\n}\necho right_angle_triangle(3, 4,\
    \ 5) . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $a = pow($a, 2);\n    $b\
    \ = pow($b, 2);\n    $c = pow($c, 2);\n    if ($a + $b == $c || $a + $c == $b\
    \ || $b + $c == $a) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "  $sides = array($a, $b, $c);\n  sort($sides);\n  return pow($sides[0],\
    \ 2) + pow($sides[1], 2) == pow($sides[2], 2);\n}\n", "  $sides = array($a, $b,\
    \ $c);\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n\
    \  $cathetus2 = $sides[0];\n  if ($hypotenuse * $hypotenuse == $cathetus1 * $cathetus1\
    \ + $cathetus2 * $cathetus2) {\n    return true;\n  } else {\n    return false;\n\
    \  }\n}\n", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($a == 0 || $b == 0 || $c == 0) {\n        return false;\n    }\n    if\
    \ ($a > $b && $a > $c) {\n        if ($a * $a == $b * $b + $c * $c) {\n      \
    \      return true;\n        }\n    }\n    if ($b > $a && $b > $c) {\n       \
    \ if ($b * $b == $a * $a + $c * $c) {\n            return true;\n        }\n \
    \   }\n    if ($c > $a && $c > $b) {\n        if ($c * $c == $a * $a + $b * $b)\
    \ {\n            return true;\n        }\n    }\n    return false;\n}", "    //\
    \ Write your code here\n    $sides = [$a, $b, $c];\n    sort($sides);\n    $hypotenuse\
    \ = $sides[2];\n    $leg1 = $sides[0];\n    $leg2 = $sides[1];\n    if ($hypotenuse\
    \ ** 2 == $leg1 ** 2 + $leg2 ** 2) {\n        return true;\n    } else {\n   \
    \     return false;\n    }\n}\n", "    $arr = [$a, $b, $c];\n    sort($arr);\n\
    \    $a = $arr[0];\n    $b = $arr[1];\n    $c = $arr[2];\n    if ($a * $a + $b\
    \ * $b == $c * $c) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n", "  $hypotenuse = max($a, $b, $c);\n  $side1 = min($a, $b, $c);\n\
    \  $side2 = ($a + $b + $c) - $hypotenuse - $side1;\n  return pow($hypotenuse,\
    \ 2) == pow($side1, 2) + pow($side2, 2);\n}\necho right_angle_triangle(3, 4, 5)\
    \ . \"\\n\";\necho right_angle_triangle(1, 2, 3) . \"\\n\";", "  $sides = [$a,\
    \ $b, $c];\n  sort($sides);\n  $hypotenuse = $sides[2];\n  $cathetus1 = $sides[1];\n\
    \  $cathetus2 = $sides[0];\n  $square_hypotenuse = pow($hypotenuse, 2);\n  $square_cathetus1\
    \ = pow($cathetus1, 2);\n  $square_cathetus2 = pow($cathetus2, 2);\n  if ($square_hypotenuse\
    \ == $square_cathetus1 + $square_cathetus2) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

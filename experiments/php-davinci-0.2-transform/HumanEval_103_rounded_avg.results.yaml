language: php
name: HumanEval_103_rounded_avg
results:
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4iza65d.php:31\n\
    Stack trace:\n#0 /tmp/tmpd4iza65d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpd4iza65d.php\
    \ on line 31\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbagmdlv.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbagmdlv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvbagmdlv.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4iza65d.php:31\n\
    Stack trace:\n#0 /tmp/tmpd4iza65d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpd4iza65d.php\
    \ on line 31\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m\
    \ - $n + 1);\n    $avg = round($avg);\n    return decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6jtdi6v.php:33\n\
    Stack trace:\n#0 /tmp/tmps6jtdi6v.php(47): test()\n#1 {main}\n  thrown in /tmp/tmps6jtdi6v.php\
    \ on line 33\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7l_dbw28.php:37\nStack trace:\n#0 /tmp/tmp7l_dbw28.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7l_dbw28.php on line 37\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i\
    \ <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\
    \treturn decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpzeecxxwl.php:35\nStack trace:\n#0 /tmp/tmpzeecxxwl.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzeecxxwl.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\nprint(rounded_avg(1, 5) . \"\
    \\n\");\nprint(rounded_avg(7, 5) . \"\\n\");\nprint(rounded_avg(10, 20) . \"\\\
    n\");\nprint(rounded_avg(20, 33) . \"\\n\");\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2giwyhsw.php:35\nStack trace:\n#0 /tmp/tmp2giwyhsw.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2giwyhsw.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m\
    \ - $n + 1);\n    $rounded_avg = round($avg);\n    return decbin($rounded_avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xh72o3h.php:33\n\
    Stack trace:\n#0 /tmp/tmp_xh72o3h.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp_xh72o3h.php\
    \ on line 33\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $average = round(($n\
    \ + $m) / 2);\n    return decbin($average);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_n0tp5l.php:28\n\
    Stack trace:\n#0 /tmp/tmp2_n0tp5l.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2_n0tp5l.php\
    \ on line 28\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpapsr5v1e.php:37\nStack trace:\n#0 /tmp/tmpapsr5v1e.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpapsr5v1e.php on line 37\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m\
    \ - $n + 1);\n    $avg = round($avg);\n    return decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpkbygge_j.php:37\nStack trace:\n#0 /tmp/tmpkbygge_j.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkbygge_j.php on line 37\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbagmdlv.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbagmdlv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvbagmdlv.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i835ltx.php:34\n\
    Stack trace:\n#0 /tmp/tmp8i835ltx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8i835ltx.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_ha0pvyd.php:36\nStack trace:\n#0 /tmp/tmp_ha0pvyd.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_ha0pvyd.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i\
    \ <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\
    \treturn decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpzeecxxwl.php:35\nStack trace:\n#0 /tmp/tmpzeecxxwl.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzeecxxwl.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\nfunction candidate(...$args) {\n   \
    \ return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzzvo34ws.php:27\n\
    Stack trace:\n#0 /tmp/tmpzzvo34ws.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzzvo34ws.php\
    \ on line 27\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_ha0pvyd.php:36\nStack trace:\n#0 /tmp/tmp_ha0pvyd.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_ha0pvyd.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return '0b' . decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdh_auph.php:34\n\
    Stack trace:\n#0 /tmp/tmpjdh_auph.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjdh_auph.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmphk8z2tqf.php:36\nStack trace:\n#0 /tmp/tmphk8z2tqf.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmphk8z2tqf.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7l_dbw28.php:37\nStack trace:\n#0 /tmp/tmp7l_dbw28.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7l_dbw28.php on line 37\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6q1pe2c2.php:31\nStack trace:\n#0 /tmp/tmp6q1pe2c2.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6q1pe2c2.php on line 31\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmphk8z2tqf.php:36\nStack trace:\n#0 /tmp/tmphk8z2tqf.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmphk8z2tqf.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_ha0pvyd.php:36\nStack trace:\n#0 /tmp/tmp_ha0pvyd.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_ha0pvyd.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5);\necho\
    \ \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10, 20);\n\
    echo \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmplf72zoy0.php:39\nStack trace:\n#0 /tmp/tmplf72zoy0.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmplf72zoy0.php on line 39\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpxhx4n_1j.php:37\nStack trace:\n#0 /tmp/tmpxhx4n_1j.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxhx4n_1j.php on line 37\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbagmdlv.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbagmdlv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvbagmdlv.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmphk8z2tqf.php:36\nStack trace:\n#0 /tmp/tmphk8z2tqf.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmphk8z2tqf.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3gbtr6uo.php:34\n\
    Stack trace:\n#0 /tmp/tmp3gbtr6uo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3gbtr6uo.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbagmdlv.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbagmdlv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvbagmdlv.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i835ltx.php:34\n\
    Stack trace:\n#0 /tmp/tmp8i835ltx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8i835ltx.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbagmdlv.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbagmdlv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvbagmdlv.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m\
    \ - $n + 1);\n    $rounded_avg = round($avg);\n    return decbin($rounded_avg);\n\
    }\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpve0ydtmd.php:36\nStack trace:\n#0 /tmp/tmpve0ydtmd.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpve0ydtmd.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpfkvdc4s1.php:32\nStack trace:\n#0 /tmp/tmpfkvdc4s1.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfkvdc4s1.php on line 32\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpczd5xf_o.php:36\nStack trace:\n#0 /tmp/tmpczd5xf_o.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpczd5xf_o.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3gbtr6uo.php:34\n\
    Stack trace:\n#0 /tmp/tmp3gbtr6uo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3gbtr6uo.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpxhx4n_1j.php:37\nStack trace:\n#0 /tmp/tmpxhx4n_1j.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxhx4n_1j.php on line 37\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i835ltx.php:34\n\
    Stack trace:\n#0 /tmp/tmp8i835ltx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8i835ltx.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4iza65d.php:31\n\
    Stack trace:\n#0 /tmp/tmpd4iza65d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpd4iza65d.php\
    \ on line 31\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_ha0pvyd.php:36\nStack trace:\n#0 /tmp/tmp_ha0pvyd.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_ha0pvyd.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4iza65d.php:31\n\
    Stack trace:\n#0 /tmp/tmpd4iza65d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpd4iza65d.php\
    \ on line 31\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmphk8z2tqf.php:36\nStack trace:\n#0 /tmp/tmphk8z2tqf.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmphk8z2tqf.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp6qqso5jv.php:35\nStack trace:\n#0 /tmp/tmp6qqso5jv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp6qqso5jv.php on line 35\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i835ltx.php:34\n\
    Stack trace:\n#0 /tmp/tmp8i835ltx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8i835ltx.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbagmdlv.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbagmdlv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvbagmdlv.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho\
    \ rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0c28g3ek.php:38\nStack trace:\n#0 /tmp/tmp0c28g3ek.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0c28g3ek.php on line 38\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\
    \\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\"\
    ;\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpe0fer3x2.php:36\nStack trace:\n#0 /tmp/tmpe0fer3x2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe0fer3x2.php on line 36\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\n\
    echo rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp45ysahw0.php:31\nStack trace:\n#0 /tmp/tmp45ysahw0.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmp45ysahw0.php on line 31\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3gbtr6uo.php:34\n\
    Stack trace:\n#0 /tmp/tmp3gbtr6uo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3gbtr6uo.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_ha0pvyd.php:36\nStack trace:\n#0 /tmp/tmp_ha0pvyd.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_ha0pvyd.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7l_dbw28.php:37\nStack trace:\n#0 /tmp/tmp7l_dbw28.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7l_dbw28.php on line 37\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbagmdlv.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbagmdlv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvbagmdlv.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i835ltx.php:34\n\
    Stack trace:\n#0 /tmp/tmp8i835ltx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8i835ltx.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbagmdlv.php:32\n\
    Stack trace:\n#0 /tmp/tmpvbagmdlv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvbagmdlv.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8i835ltx.php:34\n\
    Stack trace:\n#0 /tmp/tmp8i835ltx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8i835ltx.php\
    \ on line 34\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_ha0pvyd.php:36\nStack trace:\n#0 /tmp/tmp_ha0pvyd.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_ha0pvyd.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmphk8z2tqf.php:36\nStack trace:\n#0 /tmp/tmphk8z2tqf.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmphk8z2tqf.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n \
    \   return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppmfj76jk.php:28\n\
    Stack trace:\n#0 /tmp/tmppmfj76jk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmfj76jk.php\
    \ on line 28\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4jnbdm1.php:35\nStack trace:\n#0 /tmp/tmpr4jnbdm1.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4jnbdm1.php on line 35\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i\
    \ <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\
    \treturn decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kqzyc9j.php:32\n\
    Stack trace:\n#0 /tmp/tmp8kqzyc9j.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8kqzyc9j.php\
    \ on line 32\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i\
    \ <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp_ha0pvyd.php:36\nStack trace:\n#0 /tmp/tmp_ha0pvyd.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_ha0pvyd.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmphk8z2tqf.php:36\nStack trace:\n#0 /tmp/tmphk8z2tqf.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmphk8z2tqf.php on line 36\n"
  timestamp: 1659797792
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfcgi_ei.php:32\n\
    Stack trace:\n#0 /tmp/tmpbfcgi_ei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbfcgi_ei.php\
    \ on line 32\n"
  timestamp: 1659730626

language: php
name: HumanEval_161_solve
results:
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $res = [];\n    $letters = range('a',\
    \ 'z');\n    $letters = array_merge($letters, range('A', 'Z'));\n    foreach ($s\
    \ as $char) {\n        if (in_array($char, $letters)) {\n            $res[] =\
    \ strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n      \
    \  } else {\n            $res[] = $char;\n        }\n    }\n    return implode('',\
    \ $res);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1w3_z9kh.php:35\n\
    Stack trace:\n#0 /tmp/tmp1w3_z9kh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1w3_z9kh.php\
    \ on line 35\n"
  timestamp: 1659730248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $letters = str_split($letters);\n    $letters = array_merge($letters, array_map('strtoupper',\
    \ $letters));\n    $s = str_split($s);\n    foreach ($s as $char) {\n        if\
    \ (in_array($char, $letters)) {\n            $result .= strtolower($char) == $char\
    \ ? strtoupper($char) : strtolower($char);\n        } else {\n            $result\
    \ .= $char;\n        }\n    }\n    return $result;\n}\necho solve(\"1234\");\n\
    echo \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\");\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234\nAB\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hhvhv65.php:41\n\
    Stack trace:\n#0 /tmp/tmp1hhvhv65.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1hhvhv65.php\
    \ on line 41\n"
  timestamp: 1659730248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $result = [];\n    $isLetter = false;\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $result[] = strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $isLetter ? implode('', $result) : strrev(implode('',\
    \ $result));\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $letters = array_flip($letters);\n    $s = str_split($s);\n\
    \    $result = [];\n    foreach ($s as $char) {\n        if (isset($letters[$char]))\
    \ {\n            $result[] = $char === strtolower($char) ? strtoupper($char) :\
    \ strtolower($char);\n        } else {\n            $result[] = $char;\n     \
    \   }\n    }\n    return implode('', $result);\n}\n\n$s = \"1234\";\necho solve($s);\n\
    echo \"\\n\";\n$s = \"ab\";\necho solve($s);\necho \"\\n\";\n$s = \"#a@C\";\n\
    echo solve($s);\necho \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234\nAB\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_5xse4kd.php:45\n\
    Stack trace:\n#0 /tmp/tmp_5xse4kd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp_5xse4kd.php\
    \ on line 45\n"
  timestamp: 1659730248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $s = str_split($s);\n    $result = '';\n    foreach ($s as $char) {\n   \
    \     if (strpos($letters, $char) !== false) {\n            $result .= strtoupper($char)\
    \ == $char ? strtolower($char) : strtoupper($char);\n        } else {\n      \
    \      $result .= $char;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppid9yqn.php:34\n\
    Stack trace:\n#0 /tmp/tmpppid9yqn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpppid9yqn.php\
    \ on line 34\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $letters = [];\n    foreach ($s as\
    \ $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: strrev() expects parameter 1 to be string, array given in /tmp/tmpadwe4qt6.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadwe4qt6.php:41\n\
    Stack trace:\n#0 /tmp/tmpadwe4qt6.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpadwe4qt6.php\
    \ on line 41\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $letters = [];\n    foreach ($s as\
    \ $key => $value) {\n        if (ctype_alpha($value)) {\n            $letters[]\
    \ = $key;\n        }\n    }\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    foreach ($letters as $key => $value) {\n        if (ctype_upper($s[$value]))\
    \ {\n            $s[$value] = strtolower($s[$value]);\n        } else {\n    \
    \        $s[$value] = strtoupper($s[$value]);\n        }\n    }\n    return implode($s);\n\
    }\necho solve(\"1234\");\necho \"<br>\";\necho solve(\"ab\");\necho \"<br>\";\n\
    echo solve(\"#a@C\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: strrev() expects parameter 1 to be string, array given in /tmp/tmp76ck4k47.php\
    \ on line 23\n<br>AB<br>#A@c\nWarning: strrev() expects parameter 1 to be string,\
    \ array given in /tmp/tmp76ck4k47.php on line 23\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp76ck4k47.php:45\nStack trace:\n#0 /tmp/tmp76ck4k47.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp76ck4k47.php on line 45\n"
  timestamp: 1659730194
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $result = [];\n    $hasLetter = false;\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $hasLetter\
    \ = true;\n            $result[] = strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    return $hasLetter ? implode('', $result) : strrev(implode('',\
    \ $result));\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $letters = array_filter($s, function($x)\
    \ {\n        return ctype_alpha($x);\n    });\n    if (count($letters) == 0) {\n\
    \        return strrev($s);\n    }\n    $s = array_map(function($x) {\n      \
    \  if (ctype_alpha($x)) {\n            return strtoupper($x) == $x ? strtolower($x)\
    \ : strtoupper($x);\n        }\n        return $x;\n    }, $s);\n    return implode('',\
    \ $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: strrev() expects parameter 1 to be string, array given in /tmp/tmps61wqiuo.php\
    \ on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps61wqiuo.php:37\n\
    Stack trace:\n#0 /tmp/tmps61wqiuo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmps61wqiuo.php\
    \ on line 37\n"
  timestamp: 1659730248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = str_split($s);\n    $result = \"\";\n    $hasLetter\
    \ = false;\n    foreach ($letters as $letter) {\n        if (ctype_alpha($letter))\
    \ {\n            $hasLetter = true;\n            $result .= strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $result .= $letter;\n        }\n    }\n    return $hasLetter ? $result\
    \ : strrev($s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $letters = [];\n    $others = [];\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[]\
    \ = $char;\n        } else {\n            $others[] = $char;\n        }\n    }\n\
    \    $letters = array_map(function($char) {\n        return ctype_upper($char)\
    \ ? strtolower($char) : strtoupper($char);\n    }, $letters);\n    return implode('',\
    \ array_merge($letters, $others));\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3t74y5vh.php:37\n\
    Stack trace:\n#0 /tmp/tmp3t74y5vh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3t74y5vh.php\
    \ on line 37\n"
  timestamp: 1659730248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $result = '';\n    $isLetter = false;\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $isLetter\
    \ = true;\n            $result .= strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result .= $char;\n    \
    \    }\n    }\n    return $isLetter ? $result : strrev($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $letters = [];\n    $numbers = [];\n\
    \    foreach ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n  \
    \          $letters[] = $value;\n        } else {\n            $numbers[] = $value;\n\
    \        }\n    }\n    if (count($letters) > 0) {\n        foreach ($letters as\
    \ $key => $value) {\n            if (ctype_lower($value)) {\n                $letters[$key]\
    \ = strtoupper($value);\n            } else {\n                $letters[$key]\
    \ = strtolower($value);\n            }\n        }\n        $letters = array_reverse($letters);\n\
    \        $s = array_merge($letters, $numbers);\n    } else {\n        $s = array_reverse($numbers);\n\
    \    }\n    return implode('', $s);\n}\n\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ssvqoeh.php:46\n\
    Stack trace:\n#0 /tmp/tmp4ssvqoeh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp4ssvqoeh.php\
    \ on line 46\n"
  timestamp: 1659730248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h_u4u9u.php:36\n\
    Stack trace:\n#0 /tmp/tmp1h_u4u9u.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1h_u4u9u.php\
    \ on line 36\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3hxmyu8v.php:32\n\
    Stack trace:\n#0 /tmp/tmp3hxmyu8v.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3hxmyu8v.php\
    \ on line 32\n"
  timestamp: 1659730248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    } else {\n        return strrev($s);\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (strpos($letters, $s[$i]) !== false) {\n            if (strtolower($s[$i]) ==\
    \ $s[$i]) {\n                $result .= strtoupper($s[$i]);\n            } else\
    \ {\n                $result .= strtolower($s[$i]);\n            }\n        }\
    \ else {\n            $result .= $s[$i];\n        }\n    }\n    if (strlen($result)\
    \ == 0) {\n        return strrev($s);\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcdhhnpou.php:40\n\
    Stack trace:\n#0 /tmp/tmpcdhhnpou.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcdhhnpou.php\
    \ on line 40\n"
  timestamp: 1659730194
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $letters = [];\n    $others = [];\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $letters[]\
    \ = $char;\n        } else {\n            $others[] = $char;\n        }\n    }\n\
    \    $letters = array_map(function($letter) {\n        return ctype_upper($letter)\
    \ ? strtolower($letter) : strtoupper($letter);\n    }, $letters);\n    $s = array_merge($letters,\
    \ $others);\n    return implode('', $s);\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqsha962.php:38\n\
    Stack trace:\n#0 /tmp/tmpfqsha962.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfqsha962.php\
    \ on line 38\n"
  timestamp: 1659730248
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $result = [];\n    $hasLetter = false;\n\
    \    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $hasLetter\
    \ = true;\n            $result[] = strtolower($char) == $char ? strtoupper($char)\
    \ : strtolower($char);\n        } else {\n            $result[] = $char;\n   \
    \     }\n    }\n    if (!$hasLetter) {\n        $result = array_reverse($result);\n\
    \    }\n    return implode('', $result);\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659730248
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result .= $s[$i];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjtlw3l_2.php:32\n\
    Stack trace:\n#0 /tmp/tmpjtlw3l_2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjtlw3l_2.php\
    \ on line 32\n"
  timestamp: 1659730194

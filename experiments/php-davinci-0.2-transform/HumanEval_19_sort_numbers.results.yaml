language: php
name: HumanEval_19_sort_numbers
results:
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return convert_number($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return convert_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_number()\
    \ in /tmp/tmp1wv6k1bn.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp1wv6k1bn.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp1wv6k1bn.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp1wv6k1bn.php(24): candidate('')\n#4 /tmp/tmp1wv6k1bn.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp1wv6k1bn.php on line 10\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7226blo0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp7226blo0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp7226blo0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp7226blo0.php(24): candidate('')\n#4 /tmp/tmp7226blo0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp7226blo0.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]);\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($number) {\n        return [\"zero\", \"one\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"][$number];\n\
    \    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx89_n4qo.php:24\n\
    Stack trace:\n#0 /tmp/tmpx89_n4qo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx89_n4qo.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers_map = array(\n        'zero' => 0,\n        'one' =>\
    \ 1,\n        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n     \
    \   'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight'\
    \ => 8,\n        'nine' => 9\n    );\n    $numbers_map_reverse = array_flip($numbers_map);\n\
    \    $numbers_map_reverse[0] = 'zero';\n    $numbers_map_reverse[1] = 'one';\n\
    \    $numbers_map_reverse[2] = 'two';\n    $numbers_map_reverse[3] = 'three';\n\
    \    $numbers_map_reverse[4] = 'four';\n    $numbers_map_reverse[5] = 'five';\n\
    \    $numbers_map_reverse[6] = 'six';\n    $numbers_map_reverse[7] = 'seven';\n\
    \    $numbers_map_reverse[8] = 'eight';\n    $numbers_map_reverse[9] = 'nine';\n\
    \    $numbers_map_reverse[10] = 'ten';\n    $numbers_map_reverse[11] = 'eleven';\n\
    \    $numbers_map_reverse[12] = 'twelve';\n    $numbers_map_reverse[13] = 'thirteen';\n\
    \    $numbers_map_reverse[14] = 'fourteen';\n    $numbers_map_reverse[15] = 'fifteen';\n\
    \    $numbers_map_reverse[16] = 'sixteen';\n    $numbers_map_reverse[17] = 'seventeen';\n\
    \    $numbers_map_reverse[18] = 'eighteen';\n    $numbers_map_reverse[19] = 'nineteen';\n\
    \    $numbers_map_reverse[20] = 'twenty';\n    $numbers_map_reverse[30] = 'thirty';\n\
    \    $numbers_map_reverse[40] = 'forty';\n    $numbers_\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error in /tmp/tmppdm9steh.php on line 46

    '
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(\" \", $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xqjw723.php:24\n\
    Stack trace:\n#0 /tmp/tmp3xqjw723.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3xqjw723.php\
    \ on line 24\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmdw3a8ay.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpmdw3a8ay.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpmdw3a8ay.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpmdw3a8ay.php(24): candidate('')\n#4 /tmp/tmpmdw3a8ay.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpmdw3a8ay.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        switch ($number)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(\" \", $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8f_08i9.php:66\n\
    Stack trace:\n#0 /tmp/tmph8f_08i9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmph8f_08i9.php\
    \ on line 66\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpe2ka31ag.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpe2ka31ag.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpe2ka31ag.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpe2ka31ag.php(24): candidate('')\n#4 /tmp/tmpe2ka31ag.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpe2ka31ag.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers = explode(\" \"\
    , $numbers);\n  $numbers = array_map(function($number) {\n    return strlen($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  return implode(\" \", $numbers);\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe38gb9cu.php:21\n\
    Stack trace:\n#0 /tmp/tmpe38gb9cu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpe38gb9cu.php\
    \ on line 21\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(\" \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpv_agb351.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmpv_agb351.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmpv_agb351.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmpv_agb351.php(24): candidate('')\n#4 /tmp/tmpv_agb351.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpv_agb351.php on line 10\n"
  timestamp: 1659730626
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers_array = explode(\"\
    \ \", $numbers);\n    $numbers_array = array_map(function($number) {\n       \
    \ return $number == \"zero\" ? 0 :\n               $number == \"one\" ? 1 :\n\
    \               $number == \"two\" ? 2 :\n               $number == \"three\"\
    \ ? 3 :\n               $number == \"four\" ? 4 :\n               $number == \"\
    five\" ? 5 :\n               $number == \"six\" ? 6 :\n               $number\
    \ == \"seven\" ? 7 :\n               $number == \"eight\" ? 8 :\n            \
    \   $number == \"nine\" ? 9 :\n               $number;\n    }, $numbers_array);\n\
    \    sort($numbers_array);\n    $numbers_array = array_map(function($number) {\n\
    \        return $number == 0 ? \"zero\" :\n               $number == 1 ? \"one\"\
    \ :\n               $number == 2 ? \"two\" :\n               $number == 3 ? \"\
    three\" :\n               $number == 4 ? \"four\" :\n               $number ==\
    \ 5 ? \"five\" :\n               $number == 6 ? \"six\" :\n               $number\
    \ == 7 ? \"seven\" :\n               $number == 8 ? \"eight\" :\n            \
    \   $number == 9 ? \"nine\" :\n               $number;\n    }, $numbers_array);\n\
    \    return implode(\" \", $numbers_array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2zapxb2.php:44\n\
    Stack trace:\n#0 /tmp/tmpk2zapxb2.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpk2zapxb2.php\
    \ on line 44\n"
  timestamp: 1659730684
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $numbers = array_map(function($number) {\n        return convert_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_number($number);\n    }, $numbers);\n    return implode(\"\
    \ \", $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function convert_number()\
    \ in /tmp/tmp98mvoxj0.php:10\nStack trace:\n#0 [internal function]: {closure}('')\n\
    #1 /tmp/tmp98mvoxj0.php(11): array_map(Object(Closure), Array)\n#2 /tmp/tmp98mvoxj0.php(20):\
    \ sort_numbers(Array)\n#3 /tmp/tmp98mvoxj0.php(24): candidate('')\n#4 /tmp/tmp98mvoxj0.php(31):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp98mvoxj0.php on line 10\n"
  timestamp: 1659730626

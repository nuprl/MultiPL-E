name: HumanEval_35_max_element
language: lua
prompt: "-- Return maximum element in the list.\nlocal function max_element(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
  \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
  \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if #l == 0 then\n    return nil\n  end\n  local m = l[1]\n  for i=2,#l\
    \ do\n    if l[i] > m then\n      m = l[i]\n    end\n  end\n  return m\nend",
  "\tlocal m = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > m then\n\t\t\tm = l[i]\n\t\t\
    end\n\tend\n\treturn m\nend", "  assert(type(l) == \"table\", \"table expected\
    \ as argument\")\n  if #l == 0 then\n    return\n  end\n  local max = l[1]\n \
    \ for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n    end\n  end\n\
    \  return max\nend", "    return _.reduce(l, math.max)\nend", "  if not l then\
    \ return nil end\n  if #l == 0 then return nil end\n  local max_elem = l[1]\n\
    \  for i = 2, #l do\n    if l[i] > max_elem then\n      max_elem = l[i]\n    end\n\
    \  end\n  return max_elem\nend", "\tlocal max = nil\n\tfor i,v in ipairs(l) do\n\
    \t\tif not max or v > max then\n\t\t\tmax = v\n\t\tend\n\tend\n\treturn max\n\
    end", "    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n\
    \            max = l[i]\n        end\n    end\n    return max\nend", "\tlocal\
    \ max_element = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max_element then\n\t\t\
    \tmax_element = l[i]\n\t\tend\n\tend\n\treturn max_element\nend", "\tlocal s =\
    \ #l\n\tif (s == 0) then\n\t\treturn 0\n\tend\n\tlocal m = l[1]\n\tfor i = 2,\
    \ s do\n\t\tif (l[i] > m) then\n\t\t\tm = l[i]\n\t\tend\n\tend\n\treturn m\nend",
  "\tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend", "    local m = nil\n    for i,v in ipairs(l)\
    \ do\n        if not m or v > m then\n            m = v\n        end\n    end\n\
    \    return m\nend", "    local m = l[1]\n    for _, v in ipairs(l) do\n     \
    \   if v > m then\n            m = v\n        end\n    end\n    return m\nend",
  "    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n      \
    \      max = l[i]\n        end\n    end\n    return max\nend", "\tlocal max =\
    \ l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\
    \tend\n\treturn max\nend", "    local m = l[1]\n    for _, v in ipairs(l) do\n\
    \        if v > m then\n            m = v\n        end\n    end\n    return m\n\
    end", "\tlocal max = l[1]\n\tfor i=2,#l do\n\t\tmax = math.max(max, l[i])\n\t\
    end\n\treturn max\nend", "  local max = nil\n  for k, v in pairs(l) do\n    if\
    \ max == nil or v > max then\n      max = v\n    end\n  end\n  return max\nend",
  "  local n = 0\n  for i, v in ipairs(l) do\n    if v > n then\n      n = v\n   \
    \ end\n  end\n  return n\nend", "  if not l then return nil end\n  local a = nil\n\
    \  for i, j in pairs(l) do\n    if a == nil or j > a then a = j end\n  end\n \
    \ return a\nend", "\tlocal max\n\tfor _,v in ipairs(l) do\n\t\tif not max or v\
    \ > max then\n\t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend", "\tlocal max_\
    \ = l[1]\n\tfor _, v in ipairs(l) do\n\t\tif v > max_ then\n\t\t\tmax_ = v\n\t\
    \tend\n\tend\n\treturn max_\nend", "\tlocal m = l[1]\n\tfor _,v in ipairs(l) do\n\
    \t\tif m < v then\n\t\t\tm = v\n\t\tend\n\tend\n\treturn m\nend", "  local max\
    \ = -math.huge\n  for _, v in ipairs(l) do\n    if v > max then\n      max = v\n\
    \    end\n  end\n  return max\nend", "  local m = nil\n  for _, v in ipairs(l)\
    \ do\n    if (not m) or v > m then\n      m = v\n    end\n  end\n  return m\n\
    end", "    local max_v = nil\n    for k, v in pairs(l) do\n        if max_v ==\
    \ nil or max_v < v then\n            max_v = v\n        end\n    end\n    return\
    \ max_v\nend", "\tlocal m = l[1]\n\tfor _, v in ipairs(l) do\n\t\tif v > m then\n\
    \t\t\tm = v\n\t\tend\n\tend\n\treturn m\nend", "    local maxe = nil\n    for\
    \ _, value in ipairs(l) do\n        if maxe == nil or value > maxe then\n    \
    \        maxe = value\n        end\n    end\n    return maxe\nend", "    local\
    \ mx = nil\n    for _, v in ipairs(l) do\n        if mx == nil or v > mx then\n\
    \            mx = v\n        end\n    end\n    return mx\nend", "  local max =\
    \ l[1]\n  for i = 2, #l do\n    max = math.max(max, l[i])\n  end\n  return max\n\
    end", "    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n\
    \            max = l[i]\n        end\n    end\n    return max\nend", "  local\
    \ max = 0\n  for _,v in ipairs(l) do\n    if v > max then\n      max = v\n   \
    \ end\n  end\n  return max\nend", "  local m = #l\n  for i = 1, #l do\n    if\
    \ l[i] > m then\n      m = l[i]\n    end\n  end\n  return m\nend", "    local\
    \ max_val, max_el = nil, nil\n    for el, val in pairs(l) do\n        if max_val\
    \ == nil or val > max_val then\n            max_val, max_el = val, el\n      \
    \  end\n    end\n    return max_el\nend", "\tlocal max = 0\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend",
  "\tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend", "\tlocal max_n = - math.huge\n\tfor _, n in\
    \ ipairs(l) do\n\t\tif n > max_n then\n\t\t\tmax_n = n\n\t\tend\n\tend\n\treturn\
    \ max_n\nend", "\tlocal max = l[1]\n\tfor _, val in ipairs(l) do\n\t\tif val >\
    \ max then\n\t\t\tmax = val\n\t\tend\n\tend\n\treturn max\nend", "  if #l == 0\
    \ then return nil end\n  local max = l[1]\n  for i=2,#l do\n    if l[i] > max\
    \ then max = l[i] end\n  end\n  return max\nend", "  local max_elem = nil\n  for\
    \ i,elem in ipairs(l) do\n    if max_elem == nil or elem > max_elem then\n   \
    \   max_elem = elem\n    end\n  end\n  return max_elem\nend", "\tlocal max = nil\n\
    \tfor k, v in pairs(l) do\n\t\tif not max or (v > max) then\n\t\t\tmax = v\n\t\
    \tend\n\tend\n\treturn max\nend", "    return foldl(math.max, l[1], rest(l))\n\
    end", "  local max = l[1]\n  for _, v in ipairs(l) do\n    if v > max then\n \
    \     max = v\n    end\n  end\n  return max\nend", "    local m = nil\n    for\
    \ _,e in ipairs(l) do\n        if not m or e > m then\n            m = e\n   \
    \     end\n    end\n    return m\nend", "    local max_element = l[1]\n    for\
    \ i = 2, #l do\n        max_element = math.max(max_element, l[i])\n    end\n \
    \   return max_element\nend", "    local max = 0\n    for i = 1,#l do\n      \
    \  max = math.max(max, l[i])\n    end\n    return max\nend", "\treturn (function(x,\
    \ y) return x > y end)(unpack(l))\nend", "  local n = -math.huge\n  for i,v in\
    \ ipairs(l) do\n    if v > n then n = v end\n  end\n  return n\nend", "\tlocal\
    \ max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\
    \tend\n\tend\n\treturn max\nend", "  local m = nil\n  for i,v in ipairs(l) do\n\
    \    if not m or v > m then\n      m = v\n    end\n  end\n  return m\nend", "\t\
    return max(unpack(l))\nend", "  local max = l[1]\n  for i=2,#l do\n    if l[i]\
    \ > max then\n      max = l[i]\n    end\n  end\n  return max\nend", "    local\
    \ m = math.mininteger\n    for _, v in ipairs(l) do\n        if v > m then\n \
    \           m = v\n        end\n    end\n    return m\nend", "  if (not l) or\
    \ (#l == 0) then\n    return nil\n  end\n  local max = l[1]\n  for i = 2, #l do\n\
    \    if l[i] > max then\n      max = l[i]\n    end\n  end\n  return max\nend",
  "    local n = #l\n    local v = l[1]\n    for i = 2, n do\n        if l[i] > v\
    \ then\n            v = l[i]\n        end\n    end\n    return v\nend", "\tlocal\
    \ max\n\tfor i, v in ipairs(l) do\n\t\tif max == nil or v > max then\n\t\t\tmax\
    \ = v\n\t\tend\n\tend\n\treturn max\nend", "    local m = l[1]\n    for _, i in\
    \ ipairs(l) do\n        if i > m then\n            m = i\n        end\n    end\n\
    \    return m\nend", "    local max = l[1]\n    for i = 2, #l do\n        if l[i]\
    \ > max then\n            max = l[i]\n        end\n    end\n    return max\nend",
  "\tif #l < 1 then return nil end\n\tlocal idx = 1\n\tfor i = 2, #l do\n\t\tif l[i]\
    \ > l[idx] then\n\t\t\tidx = i\n\t\tend\n\tend\n\treturn l[idx]\nend", "    local\
    \ m = nil\n    for i, el in ipairs(l) do\n        if m == nil or el > m then\n\
    \            m = el\n        end\n    end\n    return m\nend", "  local max =\
    \ nil\n  for i,v in ipairs(l) do\n    if max == nil or max < v then\n      max\
    \ = v\n    end\n  end\n  return max\nend", "  local m = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] > m then\n      m = l[i]\n    end\n  end\n  return m\nend",
  "\tlocal v = nil\n\tfor _,val in ipairs(l) do\n\t\tif v==nil or val>v then\n\t\t\
    \tv = val\n\t\tend\n\tend\n\treturn v\nend", "  local m = nil\n  for _, v in ipairs(l)\
    \ do\n    if m == nil or v > m then\n      m = v\n    end\n  end\n  return m\n\
    end", "    local max_value = l[1]\n    for i=2,#l do\n        if l[i] > max_value\
    \ then\n            max_value = l[i]\n        end\n    end\n    return max_value\n\
    end", "    local mx = l[1]\n    for i = 2, #l do\n        mx = math.max(mx, l[i])\n\
    \    end\n    return mx\nend", "\tlocal max_val = l[1]\n\tfor i=2,#l do\n\t\t\
    if l[i] > max_val then\n\t\t\tmax_val = l[i]\n\t\tend\n\tend\n\treturn max_val\n\
    end", "  if #l == 0 then\n    return nil\n  end\n  local max = l[1]\n  for i=2,#l\
    \ do\n    if l[i] > max then\n      max = l[i]\n    end\n  end\n  return max\n\
    end", "\tlocal res = nil\n\tlocal i = 1\n\twhile l[i] do\n\t\tif res == nil or\
    \ l[i] > res then\n\t\t\tres = l[i]\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn res\n\
    end", "\tlocal max_element = l[1]\n\tfor _, element in ipairs(l) do\n\t\tif element\
    \ > max_element then\n\t\t\tmax_element = element\n\t\tend\n\tend\n\treturn max_element\n\
    end", "  local m = l[1]\n  for i=2,#l do\n    m = math.max(m, l[i])\n  end\n \
    \ return m\nend", "  local m = l[1]\n  for i=2,#l do\n    m = math.max(m, l[i])\n\
    \  end\n  return m\nend", "    assert(is_vector(l))\n    local m = l[1]\n    for\
    \ i=2,#l do\n        if l[i] > m then\n            m = l[i]\n        end\n   \
    \ end\n    return m\nend", "  return table.reduce(l, function(a, b) return math.max(a,\
    \ b) end)\nend", "\treturn l[#l]\nend", "    local max_v = l[1]\n    for i = 2,\
    \ #l do\n        if l[i] > max_v then\n            max_v = l[i]\n        end\n\
    \    end\n    return max_v\nend", "\tlocal m = -math.huge\n\tfor _,v in ipairs(l)\
    \ do\n\t\tif v > m then\n\t\t\tm = v\n\t\tend\n\tend\n\treturn m\nend", "\tlocal\
    \ a = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > a then\n\t\t\ta = l[i]\n\t\tend\n\
    \tend\n\treturn a\nend", "    if not is_list(l) then\n        return nil\n   \
    \ end\n    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n\
    \            max = l[i]\n        end\n    end\n    return max\nend", "  local\
    \ max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n \
    \   end\n  end\n  return max\nend", "  local max_i = 1\n  local max_v = l[max_i]\n\
    \  for i = 2, #l do\n    if l[i] > max_v then\n      max_i = i\n      max_v =\
    \ l[max_i]\n    end\n  end\n  return max_i, max_v\nend", "\tlocal m = nil\n\t\
    for i, v in ipairs(l) do\n\t\tif m == nil or v > m then\n\t\t\tm = v\n\t\tend\n\
    \tend\n\treturn m\nend", "  local maximum = nil\n  for _, v in ipairs(l) do\n\
    \    if maximum == nil or v > maximum then\n      maximum = v\n    end\n  end\n\
    \  return maximum\nend", "  local m = 0\n  for k,v in pairs(l) do\n    if v >\
    \ m then\n      m = v\n    end\n  end\n  return m\nend", "    local s = l[1]\n\
    \    for _, x in ipairs(l) do\n        if x > s then\n            s = x\n    \
    \    end\n    end\n    return s\nend", "  if #l == 0 then\n    return nil\n  end\n\
    \  local max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend", "    local max = l[1]\n    for i=2,#l do\n\
    \        if l[i] > max then\n            max = l[i]\n        end\n    end\n  \
    \  return max\nend", "\tif #l == 0 then return nil end\n\tlocal max = l[1]\n\t\
    for i=2,#l do\n\t\tif l[i] > max then max = l[i] end\n\tend\n\treturn max\nend",
  "    local max = l[1]\n    for i=2,#l do\n        if l[i] > max then\n         \
    \   max = l[i]\n        end\n    end\n    return max\nend", "    local mx = l[1]\n\
    \    for i = 2, #l do\n        if l[i] > mx then\n            mx = l[i]\n    \
    \    end\n    end\n    return mx\nend", "    local result = nil\n    for i, e\
    \ in ipairs(l) do\n        if not result or e > result then\n            result\
    \ = e\n        end\n    end\n    return result\nend", "  if #l == 0 then return\
    \ nil end\n  local max_el = l[1]\n  for i = 2, #l do\n    if l[i] > max_el then\
    \ max_el = l[i] end\n  end\n  return max_el\nend", "\tlocal max = 0\n\tfor _,\
    \ n in ipairs(l) do\n\t\tif n > max then\n\t\t\tmax = n\n\t\tend\n\tend\n\treturn\
    \ max\nend", "\tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\
    \t\t\tmax = l[i]\n\t\tend\n\tend\n\treturn max\nend", "  if not is_table(l) then\
    \ return nil end\n  local max = nil\n  for _, v in ipairs(l) do\n    if max ==\
    \ nil or v > max then max = v end\n  end\n  return max\nend", "    local lmax\
    \ = nil\n    for _, v in ipairs(l) do\n        if lmax == nil or v > lmax then\n\
    \            lmax = v\n        end\n    end\n    return lmax\nend", "    local\
    \ max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max\
    \ = l[i]\n        end\n    end\n    return max\nend", "    if #l == 0 then\n \
    \       return nil\n    end\n    local m = l[1]\n    for i=2,#l do\n        if\
    \ l[i] > m then\n            m = l[i]\n        end\n    end\n    return m\nend",
  "  local m = l[1]\n  for i = 2, #l do\n    if l[i] > m then\n      m = l[i]\n  \
    \  end\n  end\n  return m\nend", "    local max = nil\n    for _, i in ipairs(l)\
    \ do\n        if not max or i > max then\n            max = i\n        end\n \
    \   end\n    return max\nend", "\tlocal m = l[1]\n\tfor i=2,#l do\n\t\tif l[i]\
    \ > m then\n\t\t\tm = l[i]\n\t\tend\n\tend\n\treturn m\nend", "\tlocal max = nil\n\
    \tfor _, e in ipairs(l) do\n\t\tif max == nil or e > max then\n\t\t\tmax = e\n\
    \t\tend\n\tend\n\treturn max\nend", "  return get_element(l, l.n)\nend", "   \
    \ local max = l[1]\n    for i=2,#l do\n        if l[i] > max then\n          \
    \  max = l[i]\n        end\n    end\n    return max\nend", "    local max = l[1]\n\
    \    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n  \
    \      end\n    end\n    return max\nend", "\tlocal max = 0\n\tfor _, v in ipairs(l)\
    \ do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend",
  "    if #l == 0 then\n        return nil\n    end\n    local m = l[1]\n    for i\
    \ = 2, #l do\n        if l[i] > m then\n            m = l[i]\n        end\n  \
    \  end\n    return m\nend", "    local largest = l[1]\n    for _, v in ipairs(l)\
    \ do\n        if largest < v then\n            largest = v\n        end\n    end\n\
    \    return largest\nend", "    if #l == 0 then\n        return nil\n    end\n\
    \    local max_elem = l[1]\n    for i = 2, #l do\n        max_elem = math.max(max_elem,\
    \ l[i])\n    end\n    return max_elem\nend", "  local m = l[1]\n  for i=2,#l do\
    \ m = math.max(m, l[i]) end\n  return m\nend", "    assert(is.non_empty_table(l))\n\
    \    local res = -math.huge\n    for _,v in ipairs(l) do\n        if is.number(v)\
    \ and v > res then\n            res = v\n        end\n    end\n    return res\n\
    end", "\tlocal m = -math.huge\n\tfor _, v in ipairs(l) do\n\t\tif v > m then\n\
    \t\t\tm = v\n\t\tend\n\tend\n\treturn m\nend", "\tlocal m = l[1]\n\tfor i = 2,\
    \ #l do\n\t\tif l[i] > m then\n\t\t\tm = l[i]\n\t\tend\n\tend\n\treturn m\nend",
  "  local m = -math.huge\n  for _, v in ipairs(l) do\n    if v > m then\n      m\
    \ = v\n    end\n  end\n  return m\nend", "  local mi = 1\n  local mv = l[mi]\n\
    \  for i = 2, #l do\n    if l[i] > mv then\n      mi = i\n      mv = l[mi]\n \
    \   end\n  end\n  return mv, mi\nend", "\tif l == nil then\n\t\treturn nil\n\t\
    end\n\tlocal m = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > m then\n\t\t\tm = l[i]\n\
    \t\tend\n\tend\n\treturn m\nend", "  local m = 0\n  for i = 1,#l do\n    if l[i]\
    \ > m then\n      m = l[i]\n    end\n  end\n  return m\nend", "    local m = nil\n\
    \    for i,e in ipairs(l) do\n        if not m or e > m then\n            m =\
    \ e\n        end\n    end\n    return m\nend", "  if not l then return nil end\n\
    \  local a = l[1]\n  for i = 2, #l do\n    if l[i] > a then a = l[i] end\n  end\n\
    \  return a\nend", "\tlocal max\n\tfor _, e in ipairs(l) do\n\t\tif not max or\
    \ e > max then\n\t\t\tmax = e\n\t\tend\n\tend\n\treturn max\nend", "  if not l\
    \ then return nil end\n  local maximum = l[1]\n  for i = 2, #l do\n    maximum\
    \ = math.max(maximum, l[i])\n  end\n  return maximum\nend", "    local max = l[1]\n\
    \    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n  \
    \      end\n    end\n    return max\nend", "  local max = 0\n  for _, v in ipairs(l)\
    \ do\n    if v > max then\n      max = v\n    end\n  end\n  return max\nend",
  "    return foldl(math.max, l[1], l)\nend", "  assert(#l > 0)\n  local maxval =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] > maxval then\n      maxval = l[i]\n \
    \   end\n  end\n  return maxval\nend", "    local max = nil\n    for _, v in ipairs(l)\
    \ do\n        if max == nil or v > max then\n            max = v\n        end\n\
    \    end\n    return max\nend", "  local max = 0\n  for k, v in pairs(l) do\n\
    \    if v > max then\n      max = v\n    end\n  end\n  return max\nend", "   \
    \ local m = 0\n    for i = 1, #l do\n        if l[i] > m then\n            m =\
    \ l[i]\n        end\n    end\n    return m\nend", "    local max = l[1]\n    for\
    \ i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n\
    \    end\n    return max\nend", "\tlocal m = l[1]\n\tfor i=2,#l do\n\t\tif l[i]\
    \ > m then\n\t\t\tm = l[i]\n\t\tend\n\tend\n\treturn m\nend", "  local max = l[1]\n\
    \  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n    end\n  end\n\
    \  return max\nend", "    local max = l[1]\n    for i = 2, #l do\n        if l[i]\
    \ > max then\n            max = l[i]\n        end\n    end\n    return max\nend",
  "    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n      \
    \      max = l[i]\n        end\n    end\n    return max\nend", "\tlocal m = nil\n\
    \tfor _, v in ipairs(l) do\n\t\tif not m or v > m then\n\t\t\tm = v\n\t\tend\n\
    \tend\n\treturn m\nend", "\tassert(#l > 0)\n\tlocal m = -math.huge\n\tfor _,v\
    \ in ipairs(l) do\n\t\tif v > m then m = v end\n\tend\n\treturn m\nend", "\tlocal\
    \ m = 0\n\tfor _, v in ipairs(l) do\n\t\tif v > m then\n\t\t\tm = v\n\t\tend\n\
    \tend\n\treturn m\nend", "  local max = l[1]\n  for _, i in ipairs(l) do\n   \
    \ if i > max then\n      max = i\n    end\n  end\n  return max\nend", "    local\
    \ max = nil\n    for i, v in ipairs(l) do\n        if v ~= nil and max == nil\
    \ or v > max then\n            max = v\n        end\n    end\n    return max\n\
    end", "    if #l == 0 then\n        return\n    end\n    local idx = 1\n    for\
    \ i = 2, #l do\n        if l[i] > l[idx] then\n            idx = i\n        end\n\
    \    end\n    return l[idx]\nend", "    local i, e = 1, nil\n    for _, x in ipairs(l)\
    \ do\n        if (not e) or (x > e) then\n            i, e = _, x\n        end\n\
    \    end\n    return i, e\nend", "    return reduce(l, function(x, y) return (x\
    \ > y) and x or y end)\nend", "    local maximum = l[1]\n    for _, value in ipairs(l)\
    \ do\n        if value > maximum then\n            maximum = value\n        end\n\
    \    end\n    return maximum\nend", "  local mx = l[1]\n  for _, v in ipairs(l)\
    \ do\n    if v > mx then\n      mx = v\n    end\n  end\n  return mx\nend", " \
    \ local max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend", "    local max\n    for _, v in ipairs(l)\
    \ do\n        if not max or v > max then\n            max = v\n        end\n \
    \   end\n    return max\nend", "  local m = nil\n  for i = 1, #l do\n    if m\
    \ == nil or l[i] > m then\n      m = l[i]\n    end\n  end\n  return m\nend", " \
    \ local max = l[1]\n  for i=2,#l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend", "    local max = nil\n    for _, v in ipairs(l)\
    \ do\n        if max == nil or v > max then\n            max = v\n        end\n\
    \    end\n    return max\nend", "\tlocal max = l[1]\n\tfor i = 2, #l do\n\t\t\
    if l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\tend\n\treturn max\nend", "  \
    \  return l[#l]\nend", "\tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] >\
    \ max then\n\t\t\tmax = l[i]\n\t\tend\n\tend\n\treturn max\nend", "  local x =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] > x then\n      x = l[i]\n    end\n  end\n\
    \  return x\nend", "  assert(#l > 0)\n  local m = l[1]\n  for i = 2, #l do\n \
    \   if l[i] > m then\n      m = l[i]\n    end\n  end\n  return m\nend", "    local\
    \ max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max\
    \ = l[i]\n        end\n    end\n    return max\nend", "    local max = l[1]\n\
    \    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n  \
    \      end\n    end\n    return max\nend", "    local mx = nil\n    for _, el\
    \ in ipairs(l) do\n        if mx == nil or el > mx then\n            mx = el\n\
    \        end\n    end\n    return mx\nend", "  local v = l[1]\n  for i=2,#l do\n\
    \    if l[i] > v then\n      v = l[i]\n    end\n  end\n  return v\nend", "  local\
    \ max = -math.huge\n  for _, v in ipairs(l) do\n    if v > max then\n      max\
    \ = v\n    end\n  end\n  return max\nend", "\tlocal ret = nil\n\tfor _,v in ipairs(l)\
    \ do\n\t\tif ret == nil or v > ret then\n\t\t\tret = v\n\t\tend\n\tend\n\treturn\
    \ ret\nend", "    if #l == 0 then\n        return nil\n    end\n    local max\
    \ = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n            max =\
    \ l[i]\n        end\n    end\n    return max\nend", "\tlocal m = nil\n\tfor _,\
    \ v in ipairs(l) do\n\t\tif m == nil or v > m then\n\t\t\tm = v\n\t\tend\n\tend\n\
    \treturn m\nend", "\tlocal max = math.mininteger\n\tfor i,v in ipairs(l) do\n\t\
    \tif v > max then\n\t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend", "\tlocal\
    \ maximum\n\tfor _,v in ipairs(l) do\n\t\tif not maximum or v > maximum then\n\
    \t\t\tmaximum = v\n\t\tend\n\tend\n\treturn maximum\nend", "    local i = l[1]\n\
    \    for _, x in ipairs(l) do\n        if x > i then\n            i = x\n    \
    \    end\n    end\n    return i\nend", "\tassert(type(l) == \"table\", \"list\
    \ must be a table\")\n\tlocal max = l[1]\n\tfor _, v in ipairs(l) do\n\t\tif v\
    \ > max then\n\t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend", "  local max\
    \ = nil\n  for i = 1, #l do\n    if max == nil or l[i] > max then\n      max =\
    \ l[i]\n    end\n  end\n  return max\nend", "\tlocal max = l[1]\n\tfor i = 2,\
    \ #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\tend\n\treturn max\n\
    end", "  if #l == 0 then\n    return\n  end\n  local max = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] > max then\n      max = l[i]\n    end\n  end\n  return max\n\
    end", "    local m = l[1]\n    for _, v in ipairs(l) do\n        if v > m then\n\
    \            m = v\n        end\n    end\n    return m\nend", "  if type(l) ~=\
    \ \"table\" then return nil end\n  local n = l[1]\n  for i=2,#l do\n    if l[i]\
    \ > n then n = l[i] end\n  end\n  return n\nend", "  local m = l[1]\n  for i=2,#l\
    \ do\n    if l[i] > m then\n      m = l[i]\n    end\n  end\n  return m\nend",
  "    if not next(l) then return nil end\n    local max_el = l[1]\n    for _, v in\
    \ ipairs(l) do\n        if v > max_el then max_el = v end\n    end\n    return\
    \ max_el\nend", "  local m = 0\n  for _, v in ipairs(l) do\n    if v > m then\n\
    \      m = v\n    end\n  end\n  return m\nend", "\tlocal max = l[1]\n\tfor i=2,#l\
    \ do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\t\tend\n\tend\n\treturn max\n\
    end", "    local cmp_max = function(a, b) return a > b end\n    return max_element_by(l,\
    \ cmp_max)\nend", "\tlocal m = l[1]\n\tfor i=2,#l do\n\t\tif l[i] > m then\n\t\
    \t\tm = l[i]\n\t\tend\n\tend\n\treturn m\nend", "    local maximum = nil\n   \
    \ for _, value in ipairs(l) do\n        if maximum == nil or value > maximum then\n\
    \            maximum = value\n        end\n    end\n    return maximum\nend",
  "    local max_val = 0\n    for _, v in ipairs(l) do\n        if v > max_val then\n\
    \            max_val = v\n        end\n    end\n    return max_val\nend", "  \
    \  local len = #l\n    if len == 0 then\n        return nil\n    end\n    local\
    \ max = l[1]\n    for i = 2, len do\n        if l[i] > max then\n            max\
    \ = l[i]\n        end\n    end\n    return max\nend", "    local result = l[1]\n\
    \    for i = 2, #l do\n        if l[i] > result then\n            result = l[i]\n\
    \        end\n    end\n    return result\nend", "    if not l then return nil\
    \ end\n    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n\
    \            max = l[i]\n        end\n    end\n    return max\nend", "  if not\
    \ l then return end\n  local max_elem = l[1]\n  for i = 2, #l do\n    if l[i]\
    \ > max_elem then\n      max_elem = l[i]\n    end\n  end\n  return max_elem\n\
    end", "    local max = nil\n    for _, x in ipairs(l) do\n        if not max or\
    \ x > max then\n            max = x\n        end\n    end\n    return max\nend",
  "  local m = l[1]\n  for i=2,#l do\n    if l[i] > m then\n      m = l[i]\n    end\n\
    \  end\n  return m\nend", "    return reduce(l, function(a, b) return a > b and\
    \ a or b end)\nend", "  local max_el = l[1]\n  for i=2,#l do\n    if l[i] > max_el\
    \ then\n      max_el = l[i]\n    end\n  end\n  return max_el\nend", "  assert(#l\
    \ > 0)\n  local max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n     \
    \ max = l[i]\n    end\n  end\n  return max\nend", "  local m = l[1]\n  for i =\
    \ 2, #l do\n    if l[i] > m then\n      m = l[i]\n    end\n  end\n  return m\n\
    end", "\tlocal max=l[1]\n\tfor i=2,#l do\n\t\tif l[i]>max then\n\t\t\tmax=l[i]\n\
    \t\tend\n\tend\n\treturn max\nend", "    local mx = l[1]\n    for i=2,#l do\n\
    \        if l[i] > mx then\n            mx = l[i]\n        end\n    end\n    return\
    \ mx\nend", "  local max = l[1]\n  for i=2,#l do\n    if l[i] > max then\n   \
    \   max = l[i]\n    end\n  end\n  return max\nend", "\tlocal max\n\tfor _, v in\
    \ ipairs(l) do\n\t\tif not max or max < v then\n\t\t\tmax = v\n\t\tend\n\tend\n\
    \treturn max\nend", "    local max = 0\n    for i = 1, #l do\n        if l[i]\
    \ > max then\n            max = l[i]\n        end\n    end\n    return max\nend",
  "  local max_v = l[1]\n  for _, v in ipairs(l) do\n    if v > max_v then\n     \
    \ max_v = v\n    end\n  end\n  return max_v\nend", "    local m = l[1]\n    for\
    \ i = 2, #l do\n        if l[i] > m then\n            m = l[i]\n        end\n\
    \    end\n    return m\nend", "    if #l == 0 then return nil end\n    local m\
    \ = l[1]\n    for i=2,#l do\n        if l[i] > m then m = l[i] end\n    end\n\
    \    return m\nend", "  local max = l[1]\n  for _,v in ipairs(l) do\n    if v\
    \ > max then max = v end\n  end\n  return max\nend", "    local max = nil\n  \
    \  for _,v in ipairs(l) do\n        if max == nil or v > max then\n          \
    \  max = v\n        end\n    end\n    return max\nend", "    local res = nil\n\
    \    for k, v in pairs(l) do\n        if res == nil or v > res then\n        \
    \    res = v\n        end\n    end\n    return res\nend", "  local max = l[1]\n\
    \  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n    end\n  end\n\
    \  return max\nend", "    local max = l[1]\n    for i=2,#l do\n        if l[i]\
    \ > max then\n            max = l[i]\n        end\n    end\n    return max\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

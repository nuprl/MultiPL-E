name: HumanEval_85_add
language: lua
prompt: "-- Given a non-empty list of integers lst. add the even elements that are\
  \ at odd indices..\n-- Examples:\nlocal function add(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = add\n\
  \    lu.assertEquals(candidate({4, 88}), 88)\n    lu.assertEquals(candidate({4,\
  \ 5, 6, 7, 2, 122}), 122)\n    lu.assertEquals(candidate({4, 0, 6, 7}), 0)\n   \
  \ lu.assertEquals(candidate({4, 4, 6, 8}), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local sum = 0\n    for i = 2, #lst, 2 do\n        sum = sum + lst[i]\n\
    \    end\n    return sum\nend", "  local sum = 0\n  for i, n in ipairs(lst) do\n\
    \    if n % 2 == 0 and i % 2 ~= 0 then\n      sum = sum + n\n    end\n  end\n\
    \  return sum\nend", "    local res = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ % 2 == 0 and i % 2 ~= 0 then\n            res = res + lst[i]\n        end\n\
    \    end\n    return res\nend", "    -- Write your code here\n    return nil\n\
    end", "    local sum = 0\n    for i, v in ipairs(lst) do\n        if v % 2 ==\
    \ 0 and i % 2 ~= 0 then\n            sum = sum + v\n        end\n    end\n   \
    \ return sum\nend\nassert(add({6,4,1,4,6,4,6,4,6,4,6,4,1,2,6,4,1,2,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,",
  "    local result = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 1 and\
    \ v % 2 == 0 then\n            result = result + v\n        end\n    end\n   \
    \ return result\nend\ntest(\"test_example\", function()\n    -- lst: [1, 1, 1,\
    \ 1, 1]\n    -- Output: 0\n    local lst = {1, 1, 1, 1, 1}\n    assert_equal(add(lst),\
    \ 0)\n    -- lst: [10, 20, 30, 40, 50]\n    -- Output: 150\n    lst = {10, 20,\
    \ 30, 40, 50}\n    assert_equal(add(lst), 150)\n    -- lst: [10, -10, 10, -10,\
    \ 10]\n    -- Output: -10\n    lst = {10, -10, 10, -10, 10}\n    assert_equal(add(lst),\
    \ -10)\nend)", "  local sum = 0\n  for i, x in ipairs(lst) do\n    if i % 2 ==\
    \ 1 and x % 2 == 0 then\n      sum = sum + x\n    end\n  end\n  return sum\nend",
  "\tlocal s = 0\n\tfor i,n in ipairs(lst) do\n\t\tif i%2 == 1 and n%2 == 0 then\n\
    \t\t\ts = s + n\n\t\tend\n\tend\n\treturn s\nend", "  -- The same function as\
    \ in part (1) can be re-used here.\n  -- Since it's a local function, you need\
    \ to define it before the first call.\n  return add(even_at_odd(lst))\nend", " \
    \   local ans = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v\
    \ % 2 == 0 then\n            ans = ans + v\n        end\n    end\n    return ans\n\
    end", "  return\nend", "  local res = 0\n  for i, v in ipairs(lst) do\n    if\
    \ i % 2 == 1 and v % 2 == 0 then\n      res = res + v\n    end\n  end\n  return\
    \ res\nend", '    local sum = 0', "    local n = #lst\n    local sum = 0\n   \
    \ for i = 1, n do\n        if lst[i] % 2 == 0 and i % 2 ~= 0 then\n          \
    \  sum = sum + lst[i]\n        end\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 ==\
    \ 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "    local sum = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 1 and v %\
    \ 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "  local n = 0\n  for i,v in ipairs(lst) do\n    if v % 2 == 0 and i % 2\
    \ ~= 0 then\n      n = n + v\n    end\n  end\n  return n\nend", "  local res =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n      res\
    \ = res + lst[i]\n    end\n  end\n  return res\nend", "  local sum = 0\n  for\
    \ i, n in ipairs(lst) do\n    if i % 2 == 1 and n % 2 == 0 then\n      sum = sum\
    \ + n\n    end\n  end\n  return sum\nend", '    local sum = 0', "    sum = 0\n\
    \    n = 1\n    for i, v in ipairs(lst) do\n        if n % 2 == 1 and v % 2 ==\
    \ 0 then\n            sum = sum + v\n        end\n        n = n + 1\n    end\n\
    \    return sum\nend", "    local result = 0\n    for i, v in ipairs(lst) do\n\
    \        if i % 2 == 1 and v % 2 == 0 then\n            result = result + v\n\
    \        end\n    end\n    return result\nend", "  -- your code here\n  return\
    \ 0\nend", "  local res = 0\n  for i = 2, #lst, 2 do\n    res = res + lst[i]\n\
    \  end\n  return res\nend", "  local sum = 0\n  for k, v in ipairs(lst) do\n \
    \   if k % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n \
    \ return sum\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n     \
    \   if v % 2 == 0 and i % 2 ~= 0 then\n            sum = sum + v\n        end\n\
    \    end\n    return sum\nend", "    -- body\nend", "    local sum = 0\n    for\
    \ i, v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n        \
    \    sum = sum + v\n        end\n    end\n    return sum\nend\nassert(add({0,\
    \ 1, 2, 3, 4, 5}) == 6)\nassert(add({1, 3, 5}) == 0)\nassert(add({10, 1, 8, 3,\
    \ 7, 5}) == 8)\nassert(add({12, 4, 9, 5, 6, 7}) == 4)", "\tlocal sum = 0\n\tfor\
    \ i, num in ipairs(lst) do\n\t\tif (i % 2 ~= 0) and (num % 2 == 0) then\n\t\t\t\
    sum = sum + num\n\t\tend\n\tend\n\treturn sum\nend", "  local sum = 0\n  for i,\
    \ v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend\nassert( add({1,2,3,4,5,6}) == 2+4+6\
    \ )\nassert( add({}) == 0 )\nassert( add({2,2,2,2,2}) == 2+2+2+2 )\nassert( add({1,2,1,2,1,2})\
    \ == 2+2 )", "    local sum = 0\n    for k, v in ipairs(lst) do\n        if (k\
    \ % 2 == 1) and (v % 2 == 0) then\n            sum = sum + v\n        end\n  \
    \  end\n    return sum\nend", "  --[[\n  -- Explanation:\n  --   [1,3,4,5,6,7,8,9]\n\
    \  --   [nil,3,nil,5,nil,7,nil,9]\n  --   [nil,3,nil,5,nil,7,nil,9]\n  --   [nil,3,4,5,6,7,8,9]\n\
    \  --]]\n  -- Exercise:\n  --   Write the implementation.\n  --   For help use\
    \ this reference:\n  --   https://www.lua.org/pil/1.html\n  return nil\nend",
  "  local s = 0\n  for i,v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n\
    \      s = s + v\n    end\n  end\n  return s\nend", "    -- your code here\n \
    \   local nlist={}\n    for i,v in ipairs(lst) do\n      if (i%2==1) then\n  \
    \      if (v%2==0) then\n          table.insert(nlist,v)\n        end\n      end\n\
    \    end\n    return nlist\nend", end, "  -- add the even elements of lst that\
    \ are at odd indices\n  -- (1-based)\n  if not lst then return 0 end\n  local\
    \ sum = 0\n  for i,v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "    local sum = 0\n\
    \    for i = 1, #lst do\n        if i % 2 == 1 and lst[i] % 2 == 0 then\n    \
    \        sum = sum + lst[i]\n        end\n    end\n    return sum\nend", "\t--\
    \ body\nend", "  return nil\nend", "    return reduce(lst, function(x, y) if y\
    \ % 2 == 0 then return x + y end end, 0)\nend", "    local sum = 0\n    for i,v\
    \ in ipairs(lst) do\n        if v % 2 == 0 and i % 2 ~= 0 then\n            sum\
    \ = sum + v\n        end\n    end\n    return sum\nend", "    local n = 0\n  \
    \  for i = 1, #lst do\n        if i % 2 == 1 and lst[i] % 2 == 0 then\n      \
    \      n = n + lst[i]\n        end\n    end\n    return n\nend", "\tlocal sum\
    \ = 0\n\tfor k, v in ipairs(lst) do\n\t\tif k % 2 == 1 and v % 2 == 0 then\n\t\
    \t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "  local sum = 0\n  for\
    \ i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "  return nil\nend", "    local sum\
    \ = 0\n    for i,v in ipairs(lst) do\n        if (i % 2 == 1) and (v % 2 == 0)\
    \ then\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "    local sum = 0\n    for i = 1, #lst do\n        if i % 2 == 1 and lst[i] % 2\
    \ == 0 then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "  \nend", '  local result = 0', "\tlocal sum = 0\n\tlocal odd =\
    \ true\n\tfor k, v in ipairs(lst) do\n\t\tif odd then\n\t\t\tif v % 2 == 0 then\n\
    \t\t\t\tsum = sum + v\n\t\t\tend\n\t\tend\n\t\todd = not odd\n\tend\n\treturn\
    \ sum\nend", "    local result = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ % 2 == 0 and i % 2 ~= 0 then\n            result = result + lst[i]\n       \
    \ end\n    end\n    return result\nend", "\tlocal sum = 0\n\tfor i,v in ipairs(lst)\
    \ do\n\t\tif v % 2 == 0 and i % 2 ~= 0 then\n\t\t\tsum = sum + v\n\t\tend\n\t\
    end\n\treturn sum\nend", "  local sum = 0\n  for i, n in ipairs(lst) do\n    if\
    \ n % 2 == 0 and i % 2 ~= 0 then\n      sum = sum + n\n    end\n  end\n  return\
    \ sum\nend", "    result = 0\n    for i,v in ipairs(lst) do\n        if (i % 2\
    \ ~= 0) and (v % 2 == 0) then\n            result = result + v\n        end\n\
    \    end\n    return result\nend", "  local sum = 0\n  for i, v in ipairs(lst)\
    \ do\n    if v % 2 == 0 and i % 2 ~= 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "    local added = 0\n    for index, value in ipairs(lst)\
    \ do\n        if index % 2 ~= 0 and value % 2 == 0 then\n            added = added\
    \ + value\n        end\n    end\n    return added\nend", "    local out = 0\n\
    \    for i = 1, #lst do\n        if i % 2 == 1 and lst[i] % 2 == 0 then\n    \
    \        out = out + lst[i]\n        end\n    end\n    return out\nend", "   \
    \ local sum = 0\n    for i, n in ipairs(lst) do\n        if i % 2 == 1 and n %\
    \ 2 == 0 then\n            sum = sum + n\n        end\n    end\n    return sum\n\
    end", "  return lst:foldLeft(0, function(acc, e)\n    if (#lst % 2 ~= 0 and #lst\
    \ % 2 ~= 1) then return e + acc else return acc end\n  end)\nend", "\tlocal c\
    \ = 0\n\tfor i,v in ipairs(lst) do\n\t\tif i % 2 == 1 and v % 2 == 0 then\n\t\t\
    \tc = c + v\n\t\tend\n\tend\n\treturn c\nend", "    if #lst == 0 then\n      \
    \  return 0\n    end\n    if #lst == 1 then\n        return lst[1]\n    end\n\
    \    local sum = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 1 and v\
    \ % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if v % 2 == 0 and i\
    \ % 2 ~= 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for i = 2, #lst, 2 do\n    sum = sum + lst[i]\n  end\n  return sum\n\
    end", "    local sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 ==\
    \ 1 and v % 2 == 0 then\n            sum = sum + v\n        end\n    end\n   \
    \ return sum\nend", '    local result = 0', "  local sum = 0\n  for k, v in ipairs(lst)\
    \ do\n    if k % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "\tlocal function iter(lst, counter, sum)\n\t\tif counter\
    \ == #lst then return sum end\n\t\tif counter % 2 == 1 and lst[counter] % 2 ==\
    \ 0 then\n\t\t\treturn iter(lst, counter + 1, sum + lst[counter])\n\t\telse\n\t\
    \t\treturn iter(lst, counter + 1, sum)\n\t\tend\n\tend\n\treturn iter(lst, 1,\
    \ 0)\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1\
    \ and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "  local sum = 0\n  for i, v in ipairs(lst) do\n    if (i % 2 ~= 0) and (v % 2 ==\
    \ 0) then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  local result\
    \ = 0\n  for i = 1, #lst do\n    if i % 2 == 1 and lst[i] % 2 == 0 then\n    \
    \  result = result + lst[i]\n    end\n  end\n  return result\nend", "    local\
    \ sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 ==\
    \ 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "  local sum = 0\n  for k, v in ipairs(lst) do\n    if k % 2 == 1 and v % 2 == 0\
    \ then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "    local sum\
    \ = 0\n    for i, v in ipairs(lst) do\n        if (i % 2 == 1) and (v % 2 == 0)\
    \ then\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "    return reduce(lst, 0, function(a, b) return a + b end)\nend", "\tlocal sum\
    \ = 0\n\tfor i, n in ipairs(lst) do\n\t\tif i % 2 == 1 and n % 2 == 0 then\n\t\
    \t\tsum = sum + n\n\t\tend\n\tend\n\treturn sum\nend", "  local sum = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend", "  local result = 0\n  for i,\
    \ v in ipairs(lst) do\n    if v % 2 == 0 and i % 2 ~= 0 then\n      result = result\
    \ + v\n    end\n  end\n  return result\nend", "  local l = #lst\n  local sum =\
    \ 0\n  for i=1,l do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for k,\
    \ v in ipairs(lst) do\n        if k % 2 == 1 and v % 2 == 0 then\n           \
    \ sum = sum + v\n        end\n    end\n    return sum\nend\nprint(add({0, 4, 2,\
    \ 4, 7, 1, 8, 3, 7, 8, 9, 4, 2, 0, 7, 3, 1, 5, 7, 8, 2, 6, 1, 0, 2, 4, 7, 8, 1,\
    \ 6, 8, 1, 2, 8, 3, 0, 4, 5, 7, 4, 6, 1, 8, 3, 2, 6, 2, 8, 2, 6, 2, 0, 1, 4, 7,\
    \ 1, 6, 5, 7, 8, 2, 1, 7, 6, 2, 5, 7, 1, 2, 6, 7, 3, 2, 6, 1, 0, 8, 5, 7, 8, 2,\
    \ 5, 7, 0, 4, 5, 7, 8, 3, 5, 7, 4, 6, 1, 2, 6, 4, 5, 7, 1, 2, 6, 7, 1, 2, 4, 7,\
    \ 1, 6, 5, 7, 8, 1, 4, 7, 3, 2, 6, 1, 0, 8, 5, 7, 0, 4, 5, 7, 1, 2, 6, 7, 8, 1,\
    \ 4, 7, 1, 6, 5, 7, 0, 4, 5, 7, 4, 6, 1, 8, 3, 5, 7, 4, 6, 1, 2, 4, 7, 8, 1, 4,\
    \ 7, 3, 2, 6, 1, 0, 8, 5, 7, 8, 1, 6, 5, 7, 8, 1, 4, 5, 7, 0, 4, 5, 7, 8, 3, 5,\
    \ 7, 4, 6, 1, 2, 6, 1, 0, 8, 5, 7, 0, 4, 5, 7, 8, 1, 4, 7, 1, 6, 5, 7, 0, 4, 5,\
    \ 7, 4, 6, 1, 8, 3, 5, 7, 4, 6, 1, 2, 4, 7, 8, 1", "    local function is_even(x)\n\
    \        return (x % 2) == 0\n    end\n    local function is_odd(x)\n        return\
    \ (x % 2) == 1\n    end\n    local function is_index_odd(index)\n        return\
    \ is_odd(index)\n    end\n    local function add_index(acc, x, index)\n      \
    \  if is_index_odd(index) and is_even(x) then\n            return acc + x\n  \
    \      else\n            return acc\n        end\n    end\n    return List.foldl(add_index,\
    \ 0, lst)\nend\nassert(add({3, 7, 1, 5, 8, 9, 2, 8}) == 16)\nassert(add({8, 9,\
    \ 2, 8}) == 0)\nassert(add({8, 9, 2, 8, 1}) == 2)\nassert(add({8, 9, 2, 8, 1,\
    \ 5}) == 2)\nassert(add({8, 9, 2, 8, 1, 5, 8}) == 8)\nassert(add({8, 9, 2, 8,\
    \ 1, 5, 8, 9}) == 14)\nassert(add({8, 9, 2, 8, 1, 5, 8, 9, 2}) == 14)\nassert(add({8,\
    \ 9, 2, 8, 1, 5, 8, 9, 2, 5}) == 14)\nassert(add({8, 9, 2, 8, 1, 5, 8, 9, 2, 5,\
    \ 9}) == 18)\nassert(add({8, 9, 2, 8, 1, 5, 8, 9, 2, 5, 9, 9}) == 18)\nassert(add({8,\
    \ 9, 2, 8, 1, 5, 8, 9, 2, 5, 9, 9, 8}) == 22)\nassert(add({8, 9, 2, 8, 1, 5, 8,\
    \ 9, 2, 5, 9, 9, 8, 2}) == 22)\nassert(add({8, 9, 2, 8, 1, 5, 8, 9, 2, 5, 9, 9,\
    \ 8, 2, 1}) == 23)\nassert(add({8, 9, 2, 8, 1, 5, 8, 9, 2,", "    local sum =\
    \ 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "\tlocal\
    \ _, even = lst:where(function(n) return n % 2 == 0 end):orderby(function(n) return\
    \ n end):zip()\n\tlocal __, odd = lst:where(function(n) return n % 2 ~= 0 end):orderby(function(n)\
    \ return n end):zip()\n\treturn even + odd\nend", "   local acc = 0\n   for i,\
    \ v in ipairs(lst) do\n      if i % 2 == 1 and v % 2 == 0 then\n         acc =\
    \ acc + v\n      end\n   end\n   return acc\nend", "    local sum = 0\n    for\
    \ i, n in ipairs(lst) do\n        if i % 2 == 1 and n % 2 == 0 then\n        \
    \    sum = sum + n\n        end\n    end\n    return sum\nend", "  local result\
    \ = 0\n  for i, item in ipairs(lst) do\n    if (i % 2 == 1) and (item % 2 == 0)\
    \ then\n      result = result + item\n    end\n  end\n  return result\nend", " \
    \   -- your code here\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n\
    \        if i % 2 == 1 and v % 2 == 0 then\n            sum = sum + v\n      \
    \  end\n    end\n    return sum\nend\nassert(add({0, 1, 2, 3, 4, 5}) == 6)\nassert(add({1,\
    \ 1, 2, 3, 5, 8, 13, 21}) == 6)\nassert(add({2, 3, 4, 5, 6, 7, 8, 9, 10}) == 12)\n\
    assert(add({0, -1, -2, -3, -4, -5}) == -6)", "  local sum = 0\n  for i,v in ipairs(lst)\
    \ do\n    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "  -- code here\nend", "  local res = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n      res = res + lst[i]\n \
    \   end\n  end\n  return res\nend\nprint(add({2, 8, 3, 5, 5, 9, 8, 1, 5, 9, 8,\
    \ 10}))", "    local count = 0\n    for i, v in ipairs(lst) do\n        if v %\
    \ 2 == 0 and i % 2 ~= 0 then\n            count = count + v\n        end\n   \
    \ end\n    return count\nend\nprint(add({1, 2, 3, 4, 5, 6})) --> 4\nprint(add({1,\
    \ 1, 1, 1, 1, 1})) --> 0\nprint(add({10, 1, 5, 10, 1, 4})) --> 24", "    return\
    \ foldr(lst, 0, function(acc, elem)\n        if elem % 2 == 0 and #lst % 2 ==\
    \ 1 then\n            return acc + elem\n        else\n            return acc\n\
    \        end\n    end)\nend", "\tlocal sum = 0\n\tfor i = 1, #lst do\n\t\tif i\
    \ % 2 == 1 and lst[i] % 2 == 0 then\n\t\t\tsum = sum + lst[i]\n\t\tend\n\tend\n\
    \treturn sum\nend", "  local result = 0\n  for i, val in ipairs(lst) do\n    if\
    \ (val % 2 == 0) and (i % 2 ~= 0) then\n      result = result + val\n    end\n\
    \  end\n  return result\nend\nassert(add({1, 2, 3, 4, 5, 6}) == 9)\nassert(add({-5,\
    \ -4, -3, -2, -1, 1, 2, 3, 4, 5}) == -5)\nassert(add({}) == 0)", "    local sum\
    \ = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend\nassert(add({1,\
    \ 2, 3, 4, 5, 6}) == 12)\nassert(add({-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5}) ==\
    \ 0)", '    local sum = 0', "  local res = 0\n  for i = 1, #lst do\n    if (i\
    \ % 2 ~= 0) and (lst[i] % 2 == 0) then\n      res = res + lst[i]\n    end\n  end\n\
    \  return res\nend", "  local result = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ % 2 == 0 and i % 2 ~= 0 then\n      result = result + lst[i]\n    end\n  end\n\
    \  return result\nend", "  if #lst < 2 then return lst[1] end\n  local sum = 0\n\
    \  for i = 1, #lst, 2 do\n    sum = sum + lst[i]\n  end\n  return sum\nend", " \
    \   local res = 0\n    for i = 1, #lst do\n        if i % 2 == 1 and lst[i] %\
    \ 2 == 0 then\n            res = res + lst[i]\n        end\n    end\n    return\
    \ res\nend\nprint(add({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}))\nprint(add({1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}))\nprint(add({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50}))", "    local sum = 0\n    for index, item\
    \ in ipairs(lst) do\n        if index % 2 == 1 and item % 2 == 0 then\n      \
    \      sum = sum + item\n        end\n    end\n    return sum\nend", "\tlocal\
    \ ret = 0\n\tfor i,v in ipairs(lst) do\n\t\tif (i % 2 == 1) and (v % 2 == 0) then\n\
    \t\t\tret = ret + v\n\t\tend\n\tend\n\treturn ret\nend", "\tlocal l = #lst\n\t\
    local sum = 0\n\tlocal b = 0\n\tfor i = 1, l do\n\t\tif lst[i] % 2 == 0 and i\
    \ % 2 ~= 0 then\n\t\t\tsum = sum + lst[i]\n\t\t\tb = 1\n\t\tend\n\tend\n\tif b\
    \ == 0 then\n\t\treturn 0\n\telse\n\t\treturn sum\n\tend\nend", "    local sum\
    \ = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "    local\
    \ total = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 ==\
    \ 0 then\n            total = total + v\n        end\n    end\n    return total\n\
    end", "  local i = 1\n  local sum = 0\n  while (i <= #lst) do\n    if (i % 2 ==\
    \ 1) then\n      sum = sum + lst[i]\n    end\n    i = i + 1\n  end\n  return sum\n\
    end", "  local result = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and\
    \ v % 2 == 0 then\n      result = result + v\n    end\n  end\n  return result\n\
    end", "    -- your solution here\n    local result = 0\n    for i = 1, #lst do\n\
    \        if i % 2 ~= 0 and lst[i] % 2 == 0 then\n            result = result +\
    \ lst[i]\n        end\n    end\n    return result\nend\nassert(add({1, 2, 3, 4,\
    \ 5, 6}) == 8)\nassert(add({2, 3, 4, 5, 6}) == 8)\nassert(add({1, 3, 5}) == 0)\n\
    assert(add({10, 13, 16, 19, 1, 30}) == 19)\nprint(\"[OK] add\")", "   local res\
    \ = {}\n   local i = 0\n   for k,v in ipairs(lst) do\n      if k % 2 == 1 and\
    \ v % 2 == 0 then\n         res[i] = v\n         i = i + 1\n      end\n   end\n\
    \   return res\nend", "  return 2\nend", "    local sum = 0\n    for i,v in ipairs(lst)\
    \ do\n        if i % 2 == 1 and v % 2 == 0 then\n            sum = sum + v\n \
    \       end\n    end\n    return sum\nend", "   local sum = 0\n   for i = 1, #lst\
    \ do\n      if lst[i] % 2 == 0 and i % 2 ~= 0 then\n         sum = sum + lst[i]\n\
    \      end\n   end\n   return sum\nend", "    local sum = 0\n    for i, v in ipairs(lst)\
    \ do\n        if i % 2 == 1 and v % 2 == 0 then\n            sum = sum + v\n \
    \       end\n    end\n    return sum\nend", "  return (lst + {.odd}*{.even})[1]\n\
    end", "    local r = 0\n    for k, v in ipairs(lst) do\n        if v % 2 == 0\
    \ and k % 2 ~= 0 then\n            r = r + v\n        end\n    end\n    return\
    \ r\nend", "    -- TODO: Implement your solution here\nend", "    local sum =\
    \ 0\n    for i, v in ipairs(lst) do\n        if v % 2 == 0 and i % 2 ~= 0 then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "  local\
    \ i, e, sum = 1, 0, 0\n  for i, e in ipairs(lst) do\n    if (i % 2 == 1) and (e\
    \ % 2 == 0) then\n      sum = sum + e\n    end\n  end\n  return sum\nend", " \
    \ local count = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 ==\
    \ 0 then\n      count = count + v\n    end\n  end\n  return count\nend", "  local\
    \ sum = 0\n  for i,v in ipairs(lst) do\n    if (i % 2 ~= 0) and (v % 2 == 0) then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "   local result = 0\n\
    \   local index = 1\n   while index <= #lst do\n      if lst[index] % 2 == 0 and\
    \ index % 2 ~= 0 then\n         result = result + lst[index]\n      end\n    \
    \  index = index + 1\n   end\n   return result\nend", "  local sum = 0\n  for\
    \ i, v in ipairs(lst) do\n    if v % 2 == 0 and i % 2 ~= 0 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for i, v in\
    \ ipairs(lst) do\n        if (i % 2 ~= 0) and (v % 2 == 0) then\n            sum\
    \ = sum + v\n        end\n    end\n    return sum\nend", "    local result = 0\n\
    \    for i = 1, #lst do\n        if lst[i] % 2 == 0 and i % 2 ~= 0 then\n    \
    \        result = result + lst[i]\n        end\n    end\n    return result\nend\n\
    print(add({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 })) --> 30\nprint(add({ 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 })) --> 110\nprint(add({\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30 })) --> 210\nprint(add({ 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,\
    \ 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 })) --> 300\nprint(add({\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50 })) --> 390", "  -- Use foldl to sum even\
    \ numbers in odd places\n  local function isEven(val, state)\n    return val %\
    \ 2 == 0 and val or 0\n  end\n  return foldl(isEven, 0, lst)\nend", "    local\
    \ sum = 0\n    for k, v in ipairs(lst) do\n        if k % 2 == 1 and v % 2 ==\
    \ 0 then\n            sum = sum + v\n        end\n    end\n    return sum\nend",
  "    local res = 0\n    for i, v in ipairs(lst) do\n        if (i % 2 ~= 0) and\
    \ (v % 2 == 0) then\n            res = res + v\n        end\n    end\n    return\
    \ res\nend", "    -- your code here\n    local accumulator = 0", "    local sum\
    \ = 0\n    for i = 1, #lst do\n        if i % 2 == 1 and lst[i] % 2 == 0 then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend\nprint(add({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10}))\nprint(add({5, 1, 4, 2, 7, 6, 3, 8, 9, 10}))",
  "    local sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 1 and v\
    \ % 2 == 0 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end\nassert(add({1, 2, 3, 4, 5, 6}) == 9)\nassert(add({2, 3, 4, 5, 6}) == 8)\n\
    assert(add({2, 4, 6}) == 12)\nassert(add({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}) == 12)\n\
    assert(add({1, 4, 2, 7, 3, 7, 3, 3, 6, 7}) == 10)\nassert(add({4, 4, 4, 7, 2,\
    \ 4, 4, 6, 2, 4}) == 18)\nassert(add({1, 4, 2, 7, 3, 7, 3, 3, 6, 7, 2, 4, 4, 6,\
    \ 2, 4}) == 22)\nprint('OK')", end, "    local sum = 0\n    for i, n in ipairs(lst)\
    \ do\n        if i % 2 == 1 and n % 2 == 0 then\n            sum = sum + n\n \
    \       end\n    end\n    return sum\nend", "  local acc = 0\n  for k, v in ipairs(lst)\
    \ do\n    if (k % 2 == 1) and (v % 2 == 0) then\n      acc = acc + v\n    end\n\
    \  end\n  return acc\nend", "    local res = 0\n    for i, v in ipairs(lst) do\n\
    \        if i % 2 == 1 and v % 2 == 0 then\n            res = res + v\n      \
    \  end\n    end\n    return res\nend", "\tlocal result = 0\n\tfor i, n in ipairs(lst)\
    \ do\n\t\tif i % 2 == 1 and n % 2 == 0 then\n\t\t\tresult = result + n\n\t\tend\n\
    \tend\n\treturn result\nend", "\tlocal total = 0\n\tfor i = 1, #lst do\n\t\tif\
    \ i % 2 == 1 and lst[i] % 2 == 0 then\n\t\t\ttotal = total + lst[i]\n\t\tend\n\
    \tend\n\treturn total\nend\nassertEquals(add({1, 2, 3, 4, 5, 6}), 12)\nassertEquals(add({}),\
    \ 0)\nassertEquals(add({1, 3, 5}), 0)\nassertEquals(add({3, 2, 8, 11, 9, 4}),\
    \ 8)\nassertEquals(add({-3, -2, -8, -11, -9, -4}), -8)", "   -- your code here\n\
    end", end, "  local sum = 0\n  for k, v in ipairs(lst) do\n    if v % 2 == 0 and\
    \ k % 2 ~= 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", " \
    \ -- #code\nend", "  local s = 0\n  for i, elem in ipairs(lst) do\n    if (i %\
    \ 2 == 1) and (elem % 2 == 0) then\n      s = s + elem\n    end\n  end\n  return\
    \ s\nend", "    -- your code here\nend", "  local acc, result = 0, {}\n  for i,v\
    \ in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      acc = acc +\
    \ v\n    end\n  end\n  return acc\nend", "\tlocal acc = 0\n\tfor i, v in ipairs(lst)\
    \ do\n\t\tif (i % 2 == 1) and (v % 2 == 0) then\n\t\t\tacc = acc + v\n\t\tend\n\
    \tend\n\treturn acc\nend\nassert(add({1,2,3,4,5,6,7,8,9,10}) == 20)\nassert(add({1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20})\
    \ == 40)\nassert(add({11,22,33,44,55,66,77,88,99,110}) == 0)", "   local result\
    \ = 0\n   local cnt = 1\n   for k, v in ipairs(lst) do\n      if k % 2 == 1 and\
    \ v % 2 == 0 then\n         result = result + v\n      end\n   end\n   return\
    \ result\nend", "  local res = 0\n  for i, v in ipairs(lst) do\n    if v % 2 ==\
    \ 0 and i % 2 ~= 0 then\n      res = res + v\n    end\n  end\n  return res\nend",
  "    if not lst or #lst == 0 then return 0 end\n    local sum = 0\n    for i, v\
    \ in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n            sum\
    \ = sum + v\n        end\n    end\n    return sum\nend", "\tlocal sum = 0\n\t\
    for i = 1, #lst do\n\t\tif (lst[i] % 2 == 0) and (i % 2 ~= 0) then\n\t\t\tsum\
    \ = sum + lst[i]\n\t\tend\n\tend\n\treturn sum\nend", "  local sum = 0\n  for\
    \ i = 1, #lst do\n    if i % 2 == 1 and lst[i] % 2 == 0 then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend\nassert(add({1, 2, 3, 4, 5}) ==\
    \ 2)\nassert(add({12, 4, 12, 0, 10}) == 16)\nassert(add({1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10}) == 0)", "\tlocal ans = 0\n\tfor i,v in ipairs(lst) do\n\t\tif i%2\
    \ ~= 0 and v%2 == 0 then\n\t\t\tans = ans + v\n\t\tend\n\tend\n\treturn ans\n\
    end\nassert(add{2,4,6,7,9,10,12} == 10)\nassert(add{1,2,3,4,5,6,7,8,9,10} == 6)",
  "  local res = 0\n  for i, num in ipairs(lst) do\n    if (i % 2 == 1) and (num %\
    \ 2 == 0) then\n      res = res + num\n    end\n  end\n  return res\nend", " \
    \ local result = 0\n  for i, v in ipairs(lst) do\n    if (i % 2 == 1) and (v %\
    \ 2 == 0) then\n      result = result + v\n    end\n  end\n  return result\nend",
  "   local sum = 0\n   for i,v in ipairs(lst) do\n      if i % 2 == 1 and v % 2 ==\
    \ 0 then\n         sum = sum + v\n      end\n   end\n   return sum\nend", "  local\
    \ sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "    local s = 0\n \
    \   for i,v in ipairs(lst) do\n        if (i % 2 == 1) and (v % 2 == 0) then\n\
    \            s = s + v\n        end\n    end\n    return s\nend\nassert(add({0,\
    \ 7, 2, 5, 8}) == 0)\nassert(add({1, 2, 3, 4, 5}) == 2)\nassert(add({0, 0, 1,\
    \ 0, 0}) == 0)\nassert(add({100, 100, 100, 100, 100}) == 200)", "    local adder\
    \ = function(agg, n)\n        if n % 2 == 0 then\n            return agg + n\n\
    \        else\n            return agg\n        end\n    end\n    return List.foldl(adder,\
    \ 0, lst)\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if ((i %\
    \ 2 == 1) and (v % 2 == 0)) then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "  local s = 0\n  for i = 1, #lst do\n    if i % 2 == 1 and lst[i]\
    \ % 2 == 0 then\n      s = s + lst[i]\n    end\n  end\n  return s\nend", "\tlocal\
    \ sum = 0\n\tfor i,v in ipairs(lst) do\n\t\tif i % 2 == 1 and v % 2 == 0 then\n\
    \t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "\tlocal function add_helper(lst,\
    \ acc, i)\n\t\tif i > #lst then return acc end\n\t\tif i % 2 == 1 and lst[i] %\
    \ 2 == 0 then\n\t\t\tacc = acc + lst[i]\n\t\tend\n\t\treturn add_helper(lst, acc,\
    \ i + 1)\n\tend\n\treturn add_helper(lst, 0, 1)\nend", "  local sum = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] % 2 == 0 and i % 2 ~= 0 then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for i,\
    \ v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n           \
    \ sum = sum + v\n        end\n    end\n    return sum\nend", "  local res = 0\n\
    \  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n      res\
    \ = res + v\n    end\n  end\n  return res\nend", "    local sum = 0\n    for i\
    \ = 1, #lst do\n        if (lst[i] % 2 == 0) and (i % 2 ~= 0) then\n         \
    \   sum = sum + lst[i]\n        end\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i = 1, #lst do\n        if lst[i] % 2 == 0 and i % 2 ~= 0 then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \   -- your code here\nend", "  local s = 0\n  for i = 1, #lst do\n    if i %\
    \ 2 == 1 and lst[i] % 2 == 0 then\n      s = s + lst[i]\n    end\n  end\n  return\
    \ s\nend", "  local sum = 0\n  for i,v in ipairs(lst) do\n    if v % 2 == 0 and\
    \ i % 2 ~= 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", " \
    \   local r = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 1 and v %\
    \ 2 == 0 then\n            r = r + v\n        end\n    end\n    return r\nend",
  "  local count = 0\n  for i,num in ipairs(lst) do\n    if num % 2 == 0 and i % 2\
    \ ~= 0 then\n      count = count + num\n    end\n  end\n  return count\nend",
  "  return foldr(accum, 0, filter(even, filter(odd, count(lst))))\nend", "\tlocal\
    \ sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i % 2 == 1 and v % 2 == 0 then\n\
    \t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    local sum = 0\n\
    \    for i = 1, #lst do\n        if lst[i] % 2 == 0 and i % 2 ~= 0 then\n    \
    \        sum = sum + lst[i]\n        end\n    end\n    return sum\nend", "  local\
    \ sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 1 and v % 2 == 0 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "\tlocal sum = 0\n\t\
    for k, v in ipairs(lst) do\n\t\tif (k % 2 ~= 0) and (v % 2 == 0) then\n\t\t\t\
    sum = sum + v\n\t\tend\n\tend\n\treturn sum\nend", "    local sum = 0\n    for\
    \ i, v in ipairs(lst) do\n        if v % 2 == 0 and i % 2 ~= 0 then\n        \
    \    sum = sum + v\n        end\n    end\n    return sum\nend", "    local ret\
    \ = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 1 and v % 2 == 0 then\n\
    \            ret = ret + v\n        end\n    end\n    return ret\nend\nassert(add({1,2,3,4,5,6})\
    \ == 9)\nassert(add({1,1,1,1,1,1}) == 0)\nassert(add({0,0,0,0,0,0}) == 0)", " \
    \   local f = even and (odd or 1)\n    local res = 0\n    for i, v in ipairs(lst)\
    \ do\n        if not even and f(i) then\n            res = res + v\n        end\n\
    \    end\n    return res\nend", "  return #lst == 0 and 0 or (lst[1] % 2 == 0\
    \ and lst[1] or 0) + add(lst(2, #lst))\nend", "    local sum = 0\n    for index,\
    \ val in ipairs(lst) do\n        if index % 2 == 1 and val % 2 == 0 then\n   \
    \         sum = sum + val\n        end\n    end\n    return sum\nend", "  -- error(\"\
    Not implemented\")\n  local result = 0\n  for i, v in ipairs(lst) do\n    if (i\
    \ % 2 == 1) and (v % 2 == 0) then\n      result = result + v\n    end\n  end\n\
    \  return result\nend", "    -- add even integers at odd indices\n    local sum\
    \ = 0\n    for i, v in ipairs(lst) do\n        if v % 2 == 0 and i % 2 ~= 0 then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "  local\
    \ sum = 0\n  for k, v in ipairs(lst) do\n    if k % 2 == 1 and v % 2 == 0 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend\nprint(add({1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10})) -- 30\nprint(add({2, 4, 6, 8, 10, 12, 14, 16, 18, 20}))\
    \ -- 110\nprint(add({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20})) -- 110\nprint(add({2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24,\
    \ 26, 28, 30, 32, 34, 36, 38, 40})) -- 450\nprint(add({1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40})) -- 450\nprint(add({})) --\
    \ 0", "  local total = 0\n  for index, item in ipairs(lst) do\n    if index %\
    \ 2 == 1 and item % 2 == 0 then\n      total = total + item\n    end\n  end\n\
    \  return total\nend", "    local ret = 0\n    for i, v in ipairs(lst) do\n  \
    \      if i % 2 == 1 and v % 2 == 0 then\n            ret = ret + v\n        end\n\
    \    end\n    return ret\nend", "  local sum = 0\n  for i,v in ipairs(lst) do\n\
    \    if i % 2 == 1 and v % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "   local sum = 0\n   for i, n in ipairs(lst) do\n      if\
    \ i % 2 == 1 and n % 2 == 0 then\n         sum = sum + n\n      end\n   end\n\
    \   return sum\nend", "    local sum = 0\n    for i,v in ipairs(lst) do\n    \
    \    if i % 2 == 1 and v % 2 == 0 then\n            sum = sum + v\n        end\n\
    \    end\n    return sum\nend", "    -- local result = 0\n    -- for index, number\
    \ in ipairs(lst) do\n    --     if (index % 2 ~= 0) and (number % 2 == 0) then\n\
    \    --         result = result + number\n    --     end\n    -- end\n    -- return\
    \ result", "  local ans = 0\n  for i,v in ipairs(lst) do\n    if (i % 2 ~= 0)\
    \ and (v % 2 == 0) then\n      ans = ans + v\n    end\n  end\n  return ans\nend",
  "   local sum = 0\n   for i = 1, #lst do\n      if i % 2 == 1 and lst[i] % 2 ==\
    \ 0 then\n         sum = sum + lst[i]\n      end\n   end\n   return sum\nend",
  "  local e = {}\n  for k, v in ipairs(lst) do\n    if k % 2 == 1 and v % 2 == 0\
    \ then\n      table.insert(e, v)\n    end\n  end\n  return e\nend", "    local\
    \ result = 0\n    for index, value in ipairs(lst) do\n        if index % 2 ==\
    \ 1 and value % 2 == 0 then\n            result = result + value\n        end\n\
    \    end\n    return result\nend", "  assert(lst ~= nil, \"No list given\")\n\
    \  local sum = 0\n  for i = 1, #lst do\n    if (i % 2 ~= 0) and (lst[i] % 2 ==\
    \ 0) then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "   \
    \ local sum = 0\n    for i, v in ipairs(lst) do\n        if (i % 2 == 1) and (v\
    \ % 2 == 0) then\n            sum = sum + v\n        end\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for i = 1, #lst do\n        if lst[i] % 2\
    \ == 0 and i % 2 ~= 0 then\n            sum = sum + lst[i]\n        end\n    end\n\
    \    return sum\nend", "  --# assert_equal( 7,   add({3, 5, 2, 4, 2, 5}))\n  --#\
    \ assert_equal( 6,   add({3, 7, 2, 4, 5, 7}))\n  --# assert_equal( 3,   add({3,\
    \ 1, 3, 1, 3, 1}))\n  --# assert_equal( 18,  add({1, 1, 1, 1, 1, 1}))\n  --# assert_equal(\
    \ 55,  add({2, 1, 4, 3, 6, 5}))\n  --# assert_equal( 32,  add({2, 4, 6, 8, 10,\
    \ 12}))\n  --# assert_equal( 12,  add({2, 1, 3, 3, 2, 3}))\n  --# assert_equal(\
    \ 15,  add({1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}))\n  --# assert_equal(\
    \ 8,   add({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}))\n  --# assert_equal(\
    \ 16,  add({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}))\n  --# assert_equal(\
    \ 24,  add({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}))\n  --#\
    \ assert_equal( 40,  add({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18}))\n  --# assert_equal( 256, add({1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20}))\n  return 0\nend", "  return nil\nend",
  "  -- hint: use list comprehension and '.zipWithIndex'.\n  -- e.g. [1,2,3]:zipWithIndex()\
    \ --> {1,0}, {2,1}, {3,2}\n  -- Hint: use list comprehension and '.zipWithIndex'.\n\
    \  -- e.g. [1,2,3]:zipWithIndex() --> {1,0}, {2,1}, {3,2}\n  local res = {}\n\
    \  for _,item in ipairs(lst) do\n    if (math.mod(item,2)==0) then\n      res[#res+1]\
    \ = item\n    end\n  end\n  return res\nend", "\treturn 0\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

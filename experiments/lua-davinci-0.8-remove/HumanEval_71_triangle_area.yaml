name: HumanEval_71_triangle_area
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return the area of\n\
  -- the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n-- Otherwise return -1\n-- Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n-- than the third side.\n-- Example:\nlocal function\
  \ triangle_area(a, b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
  \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local s = (a + b + c) / 2\n  local x = s * (s - a) * (s - b) * (s\
    \ - c)\n  if x > 0 then\n    return math.sqrt(x)\n  else\n    return -1\n  end\n\
    end", "    -- your code here\n    if a > b + c or b > a + c or c > a + b then\
    \ return -1 end\n    s = (a + b + c) / 2\n    return math.floor(math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend", "  -- your code here\n\
    end", "    -- TODO: Write me!\nend", "  if a + b > c and a + c > b and b + c >\
    \ a then\n    local p = (a + b + c) / 2\n    return math.sqrt(p * (p - a) * (p\
    \ - b) * (p - c))\n  else\n    return -1\n  end\nend", "  local s = (a + b + c)\
    \ / 2\n  local a = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  return a > 0\
    \ and string.format(\"%.2f\", a) or -1\nend", "    if a < 0 or b < 0 or c < 0\
    \ then return -1 end\n    if a + b <= c or a + c <= b or b + c <= a then return\
    \ -1 end\n    local s = (a + b + c) / 2\n    return math.floor(math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend", "  local area;\n  if ((a\
    \ + b) > c) and ((a + c) > b) and ((b + c) > a) then\n    local s = (a + b + c)\
    \ / 2\n    area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  else\n    area\
    \ = -1\n  end\n  return math.round(area, 2)\nend", "\tlocal s = (a + b + c) /\
    \ 2\n\tlocal area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\treturn area\n\
    end", "  if a + b > c and a + c > b and b + c > a then\n    local s = (a + b +\
    \ c) / 2\n    return math.ceil(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100)\
    \ / 100\n  else\n    return -1\n  end\nend", "  local triangle = {a, b, c}\n \
    \ local area\n  local longest_side\n  local shortest_side\n  local p = (a + b\
    \ + c) / 2\n  table.sort(triangle)\n  longest_side = triangle[3]\n  shortest_side\
    \ = triangle[1]\n  if longest_side < shortest_side + triangle[2] then\n    area\
    \ = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    return string.format(\"%.2f\"\
    , area)\n  else\n    return -1\n  end\nend", "    local area\n    if (a + b >\
    \ c) and (a + c > b) and (b + c > a) then\n        area = (a + b + c) / 2\n  \
    \      return round(math.sqrt(area * (area - a) * (area - b) * (area - c)), 2)\n\
    \    else\n        return -1\n    end\nend", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        return (a + b + c) / 2\n    else\n        return -1\n\
    \    end\nend", "\tlocal s = 0.5 * (a + b + c)\n\treturn (s * (s - a) * (s - b)\
    \ * (s - c)) ^ 0.5\nend", "    if a + b > c and a + c > b and b + c > a then\n\
    \        return math.floor(0.5 * a * b * 100 + 0.5) / 100\n    else\n        return\
    \ -1\n    end\nend", "  -- body\n  if a+b>c and a+c>b and b+c>a then\n    return\
    \ math.floor(0.5*(a+b+c)*(p-a)*(p-b)*(p-c))\n  else \n    return -1\n  end\nend",
  "\tlocal s = (a + b + c) / 2\n\tif a + b > c and a + c > b and b + c > a then\n\t\
    \treturn (s * (s - a) * (s - b) * (s - c)) ^ 0.5\n\telse\n\t\treturn -1\n\tend\n\
    end\nassert(triangle_area(3, 4, 5) == 6)\nassert(triangle_area(2, 2, 6) == -1)\n\
    assert(triangle_area(7, 12, 8) == 30)\nassert(triangle_area(3, 4, 0) == -1)",
  "    if a < 0 or b < 0 or c < 0 then\n        return -1\n    end\n    if a + b <=\
    \ c or a + c <= b or b + c <= a then\n        return -1\n    end\n    local s\
    \ = (a + b + c) / 2\n    return math.sqrt(s * (s - a) * (s - b) * (s - c))\nend",
  "  local s = (a + b + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n  if area > 0 then\n    return math.floor(area * 100 + 0.5) / 100\n \
    \ else\n    return -1\n  end\nend", "    local s = 0.5 * (a + b + c)\n    return\
    \ math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend",
  "  --[[\n    local x = (a + b + c) / 2\n    return math.floor(math.sqrt(x * (x -\
    \ a) * (x - b) * (x - c)) * 100 + 0.5) / 100\n  --]]\n  --[[\n    local s = (a\
    \ + b + c) / 2\n    local A = math.sqrt(s * (s - a) * (s - b) * (s - c))\n   \
    \ return A < 0 and -1 or math.floor(A * 100 + 0.5) / 100\n  --]]\n  --[[\n   \
    \ local s = (a + b + c) / 2\n    local A = s * (s - a) * (s - b) * (s - c)\n \
    \   return A < 0 and -1 or math.floor(math.sqrt(A) * 100 + 0.5) / 100\n  --]]\n\
    \  local x = (a + b + c) / 2\n  return x > a and x > b and x > c and math.floor(math.sqrt(x\
    \ * (x - a) * (x - b) * (x - c)) * 100 + 0.5) / 100 or -1\nend", "  if a + b >\
    \ c and a + c > b and b + c > a then\n    return math.floor(math.sqrt((a + b +\
    \ c) * (a + b - c) * (a + c - b) * (b + c - a)) * 100) / 100\n  else\n    return\
    \ -1\n  end\nend", "    -- your code here\nend\nassert_equal(2.83, triangle_area(1,1,1))\n\
    assert_equal(16.00, triangle_area(8,6,10))\nassert_equal(-1, triangle_area(8,5,2))",
  "    local s = (a + b + c) / 2\n    local area = math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\n    if area > 0 then\n        return string.format(\"%.2f\", area)\n\
    \    else\n        return -1\n    end\nend", "\tlocal function isValidTriangle(a,\
    \ b, c)\n\t\tlocal t = {a, b, c}\n\t\ttable.sort(t)\n\t\treturn t[1] + t[2] >\
    \ t[3]\n\tend\n\tif isValidTriangle(a, b, c) then\n\t\tlocal p = (a + b + c) /\
    \ 2\n\t\treturn math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 +\
    \ 0.5) / 100\n\telse\n\t\treturn -1\n\tend\nend\nprint(triangle_area(3,4,5))\n\
    print(triangle_area(6,8,10))\nprint(triangle_area(2,2,2))\nprint(triangle_area(2,2,1))\n\
    print(triangle_area(5,5,5))", "\t-- Check for valid triangle sides\n\tif (a +\
    \ b > c) and (a + c > b) and (b + c > a) then\n\t\t-- Calculate triangle area,\
    \ round to 2 decimal points and return\n\t\treturn (math.sqrt((a + b + c) * (a\
    \ + b - c) * (a + c - b) * (b + c - a))) / 4\n\telse\n\t\t-- Invalid triangle\
    \ sides, return -1\n\t\treturn -1\n\tend\nend", "    local p = (a + b + c) / 2\n\
    \    local area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    if area > 0\
    \ then\n        return math.floor(area * 100 + 0.5) / 100\n    else\n        return\
    \ -1\n    end\nend", end, "\tlocal p = (a + b + c) / 2\n\tlocal area = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n\treturn area > 0 and area or -1\nend", "\t\
    local s = (a + b + c) / 2\n\tlocal area = math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n\treturn area > 0 and area or -1\nend", "  if a + b > c and a + c > b\
    \ and b + c > a then\n    local s = (a + b + c) / 2\n    return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n  else\n    return -1\n  end\nend", "  \
    \  local s = (a + b + c) / 2\n    local A = math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c))\n    return (A >= 0 and A) or -1\nend", "    if a + b > c and a + c\
    \ > b and b + c > a then\n        local semiperimeter = (a + b + c) / 2\n    \
    \    local area = math.sqrt(semiperimeter * (semiperimeter - a) * (semiperimeter\
    \ - b) * (semiperimeter - c))\n        return tonumber(string.format(\"%.2f\"\
    , area))\n    else\n        return -1\n    end\nend", "  --[[\n  local area =\
    \ -1\n  local s = (a + b + c) / 2\n  if a + b > c and a + c > b and b + c > a\
    \ then\n    area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  end\n  return\
    \ math.floor(area * 100 + 0.5) / 100\n  --]]\n  if a + b > c and a + c > b and\
    \ b + c > a then\n    local s = (a + b + c) / 2\n    return math.floor(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n  end\n  return -1\nend",
  "   -- ..\nend", "    if a + b > c and a + c > b and b + c > a then\n        local\
    \ s = (a + b + c) / 2\n        return (s * (s - a) * (s - b) * (s - c)) ^ 0.5\n\
    \    else\n        return -1\n    end\nend", "  -- Check for validity:\n  if a\
    \ + b > c and a + c > b and b + c > a then\n    local p = (a + b + c) / 2\n  \
    \  return math.sqrt(p * (p - a) * (p - b) * (p - c))\n  else\n    return -1\n\
    \  end\nend", "  local s = (a + b + c) / 2\n  local area = math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c))\n  if area == 0 then\n    return -1\n  else\n    return\
    \ math.round(area, 2)\n  end\nend", "  local s = (a + b + c) / 2\n  local tmp\
    \ = s * (s - a) * (s - b) * (s - c)\n  if tmp < 0 then\n    return -1\n  end\n\
    \  return math.sqrt(tmp) * 100 / 100\nend", '    local p = (a + b + c) / 2', " \
    \   if a + b <= c or a + c <= b or b + c <= a then\n        return -1\n    end\n\
    \    local p = (a + b + c) / 2\n    return math.floor(math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c)) * 100 + 0.5) / 100\nend", "\tif not a or not b or not c then\n\
    \t\treturn -1\n\tend\n\tif a + b <= c or a + c <= b or b + c <= a then\n\t\treturn\
    \ -1\n\tend\n\tlocal s = (a + b + c) / 2\n\treturn math.floor(math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend", "  local p = (a + b + c)\
    \ / 2\n  local x = p * (p - a) * (p - b) * (p - c)\n  if x > 0 then\n    return\
    \ math.sqrt(x)\n  else\n    return -1\n  end\nend", "    if a + b > c and a +\
    \ c > b and b + c > a then\n        local p = (a + b + c) / 2\n        return\
    \ math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n \
    \   else\n        return -1\n    end\nend", "  local p = (a + b + c) / 2 -- Semi-perimeter\n\
    \  if a + b > c and a + c > b and b + c > a then\n    return math.sqrt(p * (p\
    \ - a) * (p - b) * (p - c))\n  else\n    return -1\n  end\nend", "    if a + b\
    \ > c and a + c > b and b + c > a then\n        return math.floor(0.5 * (a + b\
    \ + c) * (p - a) * (p - b) * (p - c)) ^ 0.5\n    else\n        return -1\n   \
    \ end\nend", "\tif not a or not b or not c then return -1 end\n\tif a + b <= c\
    \ or a + c <= b or b + c <= a then return -1 end\n\tlocal s = (a + b + c) / 2\n\
    \treturn 2 * math.sqrt(s * (s - a) * (s - b) * (s - c)) / 2\nend", "    if a +\
    \ b > c and a + c > b and b + c > a then\n        return string.format(\"%.2f\"\
    , math.sqrt((a + b + c) * (-a + b + c) * (a - b + c) * (a + b - c)) / 4)\n   \
    \ else\n        return -1\n    end\nend", "  local s = (a + b + c) / 2\n  local\
    \ area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if (area > 0) then\n  \
    \  return string.format(\"%.2f\", area)\n  else\n    return -1\n  end\nend", " \
    \   local s = (a + b + c) / 2\n    return math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\nend", "   local t = {a, b, c}\n   table.sort(t)\n   if t[1] + t[2] >\
    \ t[3] then\n      return 0.5 * t[1] * t[2]\n   else\n      return -1\n   end\n\
    end", "   --[[ \n      formula: area = sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \      where:   s = (a + b + c) / 2\n      or       area = ((a * b * sin(C)) /\
    \ 2)\n      where:   C = angle opposite to side c\n   --]]\n   local s = (a +\
    \ b + c) / 2.0\n   if (s > a) and (s > b) and (s > c) then\n      return math.floor(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n   else\n      return -1\n\
    \   end\nend", "  local s = (a + b + c) / 2\n  local area = s * (s - a) * (s -\
    \ b) * (s - c)\n  if area < 0 then\n    return -1\n  else\n    return math.sqrt(area)\n\
    \  end\nend", "  local s = (a + b + c) / 2\n  local A = math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n  return (A > 0) and string.format(\"%.2f\", A) or -1\n\
    end", "  if a + b > c and a + c > b and b + c > a then\n    return string.format(\"\
    %.2f\", math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4)\n\
    \  else\n    return -1\n  end\nend", "    if a + b > c and a + c > b and b + c\
    \ > a then\n        local p = (a + b + c) / 2\n        return math.floor(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n    else\n        return\
    \ -1\n    end\nend", "    local s = (a + b + c) / 2\n    local A = math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    if A > 0 then\n        return math.floor(A\
    \ * 100 + 0.5) / 100\n    else\n        return -1\n    end\nend", "  -- your code\
    \ here\nend", "  if a + b > c and a + c > b and b + c > a then\n    local p =\
    \ (a + b + c) / 2\n    return math.sqrt(p * (p - a) * (p - b) * (p - c))\n  else\n\
    \    return -1\n  end\nend", "  local s = (a + b + c) / 2\n  local ans = math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n  if ans > 0 then\n    return ans\n  else\n\
    \    return -1\n  end\nend", "    if (a + b <= c) or (a + c <= b) or (b + c <=\
    \ a) then\n        return -1\n    end\n    local x = (a + b + c) / 2\n    return\
    \ math.floor(math.sqrt(x * (x - a) * (x - b) * (x - c)) * 100 + 0.5) / 100\nend",
  "   -- code here\nend", "\tlocal p = (a + b + c) / 2\n\tlocal area = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n\tif (a + b < c) or (a + c < b) or (b + c <\
    \ a) then\n\t\treturn -1\n\telse\n\t\treturn math.floor(area * 100 + 0.5) / 100\n\
    \tend\nend", "    if a + b > c and a + c > b and b + c > a then\n        return\
    \ round(2, math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) /\
    \ 4)\n    else\n        return -1\n    end\nend", "    -- your code here\n   \
    \ local sum = a + b + c\n    local area = -1\n    if a < sum - a and b < sum -\
    \ b and c < sum - c then\n        area = math.sqrt((sum - a) * (sum - b) * (sum\
    \ - c) * sum) / 4\n    end\n    return math.floor(area * 100 + 0.5) / 100\nend",
  "   if a + b > c and a + c > b and b + c > a then\n      local s = (a + b + c) /\
    \ 2\n      return math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100\
    \ + 0.5) / 100\n   else\n      return -1\n   end\nend", "\tlocal s = (a + b +\
    \ c) / 2\n\treturn sqrt(s * (s - a) * (s - b) * (s - c))\nend", "\tif a+b > c\
    \ and a+c > b and b+c > a then\n\t\tlocal s = (a+b+c)/2\n\t\treturn math.sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \telse\n\t\treturn -1\n\tend\nend", "    if a + b > c and a + c > b and b + c\
    \ > a then\n        local p = (a + b + c) / 2\n        return (p * (p - a) * (p\
    \ - b) * (p - c)) ^ 0.5\n    else\n        return -1\n    end\nend", "    if a\
    \ + b > c and a + c > b and b + c > a then\n        local s = (a + b + c) / 2\n\
    \        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n       \
    \ return -1\n    end\nend", "\tlocal  perimeter, area;\n\tif (a < b + c and b\
    \ < a + c and c < a + b) then\n\t\tperimeter = (a + b + c) / 2;\n\t\tarea = math.sqrt(perimeter\
    \ * (perimeter - a) * (perimeter - b) * (perimeter - c));\n\t\treturn tonumber(string.format(\"\
    %.2f\", area));\n\telse\n\t\treturn -1;\n\tend\nend", "\tif(a < 0 or b < 0 or\
    \ c < 0) then\n\t\treturn -1\n\tend\n\tif(a + b > c and a + c > b and b + c >\
    \ a) then\n\t\tlocal p = (a + b + c) / 2\n\t\treturn math.floor(math.sqrt(p *\
    \ (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n\tend\n\treturn -1\nend", " \
    \ if a < b + c and b < a + c and c < a + b then\n    local p = (a + b + c) / 2\n\
    \    return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5)\
    \ / 100\n  else\n    return -1\n  end\nend", "  -- Calculate semiperimeter and\
    \ area\n  local s = (a + b + c) / 2\n  local A = math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n  -- Only continue if triangle is valid\n  if A > 0 then\n  \
    \  -- Calculate area\n    return math.floor(A * 100 + 0.5) / 100\n  else\n   \
    \ return -1\n  end\nend", "\tif (a + b > c) and (a + c > b) and (b + c > a) then\n\
    \t\treturn (math.sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)))\
    \ / 4\n\telse\n\t\treturn -1\n\tend\nend", "    --  area = (a * b * sin C) / 2\n\
    \    --  C = math.acos((a * a + b * b - c * c) / (2 * a * b))\n    local s = (a\
    \ + b + c) / 2\n    local A = math.sqrt(s * (s - a) * (s - b) * (s - c))\n   \
    \ if A ~= A then\n        return -1\n    end\n    return string.format(\"%.2f\"\
    , A)\nend", "    local p = (a + b + c) / 2\n    local s = math.sqrt(p * (p - a)\
    \ * (p - b) * (p - c))\n    if s <= 0 then\n        return -1\n    end\n    return\
    \ string.format(\"%.2f\", s)\nend", "  if (a+b)>c and (a+c)>b and (b+c)>a then\
    \ \n    local s = (a+b+c)/2\n    return (s*(s-a)*(s-b)*(s-c))^0.5\n  else\n  \
    \  return -1\n  end\nend", "    local p = (a + b + c) / 2\n    local area = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    return area > 0 and area or -1\nend", " \
    \   if a + b > c and a + c > b and b + c > a then\n        local p = (a + b +\
    \ c) / 2\n        return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c))\
    \ * 100 + 0.5) / 100\n    else\n        return -1\n    end\nend", "    if a +\
    \ b > c and a + c > b and b + c > a then\n        return math.floor(0.5 * (a *\
    \ c * math.sin(math.pi * (b^2 + c^2 - a^2) / (2 * b * c)) + b * a * math.sin(math.pi\
    \ * (c^2 + a^2 - b^2) / (2 * c * a)) + c * b * math.sin(math.pi * (a^2 + b^2 -\
    \ c^2) / (2 * a * b))) * 100 + 0.5) / 100\n    else\n        return -1\n    end\n\
    end", "    local s = (a + b + c) / 2\n    local d = s * (s - a) * (s - b) * (s\
    \ - c)\n    return d > 0 and math.sqrt(d) or -1\nend", "\tif a + b > c and a +\
    \ c > b and b + c > a then\n\t\treturn math.floor(math.sqrt((a + b + c) * (a +\
    \ b - c) * (a + c - b) * (b + c - a)) * 100 + 0.5) / 100\n\telse\n\t\treturn -1\n\
    \tend\nend", "  -- TODO: write your code here\n  return -1\nend", "    if (a +\
    \ b) > c and (a + c) > b and (b + c) > a then\n        local p = (a + b + c) /\
    \ 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n    end\n    return\
    \ -1\nend", "    --[[\n    local s = (a + b + c) / 2\n    return math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c)) * 100\n    --]]\n    return a + b > c and b + c\
    \ > a and c + a > b\n        and math.sqrt((a + b + c) * (a + b - c) * (b + c\
    \ - a) * (c + a - b)) / 4 * 100\n        or -1\nend", "    local function is_valid(a,\
    \ b, c)\n        return a + b > c and a + c > b and b + c > a\n    end", "\tlocal\
    \ s = (a + b + c) / 2\n\tlocal area = s * (s - a) * (s - b) * (s - c)\n\tif area\
    \ > 0 then\n\t\treturn math.sqrt(area)\n\telse\n\t\treturn -1\n\tend\nend", " \
    \ if a + b <= c or a + c <= b or b + c <= a then\n    return -1\n  end\n  local\
    \ p = (a + b + c) / 2\n  return math.floor(math.sqrt(p * (p - a) * (p - b) * (p\
    \ - c)) * 100 + 0.5) / 100\nend\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(12,\
    \ 13, 5))\nprint(triangle_area(1, 13, 13))", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    end\n    return -1\nend", "  local s = (a\
    \ + b + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  return\
    \ area > 0 and area or -1\nend", "  local u, v, w = a, b, c\n  if (u+v <= w) or\
    \ (v+w <= u) or (w+u <= v) then\n    return -1\n  end\n  local p = (u+v+w)/2\n\
    \  return math.sqrt(p*(p-u)*(p-v)*(p-w))\nend", "\tif a < 0 or b < 0 or c < 0\
    \ then return -1 end\n\tif a + b <= c or a + c <= b or b + c <= a then return\
    \ -1 end\n\tlocal s = (a + b + c) / 2\n\treturn math.floor(math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend", "  if (a + b > c) and (a +\
    \ c > b) and (b + c > a) then\n    return math.floor(math.sqrt((a + b + c) * (a\
    \ + b - c) * (a + c - b) * (b + c - a)) * 100 + 0.5) / 100\n  else\n    return\
    \ -1\n  end\nend\nprint(triangle_area(3, 4, 5)) -- 6\nprint(triangle_area(1, 2,\
    \ 3)) -- -1\nprint(triangle_area(5, 5, 5)) -- 10.83\nprint(triangle_area(10, 10,\
    \ 10)) -- 43.3\nprint(triangle_area(4, 3, 5)) -- 6\nprint(triangle_area(3, 10,\
    \ 10)) -- 43.3\nprint(triangle_area(30, 10, 10)) -- 145.38\nprint(triangle_area(5,\
    \ 5, 20)) -- -1\nprint(triangle_area(4, 3, 7)) -- -1\nprint(triangle_area(1, 1,\
    \ 9)) -- -1\nprint(triangle_area(1, 9, 1)) -- -1\nprint(triangle_area(9, 1, 1))\
    \ -- -1\nprint(triangle_area(1, 2, 3)) -- -1\nprint(triangle_area(2, 1, 3)) --\
    \ -1\nprint(triangle_area(2, 3, 1)) -- -1\nprint(triangle_area(8, 6, 8)) -- 19.9\n\
    print(triangle_area(10, 10, 10)) -- 43.3\nprint(triangle_area(3, 4, 2)) -- -1\n\
    print(triangle_area(3, 6, 3)) -- -1\nprint(triangle_area(6, 6, 6)) -- 29.52\n\
    print(triangle_area(20, 21, 22)) -- 116.53\nprint(triangle_area(4, 2, 3)) -- -1\n\
    print(triangle_area(10, 11, 11)) -- 48.47\nprint(triangle_area(10, 8, 9)) -- 35.14\n\
    print(triangle", "\tif(a+b>c and a+c>b and b+c>a) then\n\t\tlocal s = (a+b+c)/2\n\
    \t\treturn math.floor(math.sqrt(s*(s-a)*(s-b)*(s-c))*100)/100\n\telse\n\t\treturn\
    \ -1\n\tend\nend", "  if(a+b > c and a+c > b and b+c > a) then\n    -- Return\
    \ the area rounded to 2 decimal points:\n    return math.round(0.5 * math.abs(a*(b-c)\
    \ + b*(c-a) + c*(a-b)), 2)\n  else\n    return -1\n  end\nend", "\tif a + b >\
    \ c and a + c > b and b + c > a then\n\t\tlocal p = (a + b + c) / 2\n\t\treturn\
    \ math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n\t\
    else\n\t\treturn -1\n\tend\nend", "\tif a + b > c and a + c > b and b + c > a\
    \ then\n\t\treturn (a + b + c) / 2\n\telse\n\t\treturn -1\n\tend\nend", "    local\
    \ p = (a + b + c) / 2\n    return math.floor(math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c)) * 100 + 0.5) / 100\nend", "\tlocal s = (a + b + c) / 2\n\treturn math.floor(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend", "\tlocal p = (a + b\
    \ + c) / 2\n\treturn (p - a) * (p - b) * (p - c) > 0 and math.sqrt(p * (p - a)\
    \ * (p - b) * (p - c)) or -1\nend", "  local p = (a + b + c) / 2\n  local s =\
    \ math.sqrt(p * (p - a) * (p - b) * (p - c))\n  return s > 0 and string.format(\"\
    %.2f\", s) or -1\nend", "    -- your code here\nend", "  if (a > 0 and b > 0 and\
    \ c > 0) and ((a + b) > c) and ((a + c) > b) and ((b + c) > a) then\n    return\
    \ (1/4) * math.sqrt((a + b + c) * (-a + b + c) * (a - b + c) * (a + b - c))\n\
    \  else\n    return -1\n  end\nend", "    -- Your Code Here\n    if a+b > c and\
    \ a+c > b and b+c > a then\n        return string.format(\"%.2f\", math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4)\n\
    \    else\n        return -1\n    end\nend", "    if a > b + c or b > a + c or\
    \ c > a + b then\n        return -1\n    end\n    local p = (a + b + c) / 2\n\
    \    return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5)\
    \ / 100\nend", "    if (a <= 0 or b <= 0 or c <= 0) then\n        return -1\n\
    \    end\n    if (a + b > c and a + c > b and b + c > a) then\n        return\
    \ string.format(\"%.2f\", a * b / 2)\n    else\n        return -1\n    end\nend",
  "    if a + b > c and a + c > b and b + c > a then\n        return math.floor(0.5\
    \ * (a * (b - c) + b * c))\n    else\n        return -1\n    end\nend", "    local\
    \ p = (a + b + c) / 2\n    return a + b + c > 0 and math.sqrt(p * (p - a) * (p\
    \ - b) * (p - c)) or -1\nend", "\tlocal sides = {a, b, c}\n\ttable.sort(sides)\n\
    \tif sides[1] + sides[2] > sides[3] then\n\t\tlocal p = (a + b + c) / 2\n\t\t\
    return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n\
    \telse\n\t\treturn -1\n\tend\nend", "  -- TODO: your code here\nend", "  -- 1.\
    \ Formulate the problem\n  -- 2. Create examples.\n  -- 3. Create type signature\n\
    \  -- 4. Create a template\n  -- 5. Create the algorithm\n  if a + b > c and a\
    \ + c > b and b + c > a then\n    local p = (a + b + c) / 2\n    return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n  else\n    return -1\n  end\nend", "\tlocal\
    \ s = (a + b + c) / 2\n\treturn math.floor(math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c)) * 100 + 0.5) / 100\nend", "    -- return (3 * a * 3 * b * 3 * c) ^ (1\
    \ / 3)\n    return -1\nend", "    -- check that the sum of any two sides is greater\
    \ than the third side\n    if (a + b > c) and (a + c > b) and (b + c > a) then\n\
    \        -- triangle exists, calculate area\n        local p = (a + b + c) / 2\n\
    \        local area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n        return\
    \ area\n    else\n        -- triangle does not exist\n        return -1\n    end\n\
    end", "  -- Your code here\nend", "    local s = 0.5 * (a + b + c)\n    local\
    \ area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    if area == 0 then return\
    \ -1 end\n    return area\nend", "    if a <= 0 or b <= 0 or c <= 0 then\n   \
    \     return -1\n    end\n    local p = (a + b + c) / 2\n    return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\nend", "  if a + b > c and a + c > b and b +\
    \ c > a then\n    local semiPerimeter = (a + b + c) / 2\n    local area = math.sqrt(semiPerimeter\
    \ * (semiPerimeter - a) * (semiPerimeter - b) * (semiPerimeter - c))\n    return\
    \ math.floor(area * 100 + 0.5) / 100\n  else\n    return -1\n  end\nend", "\t\
    if (a + b > c) and (a + c > b) and (b + c > a) then\n\t\treturn math.floor(math.sqrt((a\
    \ + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) * 100 + 0.5) / 100\n\telse\n\
    \t\treturn -1\n\tend\nend", "    local s = (a + b + c) / 2\n    local area = math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    return area\nend", "    local s = (a + b\
    \ + c) / 2\n    local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return\
    \ (area > 0) and math.floor(area * 100 + 0.5) / 100 or -1\nend", "\t-- calculate\
    \ the semi-perimeter\n\tlocal s = (a + b + c) / 2\n\t-- calculate the area\n\t\
    local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\tif (area > 0) then\n\
    \t\treturn area\n\telse\n\t\treturn -1\n\tend\nend", "\tlocal s = (a + b + c)\
    \ / 2", end, "\tlocal s = (a + b + c) / 2\n\tlocal A = math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c))\n\treturn math.floor(A * 100 + 0.5) / 100\nend", "  local\
    \ s = (a + b + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \  if not (a + b > c and a + c > b and b + c > a) then\n    return -1\n  end\n\
    \  return tonumber(string.format(\"%.2f\", area))\nend", "    if a < b + c and\
    \ b < a + c and c < a + b then\n        local s = (a + b + c) / 2\n        return\
    \ math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n \
    \   else\n        return -1\n    end\nend", "    -- Implementation\nend", "  if\
    \ (a > 0 and b > 0 and c > 0) and ((a + b) > c and (a + c) > b and (b + c) > a)\
    \ then\n    return math.floor(0.5 * a * b * 100) / 100\n  else\n    return -1\n\
    \  end\nend", "\tif (a+b)>c and (a+c)>b and (b+c)>a then\n\t\tp=(a+b+c)/2\n\t\t\
    return math.floor(math.sqrt(p*(p-a)*(p-b)*(p-c))*100)/100\n\telse\n\t\treturn\
    \ -1\n\tend\nend", "    -- Sort the three sides\n    local a, b, c = math.min(a,\
    \ b, c), \n                    math.max(a, b, c), \n                    (a + b\
    \ + c) - math.min(a, b, c) - math.max(a, b, c)\n    -- Form a valid triangle\n\
    \    if (a + b) > c then\n        -- Half perimeter\n        local p = (a + b\
    \ + c) / 2\n        -- Compute the area\n        return math.floor(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n    end\n    return -1\n\
    end", "\tif a + b > c and a + c > b and b + c > a then\n\t\tlocal p = (a + b +\
    \ c) / 2\n\t\treturn math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100\
    \ + 0.5) / 100\n\telse\n\t\treturn -1\n\tend\nend", "  local s = (a + b + c) /\
    \ 2\n  local area = s * (s - a) * (s - b) * (s - c)\n  if area < 0 then\n    return\
    \ -1\n  else\n    return math.sqrt(area)\n  end\nend", "\tlocal p = (a + b + c)\
    \ / 2\n\tlocal area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n\treturn area\n\
    end", "    local s = (a + b + c) / 2\n    local area = math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c))\n    return area\nend", "    if (a + b <= c) or (a + c <=\
    \ b) or (b + c <= a) then\n        return -1\n    end\n    return math.round(0.5\
    \ * (a + b + c) * (p - a) * (p - b) * (p - c)) ^ 0.5, 2\nend", "    if a <= 0\
    \ or b <= 0 or c <= 0 then\n        return -1\n    end\n    if a + b <= c or a\
    \ + c <= b or b + c <= a then\n        return -1\n    end\n    local p = (a +\
    \ b + c) / 2\n    return math.sqrt(p * (p - a) * (p - b) * (p - c))\nend", " \
    \ local sides = {a, b, c}\n  table.sort(sides)\n  if sides[1] + sides[2] > sides[3]\
    \ then\n    local s = (a + b + c) / 2\n    return math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n  end\n  return -1\nend", "  local area = -1\n  -- todo: return\
    \ triangle area or -1\n  return area\nend", end, "  -- your code here\n  if ((a+b)>c)\
    \ and ((a+c)>b) and ((b+c)>a) then\n    return 0.5*a*b\n  else\n    return -1\n\
    \  end\nend", "    local d = (a + b + c) / 2\n    local s = math.sqrt(d * (d -\
    \ a) * (d - b) * (d - c))\n    if a + b <= c or a + c <= b or b + c <= a then\n\
    \        return -1\n    else\n        return math.floor(s * 100 + 0.5) / 100\n\
    \    end\nend", "    local sides = {a, b, c}\n    table.sort(sides)\n    local\
    \ a, b, c = unpack(sides)\n    if c < a + b then\n        local p = (a + b + c)\
    \ / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n    end\n  \
    \  return -1\nend", "    if a + b > c and a + c > b and b + c > a then\n     \
    \   local p = (a + b + c) / 2\n        return math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c))\n    end\n    return -1\nend", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        local p = (a + b + c) / 2\n        return math.floor(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n    else\n        return\
    \ -1\n    end\nend", "  local s = 0.5 * (a + b + c)\n  local A = math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n  if A <= 0 then return -1 end\n  return math.floor(A\
    \ * 100 + 0.5) / 100\nend", "    local s = (a + b + c) / 2\n    return (s - a)\
    \ * (s - b) * (s - c) > 0 and math.sqrt(s * (s - a) * (s - b) * (s - c)) or -1\n\
    end", "    -- Area = sqrt(s * (s - a) * (s - b) * (s - c))\n    -- a, b, c are\
    \ the lengths of the three sides\n    -- s = (a + b + c) / 2\n    --\n    --return\
    \ -1\n    --\n    local s = (a + b + c) / 2\n    local area = math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n    if area < 0 then return -1 end\n    return tonumber(string.format(\"\
    %.2f\", area))\nend", "    if a + b <= c or a + c <= b or b + c <= a then\n  \
    \      return -1\n    end\n    return math.floor(0.5 * (a * (b - c) + b * (c -\
    \ a) + c * (a - b)) * 100 + 0.5) / 100\nend", "\tif (a + b) <= c or (a + c) <=\
    \ b or (b + c) <= a then\n\t\treturn -1\n\tend\n\tlocal s = (a + b + c) / 2\n\t\
    return math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n\
    end", "  local epsilon = 0.001\n  if a < epsilon or b < epsilon or c < epsilon\
    \ then return -1 end\n  if a + b < c or a + c < b or b + c < a then return -1\
    \ end\n  local p = (a + b + c) / 2\n  return math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c))\nend", "  -- your code here\n  return 0\nend", "    local p = (a +\
    \ b + c) / 2.0\n    local area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    if area == 0 or (a + b < c) or (a + c < b) or (b + c < a) then\n        return\
    \ -1\n    end\n    return tonumber(string.format(\"%.2f\", area))\nend", "  if\
    \ a + b > c and a + c > b and b + c > a then\n    return (math.sqrt((a + b + c)\
    \ * (a + b - c) * (a + c - b) * (b + c - a))) / 4\n  else\n    return -1\n  end\n\
    end", "    if (a + b > c) and (a + c > b) and (b + c > a) then\n        s = (a\
    \ + b + c) / 2\n        a = math.sqrt(s * (s - a) * (s - b) * (s - c))\n     \
    \   return a\n    else\n        return -1\n    end\nend", "  local s = (a + b\
    \ + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if (area\
    \ > 0) then\n    return string.format(\"%.2f\", area)\n  else\n    return -1\n\
    \  end\nend", "\tlocal s = (a + b + c) / 2\n\tlocal x = s * (s - a) * (s - b)\
    \ * (s - c)\n\tif x < 0 then\n\t\treturn -1\n\tend\n\treturn math.sqrt(x)\nend",
  "    if a + b > c and a + c > b and b + c > a then\n        local s = (a + b + c)\
    \ / 2\n        return math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) *\
    \ 100 + 0.5) / 100\n    else\n        return -1\n    end\nend", "  local s = (a\
    \ + b + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if\
    \ a + b > c and a + c > b and b + c > a then\n    return math.floor(area * 100\
    \ + 0.5) / 100\n  else\n    return -1\n  end\nend", "  -- Write your implementation\
    \ here\n  return -1\nend", "  local p = (a + b + c) / 2\n  local s = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n  if s == s then return s else return -1 end\n\
    end", "    -- Your code here\nend", "  if (a + b) > c and (a + c) > b and (b +\
    \ c) > a then\n    return math.floor(math.sqrt(((a + b + c) / 2) * (((a + b +\
    \ c) / 2) - a) * (((a + b + c) / 2) - b) * (((a + b + c) / 2) - c)) * 100) / 100\n\
    \  else\n    return -1\n  end\nend", "  --\n  if a+b>c and a+c>b and b+c>a then\n\
    \    local s = (a+b+c)/2\n    return tonumber(string.format(\"%.2f\", math.sqrt(s*(s-a)*(s-b)*(s-c))))\n\
    \  else\n    return -1\n  end\nend", "    if a + b > c and a + c > b and b + c\
    \ > a then\n        return string.format(\"%.2f\", math.sqrt((a + b + c) * (-a\
    \ + b + c) * (a - b + c) * (a + b - c)) / 4)\n    else\n        return -1\n  \
    \  end\nend", "    if a + b > c and a + c > b and b + c > a then\n        return\
    \ math.floor(math.sqrt((a + b + c) * (-a + b + c) * (a - b + c) * (a + b - c))\
    \ * 100) / 100\n    else\n        return -1\n    end\nend", "  if a + b > c and\
    \ a + c > b and b + c > a then\n    return (a + b + c) / 2\n  else\n    return\
    \ -1\n  end\nend", "  -- TODO: implement function here\nend", "\tif a+b>c and\
    \ a+c>b and b+c>a then\n\t\treturn math.floor(0.5*(a+b+c)*0.5*(a+b-c)*0.5*(a-b+c)*(-a+b+c)^(-0.5)*100+0.5)/100\n\
    \telse\n\t\treturn -1\n\tend\nend", "    if (a+b>c) and (a+c>b) and (b+c>a) then\n\
    \        local x = (a+b+c)/2\n        local area = x*(x-a)*(x-b)*(x-c)\n     \
    \   area = area ^ 0.5\n        return area\n    else \n        return -1\n   \
    \ end\nend", "  if a + b > c and a + c > b and b + c > a then\n    return math.floor(0.5\
    \ * (a * (b - c) + b * (c - a) + c * (a - b)) * 100 + 0.5) / 100\n  else\n   \
    \ return -1\n  end\nend", "    if a + b > c and a + c > b and b + c > a then\n\
    \        local s = (a + b + c) / 2\n        return string.format(\"%.2f\", math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)))\n    else\n        return -1\n    end\nend\n\
    print(triangle_area(2, 3, 2)) --> 3.48\nprint(triangle_area(7, 4, 3)) --> -1\n\
    print(triangle_area(8, 4, 5)) --> 12.00\nprint(triangle_area(5, 4, 3)) --> 6.00\n\
    print(triangle_area(3, 4, 5)) --> 6.00\nprint(triangle_area(2, 3, 6)) --> -1\n\
    print(triangle_area(7, 3, 5)) --> 12.00\nprint(triangle_area(4, 5, 9)) --> -1\n\
    print(triangle_area(10, 11, 2)) --> -1\nprint(triangle_area(10, 11, 13)) --> -1\n\
    print(triangle_area(11, 2, 10)) --> -1\nprint(triangle_area(10, 12, 14)) --> 72.62\n\
    print(triangle_area(100, 200, 300)) --> -1\nprint(triangle_area(10, 10, 20)) -->\
    \ -1\nprint(triangle_area(11, 11, 10)) --> -1\nprint(triangle_area(10, 10, 11))\
    \ --> -1\nprint(triangle_area(5, 5, 10)) --> -1\nprint(triangle_area(2, 3, 4))\
    \ --> -1\nprint(triangle_area(4, 3, 2)) --> -1\nprint(triangle_area(2, 4, 3))\
    \ --> -1\nprint(triangle_area(4, 2, 3)) --> -1\nprint(triangle_area(3, 2, 4))\
    \ --> -1\nprint(triangle_area(3, 4, 2)) --> -1\nprint(triangle_area(2, 3, 4))\
    \ --> -1\nprint(triangle_area(3, 4, 2)) -->", "  if a + b <= c or a + c <= b or\
    \ b + c <= a then\n    return -1\n  end\n  local s = (a + b + c) / 2\n  return\
    \ math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend",
  "\tlocal s = 0.5 * (a + b + c)\n\tlocal area = math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c))\n\tif area <= 0 then\n\t\treturn -1\n\tend\n\treturn math.floor(area\
    \ * 100 + 0.5) / 100\nend", "    if a + b <= c or a + c <= b or b + c <= a then\n\
    \        return -1\n    end\n    local p = (a + b + c) / 2\n    return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\nend", "    if a + b > c and a + c > b and b\
    \ + c > a then\n        local s = (a + b + c) / 2\n        return math.floor(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n    else\n        return\
    \ -1\n    end\nend", "  local s = (a + b + c) / 2\n  if (a + b) <= c or (a + c)\
    \ <= b or (b + c) <= a then\n    return -1\n  else\n    return math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n  end\nend", "  local half_perimeter = (a + b + c)\
    \ / 2\n  local area = math.sqrt(half_perimeter * (half_perimeter - a) * (half_perimeter\
    \ - b) * (half_perimeter - c))\n  if area == area then return area end\n  return\
    \ -1\nend\nassert(triangle_area(2, 3, 4) == 2.90)\nassert(triangle_area(2, 2,\
    \ 2) == 1.73)\nassert(triangle_area(3, 1, 2) == -1)\nassert(triangle_area(2, 3,\
    \ 1) == -1)\nassert(triangle_area(5, 5, 2) == -1)\nassert(triangle_area(5, 2,\
    \ 5) == -1)\nassert(triangle_area(2, 5, 5) == -1)", "    local p = (a + b + c)\
    \ / 2\n    local s = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    if (s) >\
    \ 0 then\n        return string.format(\"%.2f\", s)\n    else\n        return\
    \ -1\n    end\nend", "  if a + b <= c or a + c <= b or b + c <= a then\n    return\
    \ -1\n  end\n  local s = (a + b + c) / 2\n  return math.floor(math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend", "  local s = (a + b + c)\
    \ / 2\n  if a + b > c and a + c > b and b + c > a then\n    return math.floor(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n  else\n    return -1\n \
    \ end\nend", "  local ab = a + b;\n  local ac = a + c;\n  local bc = b + c;\n\
    \  if ab > c and ac > b and bc > a then\n    local p = (a + b + c) / 2\n    return\
    \ math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n \
    \ else\n    return -1\n  end\nend", "\tlocal a = tonumber(a)\n\tlocal b = tonumber(b)\n\
    \tlocal c = tonumber(c)\n\tlocal a = math.floor(a*100+0.5)/100\n\tlocal b = math.floor(b*100+0.5)/100\n\
    \tlocal c = math.floor(c*100+0.5)/100\n\tif ((a+b)>c) and ((a+c)>b) and ((b+c)>a)\
    \ then\n\t\t-- Uses Heron's formula to compute the area of a triangle\n\t\tlocal\
    \ s = (a+b+c)/2\n\t\tlocal area = math.sqrt(s*(s-a)*(s-b)*(s-c))\n\t\treturn string.format(\"\
    %.2f\", area)\n\telse\n\t\treturn \"-1\"\n\tend\nend", "  if a + b > c and a +\
    \ c > b and b + c > a then\n    local p = (a + b + c) / 2\n    return math.floor(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n  else\n    return -1\n \
    \ end\nend", "  if a + b > c and a + c > b and b + c > a then\n    local s = (a\
    \ + b + c) / 2\n    return math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c))\
    \ * 100 + 0.5) / 100\n  else\n    return -1\n  end\nend", "  -- insert your code\
    \ here\nend", '  local p = (a + b + c) / 2', "  if a + b > c and a + c > b and\
    \ b + c > a then\n    local s = (a + b + c) / 2\n    return math.floor(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n  else\n    return -1\n \
    \ end\nend", "  if (a + b > c) and (a + c > b) and (b + c > a) then\n    local\
    \ p = (a + b + c) / 2\n    return math.floor(math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c)) * 100 + 0.5) / 100\n  else\n    return -1\n  end\nend", "    -- a,\
    \ b, c are non-negative\n    if a <= 0 or b <= 0 or c <= 0 then return -1 end\n\
    \    -- a+b > c  and b+c > a and c+a > b\n    if a+b <= c or b+c <= a or c+a <=\
    \ b then return -1 end\n    -- now it's a valid triangle\n    -- calculate the\
    \ area\n    local s = (a+b+c)/2\n    return math.sqrt(s*(s-a)*(s-b)*(s-c))\nend",
  "\tlocal perimeter = a + b + c\n\tlocal semiperimeter = perimeter / 2\n\tlocal area\
    \ = math.sqrt(semiperimeter * (semiperimeter - a) * (semiperimeter - b) * (semiperimeter\
    \ - c))\n\tif (area < 0) then\n\t\treturn -1\n\tend\n\treturn math.floor(area\
    \ * 100 + 0.5) / 100\nend", "    --[[ Your code here --]]\nend", "  local s =\
    \ (a + b + c) / 2\n  local area = s * (s - a) * (s - b) * (s - c)\n  if area <\
    \ 0 then\n    return -1\n  else\n    return math.sqrt(area)\n  end\nend\nprint(triangle_area(2,\
    \ 3, 3))  --> 3.48\nprint(triangle_area(2, 3, 4))  --> -1\nprint(triangle_area(5,\
    \ 5, 5))  --> 10.83\nprint(triangle_area(3, 4, 6))  --> -1\nprint(triangle_area(4,\
    \ 10, 4)) --> 8.94\nprint(triangle_area(11, 4, 4)) --> -1\nprint(triangle_area(3,\
    \ 2, 1))  --> -1\nprint(triangle_area(7, 8, 8))  --> 28.27\nprint(triangle_area(1,\
    \ 1, 3))  --> -1\nprint(triangle_area(1, 1, 1))  --> 0.43\nprint(triangle_area(5,\
    \ 6, 5))  --> 12.49\nprint(triangle_area(4, 5, 4))  --> 9.92\nprint(triangle_area(10,\
    \ 6, 7)) --> 27.24\nprint(triangle_area(2, 3, 5))  --> -1\nprint(triangle_area(1,\
    \ 4, 5))  --> -1\nprint(triangle_area(1, 1, 1))  --> 0.43\nprint(triangle_area(2,\
    \ 2, 3))  --> -1\nprint(triangle_area(1, 6, 5))  --> -1\nprint(triangle_area(3,\
    \ 2, 2))  --> -1\nprint(triangle_area(2, 2, 4))  --> -1\nprint(triangle_area(2,\
    \ 3, 4))  --> -1\nprint(triangle_area(2, 2, 2))  --> 1.73\nprint(triangle_area(3,\
    \ 4, 7))  --> -1\nprint(triangle_area(4, 7, 3))  --> -1\nprint(triangle", "  \
    \  -- No negative side\n    if a <= 0 or b <= 0 or c <= 0 then\n        return\
    \ -1\n    end\n    -- Triangle inequality\n    if a + b <= c or a + c <= b or\
    \ b + c <= a then\n        return -1\n    end\n    local p = (a + b + c) / 2\n\
    \    return math.sqrt(p * (p - a) * (p - b) * (p - c))\nend", "    local p = (a\
    \ + b + c) / 2\n    local area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    if area > 0 then\n        return math.floor(area * 100 + 0.5) / 100\n   \
    \ else\n        return -1\n    end\nend", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        return math.floor(0.5 * (a + b + c) * 1000 + 0.5) /\
    \ 1000\n    else\n        return -1\n    end\nend", "\t\n\tlocal A = 0.5 * a *\
    \ b", "  local perimeter = (a + b + c) / 2\n  local area = math.sqrt(perimeter\
    \ * (perimeter - a) * (perimeter - b) * (perimeter - c))\n  return math.floor(area\
    \ * 100 + 0.5) / 100\nend", "    if not (a > 0 and b > 0 and c > 0) then\n   \
    \     return -1\n    end\n    if not ((a + b) > c and (a + c) > b and (b + c)\
    \ > a) then\n        return -1\n    end\n    local s = (a + b + c) / 2\n    return\
    \ math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

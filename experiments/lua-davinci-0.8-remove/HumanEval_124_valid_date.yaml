name: HumanEval_124_valid_date
language: lua
prompt: "-- You have to write a function which validates a given date string and\n\
  -- returns True if the date is valid otherwise False.\n-- The date is valid if all\
  \ of the following rules are satisfied:\n-- 1. The date string is not empty.\n--\
  \ 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  -- 3. The months should not be less than 1 or higher than 12.\n-- 4. The date should\
  \ be in the format: mm-dd-yyyy\nlocal function valid_date(date)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = valid_date\n\
  \    lu.assertEquals(candidate('03-11-2000'), true)\n    lu.assertEquals(candidate('15-01-2012'),\
  \ false)\n    lu.assertEquals(candidate('04-0-2040'), false)\n    lu.assertEquals(candidate('06-04-2020'),\
  \ true)\n    lu.assertEquals(candidate('01-01-2007'), true)\n    lu.assertEquals(candidate('03-32-2011'),\
  \ false)\n    lu.assertEquals(candidate(''), false)\n    lu.assertEquals(candidate('04-31-3000'),\
  \ false)\n    lu.assertEquals(candidate('06-06-2005'), true)\n    lu.assertEquals(candidate('21-31-2000'),\
  \ false)\n    lu.assertEquals(candidate('04-12-2003'), true)\n    lu.assertEquals(candidate('04122003'),\
  \ false)\n    lu.assertEquals(candidate('20030412'), false)\n    lu.assertEquals(candidate('2003-04'),\
  \ false)\n    lu.assertEquals(candidate('2003-04-12'), false)\n    lu.assertEquals(candidate('04-2003'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local m, d, y = date:match(\"(%d+)-(%d+)-(%d+)\")\n  if not m or\
    \ not d or not y then return false end\n  m, d, y = tonumber(m), tonumber(d),\
    \ tonumber(y)\n  if ( m < 1 or m > 12 ) then return false end\n  if ( y < 1 )\
    \ then return false end\n  if ( m == 2 ) then\n    if ( y % 4 == 0 and y % 100\
    \ ~= 0 ) or ( y % 400 == 0 ) then\n      if ( d < 1 or d > 29 ) then return false\
    \ end\n    else\n      if ( d < 1 or d > 28 ) then return false end\n    end\n\
    \  elseif ( m == 4 or m == 6 or m == 9 or m == 11 ) then\n    if ( d < 1 or d\
    \ > 30 ) then return false end\n  else\n    if ( d < 1 or d > 31 ) then return\
    \ false end\n  end\n  return true\nend", "    if #date ~= 10 then\n        return\
    \ false\n    end\n    if not date:match(\"%d%d%-%d%d%-%d%d%d%d\") then\n     \
    \   return false\n    end\n    local mm, dd, yyyy = date:match(\"(%d%d)%-(%d%d)%-(%d%d%d%d)\"\
    )\n    mm, dd, yyyy = tonumber(mm), tonumber(dd), tonumber(yyyy)\n    if not (mm\
    \ and dd and yyyy) then\n        return false\n    end\n    if not (1 <= mm and\
    \ mm <= 12) then\n        return false\n    end\n    if mm == 2 then\n       \
    \ if yyyy % 4 == 0 then\n            if not (1 <= dd and dd <= 29) then\n    \
    \            return false\n            end\n        else\n            if not (1\
    \ <= dd and dd <= 28) then\n                return false\n            end\n  \
    \      end\n    elseif mm % 2 == 1 then\n        if not (1 <= dd and dd <= 31)\
    \ then\n            return false\n        end\n    else\n        if not (1 <=\
    \ dd and dd <= 30) then\n            return false\n        end\n    end\n    return\
    \ true\nend", "  if not date or date == \"\" then return false end\n  local year,\
    \ month, day = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n  year, month, day =\
    \ tonumber(year), tonumber(month), tonumber(day)\n  if not year or not month or\
    \ not day then return false end\n  if month < 1 or month > 12 then return false\
    \ end\n  if day < 1 or day > 31 then return false end\n  if month == 2 then return\
    \ day <= 29 end\n  if month % 2 == 0 then return day <= 30 end\n  return true\n\
    end", "  local year, month, day = string.match(date, \"(%d%d%d%d)%-(%d%d)%-(%d%d)\"\
    )\n  if not (year and month and day) then return false end\n  year, month, day\
    \ = tonumber(year), tonumber(month), tonumber(day)\n  if month < 1 or month >\
    \ 12 then return false end\n  if day < 1 or day > 31 then return false end\n \
    \ if month == 2 and day > 29 then return false end\n  if (month == 4 or month\
    \ == 6 or month == 9 or month == 11) and day > 30 then return false end\n  return\
    \ true\nend\nassert(valid_date(\"2018-01-11\") == true)\nassert(valid_date(\"\
    2018-01-00\") == false)\nassert(valid_date(\"2018-01-32\") == false)\nassert(valid_date(\"\
    2018-01-40\") == false)\nassert(valid_date(\"2017-02-29\") == true)\nassert(valid_date(\"\
    2016-02-29\") == false)\nassert(valid_date(\"2017-02-30\") == false)\nassert(valid_date(\"\
    2017-11-31\") == true)\nassert(valid_date(\"2017-06-31\") == false)\nassert(valid_date(\"\
    2017-04-31\") == false)\nassert(valid_date(\"2018-01-1\") == false)\nassert(valid_date(\"\
    2018-01-\") == false)\nassert(valid_date(\"2018-01\") == false)\nassert(valid_date(\"\
    2018-1-1\") == false)\nassert(valid_date(\"2018-1-\") == false)\nassert(valid_date(\"\
    2018-1\") == false)\nassert(valid_date(\"2018-\") == false)\nassert(valid_date(\"\
    2018\") == false)\nassert(valid_date(\"201-01-01\") == false)\nassert(valid_date(\"\
    201-1-01\") == false)\nassert(valid_date(\"201-1-1\") == false)\nassert(valid_date(\"\
    201-01-1\") == false)\nassert(valid_date(\"201-01-\") == false)\nassert(valid",
  "  if type(date) ~= \"string\" then return false end\n  if #date < 10 then return\
    \ false end\n  local separator = date:sub(3,3)\n  if separator ~= '-' then return\
    \ false end\n  local month, day, year = date:match(\"(%d+)-(%d+)-(%d+)\")\n  if\
    \ not (month and day and year) then return false end\n  if #month ~= 2 or #day\
    \ ~= 2 or #year ~= 4 then return false end\n  month, day, year = tonumber(month),\
    \ tonumber(day), tonumber(year)\n  if month < 1 or month > 12 then return false\
    \ end\n  if month == 2 then\n    if day < 1 or day > 29 then return false end\n\
    \  elseif month == 4 or month == 6 or month == 9 or month == 11 then\n    if day\
    \ < 1 or day > 30 then return false end\n  else\n    if day < 1 or day > 31 then\
    \ return false end\n  end\n  return true\nend", "  local m, d, y = date:match\
    \ \"(%d%d)-(%d%d)-(%d%d%d%d)\"\n  if m and d and y then\n    if tonumber(m) >=\
    \ 1 and tonumber(m) <= 12 and\n       tonumber(d) >= 1 and\n       tonumber(y)\
    \ >= 1 and tonumber(y) <= 9999 then\n      if (tonumber(m) == 1 or tonumber(m)\
    \ == 3 or tonumber(m) == 5 or tonumber(m) == 7 or tonumber(m) == 8 or tonumber(m)\
    \ == 10 or tonumber(m) == 12) and\n         tonumber(d) <= 31 then\n        return\
    \ true\n      elseif (tonumber(m) == 4 or tonumber(m) == 6 or tonumber(m) == 9\
    \ or tonumber(m) == 11) and\n         tonumber(d) <= 30 then\n        return true\n\
    \      elseif tonumber(m) == 2 and\n         tonumber(d) <= 29 then\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "    -- write your code\
    \ here\nend", "  if date == \"\" then return false end\n  local date_table = date:split(\"\
    -\")\n  if #date_table ~= 3 then return false end\n  local month, day, year =\
    \ tonumber(date_table[1]), tonumber(date_table[2]), tonumber(date_table[3])\n\
    \  if month < 1 or month > 12 then return false end\n  if (month == 1 or month\
    \ == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12)\
    \ and (day < 1 or day > 31) then return false end\n  if (month == 4 or month ==\
    \ 6 or month == 9 or month == 11) and (day < 1 or day > 30) then return false\
    \ end\n  if month == 2 and (day < 1 or day > 29) then return false end\n  return\
    \ true\nend", "  local m, d, y = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n \
    \ return m and d and y and m <= 12 and d <= (m % 2 == 1 and 31 or m == 2 and y\
    \ % 4 == 0 and 29 or 28) and d <= (m % 2 == 0 and 30 or 31)\nend", "  local month\
    \ = date:match('(%d+)-%d+-%d+')\n  local days = date:match('%d+-(%d+)-%d+')\n\
    \  local year = date:match('%d+-%d+-(%d+)')\n  local daysInMonths = {31, 28, 31,\
    \ 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  if #date < 8 then return false end\n\
    \  if tonumber(month) > 12 or tonumber(month) < 1 then return false end\n  if\
    \ tonumber(days) > daysInMonths[tonumber(month)] or tonumber(days) < 1 then return\
    \ false end\n  if tonumber(month) == 2 and tonumber(days) == 29 then\n    if year\
    \ % 4 == 0 then\n      if year % 100 == 0 then\n        if year % 400 == 0 then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    else\n        return true\n      end\n    else\n      return false\n    end\n\
    \  end\n  return true\nend", "  local month, day, year = date:match(\"^(%d%d)-(%d%d)-(%d%d%d%d)$\"\
    )\n  month, day, year = tonumber(month), tonumber(day), tonumber(year)\n  local\
    \ max_day = 31\n  if month == 2 then\n    max_day = 28\n  elseif month < 8 and\
    \ month % 2 == 0 or month > 7 and month % 2 == 1 then\n    max_day = 30\n  end\n\
    \  return not not (month and day and year and month > 0 and month < 13 and day\
    \ > 0 and day <= max_day)\nend", "    -- your code here\n    local month, day,\
    \ year = date:match('(%d+)-(%d+)-(%d+)')\n    if not (month and day and year)\
    \ then\n        return false\n    end\n    local mm, dd, yyyy = tonumber(month),\
    \ tonumber(day), tonumber(year)\n    local monthDays = { 31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31 }\n    if ((yyyy % 4 == 0 and yyyy % 100 ~= 0) or yyyy\
    \ % 400 == 0) then\n        monthDays[2] = 29\n    end\n    if (mm < 1 or mm >\
    \ 12) then\n        return false\n    end\n    if (dd < 1 or dd > monthDays[mm])\
    \ then\n        return false\n    end\n    return true\nend", "  local pattern\
    \ = \"(%d+)-(%d+)-(%d+)\"\n  local day, month, year = date:match(pattern)\n  local\
    \ months = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  if not year or\
    \ not month or not day then return false end\n  day = tonumber(day)\n  month =\
    \ tonumber(month)\n  year = tonumber(year)\n  if year < 0 then return false end\n\
    \  if month < 1 or month > 12 then return false end\n  if day < 1 or day > months[month]\
    \ then return false end\n  if month == 2 and day == 29 then\n    if not (year\
    \ % 4 == 0 and (year % 100 ~= 0 or year % 400 == 0)) then\n      return false\n\
    \    end\n  end\n  return true\nend", "  if string.match(date, \"^%d%d%-%d%d%-%d%d%d%d$\"\
    ) then\n    local m, d, y = date:match(\"^(%d%d)%-(%d%d)%-(%d%d%d%d)$\")\n   \
    \ return tonumber(m) >= 1 and tonumber(m) <= 12 and tonumber(d) >= 1 and (\n \
    \       (tonumber(m) >= 1 and tonumber(m) <= 7 and tonumber(m) % 2 == 1) or\n\
    \            (tonumber(m) >= 8 and tonumber(m) <= 12 and tonumber(m) % 2 == 0)\n\
    \      ) and tonumber(d) <= 31 or\n        (tonumber(m) >= 1 and tonumber(m) <=\
    \ 7 and tonumber(m) % 2 == 0) or\n        (tonumber(m) >= 8 and tonumber(m) <=\
    \ 12 and tonumber(m) % 2 == 1) and\n        tonumber(d) <= 30 or\n        tonumber(m)\
    \ == 2 and tonumber(d) <= 29\n  end\n  return false\nend", "  local m, d, y =\
    \ date:match(\"(%d+)-(%d+)-(%d+)\")\n  return #date > 0 and m and d and y and\n\
    \    1 <= tonumber(m) and tonumber(m) <= 12 and\n    ((tonumber(m) <= 7 and tonumber(m)\
    \ % 2 == 1) or (tonumber(m) >= 8 and tonumber(m) % 2 == 0)) and\n    1 <= tonumber(d)\
    \ and tonumber(d) <= 31 or\n    (tonumber(m) == 2 and 1 <= tonumber(d) and tonumber(d)\
    \ <= 29) or\n    (tonumber(m) == 4 or tonumber(m) == 6 or tonumber(m) == 9 or\
    \ tonumber(m) == 11) and 1 <= tonumber(d) and tonumber(d) <= 30\nend", "\tlocal\
    \ month, day, year = date:match(\"^(%d+)-(%d+)-(%d+)$\")\n\tif not month or not\
    \ day or not year then return false end\n\tmonth, day, year = tonumber(month),\
    \ tonumber(day), tonumber(year)\n\tif month < 1 or month > 12 then return false\
    \ end\n\tif year < 1 then return false end\n\tif month == 2 then\n\t\tif ((year\
    \ % 4 == 0) and (year % 100 ~= 0)) or (year % 400 == 0) then\n\t\t\tif day < 1\
    \ or day > 29 then return false end\n\t\telse\n\t\t\tif day < 1 or day > 28 then\
    \ return false end\n\t\tend\n\telseif month == 4 or month == 6 or month == 9 or\
    \ month == 11 then\n\t\tif day < 1 or day > 30 then return false end\n\telse\n\
    \t\tif day < 1 or day > 31 then return false end\n\tend\n\treturn true\nend",
  "    return date:match('^(%d%d)%-(%d%d)%-(%d%d%d%d)$') and\n           tonumber(date:match('^(%d%d)%-(%d%d)%-(%d%d%d%d)$'))\
    \ <= 31 and\n           tonumber(date:match('^(%d%d)%-(%d%d)%-(%d%d%d%d)$')) <=\
    \ 12\nend", "  local patterns = {\n    {'^(%d+)-(%d+)-(%d+)$', true},\n    {'^(%d+)[\\\
    \\-\\\\/](%d+)[\\\\-\\\\/](%d+)$', true},\n    {'^(%d+).(%d+).(%d+)$', true},\n\
    \    {'^(%d+) (%d+) (%d+)$', true},\n    {'^(%d+) (%d+)-(%d+)$', true},\n    {'^(%d+)\\\
    \\/(%d+)\\\\/(%d+)$', true},\n    {'^(%d+)[\\\\-\\\\/](%d+)[\\\\-\\\\/](%d+)$',\
    \ true},\n    {'^(%d+)[\\\\-\\\\/](%d+)[\\\\-\\\\/](%d+) (%d+):(%d+):(%d+)$',\
    \ true},\n    {'^(%d+)[\\\\-\\\\/](%d+)[\\\\-\\\\/](%d+) (%d+):(%d+)$', true},\n\
    \    {'^(%d+) (%d+) (%d+) (%d+):(%d+):(%d+)$', true},\n    {'^(%d+) (%d+) (%d+)\
    \ (%d+):(%d+)$', true},\n    {'^(%d+) (%d+) (%d+) (%d+) (%d+) (%d+)$', true},\n\
    \    {'^(%d+) (%d+) (%d+) (%d+) (%d+) (%d+) (%d+)$', true},\n    {'^(%d+) (%d+)\
    \ (%d+) (%d+) (%d+) (%d+) (%d+) (%d+)$', true},\n    {'^(%d+) (%d+) (%d+) (%d+)\
    \ (%d+) (%d+) (%d+) (%d+) (%d+)$', true},\n    {'^(%d+) (%d+) (%d+) (%d+) (%d+)\
    \ (%d+) (%d+) (%d+) (%d+) (%d+)$', true},\n    {'^(%d+) (%d+) (%d+) (%d+) (%d+)\
    \ (%d", "  -- Start coding here\n  local _,_,month,day,year = string.find(date,\"\
    (%d%d)-(%d%d)-(%d%d%d%d)\")\n  if month == nil or day == nil or year == nil then\n\
    \    return false\n  end\n  local r = (month >= 1 and month <= 12) and ((day >=\
    \ 1 and day <= 31) or ((month == 4 or month == 6 or month == 9 or month == 11)\
    \ and day >= 1 and day <= 30) or (month == 2 and day >= 1 and day <= 29))\n  return\
    \ r\nend", "  --  [[\n  --  Your code here.\n  --  Remember that the month and\
    \ day can be single digit, therefore there is an optional digit\n  --  ]]\n  return\
    \ string.match(date, \"%d?%d%-%d?%d%-%d%d%d%d\") and tonumber(string.match(date,\
    \ \"%d?%d\")) <= 12 and tonumber(string.match(date, \"%d?%d$\")) > 0 and tonumber(string.match(date,\
    \ \"%d?%d$\")) <= 30\nend", "  local month, day, year = string.match(date, \"\
    (%d+)-(%d+)-(%d+)\")\n  if not month or not day or not year then return false\
    \ end\n  if #month ~= 2 or #day ~= 2 or #year ~= 4 then return false end\n  if\
    \ tonumber(year) < 2000 or tonumber(year) > 2020 then return false end\n  local\
    \ mday = (month == \"02\" and day > 29) or (month == \"04\" and day > 30) or (month\
    \ == \"06\" and day > 30) or (month == \"09\" and day > 30) or (month == \"11\"\
    \ and day > 30) or (month == \"01\" and day > 31) or (month == \"03\" and day\
    \ > 31) or (month == \"05\" and day > 31) or (month == \"07\" and day > 31) or\
    \ (month == \"08\" and day > 31) or (month == \"10\" and day > 31) or (month ==\
    \ \"12\" and day > 31)\n  if mday then return false end\n  if not tonumber(month)\
    \ or not tonumber(day) or not tonumber(year) then return false end\n  if tonumber(month)\
    \ < 1 or tonumber(month) > 12 then return false end\n  if tonumber(day) < 1 or\
    \ tonumber(day) > 31 then return false end\n  return true\nend", "    if date\
    \ == \"\" then\n        return false\n    end\n    local y, m, d = date:match(\"\
    (%d%d%d%d)%-(%d%d)%-(%d%d)\")\n    if not y then\n        return false\n    end\n\
    \    local n = tonumber(y)\n    if n < 0 or n > 9999 then\n        return false\n\
    \    end\n    n = tonumber(m)\n    if n < 1 or n > 12 then\n        return false\n\
    \    end\n    n = tonumber(d)\n    if (n < 1 or n > 31) and (n < 1 or n > 30)\
    \ and (n < 1 or n > 29) then\n        return false\n    end\n    return true\n\
    end", "   -- validate date\n   -- example date: 12-31-2015\n   local date = date:gsub(\"\
    %s+\", \"\") -- remove white spaces\n   if #date == 0 then return false end\n\
    \   -- read day and month\n   local mm, dd, yyyy = date:match(\"(%d+)-(%d+)-(%d+)\"\
    )\n   if not mm or not dd or not yyyy then return false end\n   mm, dd, yyyy =\
    \ tonumber(mm), tonumber(dd), tonumber(yyyy)\n   if not mm or not dd or not yyyy\
    \ then return false end\n   -- check day\n   if (mm == 1 or mm == 3 or mm == 5\
    \ or mm == 7 or mm == 8 or mm == 10 or mm == 12) and (dd < 1 or dd > 31) then\
    \ return false end\n   if (mm == 4 or mm == 6 or mm == 9 or mm == 11) and (dd\
    \ < 1 or dd > 30) then return false end\n   if mm == 2 and (dd < 1 or dd > 29)\
    \ then return false end\n   -- check month\n   if mm < 1 or mm > 12 then return\
    \ false end\n   -- check year\n   if yyyy < 0 then return false end\n   return\
    \ true\nend", "    -- check if date is empty\n    if date == nil or date == \"\
    \" then\n        return false\n    end", "\tlocal mon_days = {31,29,31,30,31,30,31,31,30,31,30,31}\n\
    \t--[[\n\t\t1. The date string is not empty.\n\t]]\n\tif date == nil or #date\
    \ == 0 then\n\t\treturn false\n\tend\n\t--[[\n\t\t4. The date should be in the\
    \ format: mm-dd-yyyy\n\t]]\n\tlocal y,m,d = string.match(date, '(%d%d%d%d)%-(%d%d)%-(%d%d)')\n\
    \tif not y or not m or not d then\n\t\treturn false\n\tend\n\t--[[\n\t\t3. The\
    \ months should not be less than 1 or higher than 12.\n\t]]\n\tm = tonumber(m)\n\
    \tif m < 1 or m > 12 then\n\t\treturn false\n\tend\n\t--[[\n\t\t2. The number\
    \ of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\n\
    \t\tAnd the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11.\n\t\tAnd, the number of days is not less than 1 or higher than 29\
    \ for the month 2.\n\t]]\n\td = tonumber(d)\n\tif d < 1 or d > mon_days[m] then\n\
    \t\treturn false\n\tend\n\t--[[\n\t\tIf the year is divisible by 4,\n\t\tthen\
    \ February has 29 days.\n\t\tElse, February has 28 days.\n\t]]\n\tif m == 2 then\n\
    \t\tif tonumber(y) % 4 == 0 then\n\t\t\tif d > 29 then\n\t\t\t\treturn false\n\
    \t\t\tend\n\t\telse\n\t\t\tif d > 28 then\n\t\t\t\treturn false\n\t\t\tend\n\t\
    \tend\n\tend\n\treturn true\nend", "    -- your code here\nend", "    -- write\
    \ your code here\n    local day, month, year = date:match('^(%d%d)%-(%d%d)%-(%d%d%d%d)$')\n\
    \    if day == nil or month == nil or year == nil then\n        return false\n\
    \    end\n    if tonumber(day) < 1 or tonumber(day) > 31 then\n        return\
    \ false\n    end\n    if tonumber(month) < 1 or tonumber(month) > 12 then\n  \
    \      return false\n    end\n    return true\nend", "  if date==nil or date==\"\
    \" then return false end\n  local s = date:split(\"-\")\n  if #s ~= 3 then return\
    \ false end\n  local mm,dd,yyyy = s[1],s[2],s[3]\n  if dd==nil or yyyy==nil then\
    \ return false end\n  dd = tonumber(dd)\n  yyyy = tonumber(yyyy)\n  if dd<1 or\
    \ dd>31 or yyyy<1 then return false end\n  if mm==\"2\" then\n    if dd>29 then\
    \ return false end\n  elseif mm==\"4\" or mm==\"6\" or mm==\"9\" or mm==\"11\"\
    \ then\n    if dd>30 then return false end\n  end\n  return true\nend", "    --\
    \ If the date string is not empty, the length of the string is equal to 10 and\
    \ the date is in the format: mm-dd-yyyy, then the date is valid. Otherwise, the\
    \ date is invalid.\n    if date ~= '' and string.len(date) == 10 and string.match(date,\
    \ '^%d%d%-%d%d%-%d%d%d%d$') then\n        -- Calculate the number of days in each\
    \ month of the year\n        -- January: 31\n        if string.match(date, '^01%-%d%d%-%d%d%d%d$')\
    \ then\n            return true\n        -- February: 29 if the year is leap year\
    \ and 28 otherwise\n        elseif string.match(date, '^02%-%d%d%-%d%d%d%d$')\
    \ then\n            local year = string.sub(date, 7, 10)\n            -- If the\
    \ year is leap year, the number of days in February is 29\n            if year\
    \ % 4 == 0 and year % 100 ~= 0 or year % 400 == 0 then\n                return\
    \ true\n            -- If the year is not leap year, the number of days in February\
    \ is 28\n            else\n                return false\n            end\n   \
    \     -- March: 31\n        elseif string.match(date, '^03%-%d%d%-%d%d%d%d$')\
    \ then\n            return true\n        -- April: 30\n        elseif string.match(date,\
    \ '^04%-%d%d%-%d%d%d%d$') then\n            return true\n        -- May: 31\n\
    \        elseif string.match(date, '^05%-%d%d%-%d%d%d%d$') then\n            return\
    \ true\n        -- June: 30\n        elseif string.match(date, '^06%-%d%d%-%d%d%d%d$')\
    \ then\n            return true\n        -- July: 31\n        elseif string.match(date,\
    \ '^07%-%d%d%-%d%d%d%d$') then\n            return true\n        -- August: 31\n\
    \        elseif string.match(date, '^08%-%d%d%-%d%d%d", "    local day, month,\
    \ year = date:match('(%d%d)-(%d%d)-(%d%d%d%d)')\n    if not (day and month and\
    \ year) then return false end\n    local days = {31, 28, 31, 30, 31, 30, 31, 31,\
    \ 30, 31, 30, 31}\n    if year % 4 == 0 then days[2] = 29 end\n    return day\
    \ >= 1 and day <= days[month] and month >= 1 and month <= 12\nend", "  if type(date)\
    \ ~= \"string\" then return false end\n  local m, d, y = date:match(\"(%d+)-(%d+)-(%d+)\"\
    )\n  m, d, y = tonumber(m), tonumber(d), tonumber(y)\n  local days_in_month =\
    \ {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  if m < 1 or m > 12 then\
    \ return false end\n  if (m == 2 and d > 29) or (m ~= 2 and d > days_in_month[m])\
    \ then return false end\n  return true\nend", "  -- date format: MM-DD-YYYY\n\
    \  local date_format = \"(%d%d)-(%d%d)-(%d%d%d%d)\"\n  local month, day, year\
    \ = date:match(date_format)\n  local feb_days = 28\n  if (year % 4 == 0 and year\
    \ % 100 ~= 0) or year % 400 == 0 then\n    feb_days = 29\n  end\n  if month and\
    \ day and year then\n    if not (month >= 1 and month <= 12) then\n      return\
    \ false\n    end\n    if month == 2 and not (day >= 1 and day <= feb_days) then\n\
    \      return false\n    end\n    if month ~= 2 and not (day >= 1 and day <= 31)\
    \ then\n      return false\n    end\n    if month ~= 2 and day == 31 and not (month\
    \ == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10\
    \ or month == 12) then\n      return false\n    end\n    return true\n  end\n\
    \  return false\nend", "    local year, month, day = string.match(date, \"(%d+)-(%d+)-(%d+)\"\
    )\n    if not year or not month or not day then\n        return false\n    end\n\
    \    year, month, day = tonumber(year), tonumber(month), tonumber(day)\n    if\
    \ year < 2000 or year > 2999 then\n        return false\n    end\n    if month\
    \ < 1 or month > 12 then\n        return false\n    end\n    if day < 1 or day\
    \ > 31 then\n        return false\n    end\n    if month == 2 then\n        if\
    \ day > 29 then\n            return false\n        end\n    elseif month == 4\
    \ or month == 6 or month == 9 or month == 11 then\n        if day > 30 then\n\
    \            return false\n        end\n    end\n    return true\nend", "    --\
    \ write your code here\nend", "    local date = date:match(\"(%d+)%-(%d+)%-(%d+)\"\
    )\n    if not date then return false end\n    local m, d, y = date:match(\"(%d+)%-(%d+)%-(%d+)\"\
    )\n    if tonumber(m) < 1 or tonumber(m) > 12 then return false end\n    if tonumber(m)\
    \ == 2 then\n        if tonumber(d) < 1 or tonumber(d) > 29 then return false\
    \ end\n    elseif tonumber(m) % 2 == 0 then\n        if tonumber(d) < 1 or tonumber(d)\
    \ > 30 then return false end\n    else\n        if tonumber(d) < 1 or tonumber(d)\
    \ > 31 then return false end\n    end\n    return true\nend", "  local days =\
    \ {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  local m, d, y = date:match\
    \ '(%d%d)%-(%d%d)%-(%d%d%d%d)'\n  if m and d and y then\n    if tonumber(m) <\
    \ 1 or tonumber(m) > 12 then return false end\n    local mm = tonumber(m)\n  \
    \  if (mm == 2 and tonumber(d) > 29) or\n       (mm == 4 and tonumber(d) > 30)\
    \ or\n       (mm == 6 and tonumber(d) > 30) or\n       (mm == 9 and tonumber(d)\
    \ > 30) or\n       (mm == 11 and tonumber(d) > 30) or\n       (mm == 1 and tonumber(d)\
    \ > 31) or\n       (mm == 3 and tonumber(d) > 31) or\n       (mm == 5 and tonumber(d)\
    \ > 31) or\n       (mm == 7 and tonumber(d) > 31) or\n       (mm == 8 and tonumber(d)\
    \ > 31) or\n       (mm == 10 and tonumber(d) > 31) or\n       (mm == 12 and tonumber(d)\
    \ > 31) or\n       (tonumber(d) < 1) then return false end\n    return true\n\
    \  end\n  return false\nend", "    if not date then return false end\n    local\
    \ month, day, year = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n    if not (month\
    \ and day and year) then return false end\n    if tonumber(month) > 12 or tonumber(month)\
    \ < 1 then return false end\n    if tonumber(day) > 31 or tonumber(day) < 1 then\
    \ return false end\n    if tonumber(month) == 2 and tonumber(day) > 29 then return\
    \ false end\n    if (tonumber(month) == 4 or tonumber(month) == 6 or tonumber(month)\
    \ == 9 or tonumber(month) == 11) and tonumber(day) > 30 then return false end\n\
    \    return true\nend", "    local m1 = tonumber(date:sub(1,2))\n    local d1\
    \ = tonumber(date:sub(4,5))\n    local y1 = tonumber(date:sub(7,10))\n    local\
    \ d = os.date(\"*t\", os.time{year=y1, month=m1, day=d1})\n    return d.year ==\
    \ y1 and d.month == m1 and d.day == d1\nend", "    local MONTH_DAYS = { 31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }\n    if #date == 0 then return false\
    \ end\n    local month, day, year = date:match(\"(%d%d)-(%d%d)-(%d%d%d%d)\")\n\
    \    if not month or not day or not year then return false end\n    month, day,\
    \ year = tonumber(month), tonumber(day), tonumber(year)\n    if month < 1 or month\
    \ > 12 then return false end\n    if day < 1 or day > MONTH_DAYS[month] then return\
    \ false end\n    if month == 2 and day == 29 and not is_leap_year(year) then return\
    \ false end\n    return true\nend", "    local m, d, y = date:match('(%d%d)%-(%d%d)%-(%d%d%d%d)')\n\
    \    if not (m and d and y) then return false end\n    m, d, y = tonumber(m),\
    \ tonumber(d), tonumber(y)\n    if m < 1 or m > 12 then return false end\n   \
    \ if m == 2 then\n        if y % 4 == 0 and (y % 100 ~= 0 or y % 400 == 0) then\n\
    \            if d < 1 or d > 29 then return false end\n        else\n        \
    \    if d < 1 or d > 28 then return false end\n        end\n    elseif m == 4\
    \ or m == 6 or m == 9 or m == 11 then\n        if d < 1 or d > 30 then return\
    \ false end\n    else\n        if d < 1 or d > 31 then return false end\n    end\n\
    \    return true\nend", "  if not date or #date == 0 then return false end\n \
    \ local month, day, year = date:match(\"(%d+)-(%d+)-(%d+)\")\n  month, day, year\
    \ = tonumber(month), tonumber(day), tonumber(year)\n  if not month or not day\
    \ or not year then return false end\n  if day > 0 and day <= 31 and month > 0\
    \ and month <= 12 and\n     (month == 1 or month == 3 or month == 5 or month ==\
    \ 7 or month == 8 or month == 10 or month == 12) then\n    return true\n  elseif\
    \ day > 0 and day <= 30 and month > 0 and month <= 12 and\n     (month == 4 or\
    \ month == 6 or month == 9 or month == 11) then\n    return true\n  elseif day\
    \ > 0 and day <= 29 and month > 0 and month <= 12 and month == 2 then\n    return\
    \ true\n  else\n    return false\n  end\nend", "  if not date or #date == 0 then\
    \ return false end\n  local day, month, year = date:match('(%d+)-(%d+)-(%d+)')\n\
    \  return day and month and year and check_days(day, month) and check_month(month)\
    \ and check_year(year)\nend", "    -- write your code here\n    -- months 1,3,5,7,8,10,12\n\
    \    -- months 4,6,9,11\n    -- month 2", "    if date == nil or date == \"\"\
    \ then\n        return false\n    end\n    local _,_,d,m,y = string.find(date,\
    \ \"(%d+)-(%d+)-(%d+)\")\n    if not d or not m or not y then\n        return\
    \ false\n    end\n    d = tonumber(d)\n    m = tonumber(m)\n    y = tonumber(y)\n\
    \    if m < 1 or m > 12 then\n        return false\n    end\n    if (m == 1 or\
    \ m == 3 or m == 5 or m == 7 or m == 8 or m == 10 or m == 12) and (d < 1 or d\
    \ > 31) then\n        return false\n    end\n    if (m == 4 or m == 6 or m ==\
    \ 9 or m == 11) and (d < 1 or d > 30) then\n        return false\n    end\n  \
    \  if m == 2 and (d < 1 or d > 29) then\n        return false\n    end\n    return\
    \ true\nend", "  --your code here\n  local test1 = date:find(\"%d%d%-%d%d%-%d%d%d%d\"\
    )\n  local test2 = date:find(\"%d%d%-%d%-%d%d%d%d\")\n  local test3 = date:find(\"\
    %d%-%d%d%-%d%d%d%d\")\n  local test4 = date:find(\"%d%-%d%-%d%d%d%d\")\n  local\
    \ test5 = date:find(\"%d%d%-%d%d%d%d\")\n  local test6 = date:find(\"%d%d%-%d%-%d%d%d\"\
    )\n  local test7 = date:find(\"%d%-%d%d%-%d%d%d\")\n  local test8 = date:find(\"\
    %d%-%d%-%d%d%d\")\n  local test9 = date:find(\"%d%d%-%d%d%-%d%d\")\n  local test10\
    \ = date:find(\"%d%d%-%d%-%d%d\")\n  local test11 = date:find(\"%d%-%d%d%-%d%d\"\
    )\n  local test12 = date:find(\"%d%-%d%-%d%d\")\n  local test13 = date:find(\"\
    %d%d%-%d%d%d%d\")\n  local test14 = date:find(\"%d%d%-%d%-%d%d\")\n  local test15\
    \ = date:find(\"%d%-%d%d%-%d%d\")\n  local test16 = date:find(\"%d%-%d%-%d%d\"\
    )\n  local test17 = date:find(\"%d%d%-%d%d%-%d%d\")\n  local test18 = date:find(\"\
    %d%d%-%d%-%d%d\")\n  local test19 = date:find(\"%d%-%d%d%-%d%d\")\n  local test20\
    \ = date:find(\"%d%-%d%-%d%d\")\n  local test21 = date:find(\"%d%d%-%d%d%-%d%d\"\
    )\n", "    local m, d, y = date:match('(%d+)-(%d+)-(%d+)')\n    local months_30\
    \ = {4, 6, 9, 11}\n    if m and d and y then\n        m, d, y = tonumber(m), tonumber(d),\
    \ tonumber(y)\n        if (m >= 1 and m <= 12) and (d >= 1 and d <= 31) and (y\
    \ >= 0) then\n            if m == 2 then\n                return d >= 1 and d\
    \ <= 28\n            elseif utils.table.includes(months_30, m) then\n        \
    \        return d >= 1 and d <= 30\n            else\n                return true\n\
    \            end\n        end\n    end\n    return false\nend", "  return {days\
    \ = days, month = month, year = year}\nend", "    -- YOUR CODE HERE\nend", " \
    \ return date and date:match \"%d%d%-%d%d%-%d%d%d%d\"\nend", "  local months =\
    \ { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }\n  local year, month, day\
    \ = date:match('(%d%d%d%d)%-(%d%d)%-(%d%d)')\n  year, month, day = tonumber(year),\
    \ tonumber(month), tonumber(day)\n  if not year or not month or not day then return\
    \ false end\n  if year % 4 == 0 and (year % 100 ~= 0 or year % 400 == 0) then\
    \ months[2] = 29 end\n  if month < 1 or month > 12 then return false end\n  if\
    \ day < 1 or day > months[month] then return false end\n  return true\nend", " \
    \ local m, d, y = date:match(\"(%d+)-(%d+)-(%d+)\")\n  if not m or not d or not\
    \ y then return false end\n  m, d, y = tonumber(m), tonumber(d), tonumber(y)\n\
    \  if m < 1 or m > 12 then return false end\n  if m == 2 then\n    if y % 4 ==\
    \ 0 and y % 100 ~= 0 or y % 400 == 0 then\n      if d < 1 or d > 29 then return\
    \ false end\n    else\n      if d < 1 or d > 28 then return false end\n    end\n\
    \  elseif m == 4 or m == 6 or m == 9 or m == 11 then\n    if d < 1 or d > 30 then\
    \ return false end\n  else\n    if d < 1 or d > 31 then return false end\n  end\n\
    \  return true\nend", "\tlocal _, _, day, month, year = string.find(date, \"(%d+)-(%d+)-(%d+)\"\
    )\n\tday = tonumber(day)\n\tmonth = tonumber(month)\n\tyear = tonumber(year)\n\
    \tif day < 1 or month < 1 or year < 1 then\n\t\treturn false\n\tend\n\tif day\
    \ > 31 then\n\t\treturn false\n\tend\n\tif month == 2 then\n\t\tif not is_leap_year(year)\
    \ and day > 28 then\n\t\t\treturn false\n\t\tend\n\t\tif is_leap_year(year) and\
    \ day > 29 then\n\t\t\treturn false\n\t\tend\n\tend\n\tif month > 12 then\n\t\t\
    return false\n\tend\n\treturn true\nend", "    return date and date:match \"^(%d+)-(%d+)-(%d+)$\"\
    \ and (1 <= tonumber(select(2, date:find(\"^(%d+)-(%d+)-(%d+)$\"))) and tonumber(select(2,\
    \ date:find(\"^(%d+)-(%d+)-(%d+)$\"))) <= 12) and (1 <= tonumber(select(3, date:find(\"\
    ^(%d+)-(%d+)-(%d+)$\"))) and tonumber(select(3, date:find(\"^(%d+)-(%d+)-(%d+)$\"\
    ))) <= 31)\nend", "\tlocal tokens = {}\n\tfor token in string.gmatch(date, \"\
    [^%-]+\") do\n\t\ttable.insert(tokens, token)\n\tend\n\tif #tokens == 3 then\n\
    \t\tlocal month = tonumber(tokens[1])\n\t\tlocal day = tonumber(tokens[2])\n\t\
    \tlocal year = tonumber(tokens[3])\n\t\tif month and day and year then\n\t\t\t\
    if month > 0 and month < 13 then\n\t\t\t\tif month == 2 then\n\t\t\t\t\tif day\
    \ > 0 and day < 30 then\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\telseif\
    \ month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month\
    \ == 10 or month == 12 then\n\t\t\t\t\tif day > 0 and day < 32 then\n\t\t\t\t\t\
    \treturn true\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tif day > 0 and day < 31\
    \ then\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn false\nend", "    local pattern = \"[0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]\"\
    \n    if string.find(date, pattern) == nil then\n        return false\n    end\n\
    \    local date_val = date:split(\"-\")\n    local month = tonumber(date_val[1])\n\
    \    local day = tonumber(date_val[2])\n    if month < 1 or month > 12 then\n\
    \        return false\n    end\n    if month == 2 then\n        if day < 1 or\
    \ day > 29 then\n            return false\n        end\n    elseif month % 2 ==\
    \ 0 then\n        if day < 1 or day > 30 then\n            return false\n    \
    \    end\n    else\n        if day < 1 or day > 31 then\n            return false\n\
    \        end\n    end\n    return true\nend\nprint(valid_date(\"03-11-2030\"))\n\
    print(valid_date(\"15-44-2030\"))\nprint(valid_date(\"11-33-2030\"))\nprint(valid_date(\"\
    11-12-2030\"))\nprint(valid_date(\"13-12-2030\"))\nprint(valid_date(\"12-34-2030\"\
    ))", "    -- your code here\n    local split = {}\n    for part in date:gmatch(\"\
    %d+\") do\n        table.insert(split, part)\n    end\n    if #split ~= 3 then\n\
    \        return false\n    end\n    local month = tonumber(split[1])\n    local\
    \ day = tonumber(split[2])\n    local year = tonumber(split[3])\n    if month\
    \ < 1 or month > 12 then\n        return false\n    end\n    if day < 1 or day\
    \ > 31 then\n        return false\n    end\n    if month == 2 then\n        if\
    \ day > 29 then\n            return false\n        end\n    elseif month % 2 ==\
    \ 0 then\n        if day > 30 then\n            return false\n        end\n  \
    \  end\n    return true\nend", "  local pattern = \"(%d%d)-(%d%d)-(%d%d%d%d)\"\
    \n  local day, month, year = date:match(pattern)\n  if day == nil or month ==\
    \ nil or year == nil then\n    return false\n  end\n  day = tonumber(day)\n  month\
    \ = tonumber(month)\n  year = tonumber(year)\n  if month < 1 or month > 12 then\n\
    \    return false\n  end\n  if month == 2 then\n    if year % 4 == 0 and year\
    \ % 100 ~= 0 or year % 400 == 0 then\n      if day < 1 or day > 29 then\n    \
    \    return false\n      end\n    else\n      if day < 1 or day > 28 then\n  \
    \      return false\n      end\n    end\n  elseif month == 1 or month == 3 or\
    \ month == 5 or month == 7 or month == 8 or month == 10 or month == 12 then\n\
    \    if day < 1 or day > 31 then\n      return false\n    end\n  else\n    if\
    \ day < 1 or day > 30 then\n      return false\n    end\n  end\n  return true\n\
    end", "  local days_in_months = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n\
    \  local regex_pattern = \"^(%d%d)-(%d%d)-(%d%d%d%d)$\"\n  local match = {}\n\
    \  local month, day, year = 0, 0, 0\n  if not date:match(regex_pattern) then\n\
    \    return false\n  end\n  for _, v in ipairs(match) do\n    month, day, year\
    \ = match[1], match[2], match[3]\n  end\n  if month > 12 or month < 1 then\n \
    \   return false\n  end\n  local is_leap_year = year % 4 == 0 and (year % 100\
    \ ~= 0 or year % 400 == 0)\n  if is_leap_year and month == 2 and day > 29 then\n\
    \    return false\n  end\n  if is_leap_year and month == 2 and day < 1 then\n\
    \    return false\n  end\n  if days_in_months[month] < day or day < 1 then\n \
    \   return false\n  end\n  return true\nend", "  local days = {1,3,5,7,8,10,12}\n\
    \  local month, day, year = date:match(\"(%d+)-(%d+)-(%d+)\")\n  local is_leap\
    \ = (year % 4 == 0 and year % 100 ~= 0) or year % 400 == 0\n  if day:match(\"\
    [^%d]\") or month:match(\"[^%d]\") or year:match(\"[^%d]\") then\n    return false\n\
    \  end\n  month, day, year = tonumber(month), tonumber(day), tonumber(year)\n\
    \  for _, v in ipairs(days) do\n    if month == v and day < 1 or day > 31 then\n\
    \      return false\n    end\n  end\n  if month == 2 and day < 1 or day > (is_leap\
    \ and 29 or 28) then\n    return false\n  end\n  if month < 1 or month > 12 then\n\
    \    return false\n  end\n  return true\nend", "  local year, month, day = date:match\"\
    (%d+)-(%d+)-(%d+)\"\n  local month = tonumber(month)\n  local day = tonumber(day)\n\
    \  local year = tonumber(year)\n  if (year < 0) then return false end\n  if (month\
    \ < 1 or month > 12) then return false end\n  if (month == 2) then\n    if (day\
    \ < 1 or day > 29) then return false end\n  elseif (month == 4 or month == 6 or\
    \ month == 9 or month == 11) then\n    if (day < 1 or day > 30) then return false\
    \ end\n  else\n    if (day < 1 or day > 31) then return false end\n  end\n  return\
    \ true\nend", "    if not date then return false end\n    if #date == 0 then return\
    \ false end\n    local t = {}\n    for i in date:gmatch(\"%d+\") do\n        table.insert(t,\
    \ i)\n    end\n    if #t ~= 3 then return false end\n    local y, m, d = tonumber(t[3]),\
    \ tonumber(t[1]), tonumber(t[2])\n    if not y or not m or not d then return false\
    \ end\n    if m < 1 or m > 12 then return false end\n    if m == 2 then\n    \
    \    if d < 1 or d > 29 then return false end\n    elseif m == 4 or m == 6 or\
    \ m == 9 or m == 11 then\n        if d < 1 or d > 30 then return false end\n \
    \   else\n        if d < 1 or d > 31 then return false end\n    end\n    return\
    \ true\nend", "  if date == nil or date == \"\" then\n    return false\n  end\n\
    \  local a, b, m, d, y = string.find(date, \"(%d+)-(%d+)-(%d+)\")\n  local y =\
    \ tonumber(y)\n  local m = tonumber(m)\n  local d = tonumber(d)\n  if y < 1600\
    \ or y > 2500 then\n    return false\n  end\n  if m < 1 or m > 12 then\n    return\
    \ false\n  end\n  if d < 1 or d > 31 then\n    return false\n  end\n  if m ==\
    \ 4 or m == 6 or m == 9 or m == 11 then\n    if d > 30 then\n      return false\n\
    \    end\n  end\n  if m == 2 then\n    if d > 29 then\n      return false\n  \
    \  end\n  end\n  return true\nend", "  local function valid_month(month)\n   \
    \ return month>=1 and month<=12\n  end\n  local function valid_day(month, day)\n\
    \    if month == 2 then\n      return day >= 1 and day <= 29\n    elseif month\
    \ == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10\
    \ or month == 12 then\n      return day >= 1 and day <= 31\n    else\n      return\
    \ day >= 1 and day <= 30\n    end\n  end\n  local function valid_year(year)\n\
    \    return year > 999 and year < 10000\n  end\n  if date==nil or date==\"\" then\n\
    \    return false\n  end\n  local day, month, year = string.match(date, \"(%d+)-(%d+)-(%d+)\"\
    )\n  if not day or not month or not year then\n    return false\n  end\n  day\
    \ = tonumber(day)\n  month = tonumber(month)\n  year = tonumber(year)\n  return\
    \ valid_month(month) and valid_day(month, day) and valid_year(year)\nend", " \
    \ local sum_test = 0\n  if date ~= nil and date ~= \"\" then\n    for i in string.gmatch(date,\
    \ \"%S+\") do\n      sum_test = sum_test + 1\n    end\n    if sum_test == 3 then\n\
    \      for word in string.gmatch(date, \"%S+\") do\n        for x in string.gmatch(word,\
    \ \"[^%W%d]\") do\n          return false\n        end\n      end\n      local\
    \ numbers = {}\n      for number in string.gmatch(date, \"%d+\") do\n        table.insert(numbers,\
    \ number)\n      end\n      if numbers[1] ~= nil and numbers[2] ~= nil and numbers[3]\
    \ ~= nil then\n        if tonumber(numbers[1]) >= 1 and tonumber(numbers[1]) <=\
    \ 12 then\n          if tonumber(numbers[2]) >= 1 and tonumber(numbers[2]) <=\
    \ 31 then\n            if tonumber(numbers[1]) == 2 then\n              if tonumber(numbers[2])\
    \ > 29 then\n                return false\n              end\n            elseif\
    \ tonumber(numbers[1]) == 4 or tonumber(numbers[1]) == 6 or tonumber(numbers[1])\
    \ == 9 or tonumber(numbers[1]) == 11 then\n              if tonumber(numbers[2])\
    \ > 30 then\n                return false\n              end\n            end\n\
    \          else\n            return false\n          end\n        else\n     \
    \     return false\n        end\n      else\n        return false\n      end\n\
    \    else\n      return false\n    end\n  else\n    return false\n  end\n  return\
    \ true\nend", "    local month, day, year = date:match(\"^(%d%d)-(%d%d)-(%d%d%d%d)$\"\
    )\n    if (month and day and year) then\n        month = tonumber(month)\n   \
    \     day = tonumber(day)\n        year = tonumber(year)\n        if month >=\
    \ 1 and month <= 12 then\n            if month == 2 then\n                if day\
    \ >= 1 and day <= 29 then\n                    return true\n                end\n\
    \            elseif month == 1 or month == 3 or month == 5 or month == 7 or month\
    \ == 8 or month == 10 or month == 12 then\n                if day >= 1 and day\
    \ <= 31 then\n                    return true\n                end\n         \
    \   else\n                if day >= 1 and day <= 30 then\n                   \
    \ return true\n                end\n            end\n        end\n    end\n  \
    \  return false\nend", "    local pattern = \"%d+%-%d+%-%d+\"\n    if not date:match(pattern)\
    \ then\n        return false\n    end\n    local month, day, year = string.match(date,\
    \ \"(%d+)-(%d+)-(%d+)\")\n    if not (tonumber(month) and tonumber(day) and tonumber(year))\
    \ then\n        return false\n    end\n    if tonumber(month) < 1 or tonumber(month)\
    \ > 12 then\n        return false\n    end\n    if tonumber(month) == 2 then\n\
    \        if tonumber(day) < 1 or tonumber(day) > 29 then\n            return false\n\
    \        end\n    elseif tonumber(month) % 2 == 0 then\n        if tonumber(day)\
    \ < 1 or tonumber(day) > 30 then\n            return false\n        end\n    else\n\
    \        if tonumber(day) < 1 or tonumber(day) > 31 then\n            return false\n\
    \        end\n    end\n    return true\nend", "  local date = date:match(\"%d+%-%d+%-%d+\"\
    )\n  if date then\n    local month, day, year = date:match(\"(%d+)%-(%d+)%-(%d+)\"\
    )\n    month, day, year = tonumber(month), tonumber(day), tonumber(year)\n   \
    \ if month < 1 or month > 12 then\n      return false\n    end\n    if month ==\
    \ 2 then\n      if day < 1 or day > 29 then\n        return false\n      end\n\
    \    elseif month == 4 or month == 6 or month == 9 or month == 11 then\n     \
    \ if day < 1 or day > 30 then\n        return false\n      end\n    else\n   \
    \   if day < 1 or day > 31 then\n        return false\n      end\n    end\n  \
    \  return true\n  end\n  return false\nend", "  if date == \"\" then return false\
    \ end\n  local y, m, d = string.match(date, '(%d%d%d%d)-(%d%d)-(%d%d)')\n  if\
    \ not y then return false end\n  local max_d = 31\n  if m == '04' or m == '06'\
    \ or m == '09' or m == '11' then\n    max_d = 30\n  elseif m == '02' then\n  \
    \  max_d = 28\n  end\n  return tonumber(y) and tonumber(m) and tonumber(d) and\
    \ tonumber(y) > 0 and tonumber(m) > 0 and tonumber(m) <= 12 and tonumber(d) >\
    \ 0 and tonumber(d) <= max_d\nend", "  -- validate input\n  if type(date) ~= \"\
    string\" then\n    return false\n  end\n  -- extract parts\n  local m, d, y =\
    \ string.match(date, \"(%d+)-(%d+)-(%d+)\")\n  if not m or not d or not y then\n\
    \    return false\n  end\n  -- test month\n  if tonumber(m) < 1 or tonumber(m)\
    \ > 12 then\n    return false\n  end\n  -- test day\n  if tonumber(d) < 1 then\n\
    \    return false\n  end\n  if tonumber(m) == 2 then\n    if tonumber(d) > 29\
    \ then\n      return false\n    end\n  elseif tonumber(m) == 4 or tonumber(m)\
    \ == 6 or tonumber(m) == 9 or tonumber(m) == 11 then\n    if tonumber(d) > 30\
    \ then\n      return false\n    end\n  else\n    if tonumber(d) > 31 then\n  \
    \    return false\n    end\n  end\n  -- test year\n  if tonumber(y) < 1970 then\n\
    \    return false\n  end\n  -- success\n  return true\nend", "  return true\n\
    end", "   return (date:find(\"%d%d-%d%d-%d%d%d%d\")\n\t   and tonumber(date:sub(1,2))\
    \ > 0 and tonumber(date:sub(1,2)) < 13\n\t   and (tonumber(date:sub(4,5)) > 0\
    \ and tonumber(date:sub(4,5)) < 31\n\t\tor tonumber(date:sub(4,5)) > 0 and tonumber(date:sub(4,5))\
    \ < 32\n\t\tor tonumber(date:sub(4,5)) > 0 and tonumber(date:sub(4,5)) < 29))\n\
    end", "  return (string.match(date, \"^[0-9]{2}-[0-9]{2}-[0-9]{4}$\") and\n  \
    \  (string.match(date, \"^01-[0-9]{2}-[0-9]{4}$\") or\n      string.match(date,\
    \ \"^03-[0-9]{2}-[0-9]{4}$\") or\n      string.match(date, \"^05-[0-9]{2}-[0-9]{4}$\"\
    ) or\n      string.match(date, \"^07-[0-9]{2}-[0-9]{4}$\") or\n      string.match(date,\
    \ \"^08-[0-9]{2}-[0-9]{4}$\") or\n      string.match(date, \"^10-[0-9]{2}-[0-9]{4}$\"\
    ) or\n      string.match(date, \"^12-[0-9]{2}-[0-9]{4}$\") or\n      string.match(date,\
    \ \"^04-[0-9]{2}-[0-9]{4}$\") or\n      string.match(date, \"^06-[0-9]{2}-[0-9]{4}$\"\
    ) or\n      string.match(date, \"^09-[0-9]{2}-[0-9]{4}$\") or\n      string.match(date,\
    \ \"^11-[0-9]{2}-[0-9]{4}$\") or\n      string.match(date, \"^02-[0-2][0-9]-[0-9]{4}$\"\
    )))\nend", "    local month, day, year = date:match \"(%d%d)-(%d%d)-(%d%d%d%d)\"\
    \n    if not month or not day or not year then return false end\n    month, day,\
    \ year = tonumber(month), tonumber(day), tonumber(year)\n    if month < 1 or month\
    \ > 12 then return false end\n    if (month == 1 or month == 3 or month == 5 or\
    \ month == 7 or month == 8 or month == 10 or month == 12) and (day < 1 or day\
    \ > 31) then return false end\n    if (month == 4 or month == 6 or month == 9\
    \ or month == 11) and (day < 1 or day > 30) then return false end\n    if month\
    \ == 2 and (day < 1 or day > 29) then return false end\n    return true\nend",
  "   return false\nend", "  local match = string.match(date, \"^(%d+)-(%d+)-(%d+)$\"\
    )\n  local month, day, year = tonumber(match[1]), tonumber(match[2]), tonumber(match[3])\n\
    \  local month_days = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  local\
    \ max_days = month_days[month]\n  if day <= 0 or day > max_days then\n    return\
    \ false\n  end\n  if month <= 0 or month > 12 then\n    return false\n  end\n\
    \  if month == 2 and (year % 4 == 0) then\n    max_days = max_days + 1\n  end\n\
    \  if day > max_days then\n    return false\n  end\n  return true\nend", "  local\
    \ _, _, mm, dd, yyyy = date:find(\"(%d+)-(%d+)-(%d+)\")\n  if not mm or not dd\
    \ or not yyyy then return false end\n  mm, dd, yyyy = tonumber(mm), tonumber(dd),\
    \ tonumber(yyyy)\n  local days = {\n    [1] = 31, [2] = 28, [3] = 31, [4] = 30,\
    \ [5] = 31, [6] = 30,\n    [7] = 31, [8] = 31, [9] = 30, [10] = 31, [11] = 30,\
    \ [12] = 31\n  }\n  if yyyy%4 == 0 then days[2] = 29 end\n  if mm > 12 or mm <\
    \ 1 then return false end\n  if dd > days[mm] or dd < 1 then return false end\n\
    \  return true\nend", "    -- Write your code here\n    if date == \"\" then\n\
    \        return false\n    end\n    local patt = \"(%d+)-(%d+)-(%d+)\"\n    local\
    \ day, month, year = date:match(patt)\n    day = tonumber(day)\n    month = tonumber(month)\n\
    \    year = tonumber(year)\n    if month < 1 or month > 12 then\n        return\
    \ false\n    end\n    if month == 2 then\n        if year % 4 == 0 then\n    \
    \        if day < 1 or day > 29 then\n                return false\n         \
    \   end\n        else\n            if day < 1 or day > 28 then\n             \
    \   return false\n            end\n        end\n    elseif month == 1 or month\
    \ == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12\
    \ then\n        if day < 1 or day > 31 then\n            return false\n      \
    \  end\n    else\n        if day < 1 or day > 30 then\n            return false\n\
    \        end\n    end\n    return true\nend", "  if not date or type(date) ~=\
    \ 'string' then return false end\n  local y, m, d = date:match('(%d%d%d%d)%-(%d%d)%-(%d%d)')\n\
    \  if not y or #y ~= 4 or not m or #m ~= 2 or not d or #d ~= 2 then return false\
    \ end\n  local months = {[1] = 31, [2] = 28, [3] = 31, [4] = 30, [5] = 31, [6]\
    \ = 30, [7] = 31, [8] = 31, [9] = 30, [10] = 31, [11] = 30, [12] = 31}\n  local\
    \ m = tonumber(m)\n  local d = tonumber(d)\n  if m < 1 or m > 12 then return false\
    \ end\n  if m == 2 and ((y % 4 == 0 and d > 29) or (y % 4 ~= 0 and d > 28)) then\
    \ return false end\n  if (m == 1 or m == 3 or m == 5 or m == 7 or m == 8 or m\
    \ == 10 or m == 12) and d > 31 then return false end\n  if (m == 4 or m == 6 or\
    \ m == 9 or m == 11) and d > 30 then return false end\n  return true\nend", " \
    \ if date == \"\" then return false end\n  local month, day, year = string.match(date,\
    \ \"(%d+)-(%d+)-(%d+)\")\n  if month == nil or day == nil or year == nil then\
    \ return false end\n  month, day, year = tonumber(month), tonumber(day), tonumber(year)\n\
    \  if month < 1 or month > 12 then return false end\n  if month == 2 then\n  \
    \  if day < 1 or day > 29 then return false end\n  elseif month == 4 or month\
    \ == 6 or month == 9 or month == 11 then\n    if day < 1 or day > 30 then return\
    \ false end\n  else\n    if day < 1 or day > 31 then return false end\n  end\n\
    \  return true\nend\nassert(valid_date(\"12-31-2014\") == true)\nassert(valid_date(\"\
    mm-dd-yyyy\") == false)\nassert(valid_date(\"12-31-\") == false)\nassert(valid_date(\"\
    02-29-2019\") == false)\nassert(valid_date(\"02-29-2020\") == true)\nassert(valid_date(\"\
    02-29-2022\") == false)\nassert(valid_date(\"02-29-2021\") == false)\nassert(valid_date(\"\
    02-29-2025\") == false)\nassert(valid_date(\"02-29-2026\") == false)\nassert(valid_date(\"\
    02-29-2027\") == false)\nassert(valid_date(\"02-29-2028\") == true)\nassert(valid_date(\"\
    01-30-2019\") == true)\nassert(valid_date(\"02-28-2019\") == true)\nassert(valid_date(\"\
    03-31-2019\") == true)\nassert(valid_date(\"04-30-2019\") == true)\nassert(valid_date(\"\
    05-31-2019\") == true)\nassert(valid_date(\"06-30-2019\") == true)\nassert(valid_date(\"\
    07-31-2019\") == true)\nassert(valid_date(\"08-31-2019\") == true)\nassert(valid_date(\"\
    09-30-2019\") == true)\nassert(valid_date(\"10-31", "  if date == \"\" then return\
    \ false end\n  local month, day, year = date:match \"(%d%d)-(%d%d)-(%d%d%d%d)\"\
    \n  if not day then return false end\n  day, month, year = tonumber(day), tonumber(month),\
    \ tonumber(year)\n  if month < 1 or month > 12 then return false end\n  if (month\
    \ % 2 == 1 and month < 8) or (month % 2 == 0 and month > 7) then\n    if day <\
    \ 1 or day > 31 then return false end\n  elseif month ~= 2 then\n    if day <\
    \ 1 or day > 30 then return false end\n  else\n    if year % 4 == 0 then\n   \
    \   if day < 1 or day > 29 then return false end\n    else\n      if day < 1 or\
    \ day > 28 then return false end\n    end\n  end\n  return true\nend", "  if date\
    \ == nil or date == \"\" then\n    return false\n  end\n  local _,_,m,d,y = string.find(date,\
    \ \"(%d%d)-(%d%d)-(%d%d%d%d)\")\n  if m == nil or d == nil or y == nil then\n\
    \    return false\n  end\n  m = tonumber(m)\n  d = tonumber(d)\n  y = tonumber(y)\n\
    \  if m < 1 or m > 12 then\n    return false\n  end\n  if y < 1 then\n    return\
    \ false\n  end\n  if m == 2 then\n    if d < 1 or d > 29 then\n      return false\n\
    \    end\n  elseif m == 4 or m == 6 or m == 9 or m == 11 then\n    if d < 1 or\
    \ d > 30 then\n      return false\n    end\n  else\n    if d < 1 or d > 31 then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local days = {31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  local date, i = date:split('-')\n\
    \  if not date or #date < 8 then return false end\n  local y, m, d = tonumber(date:sub(5,\
    \ 8)), tonumber(date:sub(1, 2)), tonumber(date:sub(3, 4))\n  if y < 1 or m < 1\
    \ or m > 12 or d < 1 or d > days[m] then return false end\n  if m == 2 and d ==\
    \ 29 and ((y % 4 == 0 and y % 100 ~= 0) or y % 400 == 0) then return true end\n\
    \  return not(m == 2 and d == 29)\nend", "  if string.len(date) == 0 then\n  \
    \  return false\n  end\n  local m, d, y = string.match(date, \"(%d%d)-(%d%d)-(%d%d%d%d)\"\
    )\n  if not (m and d and y) then\n    return false\n  end\n  if tonumber(m) <\
    \ 1 or tonumber(m) > 12 then\n    return false\n  end\n  if tonumber(m) == 2 then\n\
    \    if tonumber(d) < 1 or tonumber(d) > 29 then\n      return false\n    end\n\
    \  elseif tonumber(m) == 4 or tonumber(m) == 6 or tonumber(m) == 9 or tonumber(m)\
    \ == 11 then\n    if tonumber(d) < 1 or tonumber(d) > 30 then\n      return false\n\
    \    end\n  else\n    if tonumber(d) < 1 or tonumber(d) > 31 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  if not date or date == \"\" then\
    \ return false end\n  local d, m, y = date:match(\"(%d+)-(%d+)-(%d+)\")\n  if\
    \ not d or not m or not y then return false end\n  d, m, y = tonumber(d), tonumber(m),\
    \ tonumber(y)\n  if d < 1 or m < 1 or y < 1 then return false end\n  if (m < 8\
    \ and m % 2 == 1) or (m >= 8 and m % 2 == 0) then\n    if d > 31 then return false\
    \ end\n  elseif m ~= 2 then\n    if d > 30 then return false end\n  else\n   \
    \ if y % 4 == 0 and (y % 100 ~= 0 or y % 400 == 0) then\n      if d > 29 then\
    \ return false end\n    else\n      if d > 28 then return false end\n    end\n\
    \  end\n  return true\nend", "    local m, d, y = string.match(date, \"(%d+)-(%d+)-(%d+)\"\
    )\n    if not m or not d or not y then return false end\n    if string.len(m)\
    \ ~= 2 or string.len(d) ~= 2 or string.len(y) ~= 4 then return false end\n   \
    \ m, d, y = tonumber(m), tonumber(d), tonumber(y)\n    if not m or not d or not\
    \ y then return false end\n    if m < 1 or m > 12 then return false end\n    if\
    \ m == 2 then\n        if y % 4 == 0 and (y % 100 ~= 0 or y % 400 == 0) then\n\
    \            if d < 1 or d > 29 then return false end\n        else\n        \
    \    if d < 1 or d > 28 then return false end\n        end\n    elseif m == 4\
    \ or m == 6 or m == 9 or m == 11 then\n        if d < 1 or d > 30 then return\
    \ false end\n    else\n        if d < 1 or d > 31 then return false end\n    end\n\
    \    return true\nend", "  local year, month, day = date:match \"(%d%d%d%d)%-(%d%d)%-(%d%d)\"\
    \n  if not year then return false end\n  month, day, year = tonumber(month), tonumber(day),\
    \ tonumber(year)\n  if month == 2 and day > 28 and year % 4 ~= 0 then return false\
    \ end\n  if month == 2 and day > 29 and year % 4 == 0 then return false end\n\
    \  if month == 4 or month == 6 or month == 9 or month == 11 then\n    if day >\
    \ 30 then return false end\n  end\n  if month == 1 or month == 3 or month == 5\
    \ or month == 7 or month == 8 or month == 10 or month == 12 then\n    if day >\
    \ 31 then return false end\n  end\n  if month > 12 then return false end\n  return\
    \ true\nend", "\tif not date or date == \"\" then return false end\n\tlocal month,\
    \ day, year = date:match(\"^(%d%d)-(%d%d)-(%d%d%d%d)$\")\n\tif not month or not\
    \ day or not year then return false end\n\tif tonumber(month) < 1 or tonumber(month)\
    \ > 12 then return false end\n\tif (tonumber(month) < 8 and tonumber(month) %\
    \ 2 == 1) or (tonumber(month) >= 8 and tonumber(month) % 2 == 0) then\n\t\tif\
    \ tonumber(day) < 1 or tonumber(day) > 31 then return false end\n\telseif tonumber(month)\
    \ ~= 2 then\n\t\tif tonumber(day) < 1 or tonumber(day) > 30 then return false\
    \ end\n\telse\n\t\tif tonumber(day) < 1 or tonumber(day) > 29 then return false\
    \ end\n\tend\n\treturn true\nend", "    return false\nend", "    -- your code\
    \ here\n    if #date == 0 then\n        return false\n    end\n    local _, month,\
    \ day, year = date:find(\"(%d+)[-%/%. ](%d+)[-%/%. ](%d+)\")\n    local max_days\
    \ = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n    if day == \"02\" and\
    \ (year % 4 == 0 and year % 100 ~= 0 or year % 400 == 0) then\n        max_days[2]\
    \ = 29\n    end\n    if tonumber(day) > max_days[tonumber(month)] or tonumber(day)\
    \ < 1 or tonumber(month) > 12 or tonumber(month) < 1 then\n        return false\n\
    \    end\n    return true\nend", "    -- Your code here\nend", "  local m, d,\
    \ y = date:match(\"(%d+)-(%d+)-(%d+)\")\n  return m and d and y and\n    tonumber(m)\
    \ <= 12 and tonumber(d) <= 31 and\n    tonumber(m) >= 1 and tonumber(d) >= 1 and\n\
    \    (tonumber(m) ~= 2 or tonumber(d) <= 29) and\n    (tonumber(m) ~= 2 or tonumber(d)\
    \ >= 1) and\n    (tonumber(m) ~= 4 or tonumber(d) <= 30) and\n    (tonumber(m)\
    \ ~= 4 or tonumber(d) >= 1) and\n    (tonumber(m) ~= 6 or tonumber(d) <= 30) and\n\
    \    (tonumber(m) ~= 6 or tonumber(d) >= 1) and\n    (tonumber(m) ~= 9 or tonumber(d)\
    \ <= 30) and\n    (tonumber(m) ~= 9 or tonumber(d) >= 1) and\n    (tonumber(m)\
    \ ~= 11 or tonumber(d) <= 30) and\n    (tonumber(m) ~= 11 or tonumber(d) >= 1)\
    \ and\n    (tonumber(m) ~= 1 or tonumber(d) <= 31) and\n    (tonumber(m) ~= 1\
    \ or tonumber(d) >= 1) and\n    (tonumber(m) ~= 3 or tonumber(d) <= 31) and\n\
    \    (tonumber(m) ~= 3 or tonumber(d) >= 1) and\n    (tonumber(m) ~= 5 or tonumber(d)\
    \ <= 31) and\n    (tonumber(m) ~= 5 or tonumber(d) >= 1) and\n    (tonumber(m)\
    \ ~= 7 or tonumber(d) <= 31) and\n    (tonumber(m) ~= 7 or tonumber(d) >= 1) and\n\
    \    (tonumber(m) ~= 8 or tonumber(d) <= 31) and\n    (tonumber(m) ~= 8 or tonumber(d)\
    \ >= 1) and\n    (tonumber(m) ~= 10 or tonumber(d) <= 31", "  return nil\nend",
  "  local months = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  local mm,\
    \ dd, yyyy = date:match('(%d+)-(%d+)-(%d+)')\n  if not (mm and dd and yyyy) then\
    \ return false end\n  mm, dd, yyyy = tonumber(mm), tonumber(dd), tonumber(yyyy)\n\
    \  if yyyy < 1 then return false end\n  if mm < 1 or mm > 12 then return false\
    \ end\n  if dd < 1 or dd > months[mm] then return false end\n  return true\nend",
  "  if type(date) ~= \"string\" then return false end\n  local months = {\n    [\"\
    01\"] = 31,\n    [\"02\"] = 28,\n    [\"03\"] = 31,\n    [\"04\"] = 30,\n    [\"\
    05\"] = 31,\n    [\"06\"] = 30,\n    [\"07\"] = 31,\n    [\"08\"] = 31,\n    [\"\
    09\"] = 30,\n    [\"10\"] = 31,\n    [\"11\"] = 30,\n    [\"12\"] = 31\n  }\n\
    \  local year = date:sub(7, 10)\n  local month = date:sub(1, 2)\n  local day =\
    \ date:sub(4, 5)\n  if not months[month] then return false end\n  if not tonumber(year)\
    \ or not tonumber(month) or not tonumber(day) then return false end\n  local check_day\
    \ = months[month]\n  if month == \"02\" and tonumber(year) % 4 == 0 then check_day\
    \ = 29 end\n  if not (tonumber(day) >= 1 and tonumber(day) <= check_day) then\
    \ return false end\n  return true\nend", "    local m, d, y = date:match('(%d%d)-(%d%d)-(%d%d%d%d)')\n\
    \    m, d, y = tonumber(m), tonumber(d), tonumber(y)\n    if not m or not d or\
    \ not y then return false end\n    if m < 1 or m > 12 then return false end\n\
    \    if m == 2 then\n        if y % 4 == 0 and (y % 100 ~= 0 or y % 400 == 0)\
    \ then return d >= 1 and d <= 29 end\n        return d >= 1 and d <= 28\n    end\n\
    \    if m == 4 or m == 6 or m == 9 or m == 11 then return d >= 1 and d <= 30 end\n\
    \    return d >= 1 and d <= 31\nend", "\tlocal days = {31, 29, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31}\n\tlocal month, day, year = date:match('(%d+)-(%d+)-(%d+)')\n\
    \tmonth, day, year = tonumber(month), tonumber(day), tonumber(year)\n\tif not\
    \ month or not day or not year then return false end\n\tif not (1 <= month and\
    \ month <= 12) then return false end\n\tif not (1 <= day and day <= days[month])\
    \ then return false end\n\treturn true\nend", "\t-- Extract day, month and year\
    \ from the date string.\n\tlocal day, month, year = date:match(\"^(%d%d?)%-(%d%d?)%-(%d%d%d%d)$\"\
    )\n\t-- If the extracted day, month and year can't be converted to a number, the\
    \ date is invalid.\n\tif not day or not month or not year then return false end\n\
    \t-- Convert the day, month and year to number format.\n\tday, month, year = tonumber(day),\
    \ tonumber(month), tonumber(year)\n\t-- Check if the extracted day, month and\
    \ year are valid numbers.\n\tif day and month and year then\n\t\t-- Check if the\
    \ extracted day, month and year are valid numbers.\n\t\tif day >= 1 and day <=\
    \ 31 and month >= 1 and month <= 12 and year >= 1 then\n\t\t\t-- Check if the\
    \ day is valid for the month.\n\t\t\tif (month == 1 or month == 3 or month ==\
    \ 5 or month == 7 or month == 8 or month == 10 or month == 12) and day <= 31 then\n\
    \t\t\t\treturn true\n\t\t\telseif (month == 4 or month == 6 or month == 9 or month\
    \ == 11) and day <= 30 then\n\t\t\t\treturn true\n\t\t\telseif month == 2 and\
    \ day <= 29 then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\n\
    end", "    local day, month, year = date:match('(%d%d)-(%d%d)-(%d%d%d%d)')\n \
    \   day, month, year = tonumber(day), tonumber(month), tonumber(year)\n    return\
    \ (day and month and year) and ((day >= 1 and day <= 31 and (month == 1 or month\
    \ == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12))\
    \ or (day >= 1 and day <= 30 and (month == 4 or month == 6 or month == 9 or month\
    \ == 11)) or (day >= 1 and day <= 29 and month == 2)) and (month >= 1 and month\
    \ <= 12)\nend", "    local date = date\n    local month, day, year = date:match(\"\
    (%d+)-(%d+)-(%d+)\")\n    if month and day and year then\n        month = tonumber(month)\n\
    \        day = tonumber(day)\n        year = tonumber(year)\n        return year\
    \ and year > 0 and month >= 1 and month <= 12 and\n                    day >=\
    \ 1 and day <= 31 and ((month == 1 or month == 3 or month == 5 or month == 7 or\
    \ month == 8 or month == 10 or month == 12) and day <= 31 or\n               \
    \         (month == 4 or month == 6 or month == 9 or month == 11) and day <= 30\
    \ or\n                            month == 2 and day <= 29)\n    end\n    return\
    \ false\nend", "    local d = {}\n    for n in date:gmatch('%d+') do\n       \
    \ table.insert(d, tonumber(n))\n    end\n    local days = {\n        {31, 28,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},\n        {31, 29, 31, 30, 31, 30, 31,\
    \ 31, 30, 31, 30, 31}\n    }\n    local leap = (d[3] % 4 == 0 and d[3] % 100 ~=\
    \ 0) or d[3] % 400 == 0\n    return (#d == 3 and d[1] >= 1 and d[1] <= 12 and\
    \ d[2] >= 1 and d[2] <= days[leap and 2 or 1][d[1]])\nend", "  -- Return true\
    \ if the date is valid, false otherwise\n  return false\nend", "  if #date ==\
    \ 0 then return false end\n  local mm, dd, yyyy = date:match(\"(%d%d)-(%d%d)-(%d%d%d%d)\"\
    )\n  if not (mm and dd and yyyy) then return false end\n  mm, dd, yyyy = tonumber(mm),\
    \ tonumber(dd), tonumber(yyyy)\n  if not (mm and dd and yyyy) then return false\
    \ end\n  if not (\n      (mm >= 1 and mm <= 12) and\n      (dd >= 1 and dd <=\
    \ 31) and\n      (yyyy >= 1900 and yyyy <= 2100)\n    ) then return false end\n\
    \  if (mm == 2 and dd > 29) then return false end\n  if (mm == 2 and dd == 29\
    \ and not (yyyy % 4 == 0 and (yyyy % 100 ~= 0 or yyyy % 400 == 0))) then return\
    \ false end\n  if mm <= 7 and mm % 2 == 0 and dd > 30 then return false end\n\
    \  if mm >= 8 and mm % 2 == 1 and dd > 30 then return false end\n  return true\n\
    end", "  if not date then return false end\n  local y, m, d = date:match(\"(%d%d%d%d)%-(%d%d)%-(%d%d)\"\
    )\n  if not (y and m and d) then return false end\n  y, m, d = tonumber(y), tonumber(m),\
    \ tonumber(d)\n  if y < 1 or y > 9999 then return false end\n  if m < 1 or m >\
    \ 12 then return false end\n  if d < 1 or d > 31 then return false end\n  if m\
    \ == 2 then\n    if y % 4 == 0 and (y % 100 ~= 0 or y % 400 == 0) then\n     \
    \ if d > 29 then return false end\n    else\n      if d > 28 then return false\
    \ end\n    end\n  elseif m == 4 or m == 6 or m == 9 or m == 11 then\n    if d\
    \ > 30 then return false end\n  end\n  return true\nend", "  if date == \"\" then\
    \ return false end\n  local month, day, year = string.match(date, \"(%d+)-(%d+)-(%d+)\"\
    )\n  if not month or not day or not year then return false end\n  month, day,\
    \ year = tonumber(month), tonumber(day), tonumber(year)\n  if month > 12 or month\
    \ < 1 then return false end\n  if day > 31 or day < 1 then return false end\n\
    \  if month == 2 then\n    if day > 29 then return false end\n  elseif month ==\
    \ 4 or month == 6 or month == 9 or month == 11 then\n    if day > 30 then return\
    \ false end\n  end\n  return true\nend", "  local date_format = '(%d+)[-/](%d+)[-/](%d+)'\n\
    \  local month, day, year = date:match(date_format)\n  if not month or not day\
    \ or not year then\n    return false\n  end\n  month, day, year = tonumber(month),\
    \ tonumber(day), tonumber(year)\n  if not month or not day or not year then\n\
    \    return false\n  end\n  if month < 1 or month > 12 then\n    return false\n\
    \  end\n  if day < 1 or day > 31 then\n    return false\n  end\n  if month ==\
    \ 2 then\n    if year % 4 == 0 and year % 100 ~= 0 or year % 400 == 0 then\n \
    \     if day > 29 then\n        return false\n      end\n    else\n      if day\
    \ > 28 then\n        return false\n      end\n    end\n  elseif month == 4 or\
    \ month == 6 or month == 9 or month == 11 then\n    if day > 30 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  if not date then return false\
    \ end\n  local _,_,mm,dd,yyyy = date:find('(%d%d)-(%d%d)-(%d%d%d%d)')\n  if not\
    \ mm or not dd or not yyyy then return false end\n  if mm < '01' or mm > '12'\
    \ then return false end\n  if mm == '01' or mm == '03' or mm == '05' or mm ==\
    \ '07' or mm == '08' or mm == '10' or mm == '12' then\n    if dd < '01' or dd\
    \ > '31' then return false end\n  elseif mm == '04' or mm == '06' or mm == '09'\
    \ or mm == '11' then\n    if dd < '01' or dd > '30' then return false end\n  elseif\
    \ mm == '02' then\n    if dd < '01' or dd > '29' then return false end\n  end\n\
    \  return true\nend", "    -- TODO\nend", "    if #date == 0 then return false\
    \ end\n    local year, month, day = string.match(date, '(%d+)-(%d+)-(%d+)')\n\
    \    year, month, day = tonumber(year), tonumber(month), tonumber(day)\n    if\
    \ not year or not month or not day then return false end\n    if day < 1 or day\
    \ > 31 then return false end\n    if month < 1 or month > 12 then return false\
    \ end\n    if month == 2 and day > 29 then return false end\n    if month % 2\
    \ == 0 and month < 8 and day > 30 then return false end\n    if month % 2 == 1\
    \ and month > 8 and day > 30 then return false end\n    return true\nend", " \
    \ local pattern = \"(%d%d)-(%d%d)-(%d%d%d%d)\"\n  if not string.match(date, pattern)\
    \ then\n    return false\n  end\n  local month, day, year = string.match(date,\
    \ pattern)\n  local leap = false\n  if tonumber(year) % 4 == 0 then\n    leap\
    \ = true\n  end\n  if month == \"02\" and day == \"29\" and not leap then\n  \
    \  return false\n  end\n  if (day < \"01\" or day > \"31\") and (month == \"01\"\
    \ or month == \"03\" or month == \"05\" or month == \"07\" or month == \"08\"\
    \ or month == \"10\" or month == \"12\") then\n    return false\n  end\n  if (day\
    \ < \"01\" or day > \"30\") and (month == \"04\" or month == \"06\" or month ==\
    \ \"09\" or month == \"11\") then\n    return false\n  end\n  if (day < \"01\"\
    \ or day > \"29\") and month == \"02\" then\n    return false\n  end\n  if (month\
    \ < \"01\" or month > \"12\") then\n    return false\n  end\n  return true\nend",
  "  local d1, d2, d3 = date:match('(%d%d)-(%d%d)-(%d%d%d%d)')\n  d1, d2, d3 = tonumber(d1),\
    \ tonumber(d2), tonumber(d3)\n  if not d1 or not d2 or not d3 then return false\
    \ end\n  local d = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  if (d1\
    \ == 2 and d2 == 29 and d3 % 4 == 0) or (d2 <= d[d1]) then\n    return true\n\
    \  end\n  return false\nend", "    local year, month, day = date:match(\"(%d+)-(%d+)-(%d+)\"\
    )\n    return year and month and day and\n           tonumber(day)  >= 1     \
    \  and tonumber(day)  <= (month == 2 and ((year % 4 == 0 and year % 100 ~= 0)\
    \ or year % 400 == 0) and 29 or (month == 1 or month == 3 or month == 5 or month\
    \ == 7 or month == 8 or month == 10 or month == 12) and 31 or 30)  and\n     \
    \      tonumber(month) >= 1       and tonumber(month) <= 12                  \
    \                                                                            \
    \                                                                            \
    \                                                             and\n          \
    \ tonumber(year)  >= 1\nend", "  return false\nend", "  if date == nil or date\
    \ == \"\" then\n    return false\n  end\n  local spl = stringx.split(date, \"\
    -\")\n  if #spl ~= 3 then\n    return false\n  end\n  local month = tonumber(spl[1])\n\
    \  local day = tonumber(spl[2])\n  local year = tonumber(spl[3])\n  if month <\
    \ 1 or month > 12 then\n    return false\n  end\n  if month == 2 then\n    return\
    \ day >= 1 and day <= 29\n  elseif month == 4 or month == 6 or month == 9 or month\
    \ == 11 then\n    return day >= 1 and day <= 30\n  else\n    return day >= 1 and\
    \ day <= 31\n  end\nend", "    if #date == 0 then return false end\n    local\
    \ month, day, year = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n    if month ==\
    \ nil or day == nil or year == nil then return false end\n    month, day, year\
    \ = tonumber(month), tonumber(day), tonumber(year)\n    if month < 1 or month\
    \ > 12 then return false end\n    if month == 2 then\n        if year % 4 == 0\
    \ and year % 100 ~= 0 or year % 400 == 0 then\n            if day < 1 or day >\
    \ 29 then return false end\n        else\n            if day < 1 or day > 28 then\
    \ return false end\n        end\n    elseif month == 4 or month == 6 or month\
    \ == 9 or month == 11 then\n        if day < 1 or day > 30 then return false end\n\
    \    else\n        if day < 1 or day > 31 then return false end\n    end\n   \
    \ return true\nend", "    if date == nil or date == \"\" then\n        return\
    \ false\n    end\n    local date_list = string.split(date, \"-\")\n    if #date_list\
    \ ~= 3 then\n        return false\n    end\n    local month, day, year = date_list[1],\
    \ date_list[2], date_list[3]\n    if tonumber(month) == nil or tonumber(day) ==\
    \ nil or tonumber(year) == nil then\n        return false\n    end\n    month,\
    \ day, year = tonumber(month), tonumber(day), tonumber(year)\n    if month < 1\
    \ or month > 12 then\n        return false\n    end\n    if month == 2 then\n\
    \        if not is_leap_year(year) and day > 28 then\n            return false\n\
    \        end\n        if is_leap_year(year) and day > 29 then\n            return\
    \ false\n        end\n    end\n    if is_big_month(month) and day > 31 then\n\
    \        return false\n    end\n    if not is_big_month(month) and day > 30 then\n\
    \        return false\n    end\n    return true\nend", "  if type(date) ~= \"\
    string\" then return false end\n  local year, month, day = date:match(\"(%d+)-(%d+)-(%d+)\"\
    )\n  year, month, day = tonumber(year), tonumber(month), tonumber(day)\n  if not\
    \ year or not month or not day then return false end\n  if year < 1000 or year\
    \ > 9999 then return false end\n  if month < 1 or month > 12 then return false\
    \ end\n  if month == 2 then\n    if not ((year % 4 == 0 and year % 100 ~= 0) or\
    \ year % 400 == 0) then\n      if day < 1 or day > 28 then return false end\n\
    \    else\n      if day < 1 or day > 29 then return false end\n    end\n  elseif\
    \ month == 4 or month == 6 or month == 9 or month == 11 then\n    if day < 1 or\
    \ day > 30 then return false end\n  else\n    if day < 1 or day > 31 then return\
    \ false end\n  end\n  return true\nend", "  if date:len() == 0 then return false\
    \ end\n  local m, d, y = date:match(\"(%d+)-(%d+)-(%d+)\")\n  m, d, y = tonumber(m),\
    \ tonumber(d), tonumber(y)\n  if not m or not d or not y then return false end\n\
    \  if not (m >= 1 and m <= 12) then return false end\n  if m == 2 then\n    if\
    \ not (d >= 1 and d <= 29) then return false end\n  elseif (m % 2 == 1 and m <=\
    \ 7) or (m % 2 == 0 and m >= 8) then\n    if not (d >= 1 and d <= 31) then return\
    \ false end\n  else\n    if not (d >= 1 and d <= 30) then return false end\n \
    \ end\n  return true\nend", "    if not date or date == \"\" then return false\
    \ end\n    local y, m, d = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n    if not\
    \ y or not m or not d then return false end\n    y, m, d = tonumber(y), tonumber(m),\
    \ tonumber(d)\n    if m > 12 or m < 1 then return false end\n    if m == 2 then\n\
    \        if d > 29 or d < 1 then return false end\n    elseif m == 4 or m == 6\
    \ or m == 9 or m == 11 then\n        if d > 30 or d < 1 then return false end\n\
    \    else\n        if d > 31 or d < 1 then return false end\n    end\n    return\
    \ true\nend", "  local has_error = false\n  local date_parts = date:split(\"-\"\
    )\n  if #date_parts ~= 3 then\n    has_error = true\n  else\n    local year =\
    \ tonumber(date_parts[3])\n    local month = tonumber(date_parts[1])\n    local\
    \ day = tonumber(date_parts[2])\n    if not year or not month or not day then\n\
    \      has_error = true\n    else\n      if year < 1 or year > 3000 then\n   \
    \     has_error = true\n      elseif month < 1 or month > 12 then\n        has_error\
    \ = true\n      elseif (month == 1 or month == 3 or month == 5 or month == 7 or\
    \ month == 8 or month == 10 or month == 12) and (day < 1 or day > 31) then\n \
    \       has_error = true\n      elseif (month == 4 or month == 6 or month == 9\
    \ or month == 11) and (day < 1 or day > 30) then\n        has_error = true\n \
    \     elseif month == 2 and day < 1 or day > 29 then\n        has_error = true\n\
    \      end\n    end\n  end\n  return not has_error\nend", "    local m, d, y =\
    \ date:match(\"(%d+)-(%d+)-(%d+)\")\n    return m and d and y and tonumber(m)\
    \ and tonumber(d) and tonumber(y) and\n        tonumber(m) >= 1 and tonumber(m)\
    \ <= 12 and tonumber(d) >= 1 and\n        (tonumber(m) == 2 and tonumber(d) <=\
    \ 29 or tonumber(m) ~= 2 and\n        tonumber(d) <= ({31, 30, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31})[tonumber(m)])\nend", "  -- your code here\n  if #date\
    \ < 8 then\n    return false\n  end\n  if tonumber(date:sub(1, 2)) > 12 or tonumber(date:sub(1,\
    \ 2)) < 1 then\n    return false\n  end\n  if date:sub(3, 3) ~= \"-\" then\n \
    \   return false\n  end\n  if tonumber(date:sub(4, 5)) > 31 or tonumber(date:sub(4,\
    \ 5)) < 1 then\n    return false\n  end\n  if date:sub(6, 6) ~= \"-\" then\n \
    \   return false\n  end\n  if #date ~= 10 then\n    return false\n  end\n  if\
    \ tonumber(date:sub(7, 10)) < 2015 then\n    return false\n  end\n  if tonumber(date:sub(1,\
    \ 2)) == 1 or tonumber(date:sub(1, 2)) == 3 or tonumber(date:sub(1, 2)) == 5 or\
    \ tonumber(date:sub(1, 2)) == 7 or tonumber(date:sub(1, 2)) == 8 or tonumber(date:sub(1,\
    \ 2)) == 10 or tonumber(date:sub(1, 2)) == 12 then\n    if tonumber(date:sub(4,\
    \ 5)) < 1 or tonumber(date:sub(4, 5)) > 31 then\n      return false\n    end\n\
    \  end\n  if tonumber(date:sub(1, 2)) == 4 or tonumber(date:sub(1, 2)) == 6 or\
    \ tonumber(date:sub(1, 2)) == 9 or tonumber(date:sub(1, 2)) == 11 then\n    if\
    \ tonumber(date:sub(4, 5)) < 1 or tonumber(date:sub(4, 5)) > 30 then\n      return\
    \ false\n    end\n  end\n  if tonumber(date:sub(1, 2)) == 2 then\n    if tonumber(date:sub(4,\
    \ 5)) < 1 or tonumber(date:sub(4, 5)) > 29 then\n      return false\n    end\n\
    \  end\n  return true\nend", "    -- put your code here:\nend", "  local day,\
    \ month, year = string.match(date, '(%d%d)-(%d%d)-(%d%d%d%d)')\n  return year\
    \ and\n         (month >= 1 and month <= 12) and\n         (day >= 1 and\n   \
    \       ((month <= 7 and month % 2 == 1) or (month >= 8 and month % 2 == 0)) and\n\
    \          day <= 31 or\n          (month ~= 2 and day <= 30) or\n          (month\
    \ == 2 and\n           ((year % 4 == 0 and year % 100 ~= 0) or year % 400 == 0)\
    \ and\n           day <= 29 or\n           day <= 28))\nend", "    if #date ==\
    \ 0 then return false end\n    local y, m, d = date:match(\"(%d%d%d%d)%-(%d%d)%-(%d%d)\"\
    )\n    if not y then return false end\n    if tonumber(m) < 1 or tonumber(m) >\
    \ 12 then return false end\n    if tonumber(m) == 2 then\n        if tonumber(d)\
    \ < 1 or tonumber(d) > 29 then return false end\n    elseif tonumber(m) % 2 ==\
    \ 0 then\n        if tonumber(d) < 1 or tonumber(d) > 30 then return false end\n\
    \    else\n        if tonumber(d) < 1 or tonumber(d) > 31 then return false end\n\
    \    end\n    return true\nend", "  return false\nend", "    return true\nend",
  "    return false\nend", "    if #date == 0 then return false end\n    local y,\
    \ m, d = date:match(\"(%d%d%d%d)%-(%d%d)%-(%d%d)\")\n    if not y then return\
    \ false end\n    y, m, d = tonumber(y), tonumber(m), tonumber(d)\n    if d < 1\
    \ or d > 31 then return false end\n    if m == 4 or m == 6 or m == 9 or m == 11\
    \ then\n        if d > 30 then return false end\n    elseif m == 2 then\n    \
    \    if d > 29 then return false end\n    end\n    return true\nend", "  if string.len(date)\
    \ == 0 then\n    return false\n  end\n  local day, month, year = string.match(date,\
    \ \"(%d+)-(%d+)-(%d+)\")\n  if not day or not month or not year then\n    return\
    \ false\n  end\n  day = tonumber(day)\n  month = tonumber(month)\n  year = tonumber(year)\n\
    \  if month == 2 then\n    if year % 4 == 0 then\n      if day > 29 then\n   \
    \     return false\n      end\n    else\n      if day > 28 then\n        return\
    \ false\n      end\n    end\n  elseif month == 4 or month == 6 or month == 9 or\
    \ month == 11 then\n    if day > 30 then\n      return false\n    end\n  elseif\
    \ month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month\
    \ == 10 or month == 12 then\n    if day > 31 then\n      return false\n    end\n\
    \  else\n    return false\n  end\n  if month > 12 then\n    return false\n  end\n\
    \  return true\nend", "    -- local months = {31,28,31,30,31,30,31,31,30,31,30,31}\n\
    \    -- dd,mm,yyyy = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n    -- if mm >\
    \ 12 or mm < 1 then return false end\n    -- if yyyy < 1 then return false end\n\
    \    -- if months[mm] then\n    --     if dd > months[mm] or dd < 1 then return\
    \ false end\n    -- else\n    --     if mm == 2 then\n    --         if dd > 29\
    \ or dd < 1 then return false end\n    --     else\n    --         return false\n\
    \    --     end\n    -- end\n    -- return true\n    local months = {31,28,31,30,31,30,31,31,30,31,30,31}\n\
    \    local dd,mm,yyyy = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n    if not\
    \ dd or not mm or not yyyy then return false end\n    if mm > 12 or mm < 1 then\
    \ return false end\n    if yyyy < 1 then return false end\n    if months[mm] then\n\
    \        if dd > months[mm] or dd < 1 then return false end\n    else\n      \
    \  if mm == 2 then\n            if dd > 29 or dd < 1 then return false end\n \
    \       else\n            return false\n        end\n    end\n    return true\n\
    end", "  local day, month, year = date:match('(%d%d)-(%d%d)-(%d%d%d%d)')\n  local\
    \ days = {31,29,31,30,31,30,31,31,30,31,30,31}\n  if not (day and month and year)\
    \ then return false end\n  day, month, year = tonumber(day), tonumber(month),\
    \ tonumber(year)\n  if day >= 1 and day <= days[month] and month >= 1 and month\
    \ <= 12 and year >= 0 then\n    return true\n  end\n  return false\nend", "  if\
    \ not date then return false end\n  local m, d, y = date:match(\"(%d%d)-(%d%d)-(%d%d%d%d)\"\
    )\n  if not (m and d and y) then return false end\n  local month, day, year =\
    \ tonumber(m), tonumber(d), tonumber(y)\n  if not (month and day and year) then\
    \ return false end\n  if not (month >= 1 and month <= 12) then return false end\n\
    \  if (month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month\
    \ == 10 or month == 12) then\n    if not (day >= 1 and day <= 31) then return\
    \ false end\n  elseif (month == 4 or month == 6 or month == 9 or month == 11)\
    \ then\n    if not (day >= 1 and day <= 30) then return false end\n  elseif (month\
    \ == 2) then\n    if not (day >= 1 and day <= 29) then return false end\n  end\n\
    \  return true\nend", "   local date_list = {}\n   for w in string.gmatch(date,\
    \ '%d+') do\n      table.insert(date_list, w)\n   end\n   local month, day, year\
    \ = table.unpack(date_list)\n   local months_with_31_days = {1, 3, 5, 7, 8, 10,\
    \ 12}\n   local months_with_30_days = {4, 6, 9, 11}\n   local max_days_for_month\
    \ = {[2] = 29, [3] = 31, [4] = 30, [5] = 31, [6] = 30, [7] = 31, [8] = 31, [9]\
    \ = 30, [10] = 31, [11] = 30, [12] = 31}\n   if day < 1 or month < 1 or year <\
    \ 1 then\n      return false\n   end\n   for i = 1, #months_with_31_days do\n\
    \      if month == months_with_31_days[i] and day > 31 then\n         return false\n\
    \      end\n   end\n   for i = 1, #months_with_30_days do\n      if month == months_with_30_days[i]\
    \ and day > 30 then\n         return false\n      end\n   end\n   if day > max_days_for_month[month]\
    \ then\n      return false\n   end\n   return true\nend", "  if #date == 0 then\
    \ return false end\n  local n, m, d = date:match(\"(%d+)-(%d+)-(%d+)\")\n  n,\
    \ m, d = tonumber(n), tonumber(m), tonumber(d)\n  if n > 31 or n < 1 then return\
    \ false end\n  if m > 12 or m < 1 then return false end\n  if d > 31 or d < 1\
    \ then return false end\n  if m == 2 and d > 29 then return false end\n  if (m\
    \ == 4 or m == 6 or m == 9 or m == 11) and d > 30 then return false end\n  return\
    \ true\nend", "  -- XXX: I could have a match pattern here, but it would be less\
    \ readable\n  -- and it wouldn't necessarily be faster.\n  if not date or date\
    \ == \"\" then\n    return false\n  end\n  local month, day, year = date:match(\"\
    (%d+)-(%d+)-(%d+)\")\n  if not month or not day or not year then\n    return false\n\
    \  end\n  month = tonumber(month)\n  day = tonumber(day)\n  year = tonumber(year)\n\
    \  if month < 1 or month > 12 then\n    return false\n  end\n  if day < 1 then\n\
    \    return false\n  end\n  if month == 2 then\n    -- We check for leap years\n\
    \    local leap = year % 4 == 0 and (year % 100 ~= 0 or year % 400 == 0)\n   \
    \ if leap then\n      if day > 29 then\n        return false\n      end\n    else\n\
    \      if day > 28 then\n        return false\n      end\n    end\n  elseif month\
    \ == 4 or month == 6 or month == 9 or month == 11 then\n    if day > 30 then\n\
    \      return false\n    end\n  else\n    if day > 31 then\n      return false\n\
    \    end\n  end\n  return true\nend", "  if date == \"\" then return false end\n\
    \  local pattern = \"(%d%d)-(%d%d)-(%d%d%d%d)\"\n  local month, day, year = date:match(pattern)\n\
    \  month, day, year = tonumber(month), tonumber(day), tonumber(year)\n  if month\
    \ < 1 or month > 12 then return false end\n  if day < 1 or day > 31 then return\
    \ false end\n  if month == 2 then\n    if day > 29 then return false end\n  elseif\
    \ month == 4 or month == 6 or month == 9 or month == 11 then\n    if day > 30\
    \ then return false end\n  end\n  return true\nend", "    local year, month, day\
    \ = date:match(\"(%d%d%d%d)-(%d%d)-(%d%d)\")\n    if not year or not month or\
    \ not day then return false end\n    if day < 1 or day > 31 then return false\
    \ end\n    if month < 1 or month > 12 then return false end\n    if month % 2\
    \ == 0 and day > 30 then return false end\n    if month == 2 and day > 29 then\
    \ return false end\n    return true\nend", "    if date == \"\" then\n       \
    \ return false\n    end\n    local year, month, day = string.match(date, \"(%d+)-(%d+)-(%d+)\"\
    )\n    year = tonumber(year)\n    month = tonumber(month)\n    day = tonumber(day)\n\
    \    if year < 1900 or year > 2100 then\n        return false\n    end\n    if\
    \ month < 1 or month > 12 then\n        return false\n    end\n    if month ==\
    \ 2 then\n        if day < 1 or day > 29 then\n            return false\n    \
    \    end\n    elseif month % 2 == 0 then\n        if day < 1 or day > 30 then\n\
    \            return false\n        end\n    else\n        if day < 1 or day >\
    \ 31 then\n            return false\n        end\n    end\n    return true\nend",
  "  if not date then return false end\n  local d, m, y = date:match '(%d%d?)-(%d%d?)-(%d%d%d%d)'\n\
    \  if not d or not m or not y then return false end\n  d, m, y = tonumber(d),\
    \ tonumber(m), tonumber(y)\n  if not d or not m or not y then return false end\n\
    \  if m < 1 or m > 12 then return false end\n  if (m == 1 or m == 3 or m == 5\
    \ or m == 7 or m == 8 or m == 10 or m == 12) and (d < 1 or d > 31) then return\
    \ false end\n  if (m == 4 or m == 6 or m == 9 or m == 11) and (d < 1 or d > 30)\
    \ then return false end\n  if m == 2 and y % 4 == 0 and d > 29 then return false\
    \ end\n  if m == 2 and y % 4 ~= 0 and d > 28 then return false end\n  return true\n\
    end", "\t-- Split the string into individual parts\n\tlocal parts = {}\n\tfor\
    \ part in date:gmatch(\"%d+\") do\n\t\ttable.insert(parts, part)\n\tend", "  date\
    \ = date or \"\"\n  if #date < 10 then return false end\n  local year,month,day\
    \ = tonumber(date:sub(7)),tonumber(date:sub(1,2)),tonumber(date:sub(4,5))\n  if\
    \ month < 1 or month > 12 then return false end\n  if month == 2 and year % 4\
    \ == 0 and year % 100 ~= 0 then\n    if day < 1 or day > 29 then return false\
    \ end\n  elseif month == 2 then\n    if day < 1 or day > 28 then return false\
    \ end\n  elseif month == 1 or month == 3 or month == 5 or month == 7 or month\
    \ == 8 or month == 10 or month == 12 then\n    if day < 1 or day > 31 then return\
    \ false end\n  else\n    if day < 1 or day > 30 then return false end\n  end\n\
    \  return true\nend", "    return date:match(\"^%d+[-/]%d+[-/]%d+$\") and os.time{day=tonumber(date:match(\"\
    ^%d+[-/]%d+[-/](%d+)$\")),month=tonumber(date:match(\"^(%d+)[-/]%d+[-/]%d+$\"\
    )),year=tonumber(date:match(\"^%d+[-/]%d+[-/](%d+)$\"))}\nend", "    -- your code\
    \ here\n    if date == \"\" then\n        return false\n    end\n    local d =\
    \ string.gmatch(date, '%d+')\n    local mm, dd, yyyy = d(), d(), d()\n    if not\
    \ (mm and dd and yyyy) then\n        return false\n    end\n    if tonumber(mm)\
    \ > 12 or tonumber(mm) < 1 then\n        return false\n    end\n    if (tonumber(mm)\
    \ == 1 or tonumber(mm) == 3 or tonumber(mm) == 5 or tonumber(mm) == 7 or tonumber(mm)\
    \ == 8 or tonumber(mm) == 10 or tonumber(mm) == 12) and (tonumber(dd) > 31 or\
    \ tonumber(dd) < 1) then\n        return false\n    end\n    if (tonumber(mm)\
    \ == 4 or tonumber(mm) == 6 or tonumber(mm) == 9 or tonumber(mm) == 11) and (tonumber(dd)\
    \ > 30 or tonumber(dd) < 1) then\n        return false\n    end\n    if tonumber(mm)\
    \ == 2 and (tonumber(dd) > 29 or tonumber(dd) < 1) then\n        return false\n\
    \    end\n    return true\nend", "    local month, day, year = date:match('(%d+)-(%d+)-(%d+)')\n\
    \    month, day, year = tonumber(month), tonumber(day), tonumber(year)\n    if\
    \ not (month and day and year) then return false end\n    if month < 1 or month\
    \ > 12 then return false end\n    if (month == 1 or month == 3 or month == 5 or\
    \ month == 7 or month == 8 or month == 10 or month == 12) and (day < 1 or day\
    \ > 31) then return false end\n    if (month == 4 or month == 6 or month == 9\
    \ or month == 11) and (day < 1 or day > 30) then return false end\n    if month\
    \ == 2 and (day < 1 or day > 29) then return false end\n    return true\nend",
  "    return date:match(\"%d%d%-%d%d%-%d%d%d%d\") and \n           date:match(\"\
    %d%d\") < \"13\" and\n           date:match(\"%d%d%-%d%d\") < \"32\" and\n   \
    \        (date:match(\"%-%d%d%-\") == \"01-\" or\n            date:match(\"%-%d%d%-\"\
    ) == \"03-\" or\n            date:match(\"%-%d%d%-\") == \"05-\" or\n        \
    \    date:match(\"%-%d%d%-\") == \"07-\" or\n            date:match(\"%-%d%d%-\"\
    ) == \"08-\" or\n            date:match(\"%-%d%d%-\") == \"10-\" or\n        \
    \    date:match(\"%-%d%d%-\") == \"12-\" or\n            date:match(\"%-%d%d%-\"\
    ) == \"04-\" or\n            date:match(\"%-%d%d%-\") == \"06-\" or\n        \
    \    date:match(\"%-%d%d%-\") == \"09-\" or\n            date:match(\"%-%d%d%-\"\
    ) == \"11-\" or\n            date:match(\"%-%d%d%-\") == \"02-\" and date:match(\"\
    %d%d\") < \"30\")\nend", "  local _,_,m,d,y = string.find(date, \"(%d+)-(%d+)-(%d+)\"\
    )\n  return m and tonumber(m)<=12 and d and tonumber(d)<=31 and y and tonumber(y)>=0\n\
    end", "    if #date == 0 then return false end\n    if #date ~= 10 then return\
    \ false end\n    local month, day, year = string.match(date, \"(%d%d)%-(%d%d)%-(%d%d%d%d)\"\
    )\n    local mm, dd, yyyy = tonumber(month), tonumber(day), tonumber(year)\n \
    \   if mm < 1 or mm > 12 then return false end\n    if dd < 1 or dd > 31 then\
    \ return false end\n    if mm == 2 and dd > 29 then return false end\n    if mm\
    \ == 4 or mm == 6 or mm == 9 or mm == 11 then\n        if dd > 30 then return\
    \ false end\n    end\n    return true\nend", "    local m, d, y = date:match(\"\
    (%d+)-(%d+)-(%d+)\")\n    if m and d and y then\n        return tonumber(m) >=\
    \ 1 and tonumber(m) <= 12 and tonumber(d) >= 1 and\n            ((tonumber(m)\
    \ == 1 or tonumber(m) == 3 or tonumber(m) == 5 or\n            tonumber(m) ==\
    \ 7 or tonumber(m) == 8 or tonumber(m) == 10 or\n            tonumber(m) == 12)\
    \ and tonumber(d) <= 31 or\n            (tonumber(m) == 4 or tonumber(m) == 6\
    \ or tonumber(m) == 9 or\n            tonumber(m) == 11) and tonumber(d) <= 30\
    \ or tonumber(m) == 2 and\n            tonumber(d) <= 29)\n    end\n    return\
    \ false\nend", "   if not date or #date < 10 then return false end\n   local m,\
    \ d, y = date:match(\"(%d%d)-(%d%d)-(%d%d%d%d)\")\n   if not m or not d or not\
    \ y then return false end\n   m, d, y = tonumber(m), tonumber(d), tonumber(y)\n\
    \   if y <= 0 then return false end\n   if m < 1 or m > 12 then return false end\n\
    \   if (m == 2 and d > 29) or\n      (m == 2 and d > 28 and y % 4 ~= 0) or\n \
    \     (m == 2 and d > 28 and y % 400 == 0) or\n      (m == 2 and d > 28 and y\
    \ % 100 == 0) or\n      (m == 2 and d > 28 and y % 4 == 0 and y % 100 ~= 0) or\n\
    \      (m == 4 and d > 30) or\n      (m == 6 and d > 30) or\n      (m == 9 and\
    \ d > 30) or\n      (m == 11 and d > 30) or\n      (m == 1 and d > 31) or\n  \
    \    (m == 3 and d > 31) or\n      (m == 5 and d > 31) or\n      (m == 7 and d\
    \ > 31) or\n      (m == 8 and d > 31) or\n      (m == 10 and d > 31) or\n    \
    \  (m == 12 and d > 31) then\n      return false\n   end\n   return true\nend",
  "    -- your code here\nend\nprint(valid_date(\"02-29-2016\"))\nprint(valid_date(\"\
    02-30-2016\"))\nprint(valid_date(\"02-29-2015\"))\nprint(valid_date(\"02-28-2016\"\
    ))", "  -- code here\n  if not date then return false end\n  local y, m, d = date:match(\"\
    (%d%d%d%d)%-(%d%d)%-(%d%d)\")\n  if not (y and m and d) then return false end\n\
    \  m, d, y = tonumber(m), tonumber(d), tonumber(y)\n  if m < 1 or m > 12 then\
    \ return false end\n  if d < 1 or d > 31 then return false end\n  if m == 2 then\n\
    \    if (y % 4 == 0 and d > 29) or (y % 4 ~= 0 and d > 28) then return false end\n\
    \  elseif m == 4 or m == 6 or m == 9 or m == 11 then\n    if d > 30 then return\
    \ false end\n  end\n  return true\nend", "\tlocal month, day, year = date:match(\"\
    ^(%d%d)-(%d%d)-(%d%d%d%d)$\")\n\tif not (month and day and year) then return false\
    \ end\n\tmonth, day, year = tonumber(month), tonumber(day), tonumber(year)\n\t\
    local days_for_month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n\tif\
    \ not (month >= 1 and month <= 12) then return false end\n\tif month == 2 and\
    \ ((year % 4 == 0 and year % 100 ~= 0) or year % 400 == 0) then\n\t\tdays_for_month[2]\
    \ = 29\n\tend\n\tif not (day >= 1 and day <= days_for_month[month]) then return\
    \ false end\n\treturn true\nend", "  local pattern = \"^(%d%d)-(%d%d)-(%d%d%d%d)$\"\
    \n  local month, day, year = date:match(pattern)\n  if not (month and day and\
    \ year) then return false end\n  if year < 0 or year > 9999 then return false\
    \ end\n  if month < 1 or month > 12 then return false end\n  if month == 2 then\n\
    \    if day < 1 or day > 29 then return false end\n  elseif month % 2 == 0 then\n\
    \    if day < 1 or day > 30 then return false end\n  else\n    if day < 1 or day\
    \ > 31 then return false end\n  end\n  return true\nend", "    local pattern =\
    \ \"(%d+)-(%d+)-(%d+)\"\n    local m, d, y = date:match(pattern)\n    local res\
    \ = true\n    if m and d and y then\n        if tonumber(m) >= 1 and tonumber(m)\
    \ <= 12 then\n            if tonumber(m) == 2 then\n                if tonumber(d)\
    \ >= 1 and tonumber(d) <= 29 then\n                    res = true\n          \
    \      else\n                    res = false\n                end\n          \
    \  elseif tonumber(m) == 1 or tonumber(m) == 3 or tonumber(m) == 5 or tonumber(m)\
    \ == 7 or tonumber(m) == 8 or tonumber(m) == 10 or tonumber(m) == 12 then\n  \
    \              if tonumber(d) >= 1 and tonumber(d) <= 31 then\n              \
    \      res = true\n                else\n                    res = false\n   \
    \             end\n            else\n                if tonumber(d) >= 1 and tonumber(d)\
    \ <= 30 then\n                    res = true\n                else\n         \
    \           res = false\n                end\n            end\n        else\n\
    \            res = false\n        end\n    else\n        res = false\n    end\n\
    \    return res\nend", "    -- Write your code here\nend", "    -- write your\
    \ code here\nend", "\tif date:match('^%d%d%-%d%d%-%d%d%d%d$') then\n\t\tlocal\
    \ m, d, y = date:match('^(%d%d)%-(%d%d)%-(%d%d%d%d)$')\n\t\tm, d, y = tonumber(m),\
    \ tonumber(d), tonumber(y)\n\t\tif m < 1 or m > 12 then\n\t\t\treturn false\n\t\
    \tend\n\t\tif m == 2 then\n\t\t\tif y % 4 == 0 and (y % 100 ~= 0 or y % 400 ==\
    \ 0) then\n\t\t\t\tif d < 1 or d > 29 then\n\t\t\t\t\treturn false\n\t\t\t\tend\n\
    \t\t\telse\n\t\t\t\tif d < 1 or d > 28 then\n\t\t\t\t\treturn false\n\t\t\t\t\
    end\n\t\t\tend\n\t\telseif m == 4 or m == 6 or m == 9 or m == 11 then\n\t\t\t\
    if d < 1 or d > 30 then\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\tif d\
    \ < 1 or d > 31 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\
    \tend\n\treturn false\nend", "    -- your code here\n    -- handle empty case\n\
    \    if date == \"\" then\n        return false\n    end\n    -- get the year,\
    \ month, and day\n    -- create an array of strings by splitting the input string\
    \ by \"-\", and then convert to numbers\n    local date_array = {}\n    for v\
    \ in string.gmatch(date, \"%d+\") do\n        table.insert(date_array, tonumber(v))\n\
    \    end\n    local year = date_array[3]\n    local month = date_array[1]\n  \
    \  local day = date_array[2]\n    -- check if the array length is 3, meaning it\
    \ is a valid input\n    if #date_array ~= 3 then\n        return false\n    end\n\
    \    -- check if the year is less than 1\n    if year < 1 then\n        return\
    \ false\n    end\n    -- check if the month is less than 1 or greater than 12\n\
    \    if month < 1 or month > 12 then\n        return false\n    end\n    -- check\
    \ if the day is within the range of 1 and 31, or 1 and 30, or 1 and 29\n    if\
    \ (month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month\
    \ == 10 or month == 12) and (day < 1 or day > 31) then\n        return false\n\
    \    elseif (month == 4 or month == 6 or month == 9 or month == 11) and (day <\
    \ 1 or day > 30) then\n        return false\n    elseif month == 2 and (day <\
    \ 1 or day > 29) then\n        return false\n    end\n    return true\nend", " \
    \ local daysPerMonth = {\n    {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},\n\
    \    {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n  }\n  local m = date:match(\"\
    ^(%d%d)%-(%d%d)%-(%d%d%d%d)$\")\n  if not m then return false end\n  local mm,\
    \ dd, yyyy = tonumber(m), tonumber(m, 3), tonumber(m, 6)\n  if yyyy % 4 == 0 then\
    \ leap = 1 else leap = 0 end\n  if mm < 1 or mm > 12 then return false end\n \
    \ if dd < 1 or dd > daysPerMonth[leap + 1][mm] then return false end\n  return\
    \ true\nend", "    return (date:match '^%d+-%d+-%d+$') and\n        date:match\
    \ '^(%d+)-(%d+)-(%d+)$' and\n        (tonumber(date:match '^(%d+)-(%d+)-(%d+)$')\
    \ >= 101 and\n        tonumber(date:match '^(%d+)-(%d+)-(%d+)$') <= 1231) and\n\
    \        (date:match '^(%d+)-(%d+)-(%d+)$'):match '^(%d+)-(%d+)-(%d+)$' and\n\
    \        (tonumber(date:match '^(%d+)-(%d+)-(%d+)$'):match '^(%d+)-(%d+)-(%d+)$')\
    \ >= 101 and\n        (tonumber(date:match '^(%d+)-(%d+)-(%d+)$'):match '^(%d+)-(%d+)-(%d+)$')\
    \ <= 9999) and\n        (((tonumber(date:match '^(%d+)-(%d+)-(%d+)$'):match '^(%d+)-(%d+)-(%d+)$')\
    \ % 4 == 0 and (tonumber(date:match '^(%d+)-(%d+)-(%d+)$'):match '^(%d+)-(%d+)-(%d+)$')\
    \ % 100 ~= 0) or (tonumber(date:match '^(%d+)-(%d+)-(%d+)$'):match '^(%d+)-(%d+)-(%d+)$')\
    \ % 400 == 0) and\n        ((tonumber(date:match '^(%d+)-(%d+)-(%d+)$') % 10000\
    \ >= 1101 and\n        tonumber(date:match '^(%d+)-(%d+)-(%d+)$') % 10000 <= 1231)\
    \ or\n        (tonumber(date:match '^(%d+)-(%d+)-(%d+)$') % 10000 >= 101 and\n\
    \        ton", "    local day, month, year = string.match(date, \"(%d+)-(%d+)-(%d+)\"\
    )\n    if day == nil or month == nil or year == nil then\n        return false\n\
    \    end\n    return year > 0 and year < 10000 and\n            month > 0 and\
    \ month < 13 and\n            day > 0 and (\n                (month == 1 or month\
    \ == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12)\
    \ and day < 32 or\n                (month == 4 or month == 6 or month == 9 or\
    \ month == 11) and day < 31 or\n                month == 2 and (year % 4 == 0\
    \ and day < 30 or day < 29)\n            )\nend", "    return #date > 0 and tonumber(date:sub(4,\
    \ 5)) >= 1 and tonumber(date:sub(4, 5)) <= 31 and\n        tonumber(date:sub(7,\
    \ 8)) >= 1 and tonumber(date:sub(7, 8)) <= 12 and\n        (tonumber(date:sub(7,\
    \ 8)) == 1 or tonumber(date:sub(7, 8)) == 3 or tonumber(date:sub(7, 8)) == 5 or\
    \ tonumber(date:sub(7, 8)) == 7 or tonumber(date:sub(7, 8)) == 8 or tonumber(date:sub(7,\
    \ 8)) == 10 or tonumber(date:sub(7, 8)) == 12) and\n        tonumber(date:sub(1,\
    \ 2)) >= 1 and tonumber(date:sub(1, 2)) <= 31 and\n        (tonumber(date:sub(1,\
    \ 2)) == 4 or tonumber(date:sub(1, 2)) == 6 or tonumber(date:sub(1, 2)) == 9 or\
    \ tonumber(date:sub(1, 2)) == 11) and\n        tonumber(date:sub(1, 2)) >= 1 and\
    \ tonumber(date:sub(1, 2)) <= 29 and\n        tonumber(date:sub(1, 2)) == 2 and\n\
    \        #date == 10\nend", "    if not date or #date < 9 then return false end\n\
    \    local d, m, y = date:match('(%d%d)-(%d%d)-(%d%d%d%d)')\n    d, m, y = tonumber(d),\
    \ tonumber(m), tonumber(y)\n    if m < 1 or m > 12 then return false end\n   \
    \ if m == 2 and (d < 1 or d > 29) then return false end\n    if m == 2 and d ==\
    \ 29 and (y % 4 ~= 0 or (y % 100 == 0 and y % 400 ~= 0)) then return false end\n\
    \    if m == 2 and d == 29 and (y % 4 == 0 or (y % 100 == 0 and y % 400 == 0))\
    \ then return true end\n    if m == 1 or m == 3 or m == 5 or m == 7 or m == 8\
    \ or m == 10 or m == 12 then\n        if d < 1 or d > 31 then return false end\n\
    \    end\n    if m == 4 or m == 6 or m == 9 or m == 11 then\n        if d < 1\
    \ or d > 30 then return false end\n    end\n    return true\nend", "    local\
    \ m, d, y = string.match(date, \"(%d%d)-(%d%d)-(%d%d%d%d)\")\n    if (m == nil\
    \ or d == nil or y == nil) then\n        return false\n    end\n    m = tonumber(m)\n\
    \    d = tonumber(d)\n    y = tonumber(y)\n    if (m < 1 or m > 12) then\n   \
    \     return false\n    end\n    if (d < 1 or d > 31) then\n        return false\n\
    \    end\n    if (m == 2) then\n        if (d > 29) then\n            return false\n\
    \        end\n    elseif (m == 4 or m == 6 or m == 9 or m == 11) then\n      \
    \  if (d > 30) then\n            return false\n        end\n    end\n    return\
    \ true\nend", "  local m, d, y = date:match(\"(%d+)-(%d+)-(%d+)\")\n  if m and\
    \ d and y then\n    if y % 4 == 0 and m == \"02\" and d == \"29\" then\n     \
    \ return true\n    elseif ( m == \"02\" and ( d >= \"01\" and d <= \"28\" ) )\
    \ or ( d >= \"01\" and d <= \"30\" and ( m == \"04\" or m == \"06\" or m == \"\
    09\" or m == \"11\" ) ) or ( d >= \"01\" and d <= \"31\" and ( m == \"01\" or\
    \ m == \"03\" or m == \"05\" or m == \"07\" or m == \"08\" or m == \"10\" or m\
    \ == \"12\" ) ) then\n      return true\n    end\n  end\n  return false\nend",
  "  local MONTHS = {\n    31, -- jan\n    28, -- feb\n    31, -- mar\n    30, --\
    \ apr\n    31, -- may\n    30, -- jun\n    31, -- jul\n    31, -- aug\n    30,\
    \ -- sep\n    31, -- oct\n    30, -- nov\n    31, -- dec\n  }\n  local days =\
    \ tonumber(date:sub(1, 2))\n  local month = tonumber(date:sub(4, 5))\n  local\
    \ year = tonumber(date:sub(7, 10))\n  if month > 12 or month < 1 then\n    return\
    \ false\n  end\n  local days_in_month = MONTHS[month]\n  if month == 2 and year\
    \ % 4 == 0 then\n    days_in_month = 29\n  end\n  if days < 1 or days > days_in_month\
    \ then\n    return false\n  end\n  return true\nend", "   local pattern = \"^(%d+)-(%d+)-(%d+)$\"\
    \n   local month, day, year = date:match(pattern)\n   if month and day and year\
    \ then\n      month = tonumber(month)\n      day = tonumber(day)\n      year =\
    \ tonumber(year)\n      if month >= 1 and month <= 12 then\n         if month\
    \ == 2 then\n            if day >= 1 and day <= 29 then\n               return\
    \ true\n            end\n         elseif month == 1 or month == 3 or month ==\
    \ 5 or month == 7 or month == 8 or month == 10 or month == 12 then\n         \
    \   if day >= 1 and day <= 31 then\n               return true\n            end\n\
    \         elseif month == 4 or month == 6 or month == 9 or month == 11 then\n\
    \            if day >= 1 and day <= 30 then\n               return true\n    \
    \        end\n         end\n      end\n   end\n   return false\nend", "    --\
    \ valid format '01-01-2016'\n    local valid_format = '^(%d+)%-(%d+)%-(%d+)$'\n\
    \    local m, d, y = date:match(valid_format)\n    if not m or not d or not y\
    \ then\n        return false\n    end\n    m, d, y = tonumber(m), tonumber(d),\
    \ tonumber(y)\n    if m < 1 or m > 12 then\n        return false\n    end\n  \
    \  if y < 1 then\n        return false\n    end\n    if d < 1 then\n        return\
    \ false\n    end\n    if (m == 1 or m == 3 or m == 5 or m == 7 or m == 8 or m\
    \ == 10 or m == 12) and d > 31 then\n        return false\n    end\n    if (m\
    \ == 4 or m == 6 or m == 9 or m == 11) and d > 30 then\n        return false\n\
    \    end\n    if m == 2 and d > 29 then\n        return false\n    end\n    return\
    \ true\nend", "    local date_check = date:split(\"-\")\n    local days = tonumber(date_check[2])\n\
    \    local months = tonumber(date_check[1])\n    local years = tonumber(date_check[3])\n\
    \    local m1_31 = {1,3,5,7,8,10,12}\n    local m2_30 = {4,6,9,11}\n    if days\
    \ >= 1 and days <= 31 and months >= 1 and months <= 12 and years >= 1000 and years\
    \ <= 9999 then\n        if months == 2 then\n            if days > 29 then\n \
    \               return false\n            else\n                return true\n\
    \            end\n        elseif table.indexof(m1_31, months) then\n         \
    \   return true\n        elseif table.indexof(m2_30, months) then\n          \
    \  if days > 30 then\n                return false\n            else\n       \
    \         return true\n            end\n        end\n    else\n        return\
    \ false\n    end\nend", "    local month, day, year = date:match('(%d+)-(%d+)-(%d+)')\n\
    \    month, day, year = tonumber(month), tonumber(day), tonumber(year)\n    if\
    \ (month == 2 and day > 29) or (month == 4 and day > 30) or (month == 6 and day\
    \ > 30) or (month == 9 and day > 30) or (month == 11 and day > 30) or (month ==\
    \ 1 and day > 31) or (month == 3 and day > 31) or (month == 5 and day > 31) or\
    \ (month == 7 and day > 31) or (month == 8 and day > 31) or (month == 10 and day\
    \ > 31) or (month == 12 and day > 31) or month > 12 or day > 31 or month < 1 or\
    \ day < 1 or month == nil or day == nil or year == nil then\n        return false\n\
    \    else\n        return true\n    end\nend", "    if date == nil or #date ==\
    \ 0 then\n        return false\n    end\n    local m, d, y = string.match(date,\
    \ \"(%d+)-(%d+)-(%d+)\")\n    if m == nil or d == nil or y == nil then\n     \
    \   return false\n    end\n    m = tonumber(m)\n    d = tonumber(d)\n    y = tonumber(y)\n\
    \    if m < 1 or m > 12 then\n        return false\n    end\n    if (m == 1 or\
    \ m == 3 or m == 5 or m == 7 or m == 8 or m == 10 or m == 12) and (d < 1 or d\
    \ > 31) then\n        return false\n    end\n    if (m == 4 or m == 6 or m ==\
    \ 9 or m == 11) and (d < 1 or d > 30) then\n        return false\n    end\n  \
    \  if m == 2 and (d < 1 or d > 29) then\n        return false\n    end\n    return\
    \ true\nend", "  if date == \"\" then return false end\n  local year, month, day\
    \ = date:match(\"(%d%d%d%d)%-(%d%d)%-(%d%d)\")\n  if not year or not month or\
    \ not day then return false end\n  if tonumber(month) < 1 or tonumber(month) >\
    \ 12 then return false end\n  if tonumber(month) == 2 then\n    if tonumber(day)\
    \ < 1 or tonumber(day) > 29 then return false end\n  elseif tonumber(month) <\
    \ 8 then\n    if tonumber(month) % 2 == 0 then\n      if tonumber(day) < 1 or\
    \ tonumber(day) > 30 then return false end\n    else\n      if tonumber(day) <\
    \ 1 or tonumber(day) > 31 then return false end\n    end\n  elseif tonumber(month)\
    \ % 2 == 0 then\n    if tonumber(day) < 1 or tonumber(day) > 31 then return false\
    \ end\n  else\n    if tonumber(day) < 1 or tonumber(day) > 30 then return false\
    \ end\n  end\n  return true\nend", "  return date:match(\"%d%d%-%d%d%-%d%d%d%d\"\
    ) and (date:match(\"^0[1-9]%-0[1-9]%-%d%d%d%d\") or date:match(\"^0[1-9]%-[1-2][0-9]%-%d%d%d%d\"\
    ) or date:match(\"^0[1-9]%-3[0-1]%-%d%d%d%d\") or date:match(\"^1[0-2]%-0[1-9]%-%d%d%d%d\"\
    ) or date:match(\"^1[0-2]%-[1-2][0-9]%-%d%d%d%d\") or date:match(\"^1[0-2]%-3[0-1]%-%d%d%d%d\"\
    ))\nend", "    if string.len(date) == 0 then\n        return false\n    end\n\
    \    local month, day, year = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n    if\
    \ month and day and year then\n        return true\n    end\n    return false\n\
    end", "  local day, month, year = date:match(\"(%d%d?)%-(%d%d?)%-(%d%d%d%d)\"\
    )\n  if not day or not month or not year then return false end\n  return true\n\
    end", "    local MONTH_DAYS = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}\n\
    \    local month, day, year = date:match(\"(%d+)-(%d+)-(%d+)\")\n    if not month\
    \ or not day or not year then return false end\n    month, day, year = tonumber(month),\
    \ tonumber(day), tonumber(year)\n    if year < 1000 or year > 9999 then return\
    \ false end\n    if month < 1 or month > 12 then return false end\n    if day\
    \ < 1 or day > MONTH_DAYS[month] then return false end\n    return true\nend",
  "  local month, day, year = date:match(\"(%d+)-(%d+)-(%d+)\")\n  if not month or\
    \ not day or not year then return false end\n  if tonumber(month) > 12 or tonumber(month)\
    \ < 1 then return false end\n  if tonumber(day) > 31 or tonumber(day) < 1 then\
    \ return false end\n  if tonumber(month) == 2 and tonumber(day) > 29 then return\
    \ false end\n  if tonumber(month) == 4 or tonumber(month) == 6 or tonumber(month)\
    \ == 9 or tonumber(month) == 11 then\n    if tonumber(day) > 30 then return false\
    \ end\n  end\n  return true\nend", "  local month, day, year = date:match(\"(%d+)-(%d+)-(%d+)\"\
    )\n  if month and day and year then\n    month, day, year = tonumber(month), tonumber(day),\
    \ tonumber(year)\n    if month >= 1 and month <= 12 and day >= 1 and year >= 0\
    \ then\n      if (month == 1 or month == 3 or month == 5 or month == 7 or month\
    \ == 8 or month == 10 or month == 12) and day <= 31 then\n        return true\n\
    \      elseif (month == 4 or month == 6 or month == 9 or month == 11) and day\
    \ <= 30 then\n        return true\n      elseif month == 2 and ((year % 4 == 0\
    \ and year % 100 ~= 0) or year % 400 == 0) and day <= 29 then\n        return\
    \ true\n      elseif month == 2 and day <= 28 then\n        return true\n    \
    \  end\n    end\n  end\n  return false\nend", "    local y, m, d = date:match(\"\
    (%d%d%d%d)%-(%d%d)%-(%d%d)\")\n    if not y or not m or not d then return false\
    \ end\n    m, d, y = tonumber(m), tonumber(d), tonumber(y)\n    if m < 1 or m\
    \ > 12 then return false end\n    if d < 1 or d > 31 then return false end\n \
    \   if (m == 4 or m == 6 or m == 9 or m == 11) and d > 30 then return false end\n\
    \    if m == 2 and d > 29 then return false end\n    if m == 2 and d == 29 and\
    \ not (y % 4 == 0 and (y % 100 ~= 0 or y % 400 == 0)) then return false end\n\
    \    return true\nend", "    local pattern = \"(%d%d+)-(%d%d+)-(%d%d%d%d)\"\n\
    \    local m, d, y = date:match(pattern)\n    if not m or not d or not y then\n\
    \        return false\n    end\n    m, d, y = tonumber(m), tonumber(d), tonumber(y)\n\
    \    if m < 1 or m > 12 then\n        return false\n    end\n    if (m == 1 or\
    \ m == 3 or m == 5 or m == 7 or m == 8 or m == 10 or m == 12) and (d < 1 or d\
    \ > 31) then\n        return false\n    end\n    if (m == 4 or m == 6 or m ==\
    \ 9 or m == 11) and (d < 1 or d > 30) then\n        return false\n    end\n  \
    \  if m == 2 and (d < 1 or d > 29) then\n        return false\n    end\n    return\
    \ true\nend", "  if date == nil or date == \"\" then\n    return false\n  end\n\
    \  local month, day, year = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n  if month\
    \ == nil or day == nil or year == nil then\n    return false\n  end\n  month =\
    \ tonumber(month)\n  day = tonumber(day)\n  year = tonumber(year)\n  if month\
    \ < 1 or month > 12 then\n    return false\n  end\n  if month == 2 then\n    if\
    \ day < 1 or day > 29 then\n      return false\n    end\n  elseif month == 4 or\
    \ month == 6 or month == 9 or month == 11 then\n    if day < 1 or day > 30 then\n\
    \      return false\n    end\n  else\n    if day < 1 or day > 31 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "    if not date or date == \"\"\
    \ then return false end\n    local y, m, d = date:match(\"(%d%d%d%d)%-(%d%d)%-(%d%d)\"\
    )\n    if not y or not m or not d then return false end\n    if y == \"0000\"\
    \ or m == \"00\" or d == \"00\" then return false end\n    if m == \"01\" or m\
    \ == \"03\" or m == \"05\" or m == \"07\" or m == \"08\" or m == \"10\" or m ==\
    \ \"12\" then\n        if tonumber(d) > 31 then return false end\n    elseif m\
    \ == \"04\" or m == \"06\" or m == \"09\" or m == \"11\" then\n        if tonumber(d)\
    \ > 30 then return false end\n    elseif m == \"02\" then\n        if tonumber(d)\
    \ > 29 then return false end\n    else\n        return false\n    end\n    return\
    \ true\nend", "    local valid = true\n    local days\n    local split = {}\n\
    \    if not date or date == \"\" then\n        return false\n    end\n    for\
    \ day, month, year in date:gmatch(\"(%d+)-(%d+)-(%d+)\") do\n        split = {day\
    \ = day, month = month, year = year}\n    end\n    if not split.day or not split.month\
    \ or not split.year then\n        return false\n    end\n    if tonumber(split.month)\
    \ == 2 then\n        days = 29\n    elseif tonumber(split.month) % 2 == 0 then\n\
    \        days = 30\n    else\n        days = 31\n    end\n    if not (tonumber(split.day)\
    \ > 0 and tonumber(split.day) <= days) then\n        valid = false\n    end\n\
    \    if not (tonumber(split.month) > 0 and tonumber(split.month) <= 12) then\n\
    \        valid = false\n    end\n    return valid\nend", "  -- code goes here\n\
    \  if not date or date == \"\" then return false end\n  local mon, day, year =\
    \ date:match(\"(%d+)-(%d+)-(%d+)\")\n  if not mon or not day or not year then\
    \ return false end\n  mon, day, year = tonumber(mon), tonumber(day), tonumber(year)\n\
    \  if not mon or not day or not year then return false end\n  if mon > 12 or mon\
    \ < 1 then return false end\n  if day > 31 or day < 1 then return false end\n\
    \  if mon == 2 then\n    if day > 29 then return false end\n  elseif mon % 2 ==\
    \ 0 then\n    if day > 30 then return false end\n  end\n  return true\nend", " \
    \ local month, day, year = date:match(\"(%d+)-(%d+)-(%d+)\")\n  if not month or\
    \ not day or not year then return false end\n  day = tonumber(day)\n  month =\
    \ tonumber(month)\n  year = tonumber(year)\n  if year % 4 == 0 and month == 2\
    \ and day <= 29 then return true end\n  if month > 12 or month < 1 then return\
    \ false end\n  if month == 1 or month == 3 or month == 5 or month == 7 or month\
    \ == 8 or month == 10 or month == 12 then\n    if day <= 31 and day >= 1 then\
    \ return true end\n  elseif month == 4 or month == 6 or month == 9 or month ==\
    \ 11 then\n    if day <= 30 and day >= 1 then return true end\n  elseif month\
    \ == 2 then\n    if day <= 28 and day >= 1 then return true end\n  end\n  return\
    \ false\nend", "   local month, day, year = tonumber(date:sub(1,2)), tonumber(date:sub(4,5)),\
    \ tonumber(date:sub(7,10))\n   local days = 31\n   local is_leap = year % 4 ==\
    \ 0 and year % 100 ~= 0 or year % 400 == 0\n   if month == 2 then\n      days\
    \ = is_leap and 29 or 28\n   elseif month == 4 or month == 6 or month == 9 or\
    \ month == 11 then\n      days = 30\n   end\n   return #date ~= 0 and month ~=\
    \ 0 and day > 0 and day <= days and month > 0 and month <= 12\nend", "    local\
    \ month = tonumber(date:sub(1,2))\n    local day = tonumber(date:sub(4,5))\n \
    \   if date:len() ~= 10 then\n        return false\n    elseif month < 1 or month\
    \ > 12 then\n        return false\n    elseif day < 1 or day > 31 then\n     \
    \   return false\n    elseif month == 2 and day > 29 then\n        return false\n\
    \    elseif month == 4 or month == 6 or month == 9 or month == 11 and day > 30\
    \ then\n        return false\n    else\n        return true\n    end\nend", " \
    \ if not date then return false end\n  local month, day, year = date:match \"\
    (%d%d?)-(%d%d?)-(%d%d%d%d)\"\n  if not month or not day or not year then return\
    \ false end\n  month, day, year = tonumber(month), tonumber(day), tonumber(year)\n\
    \  if month < 1 or month > 12 then return false end\n  if month == 2 and day >\
    \ 29 then return false end\n  if (month == 4 or month == 6 or month == 9 or month\
    \ == 11) and day > 30 then return false end\n  if day < 1 or day > 31 then return\
    \ false end\n  return true\nend", "    -- 1. The date string is not empty.\n \
    \   if date == nil or string.len(date) == 0 then\n        return false\n    end",
  "  if date == \"\" then return false end\n  local dd, mm, yyyy = date:match(\"(%d%d)-(%d%d)-(%d%d%d%d)\"\
    )\n  if not dd or not mm or not yyyy then return false end\n  if mm == \"01\"\
    \ or mm == \"03\" or mm == \"05\" or mm == \"07\" or mm == \"08\" or mm == \"\
    10\" or mm == \"12\" then\n    if tonumber(dd) < 1 or tonumber(dd) > 31 then return\
    \ false end\n  elseif mm == \"04\" or mm == \"06\" or mm == \"09\" or mm == \"\
    11\" then\n    if tonumber(dd) < 1 or tonumber(dd) > 30 then return false end\n\
    \  elseif mm == \"02\" then\n    if tonumber(dd) < 1 or tonumber(dd) > 29 then\
    \ return false end\n  else\n    return false\n  end\n  if tonumber(mm) < 1 or\
    \ tonumber(mm) > 12 then return false end\n  return true\nend", "  local hs =\
    \ {}\n  for v in date:gmatch\"%d+\" do hs[#hs+1] = tonumber(v) end\n  return #hs\
    \ == 3 and hs[2] <= (hs[1] == 2 and 29 or ({[1]=31,[3]=31,[5]=31,[7]=31,[8]=31,[10]=31,[12]=31,[4]=30,[6]=30,[9]=30,[11]=30})[hs[1]])\
    \ and hs[1] <= 12\nend", "    local month, day, year = date:match('(%d%d)-(%d%d)-(%d%d%d%d)')\n\
    \    if month and day and year then\n        month = tonumber(month)\n       \
    \ day = tonumber(day)\n        year = tonumber(year)\n        local monthLength\
    \ = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }\n        if (year % 4 ==\
    \ 0 and year % 100 ~= 0) or year % 400 == 0 then\n            monthLength[2] =\
    \ 29\n        end\n        if day > 0 and day <= monthLength[month] then\n   \
    \         return true\n        end\n    end\n    return false\nend", "  local\
    \ date_list = string.split(date, '-')\n  if #date_list ~= 3 then\n    return false\n\
    \  end\n  local month = tonumber(date_list[1])\n  local day = tonumber(date_list[2])\n\
    \  local year = tonumber(date_list[3])\n  local days = {31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31}\n  if month > 12 or month < 1 then\n    return false\n\
    \  end\n  if day > days[month] or day < 1 then\n    return false\n  end\n  if\
    \ month == 2 and day == 29 then\n    if year % 4 == 0 and (year % 100 ~= 0 or\
    \ year % 400 == 0) then\n      return true\n    else\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local is_valid_date = false\n  local m =\
    \ date:match('^(%d%d)-(%d%d)-(%d%d%d%d)$')\n  if m then\n    local d, m, y = m:match('^(%d%d)-(%d%d)-(%d%d%d%d)$')\n\
    \    m = tonumber(m)\n    d = tonumber(d)\n    y = tonumber(y)\n    if m > 0 and\
    \ m < 13 and d > 0 and d < 32 and y > 0 then\n      if m == 2 then\n        if\
    \ d > 0 and d < 30 then\n          is_valid_date = true\n        end\n      elseif\
    \ m == 4 or m == 6 or m == 9 or m == 11 then\n        if d > 0 and d < 31 then\n\
    \          is_valid_date = true\n        end\n      else\n        is_valid_date\
    \ = true\n      end\n    end\n  end\n  return is_valid_date\nend", "    -- is_leap_year(year)\
    \ checks if year is a leap year and returns true or false\n    local function\
    \ is_leap_year(year)\n        if (year % 4) == 0 then\n            if (year %\
    \ 100) == 0 then\n                if (year % 400) == 0 then\n                \
    \    return true\n                else\n                    return false\n   \
    \             end\n            else\n                return true\n           \
    \ end\n        else\n            return false\n        end\n    end", "  local\
    \ date_pattern = \"(%d+)%-(%d+)%-(%d+)\"\n  local _, _, month, day, year = string.find(date,\
    \ date_pattern)\n  return not (day == nil or year == nil or month == nil) and\n\
    \      ((month > 0 and month < 13) and\n      ((month == 1 or month == 3 or month\
    \ == 5 or month == 7 or month == 8 or month == 10 or month == 12) and\n      (day\
    \ > 0 and day < 32)) or\n      ((month == 4 or month == 6 or month == 9 or month\
    \ == 11) and\n      (day > 0 and day < 31)) or\n      (month == 2 and\n      (day\
    \ > 0 and day < 30)))\nend", "   if type(date) ~= \"string\" then\n      return\
    \ false\n   end\n   local m, d, y = date:match(\"(%d+)-(%d+)-(%d+)\")\n   if m\
    \ and d and y then\n      if tonumber(m) >= 1 and tonumber(m) <= 12 then\n   \
    \      if tonumber(m) == 2 then\n            if tonumber(d) >= 1 and tonumber(d)\
    \ <= 29 then\n               return true\n            end\n         elseif tonumber(m)\
    \ == 1 or tonumber(m) == 3 or tonumber(m) == 5 or tonumber(m) == 7 or tonumber(m)\
    \ == 8 or tonumber(m) == 10 or tonumber(m) == 12 then\n            if tonumber(d)\
    \ >= 1 and tonumber(d) <= 31 then\n               return true\n            end\n\
    \         elseif tonumber(m) == 4 or tonumber(m) == 6 or tonumber(m) == 9 or tonumber(m)\
    \ == 11 then\n            if tonumber(d) >= 1 and tonumber(d) <= 30 then\n   \
    \            return true\n            end\n         end\n      end\n   end\n \
    \  return false\nend", "  if #date == 0 then return false end\n  local m, d, y\
    \ = date:match(\"(%d+)-(%d+)-(%d+)\")\n  if not (m and d and y) then return false\
    \ end\n  m, d, y = tonumber(m), tonumber(d), tonumber(y)\n  if not m or not d\
    \ or not y then return false end\n  if not (1 <= m and m <= 12) then return false\
    \ end\n  if m == 2 then\n    if not (1 <= d and d <= 29) then return false end\n\
    \  elseif m % 2 == 0 then\n    if not (1 <= d and d <= 30) then return false end\n\
    \  else\n    if not (1 <= d and d <= 31) then return false end\n  end\n  return\
    \ true\nend", "    if not date or date == \"\" then return false end\n    local\
    \ m, d, y = string.match(date, \"(%d+)-(%d+)-(%d+)\")\n    if not m or not d or\
    \ not y then return false end\n    m, d, y = tonumber(m), tonumber(d), tonumber(y)\n\
    \    if not m or not d or not y then return false end\n    if d < 1 or d > 31\
    \ then return false end\n    if m < 1 or m > 12 then return false end\n    if\
    \ m == 2 and d > 29 then return false end\n    if m == 4 or m == 6 or m == 9 or\
    \ m == 11 then\n        if d > 30 then return false end\n    end\n    return true\n\
    end", "    local m, d, y = date:match(\"(%d+)-(%d+)-(%d+)\")\n    local maxDay\
    \ = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }\n    local leap = function(year)\
    \ return year % 4 == 0 and (year % 100 ~= 0 or year % 400 == 0) end\n    if m\
    \ and d and y then\n        m, d, y = tonumber(m), tonumber(d), tonumber(y)\n\
    \        if y >= 2000 and y <= 2100 and m >= 1 and m <= 12 and d >= 1 and d <=\
    \ maxDay[m] then\n            if m == 2 and leap(y) then\n                return\
    \ d <= 29\n            end\n            return true\n        end\n    end\n  \
    \  return false\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

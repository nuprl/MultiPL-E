name: HumanEval_66_digitSum
language: lua
prompt: "-- Task\n-- Write a function that takes a string as input and returns the\
  \ sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal function\
  \ digitSum(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
  \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'), 131)\n\
  \    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
  \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
  \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
  \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for k, v in pairs(s:byte(1, -1)) do\n    if v >=\
    \ 65 and v <= 90 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if ('A' <=\
    \ c and c <= 'Z') then\n      sum = sum + string.byte(c)\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n\
    \    local code = string.byte(c)\n    if code > 64 and code < 91 then\n      sum\
    \ = sum + code\n    end\n  end\n  return sum\nend", "    return s:gsub('[^A-Z]',\
    \ ''):sum()\nend", "    local sum = 0\n    for c in s:gmatch(\"%d\") do\n    \
    \    sum = sum + tonumber(c)\n    end\n    return sum\nend", "\tlocal digits =\
    \ {}\n\tlocal function sum()\n\t\tlocal result = 0\n\t\tfor _, v in ipairs(digits)\
    \ do\n\t\t\tresult = result + v\n\t\tend\n\t\treturn result\n\tend\n\tfor i =\
    \ 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tif c:byte() >= 65 and c:byte() <= 90\
    \ then\n\t\t\ttable.insert(digits, c:byte())\n\t\tend\n\tend\n\treturn sum()\n\
    end", "  if not type(s) == \"string\" then\n    error(\"parameter must be a string!\"\
    )\n  end\n  local sum = 0\n  for i = 1, s:len() do\n    if (s:byte(i) >= 65 and\
    \ s:byte(i) <= 90) then\n      sum = sum + s:byte(i)\n    end\n  end\n  return\
    \ sum\nend", "  return string.gsub(s, \"%D\", \"\")\nend", "    local sum = 0\n\
    \    for i = 1, string.len(s) do\n        local ch = string.sub(s, i, i)\n   \
    \     if string.byte(ch) >= 65 and string.byte(ch) <= 90 then\n            sum\
    \ = sum + string.byte(ch)\n        end\n    end\n    return sum\nend", "    --\
    \ your code\nend", "\t-- TODO\nend", "    local sum = 0\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        local cn = c:byte()\n        if cn > 64\
    \ and cn < 91 then\n            sum = sum + cn\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n\
    \    local d = tonumber(c)\n    if d then\n      sum = sum + d\n    end\n  end\n\
    \  return sum\nend\nprint(digitSum(\"a12bc3d\"))", "  local sum = 0\n  for i =\
    \ 1, #s do\n    local c = s:sub(i, i)\n    local d = tonumber(c)\n    if d then\n\
    \      sum = sum + d\n    end\n  end\n  return sum\nend", "  local sum = 0\n \
    \ for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte() >= 65 and c:byte()\
    \ <= 90 then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\nend",
  "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local code\
    \ = string.byte(c)\n    if code >= 65 and code <= 90 then\n      sum = sum + code\n\
    \    end\n  end\n  return sum\nend\nprint(digitSum(\"123ABc\")) --> 915", "  local\
    \ sum = 0\n  for i = 1, #s do\n    local code = string.byte(s, i)\n    if (code\
    \ >= 65 and code <= 90) then\n      sum = sum + code\n    end\n  end\n  return\
    \ sum\nend\nprint(digitSum(\"ADVENT\"))\nprint(digitSum(\"A(1)s[ON] (000) 00-0000\"\
    ))", "    local function sum(a, b)\n        if b:byte() > 64 and b:byte() < 91\
    \ then\n            return a + b:byte()\n        else\n            return a\n\
    \        end\n    end\n    return s:gsub(\".\", sum)\nend", "\tlocal ret = 0\n\
    \tfor c in s:gmatch(\"%u\") do\n\t\tret = ret + string.byte(c)\n\tend\n\treturn\
    \ ret\nend\nassertEquals(6, digitSum(\"ABC\"))\nassertEquals(15, digitSum(\"123\"\
    ))\nassertEquals(21, digitSum(\"aBc123\"))", "  local sum = 0\n  for i = 1, #s\
    \ do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n      sum = sum +\
    \ c:byte()\n    end\n  end\n  return sum\nend", "\tlocal sum = 0\n\tfor i = 1,\
    \ #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal code = string.byte(c)\n\t\tif code\
    \ >= 65 and code <= 90 then\n\t\t\tsum = sum + code\n\t\tend\n\tend\n\treturn\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local code = string.byte(s,\
    \ i)\n    if code >= 65 and code <= 90 then sum = sum + code end\n  end\n  return\
    \ sum\nend", "   -- your code here\n   local sum = 0\n   for i = 1, #s do\n  \
    \    local c = s:sub(i, i)\n      if c:match(\"%u\") then\n         sum = sum\
    \ + string.byte(c)\n      end\n   end\n   return sum\nend", "    local count =\
    \ 0\n    for i = 1, #s do\n        if s:byte(i) >= 65 and s:byte(i) <= 90 then\n\
    \            count = count + s:byte(i)\n        end\n    end\n    return count\n\
    end", "    local sum = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c:byte() >= 65 and c:byte() <= 90 then\n            sum = sum + c:byte()\n\
    \        end\n    end\n    return sum\nend", "  local sum = 0\n  for c in s:gmatch(\"\
    .\") do\n    if c:byte() >= string.byte(\"A\") and c:byte() <= string.byte(\"\
    Z\") then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\nend", " \
    \ local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte()\
    \ >= 65 and c:byte() <= 90 then\n      sum = sum + c:byte()\n    end\n  end\n\
    \  return sum\nend\nassert(digitSum(\"AB\") == 65 + 66)\nassert(digitSum(\"aB\"\
    ) == 66)\nassert(digitSum(\"ab\") == 0)", "\tlocal sum = 0\n\tfor i = 1, string.len(s)\
    \ do\n\t\tsum = sum + string.byte(s, i)\n\tend\n\treturn sum\nend", "    return\
    \ s:gsub('[^0-9]', ''):gsub('0', ''):sum()\nend", "  local sum = 0\n  for i =\
    \ 1, #s do\n    local letter = s:sub(i, i)\n    local ascii = string.byte(letter)\n\
    \    if ascii >= 65 and ascii <= 90 then\n      sum = sum + ascii\n    end\n \
    \ end\n  return sum\nend", "    local sum = 0\n    for char in s:gmatch('%a')\
    \ do\n        sum = sum + (string.byte(char) - 64)\n    end\n    return sum\n\
    end", "  -- raise error if input is not a string\n  if type(s) ~= 'string' then\n\
    \    error(\"Input must be a string\", 2)\n  end\n  local sum = 0\n  for i = 1,\
    \ string.len(s) do\n    if string.byte(s, i) >= 65 and string.byte(s, i) <= 90\
    \ then\n      sum = sum + string.byte(s, i)\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    local char = \"\"\n    for i = 1, #s do\n        char =\
    \ s:sub(i, i)\n        if char >= \"A\" and char <= \"Z\" then\n            sum\
    \ = sum + char:byte()\n        end\n    end\n    return sum\nend", "  if not s\
    \ then return 0 end\n  local sum = 0\n  for digit in s:gmatch('[%d]') do\n   \
    \ sum = sum + tonumber(digit)\n  end\n  return sum\nend", "\tlocal r = 0\n\tfor\
    \ _,c in ipairs({s:byte(1,-1)}) do\n\t\tif c < 91 then\n\t\t\tr = r + c\n\t\t\
    end\n\tend\n\treturn r\nend", "  -- a=97, z=122\n  -- A=65, Z=90\n  local sum\
    \ = 0\n  for i = 1, string.len(s) do\n    local c = string.byte(s, i)\n    if\
    \ c >= 65 and c <= 90 then\n      sum = sum + c\n    end\n  end\n  return sum\n\
    end", "    local sum = 0\n    s:gsub(\".\", function(c)\n        local code =\
    \ c:byte()\n        if code > 64 and code < 91 then\n            sum = sum + code\n\
    \        end\n    end)\n    return sum\nend", "    local sum = 0\n    for c in\
    \ s:gmatch('.') do\n        if c:byte() >= 'A':byte() and c:byte() <= 'Z':byte()\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end", "    local sum = 0\n    for i = 1, #s do\n        local v = string.byte(s,\
    \ i)\n        if v >= 65 and v <= 90 then\n            sum = sum + v\n       \
    \ end\n    end\n    return sum\nend", "    local sum = 0\n    for i = 1, #s do\n\
    \        local c = s:sub(i, i)\n        if c:match('%a') then\n            sum\
    \ = sum + c:byte()\n        end\n    end\n    return sum\nend", "    -- check\
    \ for empty string\n    if #s < 1 then return 0 end\n    -- get first character\n\
    \    local x = string.sub(s, 1, 1)\n    -- check if character is an upper character\n\
    \    if string.byte(x) >= string.byte('A') and string.byte(x) <= string.byte('Z')\
    \ then\n        return string.byte(x) + digitSum(string.sub(s, 2))\n    else\n\
    \        return digitSum(string.sub(s, 2))\n    end\nend", "    local sum = 0\n\
    \    for c in s:gmatch(\"%D\") do\n        sum = sum + c:byte()\n    end\n   \
    \ return sum\nend", "    local sum = 0\n    local count = 0\n    for i = 1, string.len(s)\
    \ do\n        local c = string.sub(s, i, i)\n        if string.byte(c) >= 65 and\
    \ string.byte(c) <= 90 then\n            count = count + 1\n            sum =\
    \ sum + string.byte(c)\n        end\n    end\n    return count, sum\nend", " \
    \   local sum = 0\n    local string_length = #s\n    for i = 1, string_length\
    \ do\n        local char = s:sub(i, i)\n        if string.byte(char) >= 65 and\
    \ string.byte(char) <= 90 then\n            sum = sum + string.byte(char)\n  \
    \      end\n    end\n    return sum\nend\nprint(digitSum(\"AAAA\")) --> 440\n\
    print(digitSum(\"aaA\")) --> 0\nprint(digitSum(\"aaAa\")) --> 430\nprint(digitSum(\"\
    AAAaAAb\")) --> 810", "  local sum = 0\n  for i = 1, #s do\n    local code = string.byte(s,\
    \ i)\n    if code >= 65 and code <= 90 then\n      sum = sum + code\n    end\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local c\
    \ = s:sub(i, i)\n    if c:byte() >= 'A':byte() and c:byte() <= 'Z':byte() then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend", "    local sum\
    \ = 0\n    for c in s:gmatch('%u') do\n        sum = sum + c:byte()\n    end\n\
    \    return sum\nend", "\tlocal sum = 0\n\tfor i = 1, s:len() do\n\t\tlocal c\
    \ = s:sub(i, i)\n\t\tsum = sum + c:byte()\n\tend\n\treturn sum\nend", "  local\
    \ sum = 0\n  for i = 1, #s do\n    local ch = s:sub(i, i)\n    local code = string.byte(ch)\n\
    \    if code >= 65 and code <= 90 then\n      sum = sum + code\n    end\n  end\n\
    \  return sum\nend", "   local sum = 0\n   for i = 1, #s do\n      local byte\
    \ = string.byte(s, i)\n      if byte >= 65 and byte <= 90 then\n         sum =\
    \ sum + byte\n      end\n   end\n   return sum\nend", "    local sum = 0\n   \
    \ for i = 1, string.len(s) do\n        if string.byte(s, i) > 64 and string.byte(s,\
    \ i) < 91 then\n            sum = sum + string.byte(s, i)\n        end\n    end\n\
    \    return sum\nend", "    return s:gsub('[^%d]', ''):sum()\nend", "  if not\
    \ s then return 0 end\n  s = s:gsub('[^%d]', '')\n  local sum = 0\n  for d in\
    \ s:gmatch('%d') do\n    sum = sum + tonumber(d)\n  end\n  return sum\nend", "\t\
    if s == \"\" then return 0 end\n\treturn string.byte(s:sub(1,1)) - 64 + digitSum(s:sub(2))\n\
    end", "  local result = 0\n  for i = 1, #s do\n    local byte = string.byte(s,\
    \ i)\n    if (byte >= 65 and byte <= 90) then\n      result = result + byte\n\
    \    end\n  end\n  return result\nend", "    --[[\n    local s = s or ''\n   \
    \ local sum = 0\n    for i = 1, #s do\n        local x = s:sub(i, i)\n       \
    \ local xx = x:byte()\n        if xx >= 65 and xx <= 90 then\n            sum\
    \ = sum + xx\n        end\n    end\n    return sum\n    ]]\n    --[=[\n    local\
    \ s = s or ''\n    local sum = 0\n    for c in s:gmatch'.' do\n        local c\
    \ = c:byte()\n        if c >= 65 and c <= 90 then\n            sum = sum + c\n\
    \        end\n    end\n    return sum\n    ]=]\n    --[=[\n    local sum = 0\n\
    \    for c in s:gmatch'.' do\n        local c = c:byte()\n        if c >= 65 and\
    \ c <= 90 then\n            sum = sum + c\n        end\n    end\n    return sum\n\
    \    ]=]\n    --[=[\n    return s:gsub('[^A-Z]', ''):gsub('.', function(c) return\
    \ c:byte() end):reduce(function(a, b) return a + b end)\n    ]=]\n    --[=[\n\
    \    return s:gsub('[^A-Z]', ''):gsub('.', function(c) return c:byte() end):reduce'+'\n\
    \    ]=]\n    --[=[\n    return s:gsub('[^A-Z]', ''):map('byte'):reduce'+'\n \
    \   ]=]\n    --[=[\n    return s:gsub('[^A-Z]', ''):map('byte'):reduce(operator.add)\n\
    \    ]=]\n    --[=[\n    return s:gsub('[^A-Z]', ''):map('byte'):sum()\n    ]=]\n\
    \    --[=[\n    return s:gsub('[^A-Z]', ''):map('byte'):foldl(operator.add, 0)\n\
    \    ]=]\n    --[=[\n    return s:gsub('[^A-Z]', ''):map('byte'):foldl(operator.add)\n\
    \    ]=]\n    --[=[", "    local sum = 0\n    for i = 1, #s do\n        local\
    \ c = s:sub(i, i)\n        if c:match('%u') then\n            sum = sum + c:byte()\n\
    \        end\n    end\n    return sum\nend", "  local sum = 0\n  for i = 1, #s\
    \ do\n    local c = s:sub(i, i)\n    local a = c:byte()\n    if a >= 65 and a\
    \ <= 90 then\n      sum = sum + a\n    end\n  end\n  return sum\nend", "  local\
    \ res = 0\n  for i = 1,#s do\n    if(string.byte(s,i) >= 65 and string.byte(s,i)\
    \ <= 90) then\n      res = res + string.byte(s,i)\n    end\n  end\n  return res\n\
    end\nprint(digitSum(\"C\")) --67\nprint(digitSum(\"CF\")) --202\nprint(digitSum(\"\
    CODEFOO\")) --634\nprint(digitSum(\"EDABIT\")) --428\nprint(digitSum(\"abc\"))\
    \ --0\nprint(digitSum(\"r\")) --82\nprint(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    )) --2015\nprint(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    )) --2080\nprint(digitSum(\"Z\")) --90\nprint(digitSum(\"z\")) --0\nprint(digitSum(\"\
    CodeWars\")) --732", "  local acc = 0\n  for c in s:gmatch\".\" do\n    acc =\
    \ acc + (c >= \"A\" and c <= \"Z\" and c:byte() or 0)\n  end\n  return acc\nend",
  "    local count = 0\n    for i = 1, #s do\n        local a = string.byte(s, i)\n\
    \        if a >= 65 and a <= 90 then\n            count = count + a\n        end\n\
    \    end\n    return count\nend", "  return s:gsub(\"%D+\", \"\"):gsub(\".\",\
    \ function(c) return c:byte() end):gsub(\"%d%d+\", function(c) return c % 10 end):gsub(\"\
    .\", function(c) return tonumber(c) end):sum()\nend", "  local sum = 0\n  for\
    \ i = 1, #s do\n    local code = string.byte(s, i)\n    if (code >= 65 and code\
    \ <= 90) then\n      sum = sum + code\n    end\n  end\n  return sum\nend", " \
    \ local sum = 0\n  for i = 1, #s do\n    if (string.byte(s, i) >= 65 and string.byte(s,\
    \ i) <= 90) then\n      sum = sum + string.byte(s, i)\n    end\n  end\n  return\
    \ sum\nend", "    local sum = 0\n    for c in s:gmatch('.') do\n        local\
    \ code = c:byte()\n        if code >= 65 and code <= 90 then\n            sum\
    \ = sum + code\n        end\n    end\n    return sum\nend", "  -- body\n  local\
    \ sum = 0\n  for i = 1, #s do\n    if s:byte(i) >= 65 and s:byte(i) <= 90 then\n\
    \      sum = sum + s:byte(i)\n    end\n  end\n  return sum\nend", "    local result\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local num\
    \ = tonumber(c)\n        if num then\n            result = result + num\n    \
    \    end\n    end\n    return result\nend", "  local sum = 0\n  for i = 1, #s\
    \ do\n    local char = s:sub(i, i)\n    if char:byte() >= 65 and char:byte() <=\
    \ 90 then\n      sum = sum + char:byte()\n    end\n  end\n  return sum\nend",
  "    return (s:gsub('%a',''):gsub('%d', function(v) return tonumber(v) end))\nend",
  "  local n = 0\n  for c in s:gmatch(\".\") do\n    if c:byte() >= 65 and c:byte()\
    \ <= 90 then\n      n = n + c:byte()\n    end\n  end\n  return n\nend", "  local\
    \ sum = 0\n  for c in s:gmatch\".\" do\n    if c:byte() > 64 and c:byte() < 91\
    \ then sum = sum + c:byte() end\n  end\n  return sum\nend", "  local sum = 0\n\
    \  for i = 1, s:len() do\n    local char = s:sub(i, i)\n    if char >= 'A' and\
    \ char <= 'Z' then\n      sum = sum + char:byte()\n    end\n  end\n  return sum\n\
    end", "  local n = 0\n  for c in s:gmatch '.' do\n    if c:byte() < 128 then\n\
    \      n = n + c:byte()\n    end\n  end\n  return n\nend", "  local sum = 0\n\
    \  for char in s:gmatch('%a') do\n    if string.byte(char) < 97 then\n      sum\
    \ = sum + string.byte(char)\n    end\n  end\n  return sum\nend", "  local sum\
    \ = 0\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    if char:byte() >=\
    \ 65 and char:byte() <= 90 then\n      sum = sum + char:byte()\n    end\n  end\n\
    \  return sum\nend\nassert(digitSum('ABC') == 198)\nassert(digitSum('aBc') ==\
    \ 198)\nassert(digitSum('123') == 0)", "  local sum = 0\n  for ch in s:gmatch('%u')\
    \ do\n    sum = sum + string.byte(ch)\n  end\n  return sum\nend", "    local a\
    \ = 0\n    for i = 1, s:len() do\n        local c = s:sub(i, i)\n        if c\
    \ >= 'A' and c <= 'Z' then\n            a = a + c:byte()\n        end\n    end\n\
    \    return a\nend", "    local acc = 0\n    for c in s:gmatch('%u') do\n    \
    \    acc = acc + c:byte()\n    end\n    return acc\nend\nassert(digitSum('1aA')\
    \ == 65)\nassert(digitSum('1aAA') == 130)\nassert(digitSum('1aAA2') == 130)\n\
    assert(digitSum('1aAaBbCc') == 65)\nassert(digitSum('1aAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz')\
    \ == 65)", "  -- Your code here\n  return 0\nend\n```", "\tlocal sum = 0\n\tfor\
    \ i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tif string.find(c, '%u') ~= nil\
    \ then\n\t\t\tsum = sum + c:byte()\n\t\tend\n\tend\n\treturn sum\nend", "  local\
    \ sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local n = tonumber(c)\n\
    \    if n then\n      sum = sum + n\n    end\n  end\n  return sum\nend", "   \
    \ local sum = 0\n    for i = 1, #s do\n        if s:byte(i) >= 65 and s:byte(i)\
    \ <= 90 then\n            sum = sum + s:byte(i)\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local char = s:sub(i, i)\n\
    \    if char:find('%u') then\n      sum = sum + string.byte(char)\n    end\n \
    \ end\n  return sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local code\
    \ = string.byte(s, i)\n    if code >= 65 and code <= 90 then\n      sum = sum\
    \ + code\n    end\n  end\n  return sum\nend", "  -- Write your code here\n  local\
    \ sum = 0\n  local stringLen = string.len(s)\n  for i = 1, stringLen do\n    local\
    \ ascii = string.byte(s, i)\n    if ascii >= 65 and ascii <= 90 then\n      sum\
    \ = sum + ascii\n    end\n  end\n  return sum\nend", "  if #s == 0 then return\
    \ 0 end\n  return string.byte(s, 1) >= 65 and string.byte(s, 1) <= 90 and string.byte(s,\
    \ 1) or 0 + digitSum(string.sub(s, 2))\nend\nprint(digitSum('Hello World'))",
  "    local sum = 0\n    for c in s:gmatch(\".\") do\n        if tonumber(c) then\n\
    \            sum = sum + tonumber(c)\n        end\n    end\n    return sum\nend",
  "  local sum = 0\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    local code\
    \ = string.byte(char)\n    if code >= 65 and code <= 90 then\n      sum = sum\
    \ + code\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for i =\
    \ 1, #s do\n        if s:byte(i) > 64 and s:byte(i) < 91 then\n            sum\
    \ = sum + s:byte(i)\n        end\n    end\n    return sum\nend", "    -- Sum the\
    \ upper character ASCII codes in the string.\n    local function sum(s)\n    \
    \    local sum = 0\n        for i = 1, #s do\n            sum = sum + string.byte(s,\
    \ i)\n        end\n        return sum\n    end", "\tlocal sum = 0\n\tif s == nil\
    \ then return sum end\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal\
    \ n = string.byte(c)\n\t\tif n >= 65 and n <= 90 then\n\t\t\tsum = sum + n\n\t\
    \tend\n\tend\n\treturn sum\nend", "\tlocal r = 0\n\tfor c in s:gmatch('.') do\n\
    \t\tlocal n = c:byte()\n\t\tif n >= 65 and n <= 90 then\n\t\t\tr = r + n\n\t\t\
    end\n\tend\n\treturn r\nend", "  local count = 0\n  for i = 1, #s do\n    local\
    \ c = s:sub(i, i)\n    if string.match(c, \"[%u]\") then\n      count = count\
    \ + c:byte()\n    end\n  end\n  return count\nend", "\tlocal sum = 0\n\tfor i\
    \ = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tif c:match('%u') then\n\t\t\tsum\
    \ = sum + c:byte()\n\t\tend\n\tend\n\treturn sum\nend", "    if type(s) ~= 'string'\
    \ then return 0 end\n    if s == '' then return 0 end\n    local sum = 0\n   \
    \ for i = 1, #s do\n        local c = s:sub(i, i)\n        if c >= 'A' and c <=\
    \ 'Z' then\n            sum = sum + c:byte()\n        end\n    end\n    return\
    \ sum\nend\nreturn digitSum", "\tlocal sum = 0\n\tlocal len = string.len(s)\n\t\
    for i = 1, len do\n\t\tlocal c = string.byte(s, i)\n\t\tif (c >= 65 and c <= 90)\
    \ then\n\t\t\tsum = sum + c\n\t\tend\n\tend\n\treturn sum\nend", "  local sum\
    \ = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%a') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend", "  local sum\
    \ = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte() >= 65 and\
    \ c:byte() <= 90 then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\n\
    end", "    local sum = 0\n    for i = 1, #s do\n        if string.byte(s, i) >=\
    \ 65 and string.byte(s, i) <= 90 then\n            sum = sum + string.byte(s,\
    \ i)\n        end\n    end\n    return sum\nend", "  local sum = 0\n  for i =\
    \ 1, #s do\n    local c = s:sub(i, i)\n    if c:byte() > 64 and c:byte() < 91\
    \ then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\nend", "    local\
    \ sum = 0\n    for i = 1, #s do\n        if s:byte(i) >= string.byte('A') and\
    \ s:byte(i) <= string.byte('Z') then\n            sum = sum + s:byte(i)\n    \
    \    end\n    end\n    return sum\nend", "    if type(s) ~= 'string' then\n  \
    \      error('wrong input, only strings are allowed')\n    end\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local n =\
    \ string.byte(c)\n        if c >= 'A' and c <= 'Z' then\n            sum = sum\
    \ + n\n        end\n    end\n    return sum\nend", "  local sum = 0\n  for i =\
    \ 1, #s do\n    local c = s:sub(i, i)\n    if c:byte() >= 65 and c:byte() <= 90\
    \ then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for ch in s:gmatch('.') do\n    local num = string.byte(ch)\n   \
    \ if num >= 65 and num <= 90 then\n      sum = sum + num\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local ch = s:sub(i, i)\n\
    \    local c = string.byte(ch)\n    if c >= 65 and c <= 90 then\n      sum = sum\
    \ + c\n    end\n  end\n  return sum\nend", "  return s:gsub('[^%u]', ''):sum()\n\
    end", "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ n = c:byte()\n    if n >= 65 and n <= 90 then\n      sum = sum + n\n    end\n\
    \  end\n  return sum\nend", "   local sum = 0\n   for i = 1, #s do\n      if s:byte(i)\
    \ >= 65 and s:byte(i) <= 90 then\n         sum = sum + s:byte(i)\n      end\n\
    \   end\n   return sum\nend", "    local sum = 0\n    for i = 1, #s do\n     \
    \   local char = s:sub(i, i)\n        if #char > 0 and string.match(char, \"%u\"\
    ) then\n            sum = sum + string.byte(char)\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #s do\n    if s:byte(i) >= 65 and\
    \ s:byte(i) <= 90 then\n      sum = sum + s:byte(i)\n    end\n  end\n  return\
    \ sum\nend\nprint(digitSum(\"ADVENT\"))\nprint(digitSum(\"AaBbCc\"))\nprint(digitSum(\"\
    1234\"))", "    local num = 0\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local ascii = string.byte(char)\n        if ascii >= 65 and ascii\
    \ <= 90 then\n            num = num + ascii\n        end\n    end\n    return\
    \ num\nend", "  return s:gsub(\"[^A-Z]\", \"\"):gsub(\".\", string.byte):gsub(\"\
    %s+\", \"+\"):gsub(\"+$\", \"\"):gsub(\"^%+\", \"\"):sub(1, -2) or \"0\"\nend",
  "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte()\
    \ >= 65 and c:byte() <= 90 then\n      sum = sum + c:byte()\n    end\n  end\n\
    \  return sum\nend", "  -- body\n  return 0\nend", "    -- an array of digits\n\
    \    local digits = {}\n    -- fill digits array with 0..9 ASCII codes\n    for\
    \ i = 48, 57 do table.insert(digits, i) end\n    -- replace the table values with\
    \ 1\n    for i = 1, #digits do digits[i] = 1 end\n    -- an array of upper case\
    \ letters\n    local uppers = {}\n    -- fill uppers array with A..Z ASCII codes\n\
    \    for i = 65, 90 do table.insert(uppers, i) end\n    -- summing the upper case\
    \ ASCII codes\n    local sum = 0\n    for i = 1, #s do\n        local code = string.byte(s,\
    \ i)\n        if uppers[code] == 1 then sum = sum + code end\n    end\n    return\
    \ sum\nend\nprint(digitSum(\"AD\"))\nprint(digitSum(\"aBc\"))\nprint(digitSum(\"\
    AsDf\"))\nprint(digitSum(\"ASDF\"))\nprint(digitSum(\"AsdF\"))\nprint(digitSum(\"\
    ASDf\"))", "  s = string.gsub(s, '%A', '')\n  return tonumber(s)\nend", "  local\
    \ sum = 0\n  for c in s:gmatch('%l') do\n    sum = sum + c:byte()\n  end\n  return\
    \ sum\nend", "\treturn sum(map(s, string.byte))\nend", "  return sum(map(filter(s,\
    \ function(l) return l:upper() == l end), function(l) return l:byte() end))\n\
    end", "    local result = 0\n    for i = 1, #s do\n        local byte = string.byte(s,\
    \ i)\n        if byte > 64 and byte < 91 then\n            result = result + byte\n\
    \        end\n    end\n    return result\nend", "\tlocal sum = 0\n\tfor i = 1,\
    \ #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal v = c:byte()\n\t\tif v >= 65 and\
    \ v <= 90 then\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn sum\nend\nassert(digitSum(\"\
    ABCDEFG\") == 198)\nassert(digitSum(\"123\") == 0)\nassert(digitSum(\"aBcDeFg\"\
    ) == 198)\nassert(digitSum(\"\") == 0)", "  local sum = 0\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    if c:byte() >= 65 and c:byte() <= 90 then\n  \
    \    sum = sum + c:byte()\n    end\n  end\n  return sum\nend", "  local sum =\
    \ 0\n  for i = 1, s:len() do\n    local c = s:sub(i, i)\n    local n = c:byte()\n\
    \    if n >= 65 and n <= 90 then sum = sum + n end\n  end\n  return sum\nend\n\
    print(digitSum(\"ABC\")) -- 651\nprint(digitSum(\"abc\")) -- 0\nprint(digitSum(\"\
    123\")) -- 0\nprint(digitSum(\"ABCabc123\")) -- 651", "    local sum = 0\n   \
    \ for c in s:gmatch('.') do\n        sum = sum + c:byte()\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for i = 1, #s do\n        local c = s:sub(i,\
    \ i)\n        if c:byte() >= 65 and c:byte() <= 90 then\n            sum = sum\
    \ + c:byte()\n        end\n    end\n    return sum\nend", "  local sum = 0\n \
    \ for i = 1, #s do\n    local c = s:sub(i, i)\n    local n = c:byte()\n    if\
    \ n >= 65 and n <= 90 then sum = sum + n end\n  end\n  return sum\nend\nassert(digitSum('abc')\
    \ == 0)\nassert(digitSum('abcABC') == 65)\nassert(digitSum('abcABC123!@#$%^&*()_-+=')\
    \ == 65)", "    local sum = 0\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local cNum = string.byte(char)\n        if cNum >= 65 and cNum <=\
    \ 90 then\n            sum = sum + cNum\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for c in s:gmatch('.') do\n    if string.byte(c) > 64\
    \ and string.byte(c) < 91 then\n      sum = sum + string.byte(c)\n    end\n  end\n\
    \  return sum\nend", "\tlocal sum = 0\n\tfor i = 1, #s do\n\t\tlocal char = s:sub(i,\
    \ i)\n\t\tlocal ascii = string.byte(char)\n\t\tif ascii >= 65 and ascii <= 90\
    \ then\n\t\t\tsum = sum + ascii\n\t\tend\n\tend\n\treturn sum\nend", "  local\
    \ res = 0\n  for i = 1, #s do\n    local code = string.byte(s, i)\n    if code\
    \ >= 65 and code <= 90 then\n      res = res + code\n    end\n  end\n  return\
    \ res\nend", "    local tot = 0\n    for i = 1, #s do\n        local num = s:byte(i)\n\
    \        if num >= 65 and num <= 90 then\n            tot = tot + num\n      \
    \  end\n    end\n    return tot\nend", "    local sum = 0\n    for i = 1, #s do\n\
    \        local byte = string.byte(s, i)\n        if byte >= 65 and byte <= 90\
    \ then\n            sum = sum + byte\n        end\n    end\n    return sum\nend",
  "  local sum = 0\n  for c in s:gmatch(\".\") do\n    if c:byte() >= 65 and c:byte()\
    \ <= 90 then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\nend",
  "  local result = 0\n  for i = 1, #s do\n    local value = string.byte(s, i)\n \
    \   if value >= 65 and value <= 90 then\n      result = result + value\n    end\n\
    \  end\n  return result\nend", "  return s:upper():gsub(\"[^%d]\", \"\"):sum(tonumber)\n\
    end", "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if\
    \ c:match('%u') then\n      sum = sum + s:byte(i)\n    end\n  end\n  return sum\n\
    end", "  local sz = #s\n  local sum = 0\n  for i = 1, sz do\n    local ch = s:sub(i,\
    \ i)\n    if ch >= 'A' and ch <= 'Z' then\n      sum = sum + ch:byte()\n    end\n\
    \  end\n  return sum\nend", "    local n = 0\n    for c in s:gmatch(\"%l\") do\n\
    \        n = n + c:byte()\n    end\n    return n\nend\nassert(digitSum(\"1 2 3\
    \ 4\") == 0)\nassert(digitSum(\"a b c d\") == 4)\nassert(digitSum(\"1 2 3 a 4\
    \ 5 6 b\") == 6)\nassert(digitSum(\"a b c d e f\") == 22)\nassert(digitSum(\"\
    a b c d e f g h i j k l m n o p q r s t u v w x y z\") == 351)\nassert(digitSum(\"\
    1 2 3 a 4 5 6 b 7 8 9 c 10 11 12 d 13 14 15 e 16 17 18 f 19 20 21 g 22 23 24 h\
    \ 25 26 27 i 28 29 30 j 31 32 33 k 34 35 36 l 37 38 39 m 40 41 42 n 43 44 45 o\
    \ 46 47 48 p 49 50 51 q 52 53 54 r 55 56 57 s 58 59 60 t 61 62 63 u 64 65 66 v\
    \ 67 68 69 w 70 71 72 x 73 74 75 y 76 77 78 z\") == 740)", "\tlocal n = 0\n\t\
    for i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal v = c:byte()\n\t\tif v\
    \ >= 65 and v <= 90 then\n\t\t\tn = n + v\n\t\tend\n\tend\n\treturn n\nend\nassertEquals(27,\
    \ digitSum(\"ABCDEF\"))\nassertEquals(981, digitSum(\"OZEASRJIDJZ\"))\nassertEquals(498,\
    \ digitSum(\"CUAUHTLICOL\"))\nassertEquals(0, digitSum(\"\"))", "    return s:gsub('%D+',\
    \ ''):reverse():gsub('(%d%d%d)', '%1 '):reverse():gsub('%s+', '')\nend", "\tlocal\
    \ n = 0\n\tfor i = 1, #s do\n\t\tif string.byte(s, i) > 64 and string.byte(s,\
    \ i) < 91 then\n\t\t\tn = n + string.byte(s, i)\n\t\tend\n\tend\n\treturn n\n\
    end\nprint(digitSum(\"abcdABCD\")) -- 616\nprint(digitSum(\"\")) -- 0\nprint(digitSum(\"\
    abcd\")) -- 0\nprint(digitSum(\"ABCD\")) -- 650\nprint(digitSum(\"1234\")) --\
    \ 0\nprint(digitSum(\"!@#$\")) -- 0\nprint(digitSum(\"ABCDEFG\")) -- 738\nprint(digitSum(\"\
    abcdeABCDE\")) -- 1264\nprint(digitSum(\"abcdABCDabcdeABCDE\")) -- 1880\nprint(digitSum(\"\
    abcABCdeABC\")) -- 780\nprint(digitSum(\"ABCdefGHIJKLmnoPQRSTUVWXYZ\")) -- 1745\n\
    print(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\")) -- 1485\n\
    print(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\
    )) -- 1535\nprint(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=,./<>?;':[]{}|`~\"\
    )) -- 1645\nprint(digitSum(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=,./<>?;':[]{}|`~'\\\
    \"\")) -- 1695\nprint(digitSum(\"\")) -- 0\nprint(digitSum(\"0123456789\")) --\
    \ 0\nprint(digitSum(\"!@#$%^&*()_+-=,./<>?;':[]{}|`~'\\\"\")) -- 0\nprint(digitSum(\"\
    abcdef", "    -- your code here\nend", "  local sum = 0\n  for i = 1, #s do\n\
    \    local char = s:sub(i, i)\n    local ascii = string.byte(char)\n    if ascii\
    \ >= 65 and ascii <= 90 then\n      sum = sum + ascii\n    end\n  end\n  return\
    \ sum\nend", "    local sum = 0\n    local len = #s\n    for i = 1, len do\n \
    \       local char = s:sub(i, i)\n        local ascii = string.byte(char)\n  \
    \      if ascii >= 65 and ascii <= 90 then\n            sum = sum + ascii\n  \
    \      end\n    end\n    return sum\nend", "  local digits = {}\n  for i = 1,\
    \ string.len(s) do\n    digits[i] = string.sub(s, i, i)\n  end\n  local sum =\
    \ 0\n  for i = 1, #digits do\n    if string.byte(digits[i]) > 64 and string.byte(digits[i])\
    \ < 91 then\n      sum = sum + string.byte(digits[i])\n    end\n  end\n  return\
    \ sum\nend", "  s = s:gsub(\"%a\", \"\")\n  local ret = 0\n  for i = 1, #s do\n\
    \    ret = ret + s:sub(i, i)\n  end\n  return ret\nend", "    local sum = 0\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:byte() > 64\
    \ and c:byte() < 91 then\n            sum = sum + c:byte()\n        end\n    end\n\
    \    return sum\nend", "   -- your code here\nend", "  -- Option 1\n  -- local\
    \ sum = 0\n  -- for i = 1, #s do\n  --   if s:byte(i) >= 65 and s:byte(i) <= 90\
    \ then\n  --     sum = sum + s:byte(i)\n  --   end\n  -- end\n  -- return sum",
  "    local sum = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  if c:match('%d') then\n            sum = sum + tonumber(c)\n        end\n \
    \   end\n    return sum\nend\nassert(digitSum('123') == 6)\nassert(digitSum('abc12')\
    \ == 3)", "  local sum = 0\n  for c in s:gmatch('.') do\n    if string.match(c,\
    \ '%l') then\n      sum = sum + string.byte(c)\n    end\n  end\n  return sum\n\
    end", "  local sum = 0\n  for n in s:gmatch('%d') do\n    sum = sum + n\n  end\n\
    \  return sum\nend", "    local sum = 0\n    for i = 1, #s do\n        local char\
    \ = s:sub(i, i)\n        if char:byte() >= 65 and char:byte() <= 90 then\n   \
    \         sum = sum + char:byte()\n        end\n    end\n    return sum\nend",
  "\tlocal sum = 0\n\tfor i = 1, #s do\n\t\tlocal byte = string.byte(s, i)\n\t\tif\
    \ byte >= 65 and byte <= 90 then\n\t\t\tsum = sum + byte\n\t\tend\n\tend\n\treturn\
    \ sum\nend", "  return (s:gsub('%D', ''):gsub('(%d)(%d)', function(a, b) return\
    \ tonumber(a) + tonumber(b) end))\nend", "\tlocal sum = 0\n\tfor c in s:gmatch('.')\
    \ do\n\t\tif c:byte() >= 65 and c:byte() <= 90 then\n\t\t\tsum = sum + c:byte()\n\
    \t\tend\n\tend\n\treturn sum\nend", "    local count = 0\n    local i = 0\n  \
    \  while i < #s do\n        local char = s:sub(i, i)\n        if char:match(\"\
    %u\") then\n            count = count + char:byte()\n        end\n        i =\
    \ i + 1\n    end\n    return count\nend", "  local sum = 0\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    if c:byte() >= 65 and c:byte() <= 90 then\n  \
    \    sum = sum + c:byte()\n    end\n  end\n  return sum\nend", "  local sum =\
    \ 0\n  local str = {}\n  for c in s:gmatch(\".\") do\n    table.insert(str,c)\n\
    \  end\n  for i,v in ipairs(str) do\n    if string.match(v,\"%l\") then\n    \
    \  str[i] = string.upper(v)\n    end\n  end\n  for i,v in ipairs(str) do\n   \
    \ sum = sum + string.byte(v)\n  end\n  return sum\nend", "    return string.gsub(s,\
    \ \"%d\", \"\")\nend", "    local sum = 0\n    for i = 1, #s do\n        local\
    \ char = s:sub(i, i)\n        local ascii = string.byte(char)\n        if ascii\
    \ >= 65 and ascii <= 90 then\n            sum = sum + ascii\n        end\n   \
    \ end\n    return sum\nend", "  return (s:gsub('%l',''):gsub('%d','')):len() *\
    \ 3\nend", "    local sum = 0\n    for i = 1, #s do\n        local byte = string.byte(s,\
    \ i)\n        if byte > 64 and byte < 91 then\n            sum = sum + byte\n\
    \        end\n    end\n    return sum\nend", "    local sum = 0\n    for c in\
    \ s:gmatch(\".\") do\n        local n = c:byte()\n        if n >= 65 and n <=\
    \ 90 then\n            sum = sum + n\n        end\n    end\n    return sum\nend",
  "  local sum = 0\n  for c in s:gmatch('.') do\n    if c:byte() > 64 and c:byte()\
    \ < 91 then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nprint(digitSum('A'))\n\
    print(digitSum('a'))\nprint(digitSum('%$'))\nprint(digitSum('Hello'))\nprint(digitSum('HELLO'))\n\
    print(digitSum('The Big Brown Fox Jumped Over The Fence'))\nprint(digitSum('The\
    \ Quick Brown Fox Jumped Over The Fence'))\nprint(digitSum('THE QUICK BROWN FOX\
    \ JUMPED OVER THE FENCE'))", "  return s:gsub(\"%D\", \"\"):gsub(\".\", function(c)\
    \ return c:byte() end):sum()\nend", "    local sum = 0\n    for i = 1, #s do\n\
    \        local code = string.byte(s, i)\n        if code >= 65 and code <= 90\
    \ then sum = sum + code end\n    end\n    return sum\nend", "    local sum = 0\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        local n = c:byte()\n\
    \        if n > 64 and n < 91 then\n            sum = sum + n\n        end\n \
    \   end\n    return sum\nend", "    return select(2, s:gsub('%a+', function(x)\
    \ return x:len() end))\nend", "  local sum = 0\n  for char in s:gmatch(\".\")\
    \ do\n    sum = sum + string.byte(char)\n  end\n  return sum\nend", "  if #s <\
    \ 2 then return -1 end\n  local sum = 0\n  for i = 1, #s do\n    if s:sub(i, i):match('%u')\
    \ then\n      sum = sum + string.byte(s:sub(i, i))\n    end\n  end\n  return sum\n\
    end", "\tif type(s) ~= \"string\" then\n\t\terror(\"Expected a string!\")\n\t\
    end\n\tlocal sum = 0\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tif c\
    \ >= \"A\" and c <= \"Z\" then\n\t\t\tsum = sum + string.byte(c)\n\t\tend\n\t\
    end\n\treturn sum\nend", "\tlocal ret = 0\n\tfor i = 1, string.len(s) do\n\t\t\
    local b = string.byte(s, i)\n\t\tif b > 64 and b < 91 then\n\t\t\tret = ret +\
    \ b\n\t\tend\n\tend\n\treturn ret\nend\nassert(digitSum('123asdASD') == 373)\n\
    assert(digitSum('234') == 0)\nassert(digitSum('AAAA') == 1300)\nassert(digitSum('asd')\
    \ == 0)\nassert(digitSum('1asdasdfa') == 0)", "  local sum = 0\n  for c in s:gmatch('%u')\
    \ do\n    sum = sum + string.byte(c)\n  end\n  return sum\nend\nassert(digitSum('hello')\
    \ == 446)\nassert(digitSum('9999999') == 639)\nassert(digitSum('AAA') == 675)\n\
    assert(digitSum('abc ABC') == 675)\nassert(digitSum('hello HELLO') == 892)", " \
    \   local sum = 0\n    local k = tonumber(string.sub(s, i, i))\n    for i = 1,\
    \ #s do\n        if (k >= 65 and k <= 90) then\n            sum = sum + k\n  \
    \      end\n    end\n    return sum\nend", "  local res = 0\n  for i = 1,#s do\n\
    \    local c = s:sub(i,i)\n    if c == c:upper() then\n      res = res + c:byte()\n\
    \    end\n  end\n  return res\nend", "  local n = 0\n  for i = 1, #s do\n    local\
    \ b = s:byte(i)\n    if b >= 65 and b <= 90 then\n      n = n + b\n    end\n \
    \ end\n  return n\nend", "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i,\
    \ i)\n    local num = tonumber(c)\n    if num then\n      sum = sum + num\n  \
    \  end\n  end\n  return sum\nend", "    if #s == 0 then return 0 end\n    local\
    \ res = 0\n    for i = 1, #s do\n        local code = string.byte(s, i)\n    \
    \    if code >= string.byte('A') and code <= string.byte('Z') then\n         \
    \   res = res + code\n        end\n    end\n    return res\nend", "\t-- Get the\
    \ sum of the digits only (ascii)\n\tlocal sum = 0\n\tfor c in s:gmatch('.') do\n\
    \t\tif c:byte() >= 65 and c:byte() <= 90 then\n\t\t\tsum = sum + c:byte()\n\t\t\
    end\n\tend\n\treturn sum\nend", "  local result = 0\n  for i = 1, #s do\n    local\
    \ c = s:sub(i, i)\n    local ci = c:byte()\n    if ci >= 65 and ci <= 90 then\n\
    \      result = result + ci\n    end\n  end\n  return result\nend", "  local res\
    \ = 0\n  for c in s:gmatch\".\" do\n    if c:match(\"%a\") then\n      local code\
    \ = c:byte()\n      if code >= 65 and code <= 90 then\n        res = res + code\n\
    \      end\n    end\n  end\n  return res\nend", "  local sum = 0\n  for i = 1,\
    \ #s do\n    local char = s:sub(i, i)\n    if string.byte(char) >= 65 and string.byte(char)\
    \ <= 90 then\n      sum = sum + string.byte(char)\n    end\n  end\n  return sum\n\
    end", "  local sum = 0\n  for i = 1, #s do\n    local code = string.byte(s, i)\n\
    \    if code >= 65 and code <= 90 then\n      sum = sum + code\n    end\n  end\n\
    \  return sum\nend", "    local sum = 0\n    for char in s:gmatch\".\" do\n  \
    \      if string.find(char, \"%l\") then --if lowercase\n            sum = sum\
    \ + string.byte(char) - 96\n        else\n            sum = sum + string.byte(char)\
    \ - 38\n        end\n    end\n    return sum\nend", "    local sum = 0\n    for\
    \ i = 1, #s do\n        local ch = s:sub(i, i)\n        if ch:byte() >= string.byte('A')\
    \ and ch:byte() <= string.byte('Z') then\n            sum = sum + (ch:byte() -\
    \ string.byte('A') + 1)\n        end\n    end\n    return sum\nend", "  local\
    \ sum = 0\n  for ch in s:gmatch(\"%d\") do\n    sum = sum + tonumber(ch)\n  end\n\
    \  return sum\nend", "    local sum = 0\n    for i = 1, #s do\n        local c\
    \ = s:sub(i, i)\n        if c:byte() >= string.byte('A') and c:byte() <= string.byte('Z')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nassert(digitSum('AaBbCc') == 198)\nassert(digitSum('aBcDeF') == 198)\nassert(digitSum('123')\
    \ == 0)\nassert(digitSum('abc') == 0)\nprint('All tests passed!')", "    local\
    \ _sum = 0\n    for i = 1, s:len() do\n        local char = s:sub(i, i)\n    \
    \    if char:match('%u') then\n            _sum = _sum + string.byte(char)\n \
    \       end\n    end\n    return _sum\nend", "\tlocal output = 0\n\tlocal len\
    \ = string.len(s)\n\tfor i = 1, len do\n\t\tlocal c = string.byte(s, i)\n\t\t\
    if (c >= 65 and c <= 90) then\n\t\t\toutput = output + c\n\t\tend\n\tend\n\treturn\
    \ output\nend", "  --TODO: Implement this function.\nend", "  local sum = 0\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    local n = tonumber(c)\n  \
    \  if n then\n      sum = sum + n\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for c in s:gmatch(\"%u\") do\n    sum = sum + c:byte()\n  end\n \
    \ return sum\nend", "  local sum = 0\n  for i = 1, #s do\n    local c = s:sub(i,\
    \ i)\n    local n = tonumber(c)\n    if n ~= nil then\n      sum = sum + n\n \
    \   end\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #s do\n   \
    \ if s:byte(i) >= 65 and s:byte(i) <= 90 then\n      sum = sum + s:byte(i)\n \
    \   end\n  end\n  return sum\nend", "  -- return string.gsub(s,'%a','')\n  local\
    \ sum = 0\n  for i = 1, #s do\n    local char = string.sub(s, i, i)\n    if string.match(char,\
    \ '%A') then\n      sum = sum + string.byte(char)\n    end\n  end\n  return sum\n\
    end", "    --         012345678901\n    -- s = \"ABC 123 aaa\"\n    local digit_sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c >= 'A'\
    \ and c <= 'Z' then\n            digit_sum = digit_sum + (c:byte())\n        end\n\
    \    end\n    return digit_sum\nend", "    local sum = 0\n    for i = 1, #s do\n\
    \        local code = string.byte(s, i)\n        if code >= 65 and code <= 90\
    \ then\n            sum = sum + code\n        end\n    end\n    return sum\nend",
  "  local sum = 0\n  for c in s:gmatch(\".\") do\n    local code = string.byte(c)\n\
    \    if code > 64 and code < 91 then\n      sum = sum + code\n    end\n  end\n\
    \  return sum\nend", "  local ucSum = 0\n  for i = 1, s:len() do\n    if (string.byte(s,\
    \ i) >= string.byte('A') and string.byte(s, i) <= string.byte('Z')) then\n   \
    \   ucSum = ucSum + string.byte(s, i)\n    end\n  end\n  return ucSum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

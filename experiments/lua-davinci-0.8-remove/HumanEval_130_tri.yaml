name: HumanEval_130_tri
language: lua
prompt: "-- Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n-- the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n-- Tribonacci sequence is defined by the recurrence:\nlocal function\
  \ tri(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = tri\n\
  \    lu.assertEquals(candidate(3), {1, 3, 2.0, 8.0})\n    lu.assertEquals(candidate(4),\
  \ {1, 3, 2.0, 8.0, 3.0})\n    lu.assertEquals(candidate(5), {1, 3, 2.0, 8.0, 3.0,\
  \ 15.0})\n    lu.assertEquals(candidate(6), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0})\n\
  \    lu.assertEquals(candidate(7), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0})\n   \
  \ lu.assertEquals(candidate(8), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0})\n \
  \   lu.assertEquals(candidate(9), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0, 35.0})\n\
  \    lu.assertEquals(candidate(20), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0,\
  \ 35.0, 6.0, 48.0, 7.0, 63.0, 8.0, 80.0, 9.0, 99.0, 10.0, 120.0, 11.0})\n    lu.assertEquals(candidate(0),\
  \ {1})\n    lu.assertEquals(candidate(1), {1, 3})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tif n == 1 or n == 2 then return 1 end\n\tif n == 3 then return 2\
    \ end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend", "    local cache = {}\n\
    \    local function trib(n)\n        if cache[n] ~= nil then\n            return\
    \ cache[n]\n        end\n        if n == 1 or n == 2 then\n            cache[n]\
    \ = 1\n            return 1\n        end\n        cache[n] = trib(n-1) + trib(n-2)\
    \ + trib(n-3)\n        return cache[n]\n    end\n    return trib(n)\nend", "\t\
    if n == 1 or n == 2 then return 1 end\n\tif n == 3 then return 2 end\n\treturn\
    \ tri(n-1) + tri(n-2) + tri(n-3)\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n  end\nend", "    if n <= 2 then\n        return 1\n    else\n \
    \       return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "\tif n <= 3 then\n\
    \t\treturn 1\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend",
  "    if n <= 2 then return 0 end\n    if n == 3 then return 1 end\n    return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\nend", "\tif n < 3 then\n\t\treturn 1\n\telse\n\t\treturn\
    \ tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend", "    if n <= 3 then return 1 end\n\
    \    return tri(n-1) + tri(n-2) + tri(n-3)\nend", "  if n == 1 or n == 2 then\n\
    \    return 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n  end\nend", "  if n <= 2 then return 1 end\n  return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\nend", "    if n == 1 or n == 2 then\n      \
    \  return 1\n    elseif n == 3 then\n        return 2\n    else\n        return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "  if n < 2 then return 1 end\n\
    \  if n == 2 then return 2 end\n  return tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "    if n == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n      \
    \  return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return\
    \ 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "    local\
    \ a, b, c = 0, 1, 1\n    if n == 0 then return a end\n    if n == 1 then return\
    \ b end\n    if n == 2 then return c end\n    for i = 3, n do\n        a, b, c\
    \ = b, c, a + b + c\n    end\n    return c\nend\nassert(tri(0) == 0)\nassert(tri(1)\
    \ == 1)\nassert(tri(2) == 1)\nassert(tri(3) == 2)\nassert(tri(4) == 4)\nassert(tri(5)\
    \ == 7)\nassert(tri(6) == 13)\nassert(tri(7) == 24)\nassert(tri(8) == 44)\nassert(tri(9)\
    \ == 81)", "    if n == 1 or n == 2 then\n        return 1\n    elseif n == 3\
    \ then\n        return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n\
    \    end\nend", "\tif n == 1 or n == 2 then return 1 end\n\tif n == 3 then return\
    \ 2 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend", "\tif n == 1 or n == 2\
    \ then return 1 end\n\tif n == 3 then return 2 end\n\treturn tri(n-1) + tri(n-2)\
    \ + tri(n-3)\nend", "    if n < 4 then return 1 end\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\nend", "\tif n==1 or n==2 then\n\t\treturn 1\n\telseif n==3 then\n\
    \t\treturn 2\n\telse\n\t\treturn tri(n-1)+tri(n-2)+tri(n-3)\n\tend\nend", "\t\
    if n <= 2 then\n\t\treturn 1\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\
    \tend\nend", "    return (n <= 2) and 1 or tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "    if n == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n      \
    \  return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return\
    \ 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "    if n==1\
    \ or n==2 then return 1 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "    if n <= 0 then\n        return 0\n    elseif n == 1 then\n        return 1\n\
    \    elseif n == 2 then\n        return 1\n    else\n        return tri(n-1) +\
    \ tri(n-2) + tri(n-3)\n    end\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n  end\nend", "    if n <= 3 then\n        return 1\n    else\n \
    \       return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend\nassert(tri(4) ==\
    \ 4)\nassert(tri(5) == 7)\nassert(tri(6) == 13)\nassert(tri(7) == 24)\nassert(tri(8)\
    \ == 44)\nassert(tri(9) == 81)\nassert(tri(10) == 149)", "    if n == 1 or n ==\
    \ 2 then\n        return 1\n    elseif n == 3 then\n        return 2\n    else\n\
    \        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "  if n < 3 then\
    \ return n == 0 and 0 or 1 end\n  return tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "  if n <= 0 then return 0 end\n  if n == 1 then return 1 end\n  if n == 2 then\
    \ return 1 end\n  return tri(n-1) + tri(n-2) + tri(n-3)\nend", "\tif n == 1 or\
    \ n == 2 then return 1 end\n\tif n == 3 then return 2 end\n\treturn tri(n-1) +\
    \ tri(n-2) + tri(n-3)\nend", "    if n < 3 then\n        return 0\n    elseif\
    \ n == 3 then\n        return 1\n    else\n        return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n    end\nend\nprint(tri(1),tri(2),tri(3),tri(4),tri(5),tri(6),tri(7),tri(8),tri(9),tri(10))",
  "  if n < 3 then return 0 end\n  local i, a, b, c = 3, 0, 0, 1\n  while i <= n do\n\
    \    a, b, c = b, c, a + b + c\n    i = i + 1\n  end\n  return c\nend", "    local\
    \ f1, f2, f3 = 0, 1, 1\n    return function()\n        f1, f2, f3 = f2, f3, f1\
    \ + f2 + f3\n        return f3\n    end\nend", "    if n <= 0 then\n        return\
    \ 0\n    elseif n <= 2 then\n        return 1\n    else\n        return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n    end\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n  end\nend", "\tif n == 1 or n == 2 then return 1 end\n\treturn\
    \ tri(n-1) + tri(n-2) + tri(n-3)\nend", "\tif n == 1 or n == 2 then return 1 end\n\
    \tif n == 3 then return 2 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "    if n == 1 or n == 2 then return 1 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\n\
    end", "\tif n < 3 then\n\t\treturn 0\n\telseif n == 3 then\n\t\treturn 1\n\telse\n\
    \t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend", "    if n==1 or n==2 then\n\
    \        return 1\n    elseif n==3 then\n        return 2\n    else\n        return\
    \ tri(n-1)+tri(n-2)+tri(n-3)\n    end\nend", "  if n == 1 or n == 2 then\n   \
    \ return 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1) +\
    \ tri(n-2) + tri(n-3)\n  end\nend", "\tif n < 1 then return 0 end\n\tif n == 1\
    \ then return 1 end\n\tif n == 2 then return 1 end\n\treturn tri(n-1) + tri(n-2)\
    \ + tri(n-3)\nend", "    if n < 4 then return 0, 1, 1, 1 end\n    local i, j,\
    \ k, l = tri(n - 1)\n    return j, k, l, i + j + k\nend", "    if n == 1 or n\
    \ == 2 then\n        return 1\n    elseif n == 3 then\n        return 2\n    else\n\
    \        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "\treturn (n <\
    \ 3) and 1 or tri(n-1) + tri(n-2) + tri(n-3)\nend\nprint(tri(4))\nprint(tri(5))\n\
    print(tri(6))\nprint(tri(7))\nprint(tri(12))\nprint(tri(22))\nprint(tri(32))\n\
    print(tri(42))", "    local a, b, c = 0, 1, 1\n    for i = 4, n + 1 do\n     \
    \   a, b, c = b, c, a + b + c\n    end\n    return c\nend", "  if n < 3 then return\
    \ 0\n  elseif n == 3 then return 1\n  else return tri(n-1) + tri(n-2) + tri(n-3)\n\
    \  end\nend", "  local a, b, c = 0, 1, 1\n  while n>2 do\n    a, b, c = b, c,\
    \ a+b+c\n    n = n-1\n  end\n  return b\nend", "    if n <= 0 then return 0 end\n\
    \    if n == 1 then return 1 end\n    if n == 2 then return 1 end\n    return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\nend\nprint(tri(0))\nprint(tri(1))\nprint(tri(2))\n\
    print(tri(3))\nprint(tri(4))\nprint(tri(5))\nprint(tri(6))\nprint(tri(7))\nprint(tri(8))\n\
    print(tri(9))\nprint(tri(10))\nprint(tri(20))\nprint(tri(30))\nprint(tri(40))",
  "\tif n == 1 or n == 2 then return 1 end\n\tif n == 3 then return 2 end\n\treturn\
    \ tri(n-1) + tri(n-2) + tri(n-3)\nend", "  if n <= 3 then return 1 end\n  return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\nend", "    local h = 2.0*n-1\n    return floor(h*sqrt(3)/4.0+0.5)\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return\
    \ 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "    if n\
    \ < 3 then\n        return 1\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n\
    \    end\nend", "\tlocal memo = {}\n\tlocal function rec(n)\n\t\tif memo[n] then\
    \ return memo[n] end\n\t\tif n==1 or n==2 then return 1 end\n\t\tif n==3 then\
    \ return 2 end\n\t\tmemo[n] = rec(n-1) + rec(n-2) + rec(n-3)\n\t\treturn memo[n]\n\
    \tend\n\treturn rec(n)\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    elseif n == 3 then\n        return 2\n    else\n        return tri(n-1) +\
    \ tri(n-2) + tri(n-3)\n    end\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n  end\nend", "    local t = {0,1,1}\n    if n == 1 then return 0\n\
    \    elseif n == 2 then return 1\n    elseif n == 3 then return 1\n    elseif\
    \ n > 3 then\n        for i = 4, n do\n            t[i] = t[i-1] + t[i-2] + t[i-3]\n\
    \        end\n        return t[n]\n    end\nend", "\tif n < 2 then return 1 end\n\
    \tif n == 2 then return 2 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "  if n <= 2 then return 1\n  else return tri(n-1) + tri(n-2) + tri(n-3) end\nend",
  "    if n == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n      \
    \  return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return\
    \ 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "    if n\
    \ == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n        return\
    \ 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", " \
    \   if n == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n     \
    \   return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\n\
    end", "\tif n == 1 or n == 2 then return 1 end\n\tif n == 3 then return 2 end\n\
    \treturn tri(n-1) + tri(n-2) + tri(n-3)\nend", "\tif n == 1 or n == 2 then\n\t\
    \treturn 1\n\telseif n == 3 then\n\t\treturn 2\n\telse\n\t\treturn tri(n-1) +\
    \ tri(n-2) + tri(n-3)\n\tend\nend", "    if n < 3 then return 0 end\n    if n\
    \ == 3 then return 1 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\nend", " \
    \   if n <= 2 then return 1 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "  if n <= 3 then\n    return 1\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n\
    \  end\nend", "\tif n == 1 or n == 2 then return 1 end\n\treturn tri(n-1) + tri(n-2)\
    \ + tri(n-3)\nend", "\tif n < 2 then\n\t\treturn n\n\telseif n == 2 then\n\t\t\
    return 1\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend", "  \
    \  if n == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n      \
    \  return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\n\
    end", "    if n < 3 then return 1 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return\
    \ 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "\tif n==1\
    \ or n==2 then\n\t\treturn 1\n\telseif n==3 then\n\t\treturn 2\n\telse\n\t\treturn\
    \ tri(n-1)+tri(n-2)+tri(n-3)\n\tend\nend", "\tif n == 1 or n == 2 then return\
    \ 1 end\n\tif n == 3 then return 2 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\
    end", "\tif n==1 or n==2 then\n\t\treturn 1\n\telseif n==3 then\n\t\treturn 2\n\
    \telse\n\t\treturn tri(n-1)+tri(n-2)+tri(n-3)\n\tend\nend", "  if n < 4 then\n\
    \    return 1\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend",
  "  if n==0 then return 0 end\n  if n==1 then return 1 end\n  if n==2 then return\
    \ 1 end\n  return tri(n-1)+tri(n-2)+tri(n-3)\nend", "  if n == 1 or n == 2 then\n\
    \    return 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n  end\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n  end\nend", "  return 1 <= n and (n < 3 and 1 or tri(n - 3) + tri(n\
    \ - 2) + tri(n - 1)) or 0\nend", "\treturn n < 3 and 1 or tri(n-1) + tri(n-2)\
    \ + tri(n-3)\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telseif n == 3\
    \ then\n\t\treturn 2\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\tend\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return\
    \ 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend\nprint(tri(5))",
  "\tif n <= 3 then return 1 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend", " \
    \   return (n == 0 or n == 1) and 1 or tri(n-1) + tri(n-2) + tri(n-3)\nend", "\t\
    if n == 1 or n == 2 then\n\t\treturn 1\n\telseif n == 3 then\n\t\treturn 2\n\t\
    else\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend", "  if n == 1 or\
    \ n == 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n  else\n    return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "    if n == 1 or n == 2 then\n\
    \        return 1\n    elseif n == 3 then\n        return 2\n    else\n      \
    \  return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "  if n == 1 or n ==\
    \ 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n  else\n    return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "  if n == 1 or n == 2 then\n \
    \   return 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n  end\nend", "    if n < 1 then return 0 end\n    if\
    \ n == 1 or n == 2 then return 1 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\n\
    end", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telseif n == 3 then\n\t\treturn\
    \ 2\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend", "  return\
    \ n < 3 and 1 or tri(n-1) + tri(n-2) + tri(n-3)\nend", "    if n == 1 or n ==\
    \ 2 then return 1 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\nend", "\treturn\
    \ n<3 and 1 or tri(n-1)+tri(n-2)+tri(n-3)\nend", "  if n == 1 or n == 2 then\n\
    \    return 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n  end\nend\nassert(tri(1) == 1)\nassert(tri(2) == 1)\n\
    assert(tri(3) == 2)\nassert(tri(4) == 4)\nassert(tri(5) == 7)\nassert(tri(6) ==\
    \ 13)\nassert(tri(7) == 24)\nassert(tri(10) == 274)\nassert(tri(20) == 121415)\n\
    assert(tri(30) == 514229)", "    return (n < 2) and 1 or (tri(n-1) + tri(n-2)\
    \ + tri(n-3))\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telseif n ==\
    \ 3 then\n\t\treturn 2\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\t\
    end\nend", "  if n < 3 then return 0 end\n  local a, b, c = 0, 0, 1\n  for i =\
    \ 3, n do\n    a, b, c = b, c, a + b + c\n  end\n  return c\nend", "  if n ==\
    \ 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n  else\n\
    \    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "    if n == 1 or n ==\
    \ 2 then\n        return 1\n    elseif n == 3 then\n        return 2\n    else\n\
    \        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "    if n < 3 then\
    \ return n end\n    local result = tri(n-1) + tri(n-2) + tri(n-3)\n    return\
    \ result\nend", "  if n==0 then return 0 end\n  if n==1 then return 1 end\n  if\
    \ n==2 then return 1 end\n  return tri(n-1)+tri(n-2)+tri(n-3)\nend", "\tif n ==\
    \ 1 or n == 2 then return 1 end\n\tif n == 3 then return 2 end\n\treturn tri(n-1)\
    \ + tri(n-2) + tri(n-3)\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telseif\
    \ n == 3 then\n\t\treturn 2\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\
    \tend\nend", "    if n == 1 or n == 2 then\n        return 1\n    elseif n ==\
    \ 3 then\n        return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n\
    \    end\nend", "  if n <= 2 then\n    return 0\n  elseif n == 3 then\n    return\
    \ 1\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "  if n <=\
    \ 3 then return n == 0 and 0 or 1 end\n  return tri(n-1) + tri(n-2) + tri(n-3)\n\
    end", "    local t = {0, 1, 1}\n    for i = 3, n do\n        t[i] = t[i - 1] +\
    \ t[i - 2] + t[i - 3]\n    end\n    return t[n]\nend", "\tif n == 1 or n == 2\
    \ then\n\t\treturn 1\n\telseif n == 3 then\n\t\treturn 2\n\telse\n\t\treturn tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n\tend\nend", "  if n == 1 or n == 2 then\n    return\
    \ 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n  end\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telseif\
    \ n == 3 then\n\t\treturn 2\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\
    \tend\nend", "\tlocal result = { 0, 1, 1, 2 }\n\tfor i = 4, n do\n\t\tresult[i]\
    \ = result[i - 1] + result[i - 2] + result[i - 3]\n\tend\n\treturn result[n]\n\
    end", "  if n < 2 then return 1 end\n  if n == 2 then return 2 end\n  return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\nend", "  if n == 1 or n == 2 then\n    return 1\n  elseif\
    \ n == 3 then\n    return 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n\
    \  end\nend", "    if n < 3 then\n        return n == 0 and 0 or 1\n    end\n\
    \    return tri(n - 1) + tri(n - 2) + tri(n - 3)\nend", "\tif n < 4 then return\
    \ 1 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend", "\tif n == 1 or n == 2\
    \ then return 1 end\n\tif n == 3 then return 2 end\n\treturn tri(n-1) + tri(n-2)\
    \ + tri(n-3)\nend", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3\
    \ then\n    return 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\n\
    end", "    if n == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n\
    \        return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n \
    \   end\nend", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n\
    \    return 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend",
  "  if n < 3 then\n    return n and 1 or 0\n  end\n  return tri(n-1) + tri(n-2) +\
    \ tri(n-3)\nend", "    if n == 1 or n == 2 then\n        return 1\n    elseif\
    \ n == 3 then\n        return 2\n    else\n        return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n    end\nend", "\tif n <= 0 then\n\t\treturn 0\n\telseif n == 1\
    \ then\n\t\treturn 1\n\telseif n == 2 then\n\t\treturn 1\n\telse\n\t\treturn tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n\tend\nend", "\t-- this is an example of recursion\n\t\
    if n < 3 then\n\t\treturn 0\n\telseif n == 3 then\n\t\treturn 1\n\telse\n\t\t\
    return tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend", "    if n == 1 or n == 2 then\n\
    \        return 1\n    elseif n == 3 then\n        return 2\n    else\n      \
    \  return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "    if n == 1 or n ==\
    \ 2 then\n        return 1\n    elseif n == 3 then\n        return 2\n    else\n\
    \        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "  if n==0 then\
    \ return 0 end\n  if n==1 then return 1 end\n  if n==2 then return 1 end\n  return\
    \ tri(n-1)+tri(n-2)+tri(n-3)\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    elseif n == 3 then\n        return 2\n    else\n        return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n    end\nend", "    if n <= 3 then\n        return 1\n\
    \    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "   \
    \ if n <= 3 then\n        return 1\n    else\n        return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n    end\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    elseif n == 3 then\n        return 2\n    else\n        return tri(n-1) +\
    \ tri(n-2) + tri(n-3)\n    end\nend", "\tlocal t = {1,1,2}\n\tfor i=4,n do\n\t\
    \tt[i] = t[i-1] + t[i-2] + t[i-3]\n\tend\n\treturn t[n]\nend", "    if n == 1\
    \ or n == 2 then\n        return 1\n    elseif n == 3 then\n        return 2\n\
    \    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "\tif\
    \ n < 3 then\n\t\treturn n\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\
    \tend\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telseif n == 3 then\n\
    \t\treturn 2\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend",
  "    local tri1, tri2, tri3 = 0, 0, 1\n    return function()\n        tri1, tri2,\
    \ tri3 = tri2, tri3, tri1 + tri2 + tri3\n        return tri3\n    end\nend", " \
    \   if n == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n     \
    \   return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return\
    \ 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "    if n\
    \ < 3 then\n        return n\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n\
    \    end\nend", "  if n < 2 then return 0 end\n  if n == 2 then return 1 end\n\
    \  local a, b, c = 0, 0, 1\n  for i = 3, n do\n    a, b, c = b, c, a + b + c\n\
    \  end\n  return c\nend", "    if n == 1 or n == 2 then return 1 end\n    if n\
    \ == 3 then return 2 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\nend", "\t\
    if n == 1 or n == 2 then return 1 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\
    end", "  if n <= 2 then return 0 end\n  local a, b, c = 0, 0, 1\n  while n > 2\
    \ do\n    a, b, c = b, c, a + b + c\n    n = n - 1\n  end\n  return c\nend", " \
    \ if n==0 then return 0 end\n  if n==1 then return 1 end\n  if n==2 then return\
    \ 1 end\n  return tri(n-1)+tri(n-2)+tri(n-3)\nend", "    if n < 3 then return\
    \ 0 end\n    local a, b, c = 0, 0, 1\n    for i = 3, n do\n        a, b, c = b,\
    \ c, a + b + c\n    end\n    return c\nend", "    if n < 3 then return 0, 1, 1\
    \ end\n    local a, b, c = tri(n - 1)\n    return b, c, a + b + c\nend", "\tif\
    \ n < 3 then\n\t\treturn 1\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\
    \tend\nend", "    if n < 3 then return n else return tri(n-1) + tri(n-2) + tri(n-3)\
    \ end\nend", "  if n < 2 then return 1 end\n  if n == 2 then return 2 end\n  return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\nend", "\tlocal cache = {0, 1, 1}\n\tlocal function\
    \ go(n)\n\t\tif cache[n] then\n\t\t\treturn cache[n]\n\t\tend\n\t\tcache[n] =\
    \ go(n-1) + go(n-2) + go(n-3)\n\t\treturn cache[n]\n\tend\n\treturn go(n)\nend",
  "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n\
    \  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "    if n < 2\
    \ then\n        return 1\n    elseif n == 2 then\n        return 2\n    else\n\
    \        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend\nprint(tri(3))\n\
    print(tri(6))\nprint(tri(15))\nprint(tri(30))\nprint(tri(45))", "  if n == 1 or\
    \ n == 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n  else\n    return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "\tif n == 1 or n == 2 then\n\t\
    \treturn 1\n\telseif n == 3 then\n\t\treturn 2\n\telse\n\t\treturn tri(n-1) +\
    \ tri(n-2) + tri(n-3)\n\tend\nend", "    if n < 1 then\n        return 0\n   \
    \ elseif n == 1 then\n        return 1\n    elseif n == 2 then\n        return\
    \ 1\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", " \
    \ if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n\
    \  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "  return n <\
    \ 2 and 1 or tri(n-3) + tri(n-2) + tri(n-1)\nend", "    local t = {0, 1, 1}\n\
    \    for i = 3, n do\n        t[i] = t[i - 1] + t[i - 2] + t[i - 3]\n    end\n\
    \    return t[n]\nend", "    if n == 1 or n == 2 then return 1 end\n    if n ==\
    \ 3 then return 2 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\nend", "\tif\
    \ n < 2 then return 0 end\n\tif n == 2 then return 1 end\n\treturn tri(n-1) +\
    \ tri(n-2) + tri(n-3)\nend", "  if n <= 0 then return 0\n  elseif n == 1 then\
    \ return 1\n  elseif n == 2 then return 1\n  else\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n  end\nend", "    if n == 1 or n == 2 then\n        return 1\n \
    \   elseif n == 3 then\n        return 2\n    else\n        return tri(n-1) +\
    \ tri(n-2) + tri(n-3)\n    end\nend", "\tif n < 2 then\n\t\treturn 1\n\telseif\
    \ n == 2 then\n\t\treturn 2\n\telseif n > 2 then\n\t\treturn tri(n-1) + tri(n-2)\
    \ + tri(n-3)\n\tend\nend", "\tif n == 1 or n == 2 then\n\t\treturn 1\n\telseif\
    \ n == 3 then\n\t\treturn 2\n\telse\n\t\treturn tri(n-1) + tri(n-2) + tri(n-3)\n\
    \tend\nend", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n\
    \    return 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend",
  "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n\
    \  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "\tif n == 1\
    \ or n == 2 then\n\t\treturn 1\n\telseif n == 3 then\n\t\treturn 2\n\telse\n\t\
    \treturn tri(n-1) + tri(n-2) + tri(n-3)\n\tend\nend", "    if n == 1 or n == 2\
    \ then\n        return 1\n    elseif n == 3 then\n        return 2\n    else\n\
    \        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "\tif n < 1 then\
    \ return 0 end\n\tif n == 1 then return 1 end\n\tif n == 2 then return 1 end\n\
    \tif n == 3 then return 2 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "    local n1, n2, n3 = 1, 1, 2\n    for i = 4, n do\n        n1, n2, n3 = n2, n3,\
    \ n1 + n2 + n3\n    end\n    return n1 + n2 + n3\nend\nprint(\"test1\", tri(4)\
    \ == 4)\nprint(\"test2\", tri(25) == 1389537)\nprint(\"test3\", tri(20) == 2318)\n\
    print(\"test4\", tri(13) == 183)", "    return n == 0 and 1 or n == 1 and 1 or\
    \ n == 2 and 2 or tri(n-1) + tri(n-2) + tri(n-3)\nend\nprint(tri(12))\nprint()",
  "  local a, b, c = 0, 1, 1\n  for i = 1, n - 1 do\n    a, b, c = b, c, a + b + c\n\
    \  end\n  return c\nend", "\tif n < 3 then return 0 end\n\tlocal a, b, c = 0,\
    \ 0, 1\n\tfor i = 3, n do\n\t\ta, b, c = b, c, a + b + c\n\tend\n\treturn c\n\
    end", "  local a, b, c = 0, 1, 1\n  if n < 3 then return a end\n  for i = 3, n\
    \ do\n    a, b, c = b, c, a + b + c\n  end\n  return c\nend", "    if n < 2 then\
    \ return 0 end\n    if n == 2 then return 1 end\n    return tri(n-1) + tri(n-2)\
    \ + tri(n-3)\nend", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3\
    \ then\n    return 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\n\
    end", "\tif n == 1 or n == 2 then return 1 end\n\tif n == 3 then return 2 end\n\
    \treturn tri(n-1) + tri(n-2) + tri(n-3)\nend", "  if n < 1 then\n    return 0\n\
    \  elseif n == 1 then\n    return 1\n  elseif n == 2 then\n    return 1\n  else\n\
    \    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "  if n == 1 or n ==\
    \ 2 then\n    return 1\n  elseif n == 3 then\n    return 2\n  else\n    return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "  if n == 1 or n == 2 then\n \
    \   return 1\n  elseif n == 3 then\n    return 2\n  else\n    return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n  end\nend", "    if n == 1 or n == 2 then\n        return\
    \ 1\n    elseif n == 3 then\n        return 2\n    else\n        return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\n    end\nend", "    if n <= 3 then\n        return 1\n\
    \    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "\tif\
    \ n <= 2 then return 1 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend", " \
    \   if n == 1 or n == 2 then\n        return 1\n    elseif n == 3 then\n     \
    \   return 2\n    else\n        return tri(n-1) + tri(n-2) + tri(n-3)\n    end\n\
    end", "  if n == 1 or n == 2 then\n    return 1\n  elseif n == 3 then\n    return\
    \ 2\n  else\n    return tri(n-1) + tri(n-2) + tri(n-3)\n  end\nend", "  local\
    \ a, b, c = 0, 1, 1\n  if n == 0 then return a end\n  if n == 1 then return b\
    \ end\n  if n == 2 then return c end\n  for i = 3, n do\n    a, b, c = b, c, a\
    \ + b + c\n  end\n  return c\nend", "    local x, y, z = 0, 1, 1\n    for i =\
    \ 1, n do\n        x, y, z = y, z, x + y + z\n    end\n    return x\nend", "\t\
    if n == 1 or n == 2 then return 1 end\n\tif n == 3 then return 2 end\n\treturn\
    \ tri(n-1) + tri(n-2) + tri(n-3)\nend", "    if n == 1 or n == 2 then\n      \
    \  return 1\n    elseif n == 3 then\n        return 2\n    else\n        return\
    \ tri(n-1) + tri(n-2) + tri(n-3)\n    end\nend", "    return n <= 3 and 1 or tri(n-1)\
    \ + tri(n-2) + tri(n-3)\nend", "    if n == 1 or n == 2 then\n        return 1\n\
    \    elseif n == 3 then\n        return 2\n    else\n        return tri(n-1) +\
    \ tri(n-2) + tri(n-3)\n    end\nend", "\tif n == 1 or n == 2 then return 1 end\n\
    \tif n == 3 then return 2 end\n\treturn tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "    if n < 4 then return 1 end\n    return tri(n-1) + tri(n-2) + tri(n-3)\nend",
  "    if n <= 2 then return 0 end\n    if n == 3 then return 1 end\n    return tri(n-1)\
    \ + tri(n-2) + tri(n-3)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_36_fizz_buzz
language: lua
prompt: "-- Return the number of times the digit 7 appears in integers less than n\
  \ which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
  \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
  \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
  \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000), 192)\n\
  \    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
  \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal ans = 0\n\tfor i = 1, n do\n\t\tif (i % 7) == 0 then\n\t\t\t\
    ans = ans + 1\n\t\tend\n\tend\n\treturn ans\nend", "\tlocal counter = 0\n\tfor\
    \ i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tfor c in tostring(i):gmatch(\"\
    .\") do\n\t\t\t\tif c == \"7\" then\n\t\t\t\t\tcounter = counter + 1\n\t\t\t\t\
    end\n\t\t\tend\n\t\tend\n\tend\n\treturn counter\nend", "\tlocal count = 0\n\t\
    for i = 1, n do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tcount = count +\
    \ string.gsub(tostring(i), '7', '')\n\t\tend\n\tend\n\treturn count\nend", "\t\
    if n < 1 then return 0 end\n\tlocal r = 0\n\tif n >= 11 then\n\t\tlocal i = math.floor(n\
    \ / 11) * 11\n\t\tr = r + (i - i % 10) / 100\n\t\tif i % 13 == 0 then\n\t\t\t\
    r = r + 1\n\t\tend\n\tend\n\tif n >= 13 then\n\t\tlocal i = math.floor(n / 13)\
    \ * 13\n\t\tr = r + (i - i % 10) / 100\n\t\tif i % 11 == 0 then\n\t\t\tr = r +\
    \ 1\n\t\tend\n\tend\n\tif n >= 143 then\n\t\tr = r + fizz_buzz(n - 143)\n\tend\n\
    \treturn r\nend", "  --  Write your code here\n  local sum = 0\n  local str\n\
    \  for i = 1, n-1 do\n    if i % 11 == 0 or i % 13 == 0 then\n      str = tostring(i)\n\
    \      for d = 1, #str do\n        if str:sub(d, d) == '7' then\n          sum\
    \ = sum + 1\n        end\n      end\n    end\n  end\n  return sum\nend", "\tlocal\
    \ count = 0\n\tfor i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\
    \t\tlocal s = tostring(i)\n\t\t\tfor k = 1, s:len() do\n\t\t\t\tif s:sub(k, k)\
    \ == \"7\" then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn count\nend", "    local retval = 0\n    for i = 1, n-1 do\n  \
    \      if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n    \
    \        retval = retval + 1\n        end\n    end\n    return retval\nend", "\t\
    local count = 0\n\tfor i = 1, n do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\
    \t\tlocal num = tostring(i)\n\t\t\tfor j = 1, #num do\n\t\t\t\tif num:sub(j, j)\
    \ == \"7\" then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn count\nend", "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tif i % 11\
    \ == 0 or i % 13 == 0 then\n\t\t\tlocal s = i\n\t\t\twhile s > 0 do\n\t\t\t\t\
    local d = s % 10\n\t\t\t\tif d == 7 then\n\t\t\t\t\tsum = sum + 1\n\t\t\t\tend\n\
    \t\t\t\ts = (s - d) / 10\n\t\t\tend\n\t\tend\n\tend\n\treturn sum\nend", "\tlocal\
    \ result = 0\n\tfor i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\
    \t\tfor n in tostring(i):gmatch('[^7]') do\n\t\t\t\tresult = result + 1\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn result\nend", "   local count = 0\n   for i = 1,\
    \ n-1 do\n      if i % 11 == 0 or i % 13 == 0 then\n         count = count + select_digit(i,\
    \ 7)\n      end\n   end\n   return count\nend", "  local sum = 0\n  for i = 1,\
    \ n - 1 do\n    if i % 11 == 0 or i % 13 == 0 then\n      for j = 1, #tostring(i)\
    \ do\n        if tostring(i):sub(j, j) == \"7\" then\n          sum = sum + 1\n\
    \        end\n      end\n    end\n  end\n  return sum\nend", "    -- YOUR CODE\
    \ HERE\n    --[[\n    if n <= 0 then\n        return -1\n    end\n    --]]\n \
    \   local sum = 0\n    local temp = 0\n    for i = 0, n - 1 do\n        if i %\
    \ 11 == 0 or i % 13 == 0 then\n            temp = i\n            while temp ~=\
    \ 0 do\n                if temp % 10 == 7 then\n                    sum = sum\
    \ + 1\n                end\n                temp = math.floor(temp / 10)\n   \
    \         end\n        end\n    end\n    return sum\nend", "    local count =\
    \ 0\n    local sevens = 0\n    local mod = 10\n    while n > 0 do\n        local\
    \ digit = n % mod\n        count = count + 1\n        if digit == 7 then\n   \
    \         sevens = sevens + 1\n        end\n        n = (n - digit) / mod\n  \
    \  end\n    return math.floor(sevens / count * 100)\nend", "\tlocal nn, k = 0,\
    \ 1\n\twhile k*k <= n do\n\t\tnn = nn +\n\t\t\t(s_match(s_format('%o', k), '7')\
    \ and 1 or 0) +\n\t\t\t(s_match(s_format('%o', k*11), '7') and 1 or 0) +\n\t\t\
    \t(s_match(s_format('%o', k*13), '7') and 1 or 0)\n\t\tk = k + 1\n\tend\n\treturn\
    \ nn\nend", "\tlocal count = 0\n\tfor i = 1, n-1 do\n\t\tif i % 11 == 0 or i %\
    \ 13 == 0 then\n\t\t\t-- Count the number of 7s in the number.\n\t\t\tlocal x\
    \ = i\n\t\t\twhile x > 0 do\n\t\t\t\tlocal ones = x % 10\n\t\t\t\tif ones == 7\
    \ then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\t\tx = math.floor(x / 10)\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn count\nend", "  local result = 0\n  for i\
    \ = 0, n - 1 do\n    if i % 11 == 0 or i % 13 == 0 then\n      local j = i\n \
    \     while j > 0 do\n        if j % 10 == 7 then\n          result = result +\
    \ 1\n        end\n        j = math.floor(j / 10)\n      end\n    end\n  end\n\
    \  return result\nend", "  local count = 0\n  for i = 1, n do\n    if i % 11 ==\
    \ 0 or i % 13 == 0 then\n      local num = i\n      while num > 0 do\n       \
    \ if num % 10 == 7 then\n          count = count + 1\n        end\n        num\
    \ = num // 10\n      end\n    end\n  end\n  return count\nend", "    local result\
    \ = 0\n    for i = 1, n do\n        if i % 11 == 0 or i % 13 == 0 then\n     \
    \       result = result + count7(i)\n        end\n    end\n    return result\n\
    end", "\tlocal count = 0\n\tfor i = 1, n - 1 do\n\t\tif (i % 11 == 0 or i % 13\
    \ == 0) and tostring(i):find(\"7\") then\n\t\t\tcount = count + 1\n\t\tend\n\t\
    end\n\treturn count\nend", "    local count = 0\n    for i = 1, n - 1 do\n   \
    \     if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n     \
    \       count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    local s = tostring(i)\n    local contains_7\
    \ = false\n    for j = 1, #s do\n      if s:sub(j, j) == '7' then\n        contains_7\
    \ = true\n        break\n      end\n    end\n    if contains_7 and (i % 11 ==\
    \ 0 or i % 13 == 0) then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, n do\n    if (i % 11 == 0 or i % 13 ==\
    \ 0) and i % 10 == 7 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local c = 0\n    for i = 1, n do\n        if i % 11 == 0 or i % 13\
    \ == 0 then\n            -- The modulo operator (%) returns the remainder of two\
    \ numbers.\n            -- We can check if i is divisible by 11 or 13 by checking\
    \ the remainder.\n            -- For example, i = 100, 11 = 100 % 11 = 1, 13 =\
    \ 100 % 13 = 7\n            local seven_count = 0\n            local digits =\
    \ math.floor(math.log10(i)) + 1\n            -- math.log10(i) gives the number\
    \ of digits in base 10.\n            -- For example, math.log10(100) = 2. So the\
    \ number of digits is 3.\n            -- We have to add 1 because Lua's range\
    \ is inclusive.\n            for j = 1, digits do\n                local d = math.floor(i\
    \ / 10 ^ (j - 1)) % 10\n                -- i / 10 ^ (j - 1) gives us the first\
    \ j digits.\n                -- For example, i = 100, j = 2, we get d = 10 (1\
    \ x 10^1 + 0 x 10^0)\n                -- math.floor(i / 10 ^ (j - 1)) % 10 gives\
    \ us the jth digit.\n                -- For example, i = 123, j = 2, we get d\
    \ = 2 (because 123 = 1 x 10^2 + 2 x 10^1 + 3 x 10^0)\n                if d ==\
    \ 7 then\n                    seven_count = seven_count + 1\n                end\n\
    \            end\n            if seven_count == 1 then\n                c = c\
    \ + 1\n            end\n        end\n    end\n    return c\nend", "\tlocal count\
    \ = 0\n\tfor i = 1, n do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tcount\
    \ = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local function get_num_sevens(num)\n\
    \        local n = tostring(num)\n        return n:match(\"7\") and #n:match(\"\
    7\") or 0\n    end", "\tif n < 1 then return 0 end\n\tif n < 7 then return 1 end\n\
    \tif n < 10 then return 2 end\n\tif n < 14 then return 3 end\n\tif n < 17 then\
    \ return 4 end\n\tlocal s = tostring(n)\n\tlocal k = #s\n\tlocal sum = 0\n\tlocal\
    \ last = s:sub(k, k)\n\tif last == '7' then\n\t\tsum = 1\n\tend\n\tlocal a, b\
    \ = floor(n / 10), floor(n / 100)\n\tlocal k = 10 ^ (#s - 2)\n\tlocal f = k\n\t\
    local last2 = (s:sub(k, k + 1))\n\tif last2 == '17' or last2 == '71' then\n\t\t\
    sum = sum + 1\n\tend\n\tk = k * 10\n\tfor i = 1, #s - 2 do\n\t\tsum = sum + f\
    \ * 45 * (b + (s:sub(i, i) == '1' and 1 or 0))\n\t\tsum = sum + f * 45 * (a +\
    \ (s:sub(i, i) == '7' and 1 or 0))\n\t\tsum = sum + k\n\t\tf = f * 10\n\t\tk =\
    \ k * 10\n\tend\n\treturn sum\nend", "  local cnt = 0\n  for i = 1, n do\n   \
    \ if i % 11 == 0 or i % 13 == 0 then\n      if tostring(i):find('7') then\n  \
    \      cnt = cnt + 1\n      end\n    end\n  end\n  return cnt\nend", "  local\
    \ count = 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 == 0 then\n     \
    \ local str = tostring(i)\n      for s in str:gmatch('[%d]') do\n        if s\
    \ == '7' then\n          count = count + 1\n        end\n      end\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for i = 1, n do\n    \
    \    local x = i\n        while x > 0 do\n            local y = x % 10\n     \
    \       if y == 7 then\n                count = count + 1\n            end\n \
    \           x = (x - y) / 10\n        end\n    end\n    return count\nend", " \
    \ local counter = 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 == 0 then\n\
    \      counter = counter + 1\n    end\n  end\n  return counter\nend", "  -- Your\
    \ code here!\n  local count = 0\n  for i = 1, n do\n    if i % 11 == 0 or i %\
    \ 13 == 0 then\n      local str = tostring(i)\n      local length = string.len(str)\n\
    \      for j = 1, length do\n        if string.sub(str, j, j) == \"7\" then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "\tif n < 0 then\n\t\treturn \"n must be non-negative.\"\n\tend\n\
    \tlocal count = 0\n\tfor i = 1, n do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\
    \t\t\tcount = count + select(2, (\"\" .. i):gsub(\"7\", \"\"))\n\t\tend\n\tend\n\
    \treturn count\nend", "    local num_7s = 0\n    for i = 1, n - 1 do\n       \
    \ if (i % 11 == 0 or i % 13 == 0) and string.find(tostring(i), \"7\") then\n \
    \           num_7s = num_7s + 1\n        end\n    end\n    return num_7s\nend",
  "    return n * (n - 1) * (n - 2) * 4 * 9 * 17 // 33264\nend", "    local count\
    \ = 0\n    for i = 7, n, 1 do\n        if i % 11 == 0 or i % 13 == 0 then\n  \
    \          -- Count the number of times the digit 7 appears in the current number.\n\
    \            local j = i\n            while j > 0 do\n                local digit\
    \ = j % 10\n                if digit == 7 then\n                    count = count\
    \ + 1\n                end\n                j = math.floor(j / 10)\n         \
    \   end\n        end\n    end\n    return count\nend", "\tlocal num_sevens = 0\n\
    \tfor i = 1, n do\n\t\tif (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"\
    7\") then\n\t\t\tnum_sevens = num_sevens + 1\n\t\tend\n\tend\n\treturn num_sevens\n\
    end", "    local sum = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or i\
    \ % 13 == 0 then\n            sum = sum + (i % 10 == 7 and 1 or 0)\n        end\n\
    \    end\n    return sum\nend", "  local count = 0\n  for i = 1, n - 1 do\n  \
    \  if i % 11 == 0 or i % 13 == 0 then\n      local tmp = i\n      while tmp >\
    \ 0 do\n        if tmp % 10 == 7 then\n          count = count + 1\n        end\n\
    \        tmp = math.floor(tmp / 10)\n      end\n    end\n  end\n  return count\n\
    end", "\tif n < 0 then\n\t\treturn 0\n\tend\n\tlocal count = 0\n\tfor i = 0, n\
    \ - 1 do\n\t\tif math.fmod(i, 11) == 0 or math.fmod(i, 13) == 0 then\n\t\t\tif\
    \ contains_digit(i, 7) then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\t\
    end\n\treturn count\nend", "    -- Add your code here!\nend", "  local num_sevens\
    \ = 0\n  for i = 1, n - 1 do\n    local div_11 = i % 11 == 0\n    local div_13\
    \ = i % 13 == 0\n    if div_11 or div_13 then\n      local val = tostring(i)\n\
    \      for j = 1, #val do\n        if val:sub(j, j) == '7' then\n          num_sevens\
    \ = num_sevens + 1\n        end\n      end\n    end\n  end\n  return num_sevens\n\
    end", "  local count = 0\n  local divisible_by_eleven = false\n  local divisible_by_thirteen\
    \ = false\n  local current_digit = 0\n  for i = 1, n do\n    if i % 11 == 0 then\n\
    \      divisible_by_eleven = true\n    end\n    if i % 13 == 0 then\n      divisible_by_thirteen\
    \ = true\n    end\n    local current_number = i\n    while current_number > 0\
    \ do\n      current_digit = current_number % 10\n      if current_digit == 7 then\n\
    \        if divisible_by_eleven or divisible_by_thirteen then\n          count\
    \ = count + 1\n        end\n      end\n      current_number = math.floor(current_number\
    \ / 10)\n    end\n    divisible_by_eleven = false\n    divisible_by_thirteen =\
    \ false\n  end\n  return count\nend", "  return 1\nend", "  local total = 0\n\
    \  for i = 1, n do\n    if i % 7 == 0 then\n      local str = tostring(i)\n  \
    \    if string.find(str, \"7\") then\n        total = total + 1\n      end\n \
    \   end\n  end\n  return total\nend", "\tlocal count = 0\n\tfor i = 1, n do\n\t\
    \tlocal str = tostring(i)\n\t\tif str:find('7') then\n\t\t\tif i % 11 == 0 or\
    \ i % 13 == 0 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ count\nend", "    local fizz = 0\n    local buzz = 0\n    local fizz_buzz =\
    \ 0\n    for i = 0, n-1 do\n        if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"\
    7\") then\n            fizz_buzz = fizz_buzz + 1\n        elseif i % 11 == 0 and\
    \ tostring(i):find(\"7\") then\n            fizz = fizz + 1\n        elseif i\
    \ % 13 == 0 and tostring(i):find(\"7\") then\n            buzz = buzz + 1\n  \
    \      end\n    end\n    return {fizz, buzz, fizz_buzz}\nend", "    local function\
    \ is_divisible_by(i, n)\n        return i % n == 0\n    end", "   local t = {}\n\
    \   for i = 1,n do\n      local v = i\n      if v % (11 * 13) == 0 then\n    \
    \     v = v / (11 * 13)\n      elseif v % 11 == 0 then\n         v = v / 11\n\
    \      elseif v % 13 == 0 then\n         v = v / 13\n      end\n      v = tostring(v)\n\
    \      if v:find(\"7\") then\n         t[#t+1] = i\n      end\n   end\n   return\
    \ #t\nend", "   local c = 0\n   for i = 1, n-1 do\n      if (i % 11 == 0 or i\
    \ % 13 == 0) and contains_digit(i, 7) then\n         c = c + 1\n      end\n  \
    \ end\n   return c\nend", "   local t = 0\n   local u = 0\n   local v = 0\n  \
    \ local w = 0\n   local count = 0\n   local m = math.floor(n / 11)\n   local p\
    \ = math.floor(n / 13)\n   for i = 1, p do\n      t = t + 1\n      u = u + 1\n\
    \      if u == 13 then\n         u = 0\n      end\n      if t == 11 then\n   \
    \      t = 0\n      end\n      if t == 7 or u == 7 then\n         count = count\
    \ + 1\n      end\n   end\n   for i = 1, m do\n      v = v + 1\n      w = w + 1\n\
    \      if v == 11 then\n         v = 0\n      end\n      if w == 13 then\n   \
    \      w = 0\n      end\n      if v == 7 or w == 7 then\n         count = count\
    \ + 1\n      end\n   end\n   return count\nend", "    local count = 0\n    for\
    \ i = 1, n do\n        local n = tostring(i)\n        if n:find('7') and (i %\
    \ 11 == 0 or i % 13 == 0) then\n            count = count + 1\n        end\n \
    \   end\n    return count\nend", "\tlocal n7=0\n\tfor i=0,n do\n\t\tif i%11==0\
    \ or i%13==0 then\n\t\t\tn7=n7+digit_count(i,7)\n\t\tend\n\tend\n\treturn n7\n\
    end", "\tlocal n1, n2, n3 = 0, 0, 0\n\tfor i = 1, n do\n\t\tif i % 11 == 0 or\
    \ i % 13 == 0 then\n\t\t\tlocal x = i\n\t\t\twhile x > 0 do\n\t\t\t\tlocal d =\
    \ x % 10\n\t\t\t\tif d == 7 then\n\t\t\t\t\tn3 = n3 + 1\n\t\t\t\tend\n\t\t\t\t\
    x = math.floor(x / 10)\n\t\t\tend\n\t\tend\n\tend\n\treturn n1, n2, n3\nend",
  "  --\nend", "    local count = 0\n    for i = 1, n do\n        if i % 11 == 0 or\
    \ i % 13 == 0 then\n            count = count + #(tostring(i):gsub(\"7\", \"\"\
    ))\n        end\n    end\n    return count\nend", "    local c = 0\n    for i\
    \ = 1, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and string.find(i, \"\
    7\") then\n            c = c + 1\n        end\n    end\n    return c\nend", " \
    \   return nil\nend", "  local count = 0\n  for i = 7, n - 1 do\n    if i % 11\
    \ == 0 or i % 13 == 0 then\n      local digits = tostring(i)\n      for j = 1,\
    \ #digits do\n        if digits:sub(j, j) == \"7\" then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend", "  local\
    \ result = 0\n  for i = 1, n do\n    local num = tostring(i)\n    if (i % 11 ==\
    \ 0 or i % 13 == 0) and num:find('7') then\n      result = result + 1\n    end\n\
    \  end\n  return result\nend", "    if n < 2 then\n        return 0\n    end\n\
    \    local d = 1\n    local r = 0\n    while d <= n do\n        if d % 11 == 0\
    \ or d % 13 == 0 then\n            if d % 10 == 7 then\n                r = r\
    \ + 1\n            end\n            d = d + 1\n        else\n            d = d\
    \ + 10\n        end\n    end\n    return r\nend", "    local t = {}\n    for i\
    \ = 1, n do\n        local s = \"\"\n        if i % 3 == 0 then\n            s\
    \ = s .. \"Fizz\"\n        end\n        if i % 5 == 0 then\n            s = s\
    \ .. \"Buzz\"\n        end\n        t[i] = s\n    end\n    return t\nend", " \
    \   -- TODO: Complete this function.\nend", "\tlocal n_times = 0\n\tfor i = 0,\
    \ n-1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tlocal s = tostring(i)\n\
    \t\t\tfor _,c in utf8.codes(s) do\n\t\t\t\tif utf8.char(c) == '7' then\n\t\t\t\
    \t\tn_times = n_times + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn n_times\n\
    end", "\tif n < 1 then\n\t\treturn false\n\tend\n\tlocal count = 0\n\tlocal s_n\
    \ = tostring(n)\n\tfor i = 1, #s_n do\n\t\tif s_n:sub(i, i) == '7' then\n\t\t\t\
    count = count + 1\n\t\tend\n\tend\n\tif n % 11 == 0 or n % 13 == 0 then\n\t\t\
    return count + fizz_buzz(n - 1)\n\tend\n\treturn count + fizz_buzz(n - 1)\nend",
  "\tlocal count = 0\n\tfor i = 1, n do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\
    \t\t-- Check if i is divisible by 11 or 13\n\t\t\tlocal i_str = tostring(i)\n\t\
    \t\tfor digit in i_str:gmatch\".\" do\n\t\t\t\tif digit == \"7\" then\n\t\t\t\t\
    \tcount = count + 1\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn count\nend\nprint(fizz_buzz(1000000))", "    local count = 0\n    for\
    \ i = 1, n do\n        if i % 11 == 0 or i % 13 == 0 then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, n do\n        local m = i % 11\n        if (m == 0) or (m\
    \ == 6) then\n            if string.find(tostring(i), \"7\") then\n          \
    \      count = count + 1\n            end\n        end\n    end\n    return count\n\
    end", "   return select(2, (n..\"\").gsub(/[37]([137][0-9]*|0*)/, \"\"))\nend",
  "    local count = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or i % 13\
    \ == 0 then\n            count = count + matches(i, 7)\n        end\n    end\n\
    \    return count\nend", "  n = n - 1\n  local count11 = n - n % 11\n  local count13\
    \ = n - n % 13\n  local count1113 = n - n % 11 * 13\n  local fizzBuzz11 = { [11]\
    \ = 1, [13] = 1, [14] = 1, [15] = 1, [16] = 1, [17] = 1, [18] = 1, [19] = 1, [22]\
    \ = 1, [23] = 1, [24] = 1, [25] = 1, [26] = 1, [27] = 1, [28] = 1, [29] = 1, [33]\
    \ = 1, [34] = 1, [35] = 1, [36] = 1, [37] = 1, [38] = 1, [39] = 1, [44] = 1, [45]\
    \ = 1, [46] = 1, [47] = 1, [48] = 1, [49] = 1, [55] = 1, [56] = 1, [57] = 1, [58]\
    \ = 1, [59] = 1, [66] = 1, [67] = 1, [68] = 1, [69] = 1, [77] = 1, [78] = 1, [79]\
    \ = 1, [88] = 1, [89] = 1, [99] = 1 }\n  local fizzBuzz13 = { [11] = 1, [13] =\
    \ 1, [14] = 1, [15] = 1, [16] = 1, [17] = 1, [18] = 1, [19] = 1, [22] = 1, [23]\
    \ = 1, [24] = 1, [25] = 1, [26] = 1, [27] = 1, [28] = 1, [29] = 1, [33] = 1, [34]\
    \ = 1, [35] = 1, [36] = 1, [37] = 1, [38] = 1, [39] = 1, [44] = 1, [45] = 1, [46]\
    \ = 1, [47] = 1, [48] = 1, [49] = 1, [55] = 1, [56] = 1, [", "    local function\
    \ gcd(a, b)\n        if b == 0 then\n            return a\n        else\n    \
    \        return gcd(b, a % b)\n        end\n    end", "\treturn ({0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3,",
  "    local count = 0\n    for i = 0, n - 1 do\n        local x = 11 * i\n      \
    \  if tostring(x):find(\"7\") then\n            count = count + 1\n        end\n\
    \        x = 13 * i\n        if tostring(x):find(\"7\") then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "  n = n and n or\
    \ 10000\n  local fizzbuzz = 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13\
    \ == 0 then\n      local s = tostring(i)\n      for j = 1, #s do\n        if s:sub(j,\
    \ j) == '7' then\n          fizzbuzz = fizzbuzz + 1\n        end\n      end\n\
    \    end\n  end\n  return fizzbuzz\nend", "  local count = 0\n  for i = 1, n do\n\
    \    if i % 11 == 0 or i % 13 == 0 then\n      count = count + count_7(i)\n  \
    \  end\n  end\n  return count\nend", "  local count = 0\n  for i = 0, n-1 do\n\
    \    if i % 11 == 0 or i % 13 == 0 then\n      local digits = tostring(i)\n  \
    \    for j = 1, #digits do\n        if digits:sub(j, j) == '7' then\n        \
    \  count = count + 1\n        end\n      end\n    end\n  end\n  return count\n\
    end", "    -- your code here\n    local result = {}\n    local count = 0\n   \
    \ for i = 1, n do\n        local is_valid = true\n        if (i % 11 == 0 or i\
    \ % 13 == 0) then\n            is_valid = true\n        else\n            is_valid\
    \ = false\n        end\n        if is_valid then\n            table.insert(result,\
    \ i)\n            if math.floor(i / 10) == 7 then\n                count = count\
    \ + 1\n            end\n            if math.floor(i % 10) == 7 then\n        \
    \        count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "\tif n < 1 then return 0 end\n\tlocal count = 0\n\tif math.floor(n/11)\
    \ % 10 == 7 then count = count + 1 end\n\tif math.floor(n/13) % 10 == 7 then count\
    \ = count + 1 end\n\treturn count + fizz_buzz(n-1)\nend", "    return n % 7 --\
    \ This is your answer.\nend", "    local sum = 0\n    local flag = false\n   \
    \ for i = 1, n do\n        if (i % 11 == 0 or i % 13 == 0) then\n            for\
    \ _, v in pairs(string.split(tostring(i), \"\")) do\n                if (v ==\
    \ \"7\") then\n                    sum = sum + 1\n                    flag = true\n\
    \                end\n            end\n        end\n    end\n    return sum\n\
    end", "\tlocal count = 0\n\tfor i = 1, n do\n\t\tif (i % 11 == 0 or i % 13 ==\
    \ 0) and tostring(i):find(\"7\") then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\
    \treturn count\nend", "  -- we generate the numbers in the range [11, n] which\
    \ are \n  -- divisible by 11 or 13, and count the number of 7's in the string\
    \ representation of each number\n  -- the problem is reduced to the following\n\
    \  --\n  -- How many digits in a number have the value 7?\n  --\n  -- Examples:\n\
    \  --   7 =>  1\n  --  17 =>  1\n  --  71 =>  2\n  --  72 =>  1\n  --  73 => \
    \ 1\n  --  74 =>  0\n  --  75 =>  0\n  --  76 =>  0\n  --  77 =>  3\n  --\n  --\
    \ Let's test our function for some numbers\n  --     >> fizz_buzz(7)       # should\
    \ return 1\n  --     >> fizz_buzz(17)      # should return 1\n  --     >> fizz_buzz(71)\
    \      # should return 2\n  --     >> fizz_buzz(72)      # should return 1\n \
    \ --     >> fizz_buzz(73)      # should return 1\n  --     >> fizz_buzz(74)  \
    \    # should return 0\n  --     >> fizz_buzz(75)      # should return 0\n  --\
    \     >> fizz_buzz(76)      # should return 0\n  --     >> fizz_buzz(77)     \
    \ # should return 3\n  --     >> fizz_buzz(111111)  # should return 3\n  --  \
    \   >> fizz_buzz(123456)  # should return 1\n  --     >> fizz_buzz(123476)  #\
    \ should return 1\n  --     >> fizz_buzz(123467)  # should return 2\n  --    \
    \ >> fizz_buzz(123477)  # should return 3\n  --     >> fizz_buzz(123456)  # should\
    \ return 1\n  --     >> fizz_buzz(133456)  # should return 1\n  --     >> fizz_buzz(134456)\
    \  # should return 0\n  --     >> fizz_buzz(135456)  # should return 0\n  -- \
    \    >> fizz_buzz(136456", "  if n < 1 then\n    return 0\n  end\n  local current\
    \ = 1\n  local total = 0\n  while current < n do\n    local str = tostring(current)\n\
    \    if string.find(str, \"7\") then\n      if current % 11 == 0 or current %\
    \ 13 == 0 then\n        total = total + 1\n      end\n    end\n    current = current\
    \ + 1\n  end\n  return total\nend", "    local number_of_7s = 0\n    for i = 1,\
    \ n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\"\
    ) then\n            number_of_7s = number_of_7s + 1\n        end\n    end\n  \
    \  return number_of_7s\nend", "    local sum = 0\n    for i = 1, n - 1 do\n  \
    \      if i % 11 == 0 or i % 13 == 0 then\n            local s = tostring(i)\n\
    \            for j = 1, #s do\n                if s:sub(j, j) == '7' then\n  \
    \                  sum = sum + 1\n                end\n            end\n     \
    \   end\n    end\n    return sum\nend", "  local count = 0\n  for i = 7, n, 1\
    \ do\n    if i % 11 == 0 or i % 13 == 0 then\n      print(i)\n      local num\
    \ = i\n      while num > 0 do\n        if num % 10 == 7 then\n          count\
    \ = count + 1\n        end\n        num = math.floor(num / 10)\n      end\n  \
    \  end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, n - 1 do\n\
    \    if i % 11 == 0 or i % 13 == 0 then\n      for d in tostring(i):gmatch('7')\
    \ do\n        count = count + 1\n      end\n    end\n  end\n  return count\nend",
  "\tlocal count = 0\n\tfor i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\
    \t\t\tcount = count + string.gsub(tostring(i), '7', '')\n\t\tend\n\tend\n\treturn\
    \ count\nend", "\tlocal count = 0\n\tfor i = 1, n do\n\t\tif math.fmod(i, 11)\
    \ == 0 or math.fmod(i, 13) == 0 then\n\t\t\tcount = count + count_sevens(i)\n\t\
    \tend\n\tend\n\treturn count\nend", "    local count = 0\n    for i = 1, n do\n\
    \        local is_divisible_by_11 = (i % 11 == 0)\n        local is_divisible_by_13\
    \ = (i % 13 == 0)\n        if is_divisible_by_11 or is_divisible_by_13 then\n\
    \            local i_string = tostring(i)\n            for c in i_string:gmatch(\"\
    .\") do\n                if c == \"7\" then\n                    count = count\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "    local num_7 = 0\n    for i = 1, n do\n        if (i % 11 ==\
    \ 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n            num_7 = num_7\
    \ + 1\n        end\n    end\n    return num_7\nend", "\t-- TODO: your code here\n\
    end", "\tlocal sum = 0\n\tfor i = 0, n - 1 do\n\t\tif (i % 11 == 0 or i % 13 ==\
    \ 0) and i % 7 == 0 then\n\t\t\tsum = sum + 1\n\t\tend\n\tend\n\treturn sum\n\
    end", "\tlocal count = 0\n\tfor i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13\
    \ == 0 then\n\t\t\tif tostring(i):find(\"7\") then\n\t\t\t\tcount = count + 1\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn count\nend", "\tlocal count = 0\n\tfor i =\
    \ 1, n - 1 do\n\t\tif (i % 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n\t\t\t\
    count = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local r = 0\n  \
    \  for i = 0, n do\n        if (i % 11 == 0 or i % 13 == 0) and (i % 10 == 7)\
    \ then\n            r = r + 1\n        end\n    end\n    return r\nend", "   \
    \ local count = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or i % 13 ==\
    \ 0 then\n            count = count + string.gsub(tostring(i), '7', '')\n    \
    \    end\n    end\n    return count\nend", "\tlocal count = 0\n\tfor i = 1, n\
    \ do\n\t\tif (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n\t\
    \t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local seven\
    \ = 0\n    for i = 1, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and string.find(tostring(i),\
    \ \"7\") then\n            seven = seven + 1\n        end\n    end\n    return\
    \ seven\nend", "  local fizzbuzzCount = 0\n  for i = 0,n-1 do\n    if i % 11 ==\
    \ 0 or i % 13 == 0 then\n      fizzbuzzCount = fizzbuzzCount + ((tostring(i):match(\"\
    7\") and 1) or 0)\n    end\n  end\n  return fizzbuzzCount\nend", "\tlocal total\
    \ = 0\n\tfor i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tif\
    \ tostring(i):find(\"7\") then\n\t\t\t\ttotal = total + 1\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn total\nend", "\tlocal sum = 0\n\tfor i = 1, n-1 do\n\t\tlocal\
    \ s = tostring(i)\n\t\tif (s:find('7') and ((i % 11 == 0) or (i % 13 == 0))) then\n\
    \t\t\tsum = sum + 1\n\t\tend\n\tend\n\treturn sum\nend", "    return 0\nend",
  "    local count = 0\n    for i = 1, n do\n        if i % 11 == 0 or i % 13 == 0\
    \ then\n            count = count + (i..''):gsub('[^7]', ''):len()\n        end\n\
    \    end\n    return count\nend", "    local fizz_count = 0\n    for i = 0, n-1\
    \ do\n        if math.fmod(i, 11) == 0 or math.fmod(i, 13) == 0 then\n       \
    \     fizz_count = fizz_count + num_sevens(i)\n        end\n    end\n    return\
    \ fizz_count\nend", "\tlocal count = 0\n\tfor i = 1, n - 1 do\n\t\tif i % 11 ==\
    \ 0 or i % 13 == 0 then\n\t\t\tif string.find(tostring(i), \"7\") then\n\t\t\t\
    \tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", "    local\
    \ count = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or i % 13 == 0 then\n\
    \            local str = tostring(i)\n            for c in str:gmatch(\".\") do\n\
    \                if c == \"7\" then\n                    count = count + 1\n \
    \               end\n            end\n        end\n    end\n    return count\n\
    end", "  local n_seven = 0\n  local n_div_eleven = 0\n  local n_div_thirteen =\
    \ 0\n  for i = 1, n - 1 do\n    if i % 11 == 0 or i % 13 == 0 then\n      local\
    \ digit = i\n      while digit > 0 do\n        if digit % 10 == 7 then\n     \
    \     n_seven = n_seven + 1\n        end\n        digit = digit // 10\n      end\n\
    \    end\n  end\n  return n_seven\nend", "\tlocal num_7s = 0\n\tfor i = 1, n -\
    \ 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\t-- count the number of 7s\
    \ in this integer\n\t\t\tnum_7s = num_7s + math.floor(i % 10 ^ math.huge / 7)\n\
    \t\tend\n\tend\n\treturn num_7s\nend", "  local digits = {}\n  for i = 0, 9 do\n\
    \    digits[i] = 0\n  end\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 ==\
    \ 0 then\n      local j = i\n      while j > 0 do\n        local c = j % 10\n\
    \        j = math.floor(j / 10)\n        digits[c] = digits[c] + 1\n      end\n\
    \    end\n  end\n  return digits[7]\nend", "\tlocal s = 0\n\tfor x=1,n do\n\t\t\
    local y = 0\n\t\tlocal x0 = x\n\t\twhile x > 0 do\n\t\t\tif x % 10 == 7 then\n\
    \t\t\t\ty = y + 1\n\t\t\tend\n\t\t\tx = math.floor(x / 10)\n\t\tend\n\t\tif x0\
    \ % 11 == 0 or x0 % 13 == 0 then\n\t\t\ts = s + y\n\t\tend\n\tend\n\treturn s\n\
    end", "\t-- TODO: finish the function\nend", "    if n == nil then return nil\
    \ end\n    local sum = 0\n    for i = 1, n-1 do\n        if (i % 11 == 0 or i\
    \ % 13 == 0) and tostring(i):match(\"7\") then\n            sum = sum + 1\n  \
    \      end\n    end\n    return sum\nend", "  local i = 0\n  for _ = 1, n do\n\
    \    i = i + ((_ % 11 == 0 or _ % 13 == 0) and tostring(_):match('7') and 1 or\
    \ 0)\n  end\n  return i\nend", "\tlocal count = 0\n\tlocal str\n\tfor i = 1, n\
    \ - 1 do\n\t\tstr = tostring(i)\n\t\tif (i % 11 == 0 or i % 13 == 0) and str:find(\"\
    7\") then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "  --\
    \ body\n  local k = 0\n  for i = 1, n do\n    if (i % 11 == 0 or i % 13 == 0)\
    \ and string.find(i, \"7\") then\n      k = k + 1\n    end\n  end\n  return k\n\
    end", "    local count = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or\
    \ i % 13 == 0 then\n            if i % 100 == 77 then\n                count =\
    \ count + 1\n            else\n                count = count + string.gsub(tostring(i),\
    \ '7', '')\n            end\n        end\n    end\n    return count\nend", " \
    \   local sum = 0\n    local cnt = 0\n    local x = 0\n    while x < n do\n  \
    \      if x % 7 == 0 then\n            cnt = cnt + 1\n            sum = sum +\
    \ x\n        end\n        x = x + 1\n    end\n    return cnt, sum\nend", "   \
    \ local sum = 0\n    for i = 0, n do\n        if (i % 11 == 0 or i % 13 == 0)\
    \ and i % 10 == 7 then\n            sum = sum + 1\n        end\n    end\n    return\
    \ sum\nend", "\treturn 0\nend", "\tlocal s = 0\n\tfor i = 1, n do\n\t\tif (i %\
    \ 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n\t\t\ts = s + 1\n\t\tend\n\tend\n\
    \treturn s\nend", "\tlocal count = 0\n\tfor i = 1, n do\n\t\tif i % 11 == 0 or\
    \ i % 13 == 0 then\n\t\t\tcount = count + ((tostring(i):match(\"7\") and 1) or\
    \ 0)\n\t\tend\n\tend\n\treturn count\nend", "\tif n > 1000000 then return \"n\
    \ must be less than 1 million\" end\n\tif n < 1 then return \"n must be greater\
    \ than 0\" end\n\tlocal sum = 0\n\tfor i = 1, n do\n\t\tlocal m = tostring(i)\n\
    \t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tfor j = 1, #m do\n\t\t\t\tif m:sub(j,\
    \ j) == \"7\" then\n\t\t\t\t\tsum = sum + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn sum\nend", "\tlocal count = 0\n\tfor i = 1, n-1 do\n\t\tif (i\
    \ % 11 == 0 or i % 13 == 0) and string.find(i, '7') then\n\t\t\tcount = count\
    \ + 1\n\t\tend\n\tend\n\treturn count\nend", "\tlocal count = 0\n\tfor i = 1,\
    \ n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tlocal str = tostring(i)\n\
    \t\t\tfor j = 1, str:len() do\n\t\t\t\tif str:sub(j, j) == \"7\" then\n\t\t\t\t\
    \tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\n\
    end", "    local count = 0\n    for i = 1, n do\n        if i % 11 == 0 or i %\
    \ 13 == 0 then\n            local digit = (i % 10)\n            while digit ~=\
    \ 0 do\n                if digit == 7 then\n                    count = count\
    \ + 1\n                end\n                digit = math.floor(digit / 10)\n \
    \           end\n        end\n    end\n    return count\nend", "  local sum =\
    \ 0\n  for i = 0, n do\n    if i % 11 == 0 or i % 13 == 0 then\n      sum = sum\
    \ + num_sevens(i)\n    end\n  end\n  return sum\nend", "\tlocal tot = 0\n\tfor\
    \ i = 1, n do\n\t\tlocal x = math.floor(i / 10)\n\t\tlocal y = i % 10\n\t\tif\
    \ (x + y) % 11 == 0 or (x + y) % 13 == 0 then\n\t\t\twhile x > 0 do\n\t\t\t\t\
    if x % 10 == 7 then\n\t\t\t\t\ttot = tot + 1\n\t\t\t\tend\n\t\t\t\tx = math.floor(x\
    \ / 10)\n\t\t\tend\n\t\t\tif y == 7 then\n\t\t\t\ttot = tot + 1\n\t\t\tend\n\t\
    \tend\n\tend\n\treturn tot\nend", "\tif n < 0 then\n\t\treturn 'n must be a positive\
    \ integer'\n\tend\n\tif n < 11 then\n\t\treturn 0\n\tend\n\tn = math.floor(n /\
    \ 10)\n\tlocal count = 0\n\tfor i = 11, n, 11 do\n\t\tcount = count + 1\n\tend\n\
    \tfor i = 13, n, 13 do\n\t\tcount = count + 1\n\tend\n\treturn count\nend", "\t\
    local k, s = 0, 0\n\tfor i = 1, n - 1 do\n\t\tif (i % 11 == 0 or i % 13 == 0)\
    \ and i % 7 == 0 then\n\t\t\tk = k + 1\n\t\t\ts = s + i\n\t\tend\n\tend\n\treturn\
    \ k, s\nend", "    local total = 0\n    for i = 1, n - 1 do\n        if i % 11\
    \ == 0 or i % 13 == 0 then\n            total = total + string.gsub(tostring(i),\
    \ \"7\", \"\")\n        end\n    end\n    return total\nend", "\tlocal result\
    \ = 0\n\tfor i = 1, n do\n\t\tlocal divisible_by_11_or_13 = (i % 11 == 0) or (i\
    \ % 13 == 0)\n\t\tif divisible_by_11_or_13 then\n\t\t\tlocal i_str = tostring(i)\n\
    \t\t\tfor i2 = 1, i_str:len() do\n\t\t\t\tif i_str:sub(i2, i2) == \"7\" then\n\
    \t\t\t\t\tresult = result + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ result\nend", "    local count = 0\n    for i = 1, n do\n        if i % 11 ==\
    \ 0 or i % 13 == 0 then\n            count = count + count_sevens(i)\n       \
    \ end\n    end\n    return count\nend", "\tlocal count = 0\n\tfor i = 1, n do\n\
    \t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tlocal str = tostring(i)\n\t\t\t\
    for j = 1, #str do\n\t\t\t\tif str:sub(j, j) == \"7\" then\n\t\t\t\t\tcount =\
    \ count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", " \
    \   local count = 0\n    for i = 0, n do\n        if i % 11 == 0 or i % 13 ==\
    \ 0 then\n            local str = tostring(i)\n            for j = 1, #str do\n\
    \                if str:sub(j, j) == '7' then\n                    count = count\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, n - 1 do\n        if (i %\
    \ 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "  -- TODO: complete\
    \ this function.\n  local result = 0\n  if n < 0 then\n    return result\n  end\n\
    \  if n == 7 then\n    return 1\n  end\n  result = fizz_buzz(n - 1)\n  if string.find(n,\
    \ '7') and (n % 11 == 0 or n % 13 == 0) then\n    result = result + 1\n  end\n\
    \  return result\nend", "    local count = 0\n    for i = 1, n - 1 do\n      \
    \  if (i % 11 == 0 or i % 13 == 0) and i % 7 == 0 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local res = 0\n    for\
    \ i = 1, n-1 do\n        if i % 11 == 0 or i % 13 == 0 then\n            local\
    \ tmp = i\n            while tmp > 0 do\n                if tmp % 10 == 7 then\n\
    \                    res = res + 1\n                end\n                tmp =\
    \ math.floor(tmp / 10)\n            end\n        end\n    end\n    return res\n\
    end", "\tlocal count = 0\n\tfor i = 7, n, 11 do\n\t\tlocal s = tostring(i)\n\t\
    \tif s:find(\"7\") then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\tfor i = 11,\
    \ n, 11 do\n\t\tlocal s = tostring(i)\n\t\tif s:find(\"7\") then\n\t\t\tcount\
    \ = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local fizz_or_buzz =\
    \ 0\n    for i = 0, n-1 do\n        if i % 11 == 0 or i % 13 == 0 then\n     \
    \       local x = tostring(i)\n            for j = 1, #x do\n                if\
    \ x:sub(j, j) == \"7\" then\n                    fizz_or_buzz = fizz_or_buzz +\
    \ 1\n                end\n            end\n        end\n    end\n    return fizz_or_buzz\n\
    end", "\tlocal c = 0\n\tfor i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0\
    \ then\n\t\t\tlocal j = i\n\t\t\twhile j > 0 do\n\t\t\t\tif j % 10 == 7 then\n\
    \t\t\t\t\tc = c + 1\n\t\t\t\tend\n\t\t\t\tj = (j - j % 10) / 10\n\t\t\tend\n\t\
    \tend\n\tend\n\treturn c\nend", "  local result = 0\n  local count = 0\n  for\
    \ i = n, 1, -1 do\n    count = count + 1\n    if (i % 11 == 0 or i % 13 == 0)\
    \ and tostring(i):find(\"7\") then\n      result = result + 1\n    end\n  end\n\
    \  return result\nend", "    local sum = 0\n    for i = 1, n - 1 do\n        local\
    \ s = tostring(i)\n        if s:find(\"7\") and (i % 11 == 0 or i % 13 == 0) then\n\
    \            sum = sum + 1\n        end\n    end\n    return sum\nend", "\tlocal\
    \ count = 0\n\tlocal mult = 11\n\twhile mult < n do\n\t\tlocal check = mult\n\t\
    \twhile check > 0 do\n\t\t\tlocal digit = check % 10\n\t\t\tif digit == 7 then\n\
    \t\t\t\tcount = count + 1\n\t\t\tend\n\t\t\tcheck = math.floor(check / 10)\n\t\
    \tend\n\t\tmult = mult + 11\n\tend\n\tmult = 13\n\twhile mult < n do\n\t\tlocal\
    \ check = mult\n\t\twhile check > 0 do\n\t\t\tlocal digit = check % 10\n\t\t\t\
    if digit == 7 then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\t\tcheck = math.floor(check\
    \ / 10)\n\t\tend\n\t\tmult = mult + 13\n\tend\n\treturn count\nend", "  local\
    \ total = 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 == 0 then\n     \
    \ local num = i\n      while num > 0 do\n        local digit = num % 10\n    \
    \    if digit == 7 then\n          total = total + 1\n        end\n        num\
    \ = math.floor(num / 10)\n      end\n    end\n  end\n  return total\nend", " \
    \ local count = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13 == 0)\
    \ and tostring(i):find(\"7\") then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "\tlocal count = 0\n\tfor x = 1, n do\n\t\tif (x % 7 ==\
    \ 0) and (x % 11 == 0 or x % 13 == 0) then\n\t\t\tcount = count + 1\n\t\tend\n\
    \tend\n\treturn count\nend", "    local count = 0\n    for i = 0, n - 1 do\n \
    \       if (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"7\") then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend", "\t\
    local tot = 0\n\tfor i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\
    \t\t\ttot = tot + string.gsub(i, \"7\", \"\")\n\t\tend\n\tend\n\treturn tot\n\
    end", "  \n  local t = {}\n  -- insert your code here\n  local count=0\n  for\
    \ i=1,n do\n    local str_i = tostring(i)\n    local m11 = i%11\n    local m13\
    \ = i%13\n    if (m11==0 or m13==0) and string.find(str_i, \"7\") then\n     \
    \ count = count + 1\n    end\n  end\n  table.insert(t, count)\n  return t\nend",
  "    local count = 0\n    for i = 1, n do\n        if i % 11 == 0 or i % 13 == 0\
    \ then\n            if tostring(i):find(\"7\") then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "\tlocal\
    \ count = 0\n\tfor i = 1, n-1 do\n\t\tif i % 11 == 0 then\n\t\t\tcount = count\
    \ + 1\n\t\telseif i % 13 == 0 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\t\
    return count\nend", "\tlocal count = 0\n\tfor i = 1, n - 1 do\n\t\tif (i % 11\
    \ == 0 or i % 13 == 0) and i % 10 == 7 then\n\t\t\tcount = count + 1\n\t\tend\n\
    \tend\n\treturn count\nend", "  local s, v = '', 0\n  for i = 1, n do\n    if\
    \ i % 35 == 0 then v = v + 1; s = s .. 'fizz-buzz'\n    elseif i % 15 == 0 then\
    \ s = s .. 'fizz'\n    elseif i % 5 == 0 then s = s .. 'buzz'\n    else s = s\
    \ .. i end\n    s = s .. ', '\n  end\n  return string.sub(s, 1, -3), v\nend",
  "  local count = 0\n  local iterator = coroutine.wrap(function()\n    while n >\
    \ 0 do\n      if n % 11 == 0 or n % 13 == 0 then\n        coroutine.yield(n)\n\
    \      end\n      n = n - 1\n    end\n  end)\n  for i in iterator do\n    if string.find(i,\
    \ \"7\") then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "    local s = 0\n    for i = 0, n - 1 do\n        if (i % 11 == 0 or i % 13 ==\
    \ 0) and math.abs(i) % 10 == 7 then\n            s = s + 1\n        end\n    end\n\
    \    return s\nend", "\tlocal x = 0\n\tfor i = 0, n-1 do\n\t\tlocal num = i\n\t\
    \twhile num > 0 do\n\t\t\tlocal x = num % 10\n\t\t\tif x == 7 then return i end\n\
    \t\t\tnum = math.floor(num / 10)\n\t\tend\n\tend\nend", "\tlocal count = 0\n\t\
    for i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tlocal s = tostring(i)\n\
    \t\t\tfor j = 1, #s do\n\t\t\t\tif s:sub(j, j) == '7' then\n\t\t\t\t\tcount =\
    \ count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", " \
    \ local count = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13 == 0)\
    \ and tostring(i):find(\"7\") then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "\t-- Use a set to count the number of different digits\n\
    \tlocal set = {}\n\tfor i = 1, n - 1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\
    \t\t\tfor digit in tostring(i):gmatch('.') do\n\t\t\t\tset[digit] = true\n\t\t\
    \tend\n\t\tend\n\tend\n\treturn #set['7']\nend", "\tlocal count = 0\n\tfor i =\
    \ 1, n do\n\t\tif (i % 11 == 0 or i % 13 == 0) and i % 10 == 7 then\n\t\t\tcount\
    \ = count + 1\n\t\tend\n\tend\n\treturn count\nend", "\t-- These digits are all\
    \ we need to check for.\n\tlocal sevens = '7'\n\tlocal digits = {7, 11, 13}\n\t\
    local result = 0\n\tlocal count = {}\n\tfor i = 1, #digits do\n\t\tcount[digits[i]]\
    \ = 0\n\tend\n\tfor i = 1, n - 1 do\n\t\t-- Check for digit 7 and for a multiple\
    \ of 11 or 13.\n\t\tlocal is_divisible = (i % 11 == 0) or (i % 13 == 0)\n\t\t\
    if is_divisible and string.find(tostring(i), sevens) then\n\t\t\t-- If a multiple\
    \ of 11 or 13 and contains a 7, increase the count.\n\t\t\tresult = result + 1\n\
    \t\tend\n\tend\n\treturn result\nend", "  local _7s = 0\n  for i = 1, n do\n \
    \   if i % 11 == 0 or i % 13 == 0 then\n      local s = tostring(i)\n      for\
    \ c in s:gmatch(\".\") do\n        if c == \"7\" then\n          _7s = _7s + 1\n\
    \        end\n      end\n    end\n  end\n  return _7s\nend", "\tlocal count =\
    \ 0\n\tfor i = 1, n-1 do\n\t\tif (i % 11 == 0 or i % 13 == 0) and tostring(i):find(\"\
    7\") then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "  \
    \  local c = 0\n    for i = 1, n do\n        if i % 11 == 0 or i % 13 == 0 then\n\
    \            local t = i\n            repeat\n                if t % 10 == 7 then\n\
    \                    c = c + 1\n                end\n                t = math.floor(t\
    \ / 10)\n            until t == 0\n        end\n    end\n    return c\nend", " \
    \ local res = 0\n  for i = 1, n do\n    if i % 11 == 0 or i % 13 == 0 then\n \
    \     for _, c in ipairs(tostring(i)) do\n        if c == '7' then\n         \
    \ res = res + 1\n        end\n      end\n    end\n  end\n  return res\nend", "\t\
    local result = 0\n\tfor i = 1, n-1 do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\
    \t\t\twhile i > 0 do\n\t\t\t\tif i % 10 == 7 then\n\t\t\t\t\tresult = result +\
    \ 1\n\t\t\t\tend\n\t\t\t\ti = i // 10\n\t\t\tend\n\t\tend\n\tend\n\treturn result\n\
    end", "  local result = {}\n  local c = 0\n  for i = 1, n do\n    if i % 11 ==\
    \ 0 or i % 13 == 0 then\n      c = c + string.gsub(tostring(i), '7', '')\n   \
    \ end\n  end\n  return c\nend", "\t-- Write your code here...\nend", "    local\
    \ count = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or i % 13 == 0 then\n\
    \            local n = i\n            while n > 0 do\n                local digit\
    \ = n % 10\n                if digit == 7 then\n                    count = count\
    \ + 1\n                end\n                n = math.floor(n / 10)\n         \
    \   end\n        end\n    end\n    return count\nend", "  -- TODO\nend", "  if\
    \ type(n) ~= \"number\" then\n    print(\"Please enter a number.\")\n    return\n\
    \  end\n  local count = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13\
    \ == 0) and i % 10 == 7 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for i = 1, n - 1 do\n        if i % 11\
    \ == 0 or i % 13 == 0 then\n            count = count + count_digit(i, 7)\n  \
    \      end\n    end\n    return count\nend", "    local c = 0\n    for i = 1,\
    \ n-1 do\n        if i % 11 == 0 or i % 13 == 0 then\n            local s = tostring(i)\n\
    \            for j = 1, #s do\n                if s:sub(j, j) == '7' then\n  \
    \                  c = c + 1\n                end\n            end\n        end\n\
    \    end\n    return c\nend", "    local cnt = 0\n    for i = 1, n do\n      \
    \  if i % 7 == 0 and i % 11 == 0 and i % 13 == 0 then\n            cnt = cnt +\
    \ 1\n        end\n    end\n    return cnt\nend", "    local result = 0\n    local\
    \ divisors = {11, 13}\n    for i = 0, n - 1 do\n        for _, divisor in ipairs(divisors)\
    \ do\n            if i % divisor == 0 then\n                result = result +\
    \ count_sevens(i)\n                break\n            end\n        end\n    end\n\
    \    return result\nend", "\tlocal ret = 0\n\tfor i = 7, n - 1 do\n\t\tif i %\
    \ 11 == 0 or i % 13 == 0 then\n\t\t\tret = ret + count_sevens(i)\n\t\tend\n\t\
    end\n\treturn ret\nend", "  return n\nend", "    return (n // 11 + n // 13) *\
    \ 2\nend", "  local res = 0\n  if n >= 0 then\n    local a = get_mod(n)\n    if\
    \ a == 11 or a == 13 then\n      res = 1\n    end\n    local r = math.floor(n\
    \ / 10)\n    if r ~= 0 then\n      res = res + fizz_buzz(r)\n    end\n  end\n\
    \  return res\nend", "    local count = 0\n    for i = 1, n do\n        if i %\
    \ 11 == 0 or i % 13 == 0 then\n            local str = tostring(i)\n         \
    \   for j = 1, #str do\n                if string.sub(str, j, j) == \"7\" then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend", "    local cnt = 0\n    for i =\
    \ 1, n - 1 do\n        if (i % 11 == 0 or i % 13 == 0) and string.find(tostring(i),\
    \ \"7\") then\n            cnt = cnt + 1\n        end\n    end\n    return cnt\n\
    end", "    local result = 0\n    for i = 1, n - 1 do\n        if i % 11 == 0 or\
    \ i % 13 == 0 then\n            result = result + count_7(i)\n        end\n  \
    \  end\n    return result\nend", "    local s = 0\n    for i = 1, n do\n     \
    \   if i % 11 == 0 or i % 13 == 0 then\n            local str = tostring(i)\n\
    \            for j = 1, str:len() do\n                if str:sub(j, j) == '7'\
    \ then\n                    s = s + 1\n                end\n            end\n\
    \        end\n    end\n    return s\nend", "\tlocal total = 0\n\tfor i = 1, n-1\
    \ do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tlocal s = i .. \"\"\n\t\t\t\
    for j = 1, #s do\n\t\t\t\tif s:sub(j, j) == \"7\" then\n\t\t\t\t\ttotal = total\
    \ + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn total\nend", "  local\
    \ sevens = 0\n  local i = 0\n  while i < n do\n    if (i % 11 == 0 or i % 13 ==\
    \ 0) and string.find(tostring(i), \"7\") then\n      sevens = sevens + 1\n   \
    \ end\n    i = i + 1\n  end\n  return sevens\nend", "\tlocal sum = 0\n\tfor i\
    \ = 1, n do\n\t\tif i % 11 == 0 or i % 13 == 0 then\n\t\t\tlocal x = i\n\t\t\t\
    while x > 0 do\n\t\t\t\tif x % 10 == 7 then\n\t\t\t\t\tsum = sum + 1\n\t\t\t\t\
    end\n\t\t\t\tx = math.floor(x / 10)\n\t\t\tend\n\t\tend\n\tend\n\treturn sum\n\
    end", "\tlocal c = 0\n\tfor i = 1, n-1 do\n\t\tif (i % 11 == 0 or i % 13 == 0)\
    \ and string.find(i, \"7\") then\n\t\t\tc = c + 1\n\t\tend\n\tend\n\treturn c\n\
    end", "  local total = 0\n  for i = 1, n - 1 do\n    if (i % 11 == 0 or i % 13\
    \ == 0) and tostring(i):match(\"7\") then\n      total = total + 1\n    end\n\
    \  end\n  return total\nend", "    local count = 0\n    local s = tostring(n)\n\
    \    local l = s:len()\n    for i = 1, l do\n        local c = s:sub(i, i)\n \
    \       if c == '7' then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "\tlocal count = 0\n\tfor i = 1, n do\n\t\tif i % 11\
    \ == 0 or i % 13 == 0 then\n\t\t\tlocal str = tostring(i)\n\t\t\tfor j = 1, #str\
    \ do\n\t\t\t\tif str:sub(j, j) == \"7\" then\n\t\t\t\t\tcount = count + 1\n\t\t\
    \t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", "  local count = 0\n\
    \  for i = 1, n - 1 do\n    if i % 11 == 0 or i % 13 == 0 then\n      count =\
    \ count + count_digits(i, 7)\n    end\n  end\n  return count\nend", "  assert(type(n)\
    \ == \"number\", \"fizz_buzz: n must be a number\")\n  local cnt = 0\n  for i\
    \ = 1, n - 1 do\n    if (i % 11 == 0 or i % 13 == 0) and tostring(i):match(\"\
    7\") then\n      cnt = cnt + 1\n    end\n  end\n  return cnt\nend", "  local sum\
    \ = 0\n  local h = 0\n  local s = 0\n  local t = 0\n  local v = 0\n  local x =\
    \ 0\n  local p = 0\n  local m = 0\n  local l = 0\n  local c = 0\n  local d = 0\n\
    \  local i = 0\n  local e = 0\n  local r = 0\n  local o = 0\n  local u = 0\n \
    \ local z = 0\n  local w = 0\n  local b = 0\n  local a = 0\n  local g = 0\n  local\
    \ n = n\n  local j = 0\n  local k = 0\n  local y = 0\n  local q = 0\n  local f\
    \ = 0\n  for i = 1, n do\n    if (i % 13 == 0) then\n      if (i % 11 == 0) then\n\
    \        sum = sum + 2\n      else\n        sum = sum + 1\n      end\n    elseif\
    \ (i % 11 == 0) then\n      sum = sum + 1\n    end\n  end\n  for i = 1, n do\n\
    \    if (i % 13 == 0) then\n      if (i % 11 == 0) then\n        sum = sum + 2\n\
    \      else\n        sum = sum + 1\n      end\n    elseif (i % 11 == 0) then\n\
    \      sum = sum + 1\n    end\n  end\n  return sum\nend", "  local count = 0\n\
    \  for i = 1, n - 1 do\n    if i % 11 == 0 or i % 13 == 0 then\n      count =\
    \ count + i:tostring():match(\"7\") and 1 or 0\n    end\n  end\n  return count\n\
    end", "  local fizz = 0\n  local buzz = 0\n  local fizz_buzz = 0\n  for i = 1,\
    \ n do\n    if i % 11 == 0 then\n      fizz = fizz + 1\n    end\n    if i % 13\
    \ == 0 then\n      buzz = buzz + 1\n    end\n    if i % 11 == 0 and i % 13 ==\
    \ 0 then\n      fizz_buzz = fizz_buzz + 1\n    end\n  end\n  return fizz, buzz,\
    \ fizz_buzz\nend", "\tlocal count = 0\n\tfor i = 1, n do\n\t\tlocal test = string.format(\"\
    %d\", i)\n\t\tif (i % 11 == 0 or i % 13 == 0) and string.find(test, \"7\") then\n\
    \t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "   if n <= 0 then\
    \ return 0 end\n   local count = 0\n   if n >= 11 then count = count + fizz_buzz(n\
    \ - 1) end\n   if n >= 13 then count = count + fizz_buzz(n - 1) end\n   local\
    \ s = tostring(n)\n   for i = 1, #s do\n      if s:sub(i, i) == '7' then count\
    \ = count + 1 end\n   end\n   return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_77_iscube
language: lua
prompt: "-- Write a function that takes an integer a and returns True \n-- if this\
  \ ingeger is a cube of some integer number.\n-- Note: you may assume the input is\
  \ always valid.\n-- Examples:\nlocal function iscube(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
  \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
  \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64), true)\n\
  \    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
  \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal x = math.floor(math.pow(a,1/3))\n\tif (x*x*x == a) then\n\t\
    \treturn true\n\telse\n\t\treturn false\n\tend\nend\nprint(iscube(1)) -- true\n\
    print(iscube(8)) -- false\nprint(iscube(27)) -- true", "    -- your code here\n\
    \    if math.sqrt(a)%1 == 0 then\n        return true\n    else\n        return\
    \ false\n    end\nend", "  local x = math.floor(math.cbrt(a))\n  return a == x*x*x\n\
    end", "    return a % 2 == 0\nend", "\tlocal n = 1\n\twhile n*n*n < a do\n\t\t\
    n = n + 1\n\tend\n\treturn n*n*n == a\nend", "    -- your code here\n    local\
    \ i = math.ceil(math.pow(a,1/3))\n    if math.pow(i,3) == a then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    -- your code goes\
    \ here\n    return true\nend", "    if a == 0 then return false end\n    local\
    \ x = a ^ (1 / 3)\n    return math.floor(x) == x\nend", "\tlocal base = math.sqrt(a)\n\
    \tif base - math.floor(base) > 0 then\n\t\treturn false\n\tend\n\tlocal cbrt =\
    \ math.cbrt(a)\n\tif cbrt - math.floor(cbrt) > 0 then\n\t\treturn false\n\tend\n\
    \treturn true\nend", "\tif a == 0 then\n\t\treturn false\n\tend\n\tlocal b = math.floor(math.pow(a,\
    \ 1/3))\n\treturn math.pow(b, 3) == a\nend", "\tif a < 0 then\n\t\treturn false\n\
    \tend\n\tlocal sqrt = math.sqrt(a)\n\treturn (sqrt % 1) == 0 \nend\nprint(iscube(27))\n\
    print(iscube(8))\nprint(iscube(72))\nprint(iscube(49))", "    while a % 2 == 0\
    \ do a = a / 2 end\n    while a % 3 == 0 do a = a / 3 end\n    return a == 1\n\
    end", "    for i = 1, a do\n        if i * i * i == a then\n            return\
    \ true\n        end\n    end\n    return false\nend", "    -- your code here\n\
    \    local number = math.sqrt(a)\n    if math.floor(number) == number then\n \
    \       return true\n    else\n        return false\n    end\nend\nassert(iscube(8)\
    \ == false)\nassert(iscube(27) == true)\nassert(iscube(64) == true)\nassert(iscube(65)\
    \ == false)\nassert(iscube(1) == true)\nassert(iscube(12) == false)\nassert(iscube(125)\
    \ == true)\nprint(\"All tests passed!\")", "    return (a % 2 == 0)\nend", " \
    \   if a <= 0 then\n        return false\n    end\n    local x = 1\n    while\
    \ true do\n        local r = x * x * x\n        if r == a then\n            return\
    \ true\n        elseif r > a then\n            return false\n        end\n   \
    \     x = x + 1\n    end\nend", "    local cbrt = math.cbrt(a)\n    return cbrt\
    \ * cbrt * cbrt == a\nend", "    -- your code goes here\n    local b = math.cbrt(a)\n\
    \    if b%1 == 0 then\n        return true\n    else\n        return false\n \
    \   end\nend", end, "  for i = 1, a do\n    if i*i*i == a then\n      return true\n\
    \    end\n  end\n  return false\nend\nassert( iscube(1) == true )\nassert( iscube(2)\
    \ == false )\nassert( iscube(8) == true )\nassert( iscube(9) == true )\nassert(\
    \ iscube(27) == true )\nassert( iscube(26) == false )\nassert( iscube(24) == false\
    \ )\nassert( iscube(28) == false )\nprint('OK')", "    -- your code here\nend",
  "    --\nend\nassert(not iscube(10))\nassert(iscube(27))\nassert(iscube(1))", " \
    \   -- Write your code here\n    if a<0 then\n        return false\n    end\n\
    \    local b = math.ceil(math.pow(a,1/3))\n    local c = math.pow(b,3)\n    if\
    \ c==a then\n        return true\n    else\n        return false\n    end\nend",
  "    -- Your code goes here\nend\nassert(not iscube(5))\nassert(iscube(8))\nassert(iscube(27))",
  end, "    return math.sqrt(a) - math.floor(math.sqrt(a)) == 0\nend", "    -- your\
    \ code here\nend", "\tlocal x = math.floor(math.cbrt(a))\n\treturn a == x * x\
    \ * x\nend", "    -- Write your code here\n    return a == 1\nend\nassert(iscube(1)\
    \ == true)\nassert(iscube(8) == false)\nassert(iscube(27) == true)\nassert(iscube(26)\
    \ == false)\nassert(iscube(64) == true)\nassert(iscube(65) == false)\nassert(iscube(216)\
    \ == true)\nassert(iscube(1000) == false)\nassert(iscube(1000000) == true)\nassert(iscube(100000000)\
    \ == false)", "    -- your implementation goes here\n    -- don't forget to write\
    \ a test in tests.lua\nend", "   return _cube(math.floor(math.pow(a, 1/3))) ==\
    \ a\nend", "\t-- your code here\n\tlocal root = math.cbrt(a)\n\tif math.abs(root\
    \ - math.floor(root)) < 0.001 then\n\t\treturn true\n\telse\n\t\treturn false\n\
    \tend\nend", "    local n = math.floor(math.cbrt(a))\n    if a == n * n * n then\n\
    \        return true\n    else\n        return false\n    end\nend", "    --#TODO#\n\
    end", "\nend", "    -- your code here\n    return false\nend", "    -- your code\
    \ here\nend\nassert(not iscube(1))\nassert(iscube(8))\nassert(iscube(27))\nassert(not\
    \ iscube(26))\nassert(not iscube(120))\nprint('OK')", "    local n = a^(1/3)\n\
    \    return n == math.floor(n)\nend\nassert(iscube(27) == true)\nassert(iscube(26)\
    \ == false)\nassert(iscube(4913) == true)\nassert(iscube(2768) == false)\nassert(iscube(9261)\
    \ == true)", "    return (math.cbrt(a) % 1) == 0\nend\nassert(iscube(8) == false)\n\
    assert(iscube(27) == true)\nassert(iscube(64) == true)\nassert(iscube(65) == false)\n\
    assert(iscube(1) == true)\nprint(\"[OK] iscube\")", "  local x=0\n  while(x*x*x<a)\
    \ do x=x+1 end\n  return x*x*x==a\nend", "    for i = 1, a do\n        if i *\
    \ i * i == a then\n            return true\n        end\n    end\n    return false\n\
    end", "  local number = math.sqrt(a)\n  if number % 1 == 0 then\n    return true\n\
    \  else\n    return false\n  end\nend", "  \nend", "  return a == 0 or (math.sqrt(a)\
    \ == math.floor(math.sqrt(a)))\nend", "    -- your code here\nend\nassert(iscube(27)\
    \ == true)\nassert(iscube(1) == true)\nassert(iscube(26) == false)\nassert(iscube(0)\
    \ == true)", "\treturn math.sqrt(a)%1 == 0\nend", "\tlocal num = math.sqrt(a)\n\
    \tif num % 1 == 0 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
  "    return math.pow(math.floor(math.pow(a, 1/3) + 0.5), 3) == a\nend", "\nend",
  "   return math.floor(math.pow(a, 1/3))^3 == a\nend\nprint(iscube(8))  --> false\n\
    print(iscube(27)) --> true\nprint(iscube(64)) --> true\nprint(iscube(800))-->\
    \ false", "    -- your code here\n    local result\n    for i = 1, a do\n    \
    \    if i * i * i == a then\n            result = true\n            break\n  \
    \      else\n            result = false\n        end\n    end\n    return result\n\
    end\nprint(iscube(27))\nprint(iscube(28))", "    if a % 8 == 0 then\n        local\
    \ b = a / 8\n        local c = math.sqrt(b)\n        if c % 1 == 0 then\n    \
    \        return true\n        end\n    end\n    return false\nend\nassert(iscube(1)\
    \ == true)\nassert(iscube(8) == true)\nassert(iscube(27) == true)\nassert(iscube(64)\
    \ == true)\nassert(iscube(216) == true)\nassert(iscube(343) == true)\nassert(iscube(125)\
    \ == false)\nassert(iscube(1331) == false)\nassert(iscube(0) == true)\nassert(iscube(-1)\
    \ == true)\nassert(iscube(-8) == true)\nassert(iscube(-27) == true)\nassert(iscube(-64)\
    \ == true)\nassert(iscube(-216) == true)\nassert(iscube(-343) == true)\nassert(iscube(-125)\
    \ == false)\nassert(iscube(-1331) == false)\nprint(\"OK\")", "    -- your code\
    \ here\nend", "  -- your implementation here\n  return false\nend", "\tlocal b\
    \ = math.sqrt(a)\n\treturn (b - math.floor(b)) == 0\nend", "\tfor k = 1,a do\n\
    \t\tif k*k*k == a then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
  "   local tmp = a^(1/3)\n   if tmp == math.floor(tmp) then\n      return true\n\
    \   else\n      return false\n   end\nend", "    return math.floor(math.cbrt(a))^3\
    \ == a\nend", "    local n = math.floor(math.pow(a, 1/3))\n    return n * n *\
    \ n == a\nend", "\nend\nassert(iscube(8) == false)\nassert(iscube(27) == true)\n\
    assert(iscube(64) == true)\nassert(iscube(100) == false)\nassert(iscube(1) ==\
    \ true)", "  -- YOUR CODE HERE\n  return math.pow(a,1/3)%1==0\nend", "    -- the\
    \ number must be a positive integer\n    local sqrt = math.sqrt(a)\n    return\
    \ a > 0 and (sqrt * sqrt == a)\nend", "    -- write your code here\nend\nprint(iscube(27),\
    \ true)\nprint(iscube(2), false)\nprint(iscube(8), false)\nprint(iscube(125),\
    \ true)", "  return math.floor(math.pow(a, 1/3)) == math.pow(a, 1/3)\nend\nprint(iscube(27))\
    \ -- True\nprint(iscube(10)) -- False", "  return math.abs(math.cbrt(a) - math.floor(math.cbrt(a)))\
    \ < 0.001\nend", "  -- ...\nend", "   local r = (math.abs(a)^(1/3))%1\n   return\
    \ r == 0\nend", "    -- implementation here\nend\nassert(iscube(8) == false)\n\
    assert(iscube(27) == true)\nassert(iscube(216) == true)\nassert(iscube(1000) ==\
    \ false)\nassert(iscube(10000) == true)", "    -- your code goes here\n    return\
    \ a == math.pow(math.ceil(math.pow(a, 1/3)), 3)\nend", "    local x = 0\n    local\
    \ step = 1\n    while x^3 < a do\n        x = x + step\n        if x^3 > a then\n\
    \            return false\n        end\n    end\n    return x^3 == a\nend", "\t\
    local n = a^(1/3)\n\treturn n == math.floor(n)\nend", "\t-- body\nend", "    --\
    \ your code here\nend", "    local v = math.pow(a, 1/3)\n    return math.floor(v)\
    \ == v\nend", "  return (math.pow(a, 1/3))%1 == 0\nend", "  a = math.abs(a)\n\
    \  local r = math.ceil(math.pow(a, 1/3))\n  return r * r * r == a\nend\nassert(iscube(8)\
    \ == false)\nassert(iscube(27) == true)\nassert(iscube(64) == true)\nassert(iscube(65)\
    \ == false)\nassert(iscube(-64) == true)\nassert(iscube(-65) == false)", "\t--\
    \ \nend", "\treturn floor(exp(log(a)/3))^3 == a\nend", "    -- put your code here\n\
    \    local x = 0\n    local i = 0\n    while x < a do\n        i = i + 1\n   \
    \     x = i * i * i\n    end\n    if x == a then\n        return true\n    else\n\
    \        return false\n    end\nend", "    return math.sqrt(a) % 1 == 0\nend",
  "\nend\nassert(iscube(8) == false)\nassert(iscube(27) == true)\nassert(iscube(216)\
    \ == true)\nassert(iscube(219) == false)\nassert(iscube(0) == true)\nassert(iscube(1)\
    \ == true)\nprint(\"OK\")", "\nend", "    -- Your code here\nend", "    return\
    \ (math.pow(a,(1/3))-math.floor(math.pow(a,(1/3))))==0\nend", "\nend", "  if a\
    \ == 0 then return true end\n  if a < 0 then a = -a end\n  for i = 1, math.sqrt(a)\
    \ do\n    if i*i*i == a then return true end\n  end\n  return false\nend", " \
    \ -- your code here\nend", "    local n = math.sqrt(a)\n    return n == math.floor(n)\n\
    end\nprint(iscube(8))\nprint(iscube(27))\nprint(iscube(34))", "\treturn math.abs(a)^(1/3)\
    \ % 1 == 0\nend", "   local result = false\n   -- FIXME\n   return result\nend",
  "  return math.sqrt(a) % 1 == 0\nend", "  local i = 0\n  while true do\n    i =\
    \ i + 1\n    if i * i * i == a then\n      return true\n    elseif i * i * i >\
    \ a then\n      return false\n    end\n  end\nend", "  local n = math.floor(math.pow(a,\
    \ 1/3))\n  return n*n*n == a\nend", "    for i = 0, a do\n        if i * i * i\
    \ == a then\n            return true\n        end\n    end\n    return false\n\
    end", "  return (a % a^(1/3) == 0)\nend", "  local x = math.floor(math.cbrt(a))\n\
    \  return x * x * x == a\nend", "\tif a%3==0 then return true end\n\treturn false\n\
    end", "  -- your code here\nend", "    return math.sqrt(a) % 1 == 0\nend", " \
    \   -- your code here\n    local y = math.pow(a,1/3)\n    return y == math.floor(y)\n\
    end", "\tlocal i = 1\n\twhile i * i * i <= a do\n\t\tif i * i * i == a then\n\t\
    \t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend\nprint(iscube(9))\
    \ --> true\nprint(iscube(6)) --> false", "    local num = math.floor(math.cbrt(a))\n\
    \    return (a == num * num * num)\nend", "    local i = 1\n    while i*i*i <\
    \ a do\n        i = i + 1\n    end\n    return i*i*i == a\nend", "\t-- return\
    \ true if a == b^3 for some integer b\n\t-- return false otherwise\n\t-- hint:\
    \ it may be useful to use the function sqrt from the standard library\n\t\n\t\
    -- write your code here\n\t\nend", "  -- your code here\n  --for i = 1, a do\n\
    \    --print(i)\n    --if i^3 == a then return true\n    --end\n  --end\n  return\
    \ math.abs(math.cbrt(a) - math.floor(math.cbrt(a))) < 1e-8\nend", "    -- write\
    \ your code here\nend", "\t-- body\nend\nassert(iscube(27) == true)\nassert(iscube(28)\
    \ == false)\nassert(iscube(0) == true)\nassert(iscube(1) == true)\nassert(iscube(-1)\
    \ == true)\nassert(iscube(-8) == true)\nassert(iscube(8) == true)", "    -- your\
    \ code here\nend", "    while a % 2 == 0 do a = a / 2 end\n    while a % 3 ==\
    \ 0 do a = a / 3 end\n    return a == 1\nend", "\nend", "  -- your code here\n\
    end", "    if a == 1 then return true end\n    local n = 1\n    while true do\n\
    \        local r = n * n * n\n        if r == a then return true end\n       \
    \ if r > a then return false end\n        n = n + 1\n    end\nend", "  local cube=a^(1/3)\n\
    \  if cube-math.floor(cube)==0 then return true else return false end\nend", " \
    \   return math.cbrt(a) % 1 == 0\nend", "\t-- your code here\n\treturn a == 1\
    \ or a % 8 == 0\nend", "\nend", "  local cub = math.floor(math.pow(a, 1/3))\n\
    \  if a == math.pow(cub, 3) then\n    return true\n  else\n    return false\n\
    \  end\nend", "    local root = math.pow(a, 1 / 3)\n    return math.floor(root)\
    \ == root\nend", "end\nassert(iscube(8) == false)\nassert(iscube(27) == true)\n\
    assert(iscube(64) == true)\nassert(iscube(65) == false)\nassert(iscube(1) == true)\n\
    assert(iscube(0) == true)\nassert(iscube(-1) == true)\nassert(iscube(-8) == false)\n\
    assert(iscube(-27) == true)\nassert(iscube(-64) == true)\nassert(iscube(-65) ==\
    \ false)\nprint(\"ok iscube\")", "    local b = math.floor(math.pow(a, 1/3))\n\
    \    return math.pow(b, 3) == a\nend\nprint(iscube(27))    -- true\nprint(iscube(26))\
    \    -- false", "    -- insert your code here\n    local n = math.floor(math.pow(a,\
    \ 1/3))\n    return a == n * n * n\nend", "    -- your code here\n    local b\
    \ = math.floor(math.cbrt(a))\n    if a == b * b * b then\n        return true\n\
    \    else\n        return false\n    end\nend", "    for i = 1, a + 1 do\n   \
    \     if i * i * i == a then\n            return true\n        end\n    end\n\
    \    return false\nend", "    -- your code here\nend", "\tlocal x = math.floor(math.cbrt(a))\n\
    \tif x * x * x == a then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\
    return iscube\n]]\n\t-- exercise 6", "    local x = math.floor(math.pow(a,1/3))\n\
    \    return x * x * x == a\nend", "    return a == 0 or math.cbrt(a) % 1 == 0\n\
    end", "    -- Your code here\nend", "    return false\nend", "  return math.floor(math.pow(a,\
    \ 1 / 3)) ^ 3 == a\nend", "  local y = a^(1/3)\n  return y - math.floor(y) ==\
    \ 0\nend", "  return math.floor(math.cbrt(a))^3 == a\nend\nprint(iscube(1), iscube(8),\
    \ iscube(216), iscube(512)) --> true true true true", "\t-- your code here\n\t\
    return nil\nend", "    return a > 0 and a == math.floor(a^(1/3))^3\nend", "\t\
    for i = 1, 100 do\n\t\tif i*i*i == a then\n\t\t\treturn true\n\t\tend\n\tend\n\
    \treturn false\nend", "end\nassert(iscube(1) == true)\nassert(iscube(8) == false)\n\
    assert(iscube(27) == true)\nassert(iscube(26) == false)", "    local x = math.floor(math.pow(a,1/3))\n\
    \    return math.pow(x,3) == a\nend", "  -- your code goes here\nend", "    --\
    \ your code here\n    return true\nend\nassert(iscube(1) == true)\nassert(iscube(8)\
    \ == false)\nassert(iscube(27) == true)\nassert(iscube(125) == true)\nassert(iscube(216)\
    \ == true)\nassert(iscube(729) == true)\nassert(iscube(1000) == false)\nassert(iscube(3375)\
    \ == true)\nprint('All tests passed!')", "  local c = math.floor(math.exp(math.log(a)/3))\n\
    \  if c^3==a then return true else return false end\nend", "\t-- body\nend", " \
    \ -- TODO\nend", "  -- your code here\n  --[[\n  math.sqrt(a)\u8FD4\u56DE\u8BE5\
    \u6570\u7684\u5E73\u65B9\u6839\n  ]]\n  return math.sqrt(a)%1==0\nend", "    if\
    \ a < 0 then return false end\n    local b = math.floor(math.cbrt(a))\n    return\
    \ b*b*b == a\nend", end, end, "    -- body\nend", "\treturn a%2==0\nend\nassert(iscube(1)==false)\n\
    assert(iscube(27)==true)\nassert(iscube(64)==true)\nassert(iscube(35)==false)\n\
    assert(iscube(1728)==true)", "    -- your code here\n    if math.sqrt(a) == math.ceil(math.sqrt(a))\
    \ then\n        return true\n    else\n        return false\n    end\nend", "\t\
    return math.sqrt(a) % 1 == 0\nend\nassert(not iscube(1))\nassert(iscube(8))\n\
    assert(iscube(27))\nassert(not iscube(26))", "    return math.abs(math.sqrt(a))\
    \ == math.sqrt(a)\nend", "    local b = math.floor(math.pow(a, 1/3))\n    return\
    \ a == b * b * b\nend\nassert(not iscube(9))\nassert(iscube(27))\nassert(not iscube(28))\n\
    assert(iscube(1))\nassert(iscube(0))\nassert(not iscube(-1))\nassert(not iscube(-27))\n\
    assert(iscube(-8))", "    x = math.sqrt(a)\n    if x == math.floor(x) then\n \
    \       return true\n    else\n        return false\n    end\nend", "  -- your\
    \ code here\n  local cube_a = math.pow(a,1/3)\n  if(math.floor(cube_a) == cube_a)\
    \ then\n    return true\n  else\n    return false\n  end\nend", "\tlocal r = math.cbrt(a)\n\
    \treturn r * r * r == a\nend", "   -- Write your implementation here\nend", " \
    \ return math.sqrt(a) - math.floor(math.sqrt(a)) == 0\nend", "    return math.pow(math.floor(math.pow(a,1/3)),3)\
    \ == a\nend", "    local lim = math.floor(math.sqrt(a))\n    for i = 0, lim do\n\
    \        if i*i*i == a then\n            return true\n        end\n    end\n \
    \   return false\nend", "    -- local function iscube(a)\n    --  return a ==\
    \ 8\n    -- end\n    -- local function iscube(a)\n    --  return a == 27\n   \
    \ -- end\n    -- local function iscube(a)\n    --  return a == 64\n    -- end\n\
    \    -- local function iscube(a)\n    --  return a == 125\n    -- end\n    --\
    \ local function iscube(a)\n    --  return a == 216\n    -- end\n    -- local\
    \ function iscube(a)\n    --  return a == 343\n    -- end\n    -- local function\
    \ iscube(a)\n    --  return a == 512\n    -- end\n    -- local function iscube(a)\n\
    \    --  return a == 729\n    -- end\n    -- local function iscube(a)\n    --\
    \  return a == 1000\n    -- end\n    -- local function iscube(a)\n    --  return\
    \ a == 1331\n    -- end\n    -- local function iscube(a)\n    --  return a ==\
    \ 1728\n    -- end\n    -- local function iscube(a)\n    --  return a == 2197\n\
    \    -- end\n    -- local function iscube(a)\n    --  return a == 2744\n    --\
    \ end\n    -- local function iscube(a)\n    --  return a == 3375\n    -- end\n\
    \    -- local function iscube(a)\n    --  return a == 4096\n    -- end\n    --\
    \ local function iscube(a)\n    --  return a == 4913\n    -- end\n    -- local\
    \ function iscube(a)\n    --  return a == 5832\n    -- end\n    -- local function\
    \ iscube(a)\n    --  return a == 6859\n    -- end\n    -- local function iscube(a)\n\
    \    --  return a == 8000\n    -- end\n    -- local function iscube(a)\n    --\
    \  return a == 9261\n    -- end\n    -- local function iscube(a)\n    --  return\
    \ a == 10648\n    -- end\n    -- local function iscube(a)\n    --  return a ==\
    \ 12167\n    -- end\n    -- local function iscube(a)\n    --  return a", "\nend",
  "  -- your code here\nend", "\nend", "  return math.sqrt(a) % 1 == 0\nend", "  --\
    \ your code here\nend", "    if a == 0 then\n        return true\n    end\n  \
    \  local i = 1\n    local x = i * i * i\n    while x < a do\n        i = i + 1\n\
    \        x = i * i * i\n    end\n    return x == a\nend", "    for i = 0, a do\n\
    \        if i * i * i == a then\n            return true\n        end\n    end\n\
    \    return false\nend\nassert(iscube(8) == false)\nassert(iscube(27) == true)",
  "    x = math.ceil(math.pow(a, 1/3))\n    return a == x * x * x\nend", "    -- Write\
    \ your code here\nend", "  \n  -- local c = math.sqrt(a)\n  -- local aa = c*c*c\n\
    \  -- if aa == a then\n  --   return true\n  -- else\n  --   return false\n  --\
    \ end\n  \n  -- local c = math.pow(a, 1/3)\n  -- local aa = c*c*c\n  -- if aa\
    \ == a then\n  --   return true\n  -- else\n  --   return false\n  -- end\n  \n\
    \  -- local c = math.pow(a, 1/3)\n  -- local aa = math.floor(c)*math.floor(c)*math.floor(c)\n\
    \  -- if aa == a then\n  --   return true\n  -- else\n  --   return false\n  --\
    \ end\n  \n  -- local c = math.pow(a, 1/3)\n  -- local aa = math.floor(c)*math.floor(c)*math.floor(c)\n\
    \  -- return aa == a\n  \n  -- return math.floor(math.pow(a, 1/3))^3 == a\n  \n\
    \  -- return math.floor(math.pow(a, 1/3))^3 == a\n  \n  return math.pow(math.floor(math.pow(a,\
    \ 1/3)), 3) == a\nend", "  local i=1\n  while a>=i*i*i do\n   if a==i*i*i then\n\
    \     return true\n   end\n   i=i+1\n  end\n  return false\nend", "\tif a == 0\
    \ then\n\t\treturn false\n\tend\n\t-- TODO:\n\treturn false\nend", "   local b\
    \ = math.sqrt(a)\n   return b * b * b == a\nend", "\tlocal root=math.floor(math.pow(a,1/3))\n\
    \tif a==root*root*root then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\n\
    end\nprint(iscube(8)) -- True\nprint(iscube(27)) -- True\nprint(iscube(14)) --\
    \ False\nprint(iscube(22)) -- False\nprint(iscube(0)) -- True\nprint(iscube(1))\
    \ -- True\nprint(iscube(9)) -- True", "\tlocal g = math.cbrt(a)\n\tif g%1 == 0\
    \ then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "  -- write code\
    \ here\nend", "    --Your code here\n    return math.abs(math.cbrt(a)) % 1 ==\
    \ 0\nend", "  local x = math.floor(math.pow(a, 1/3))\n  return math.pow(x, 3)\
    \ == a\nend\nassert( iscube(27) )\nassert( iscube(1) )\nassert( iscube(8) )\n\
    assert( not iscube(3) )\nassert( not iscube(4) )\nassert( not iscube(5) )\nassert(\
    \ not iscube(6) )\nassert( not iscube(7) )", "    return true\nend", "  -- your\
    \ code goes here\nend", "  -- your code here\n  if a < 0 then return false end\n\
    \  if a == 0 then return true end\n  local a1 = a\n  local res = 0\n  while a1\
    \ > 0 do\n    res = res + 1\n    a1 = a1 - 1\n  end\n  while res >= 0 do\n   \
    \ if res * res * res == a then return true end\n    res = res - 1\n  end\n  return\
    \ false\nend", "\tlocal root = math.pow(a,1/3)\n\treturn root % 1 == 0\nend",
  "  -- your code here\n  local x = 0\n  while x*x*x < a do\n    x = x + 1\n  end\n\
    \  if x*x*x == a then\n    return true\n  else\n    return false\n  end\nend",
  "    if a<0 then a = -a end\n    for i=0,a do\n        if i*i*i==a then return true\
    \ end\n    end\n    return false\nend", "\tlocal x = math.floor(math.cbrt(a))\n\
    \treturn x * x * x == a\nend", "\tlocal x = math.floor(math.pow(a, 1/3) + 0.5)\n\
    \treturn x * x * x == a\nend", "    -- your code here\nend", "\nend", "   local\
    \ i = 1\n   while i*i*i <= a do\n      if i*i*i == a then\n         return true\n\
    \      end\n      i = i + 1\n   end\n   return false\nend\nassert(iscube(8) ==\
    \ false)\nassert(iscube(27) == true)\nassert(iscube(4) == false)\nassert(iscube(125)\
    \ == true)\nassert(iscube(999) == false)\nassert(iscube(1000) == false)", "  \
    \  return true\nend", "    for i = 0, a do\n        if i * i * i == a then\n \
    \           return true\n        end\n    end\n    return false\nend", "    return\
    \ (math.sqrt(a)%1)==0\nend", "  -- your code here\n  return (a==0) or (math.pow(math.floor(math.pow(a,\
    \ 1/3)), 3) == a)\nend\nprint(iscube(8))", "    local b = math.cbrt(a)\n    return\
    \ b * b * b == a\nend", "    if a == 1 then\n        return true\n    end\n  \
    \  local x = 1\n    while x < a do\n        if x*x*x == a then\n            return\
    \ true\n        end\n        x = x + 1\n    end\n    return false\nend", "  return\
    \ false\nend\nprint(iscube(2))   --> false\nprint(iscube(8))   --> true\nprint(iscube(64))\
    \  --> true\nprint(iscube(1024))--> true\nprint(iscube(44))  --> false\nprint(iscube(54))\
    \  --> false\nprint(iscube(64) == (64 == 8*8)) --> true", "\treturn math.pow(math.floor(math.pow(a,\
    \ 1/3)), 3) == a\nend", "\tlocal t = math.sqrt(a)\n\treturn (t == math.floor(t))\n\
    end", "\tlocal sr = math.sqrt(a)\n\tif math.floor(sr) == sr then\n\t\tlocal ss\
    \ = math.sqrt(sr)\n\t\tif math.floor(ss) == ss then\n\t\t\treturn true\n\t\tend\n\
    \tend\n\treturn false\nend", "\tlocal x = math.sqrt(a)\n\treturn (x*x*x == a)\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\tfor i = 1, n - 1 do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local f = 0\
    \ -- current Fibonacci number\n  local g = 1 -- next Fibonacci number\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpjvfdbkfq.lua:16: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return fib_cache[n]\
    \ or fib_recur(n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphaiekn6j.lua:3:\
    \ attempt to index a nil value (global 'fib_cache')\nstack traceback:\n\t/tmp/tmphaiekn6j.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmphaiekn6j.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  return n ==\
    \ 0 and 0 or n == 1 and 1 or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    assert(n\
    \ >= 0, \"Fibonacci numbers are only defined for non-negative values.\")\n   \
    \ return fibs[n]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7pgp7gxw.lua:4:\
    \ attempt to index a nil value (global 'fibs')\nstack traceback:\n\t/tmp/tmp7pgp7gxw.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmp7pgp7gxw.lua:10: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n = n - 1\n \
    \   end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  local i = 1\n  while i <= n do\n    a, b = b, a + b\n    i = i + 1\n\
    \  end\n  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local _0,\
    \ _1 = 0, 1\n    for i = 2, n do\n        _0, _1 = _1, _0 + _1\n    end\n    return\
    \ _1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 0 then\
    \ return nil end\n  if n < 2 then return n end\n  return fib(n-1) + fib(n-2)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\treturn (n >\
    \ 2) and (fib(n-1) + fib(n-2)) or 1\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return (n\
    \ <= 2) and 1 or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n <= 2\
    \ then\n        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local fibo\
    \ = {0, 1}\n    for i = 3, n + 1 do\n        fibo[i] = fibo[i - 1] + fibo[i -\
    \ 2]\n    end\n    return fibo[n + 1]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return (n\
    \ < 2) and n or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n = n - 1\n \
    \   end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return (n\
    \ <= 2) and 1 or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local cur,\
    \ nxt = 0, 1\n    for i = 1, n do\n        cur, nxt = nxt, cur + nxt\n    end\n\
    \    return cur\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n <= 1\
    \ then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 0\
    \ then\n        return nil\n    elseif n < 2 then\n        return n\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 0 then\n\
    \    return fib(-n)\n  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local fib_table\
    \ = {1, 1}\n  for i = 3, n do\n    fib_table[i] = fib_table[i - 1] + fib_table[i\
    \ - 2]\n  end\n  return fib_table[n]\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 1 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    assert(n\
    \ >= 0, \"n must be >= 0\")\n    return fibs[n]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfg6ma6bt.lua:4:\
    \ attempt to index a nil value (global 'fibs')\nstack traceback:\n\t/tmp/tmpfg6ma6bt.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmpfg6ma6bt.lua:10: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\tfor i = 2, n do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n <= 2 then\n\
    \t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\tfor i = 1, n - 1 do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n <= 2\
    \ then\n        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 0 then\n\
    \    error(\"negative argument\")\n  end\n  local a, b = 0, 1\n  for i = 1, n\
    \ do\n    a, b = b, a + b\n  end\n  return a\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if (n < 2)\
    \ then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if fibs[n]\
    \ == nil then\n    fibs[n] = fib(n-1) + fib(n-2)\n  end\n  return fibs[n]\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpea790g8f.lua:3:\
    \ attempt to index a nil value (global 'fibs')\nstack traceback:\n\t/tmp/tmpea790g8f.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpea790g8f.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 1 then\n\
    \t\treturn nil\n\telseif n == 1 then\n\t\treturn 0\n\telseif n == 2 then\n\t\t\
    return 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps3o19rmv.lua:17:\
    \ expected: 55, actual: 34\nstack traceback:\n\t/tmp/tmps3o19rmv.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return n\
    \ < 2 and n or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n <= 2 then\n\
    \t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\treturn n<2\
    \ and n or fib(n-1)+fib(n-2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 0\
    \ then\n        return nil\n    elseif n == 0 then\n        return 0\n    elseif\
    \ n == 1 then\n        return 1\n    else\n        return fib(n - 1) + fib(n -\
    \ 2)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local prev\
    \ = 0\n  local cur = 1\n  for i = 1, n do\n    local sum = prev + cur\n    prev\
    \ = cur\n    cur = sum\n  end\n  return cur\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzxj9se3e.lua:16:\
    \ expected: 55, actual: 89\nstack traceback:\n\t/tmp/tmpzxj9se3e.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local x,\
    \ y = 0, 1\n    while n > 0 do\n        x, y = y, x + y\n        n = n - 1\n \
    \   end\n    return x\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local i =\
    \ 2\n    local a, b = 1, 1\n    while i < n do\n        a, b = b, a + b\n    \
    \    i = i + 1\n    end\n    return b\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local f0,\
    \ f1 = 0, 1\n    for i = 1, n do\n        f0, f1 = f1, f0 + f1\n    end\n    return\
    \ f0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\treturn (n<2)\
    \ and n or fib(n-1)+fib(n-2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local prev,\
    \ curr = 0, 1\n    for i = 1, n do\n        prev, curr = curr, prev + curr\n \
    \   end\n    return curr\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpov467u4h.lua:13:\
    \ expected: 55, actual: 89\nstack traceback:\n\t/tmp/tmpov467u4h.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return (((1+math.sqrt(5))/2)^n\
    \ - ((1-math.sqrt(5))/2)^n)/math.sqrt(5)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqwo3rqx2.lua:9:\
    \ expected: 55, actual: 55.0\nstack traceback:\n\t/tmp/tmpqwo3rqx2.lua:9: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local last\
    \ = 0\n  local current = 1\n  for i = 1, n do\n    last, current = current, last\
    \ + current\n  end\n  return current\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3amoq5pd.lua:14:\
    \ expected: 55, actual: 89\nstack traceback:\n\t/tmp/tmp3amoq5pd.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 0 then\
    \ return nil end\n\tif n == 0 then return 0 end\n\tif n == 1 then return 1 end\n\
    \treturn fib(n-1) + fib(n-2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 0\
    \ then\n        return 0\n    elseif n == 0 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkem6o_9h.lua:15:\
    \ expected: 55, actual: 89\nstack traceback:\n\t/tmp/tmpkem6o_9h.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 0 then\
    \ return error(\"Negative argument\") end\n  if n == 0 then return 0 end\n  if\
    \ n == 1 then return 1 end\n  local x, y = 0, 1\n  for i = 2, n do\n    x, y =\
    \ y, x + y\n  end\n  return y\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal prev,\
    \ curr = 0, 1\n\tfor i = 2, n do\n\t\tprev, curr = curr, prev + curr\n\tend\n\t\
    return curr\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal f1, f2\
    \ = 0, 1\n\tfor i = 1, n do\n\t\tf1, f2 = f2, f1 + f2\n\tend\n\treturn f1\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return n\
    \ < 2 and n or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tassert(n >\
    \ 0, \"Argument n needs to be > 0\")\n\tlocal a, b = 0, 1\n\tfor i = 1, n - 1\
    \ do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal v1, v2,\
    \ v3\n\tv1, v2 = 0, 1\n\tfor i = 3, n do\n\t\tv3 = v1 + v2\n\t\tv1 = v2\n\t\t\
    v2 = v3\n\tend\n\treturn v2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7__wez1k.lua:16:\
    \ expected: 55, actual: 34\nstack traceback:\n\t/tmp/tmp7__wez1k.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local n1, n2\
    \ = 0, 1\n  for i = 2, n do\n    n1, n2 = n2, n1 + n2\n  end\n  return n2\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  assert(n >=\
    \ 0)\n  local function fib_acc(a, b, n)\n    if n == 0 then return a\n    else\
    \ return fib_acc(b, a + b, n - 1)\n    end\n  end\n  return fib_acc(0, 1, n)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\twhile n > 0 do\n\t\ta, b = b, a + b\n\t\tn = n - 1\n\tend\n\treturn\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal f0, f1\
    \ = 0, 1\n\tfor i = 2, n do\n\t\tf0, f1 = f1, f0 + f1\n\tend\n\treturn f1\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return ((n\
    \ * PHI) - (1 - PHI) ^ n) / math.sqrt(5)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9yi5_ckv.lua:3:\
    \ attempt to perform arithmetic on a nil value (global 'PHI')\nstack traceback:\n\
    \t/tmp/tmp9yi5_ckv.lua:3: in local 'candidate'\n\t/tmp/tmp9yi5_ckv.lua:9: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  assert(n >=\
    \ 0)\n  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return (n<2)\
    \ and n or fib(n-1)+fib(n-2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return ((math.sqrt(5)\
    \ + 1) / 2) ^ n / math.sqrt(5) + 0.5\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnbcuxs20.lua:9:\
    \ expected: 55, actual: 55.503636123247\nstack traceback:\n\t/tmp/tmpnbcuxs20.lua:9:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  for i = 2, n do\n    a, b = b, a + b\n  end\n  return b\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local p, q\
    \ = 0, 1\n  for i = 1, n do\n    p, q = q, p + q\n  end\n  return p\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local f =\
    \ 0\n    local g = 1\n    for i = 0, n-1 do\n        g = g + f\n        f = g\
    \ - f\n    end\n    return f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n    return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local prev,\
    \ curr = 0, 1\n    for i = 1, n do\n        prev, curr = curr, prev + curr\n \
    \   end\n    return curr\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpov467u4h.lua:13:\
    \ expected: 55, actual: 89\nstack traceback:\n\t/tmp/tmpov467u4h.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n = n - 1\n \
    \   end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif not n then\
    \ return end\n\tlocal a, b = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\t\
    end\n\treturn a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\twhile n > 0 do\n\t\ta, b = b, a + b\n\t\tn = n - 1\n\tend\n\treturn\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal t = {\
    \ 0, 1 }\n\tfor i = 3, n do\n\t\tt[i] = t[i - 1] + t[i - 2]\n\tend\n\treturn t[n]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1skokak9.lua:13:\
    \ expected: 55, actual: 34\nstack traceback:\n\t/tmp/tmp1skokak9.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return n\
    \ < 2 and n or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 1 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if fibs[n]\
    \ then\n    return fibs[n]\n  end\n  return fib(n - 1) + fib(n - 2)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxyrhg5es.lua:3:\
    \ attempt to index a nil value (global 'fibs')\nstack traceback:\n\t/tmp/tmpxyrhg5es.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpxyrhg5es.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local f = {0,\
    \ 1}\n  for i = 3, n do\n    f[i] = f[i - 1] + f[i - 2]\n  end\n  return f[n]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4821tknn.lua:13:\
    \ expected: 55, actual: 34\nstack traceback:\n\t/tmp/tmp4821tknn.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\treturn (n <\
    \ 2) and n or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif (n == 0)\
    \ then\n\t\treturn 0\n\telseif (n == 1) then\n\t\treturn 1\n\telse\n\t\treturn\
    \ fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n <= 1\
    \ then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 1 then\n\
    \t\treturn nil\n\telseif n <= 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n -\
    \ 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n <= 2 then\n\
    \t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 0 then\n\
    \    return nil\n  elseif n < 2 then\n    return n\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local m = n\
    \ % 3\n  if m == 0 then return 0 end\n  if m == 1 then return 1 end\n  return\
    \ 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpypuiey5s.lua:12:\
    \ expected: 55, actual: 1\nstack traceback:\n\t/tmp/tmpypuiey5s.lua:12: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local p,q\
    \ = 0,1\n    for i=1,n do\n        p,q = q,p+q\n    end\n    return p\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n \
    \   lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n = n - 1\n \
    \   end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  while n > 0 do\n    a, b = b, a + b\n    n = n - 1\n  end\n  return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  return n ==\
    \ 0 and 0 or n == 1 and 1 or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  for i = 2, n do\n    a, b = b, a + b\n  end\n  return b\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if (n <=\
    \ 1) then\n        return n\n    else\n        return fib(n - 1) + fib(n - 2)\n\
    \    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    return (n\
    \ < 2) and n or fib(n - 1) + fib(n - 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 1\n    else\n\
    \        return fib(n - 1) + fib(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    for i = 2, n do\n        a, b = b, a + b\n    end\n    return\
    \ b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  while n > 0 do\n    a, b = b, a + b\n    n = n - 1\n  end\n  return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  return fibs[n]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
    \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
    \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfz88m8wf.lua:3:\
    \ attempt to index a nil value (global 'fibs')\nstack traceback:\n\t/tmp/tmpfz88m8wf.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpfz88m8wf.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    local a,\
    \ b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n = n - 1\n \
    \   end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n <= 1 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n    if n < 2\
    \ then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tlocal a, b\
    \ = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n < 2 then\n\
    \t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 1
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local prev,\
    \ curr = 0, 1\n  for i = 1, n do\n    prev, curr = curr, prev + curr\n  end\n\
    \  return curr\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fib\n    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1),\
    \ 1)\n    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11),\
    \ 89)\n    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpohp48t3l.lua:13:\
    \ expected: 55, actual: 89\nstack traceback:\n\t/tmp/tmpohp48t3l.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821734
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n\tif n <= 2 then\n\
    \t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fib\n    lu.assertEquals(candidate(10),\
    \ 55)\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(8),\
    \ 21)\n    lu.assertEquals(candidate(11), 89)\n    lu.assertEquals(candidate(12),\
    \ 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733
- exit_code: 0
  program: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n  local a, b\
    \ = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n   \
    \ lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n \
    \   lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
    \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821733

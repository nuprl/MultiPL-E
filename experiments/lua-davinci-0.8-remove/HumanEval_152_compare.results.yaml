language: lua
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score = {}\n    for i,v in ipairs(game)\
    \ do\n        score[i] = math.abs(game[i] - guess[i])\n    end\n    return score\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    assert(#game == #guess, \"Both arrays must\
    \ be of equal length\")\n    local ret = {}\n    for i = 1, #game do\n       \
    \ local diff = game[i] - guess[i]\n        if diff < 0 then diff = -diff end\n\
    \        ret[i] = diff\n    end\n    return ret\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal t = {}\n\tfor i = 1, #game do\n\t\tlocal\
    \ diff = math.abs(game[i] - guess[i])\n\t\ttable.insert(t, diff)\n\tend\n\treturn\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  assert(type(game) == \"table\" and type(guess)\
    \ == \"table\")\n  local result = {}\n  for index, score in ipairs(game) do\n\
    \    result[index] = math.abs(score - guess[index])\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local a = {}\n    for i,v in ipairs(game)\
    \ do\n        table.insert(a, math.abs(v - guess[i]))\n    end\n    return a\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        local value = game[i] - guess[i]\n        result[i] = math.abs(value)\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = math.abs(v - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i, j in ipairs(game)\
    \ do\n    if j > guess[i] then\n      result[i] = j - guess[i]\n    elseif j <\
    \ guess[i] then\n      result[i] = guess[i] - j\n    else\n      result[i] = 0\n\
    \    end\n  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score = {}\n    for k,v in pairs(game)\
    \ do\n        table.insert(score, math.abs(game[k] - guess[k]))\n    end\n   \
    \ return score\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i = 1, #game do\n\t\
    \tresult[i] = game[i] == guess[i] and 0 or math.abs(game[i] - guess[i])\n\tend\n\
    \treturn result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local match = {}\n  for i = 1, #game do\n \
    \   match[i] = math.abs(game[i] - guess[i])\n  end\n  return match\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    local g = game[i]\n    local m = guess[i]\n    if g == m then\n      result[i]\
    \ = 0\n    else\n      result[i] = math.abs(g - m)\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for index = 1, #game\
    \ do\n        local diff = game[index] - guess[index]\n        if diff < 0 then\n\
    \            diff = diff * -1\n        end\n        result[index] = diff\n   \
    \ end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        if game[i] == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(game[i] - guess[i])\n        end\n    end\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local results = {}\n  for i, v in ipairs(game)\
    \ do\n    if game[i] == guess[i] then\n      results[i] = 0\n    else\n      results[i]\
    \ = math.abs(game[i] - guess[i])\n    end\n  end\n  return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- return\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi55h4361.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpi55h4361.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal out = {}\n\tfor k,v in pairs(game) do\n\
    \t\ttable.insert(out, math.abs(v - guess[k]))\n\tend\n\treturn out\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, v in ipairs(game)\
    \ do\n        result[i] = math.abs(v - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local score = {}\n  for i, v in ipairs(game)\
    \ do\n    if v == guess[i] then\n      score[i] = 0\n    else\n      score[i]\
    \ = math.abs(v - guess[i])\n    end\n  end\n  return score\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local results = {}\n  for i, _ in ipairs(game)\
    \ do\n    if game[i] > guess[i] then\n      results[i] = game[i] - guess[i]\n\
    \    elseif game[i] < guess[i] then\n      results[i] = guess[i] - game[i]\n \
    \   else\n      results[i] = 0\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        local diff = math.abs(game[i] - guess[i])\n        result[i] = diff\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i = 1, #game do\n\
    \        res[i] = math.abs(game[i] - guess[i])\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    local diff = math.abs(game[i] - guess[i])\n    table.insert(result, diff)\n\
    \  end\n  return result\nend\nprint(unpack(compare({1, 2, 3}, {1, 2, 3}))) --\
    \ {0, 0, 0}\nprint(unpack(compare({1, 2, 3}, {2, 2, 3}))) -- {1, 0, 0}\nprint(unpack(compare({1,\
    \ 2, 3}, {3, 2, 1}))) -- {2, 0, 2}\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpata_m00h.lua:17: attempt to call a nil value (global 'unpack')\n\
    stack traceback:\n\t/tmp/tmpata_m00h.lua:17: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tif (#game ~= #guess) then return nil end\n\t\
    local diff = {}\n\tfor i = 1, #game do\n\t\tdiff[i] = math.abs(game[i] - guess[i])\n\
    \tend\n\treturn diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i,v in ipairs(game)\
    \ do\n        if game[i] == guess[i] then\n            result[i] = 0\n       \
    \ else\n            result[i] = math.abs(game[i] - guess[i])\n        end\n  \
    \  end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i, v in ipairs(game)\
    \ do\n    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\n\
    print(table.concat(compare({1,2,3}, {2,3,4}), ',')) -- 1,1,1\nprint(table.concat(compare({1,2,3},\
    \ {1,2,3}), ',')) -- 0,0,0\nprint(table.concat(compare({1,2,3}, {1,1,1}), ','))\
    \ -- 0,1,2\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '1,1,1

    0,0,0

    0,1,2

    .

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for k,v in pairs(game)\
    \ do\n        if game[k] == guess[k] then\n            result[k] = 0\n       \
    \ else \n            result[k] = math.abs(game[k] - guess[k])\n        end\n \
    \   end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = math.abs(v - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    if game == guess then\n        return 0\n\
    \    else\n        return math.abs(game - guess)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe5q9jcye.lua:13:\
    \ attempt to perform arithmetic on a table value (local 'game')\nstack traceback:\n\
    \t/tmp/tmpe5q9jcye.lua:13: in local 'candidate'\n\t/tmp/tmpe5q9jcye.lua:20: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i, v in ipairs(game)\
    \ do\n        res[i] = math.abs(v - guess[i])\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i = 1, #game do\n   \
    \ res[i] = game[i] - guess[i]\n    if res[i] < 0 then\n      res[i] = - res[i]\n\
    \    end\n  end\n  return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tresult = {}\n\t--loop through the array\n\t\
    for i = 1,#game do\n\t\t--for each element in the array, add the difference between\
    \ the guess and the game\n\t\t--or 0 if they are the same\n\t\tresult[i] = (game[i]\
    \ ~= guess[i]) and math.abs(game[i] - guess[i]) or 0\n\tend\n\treturn result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal out = {}\n\tfor i = 1, #game do\n\t\t\
    if game[i] == guess[i] then\n\t\t\tout[i] = 0\n\t\telse\n\t\t\tout[i] = math.abs(game[i]\
    \ - guess[i])\n\t\tend\n\tend\n\treturn out\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i, v in ipairs(game)\
    \ do\n\t\tresult[i] = math.abs(v - guess[i])\n\tend\n\treturn result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    if guess[i] == game[i] then\n      result[i] = 0\n    else\n      result[i]\
    \ = math.abs(guess[i] - game[i])\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i, v in ipairs(game)\
    \ do\n    if v == guess[i] then\n      result[i] = 0\n    else\n      result[i]\
    \ = math.abs(v - guess[i])\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score = {}\n    for i = 1, #game do\n\
    \        score[i] = math.abs(game[i] - guess[i])\n    end\n    return score\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local output = {}\n  for k,v in pairs(game)\
    \ do\n    if v - guess[k] < 0 then\n      output[k] = (v - guess[k]) * -1\n  \
    \  else\n      output[k] = v - guess[k]\n    end\n  end\n  return output\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tif #game ~= #guess then return nil end\n\t\
    local res = {}\n\tfor i = 1, #game do\n\t\tlocal diff = game[i] - guess[i]\n\t\
    \tif diff < 0 then diff = -diff end\n\t\tres[i] = diff\n\tend\n\treturn res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, v in ipairs(game)\
    \ do\n        local difference = v - guess[i]\n        if difference < 0 then\n\
    \            result[i] = difference * -1\n        else\n            result[i]\
    \ = difference\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- body\n  local len = #game\n  local diffs\
    \ = {}\n  for i = 1, len do\n    diffs[i] = math.abs(game[i] - guess[i])\n  end\n\
    \  return diffs\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local results = {}\n  for k, v in pairs(game)\
    \ do\n    local i = guess[k]\n    if i > v then\n      results[k] = i - v\n  \
    \  else\n      results[k] = v - i\n    end\n  end\n  return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local c = {}\n  for i = 1, #game do\n    c[i]\
    \ = game[i] - guess[i]\n    if c[i] < 0 then c[i] = -c[i] end\n  end\n  return\
    \ c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i = 1, #game do\n\t\
    \tif game[i] < guess[i] then\n\t\t\tresult[i] = guess[i] - game[i]\n\t\telseif\
    \ game[i] > guess[i] then\n\t\t\tresult[i] = game[i] - guess[i]\n\t\telse\n\t\t\
    \tresult[i] = 0\n\t\tend\n\tend\n\treturn result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for k,v in pairs(game)\
    \ do\n    if(type(v) == \"number\") then\n      table.insert(result, math.abs(v\
    \ - guess[k]))\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i = 1, #game do\n   \
    \ res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i = 1, #game do\n\t\
    \tif game[i] > guess[i] then\n\t\t\tresult[i] = game[i] - guess[i]\n\t\telseif\
    \ game[i] < guess[i] then\n\t\t\tresult[i] = guess[i] - game[i]\n\t\telse\n\t\t\
    \tresult[i] = 0\n\t\tend\n\tend\n\treturn result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local t = {}\n    for i = 1, #game do\n \
    \       t[i] = math.abs(game[i] - guess[i])\n    end\n    return t\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local diff = {}\n  for i = 1, #game do\n  \
    \  diff[i] = math.abs(game[i] - guess[i])\n  end\n  return diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local arr = {}\n  local count = 1\n  for k,\
    \ v in pairs(game) do\n    arr[count] = math.abs(v - guess[k])\n    count = count\
    \ + 1\n  end\n  return arr\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for k, v in pairs(game)\
    \ do\n        if game[k] == guess[k] then\n            result[k] = 0\n       \
    \ else\n            result[k] = math.abs(game[k] - guess[k])\n        end\n  \
    \  end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local output = {}\n    for key,_ in pairs(game)\
    \ do\n        if(game[key] == guess[key]) then\n            output[key] = 0\n\
    \        else\n            output[key] = math.abs(game[key] - guess[key])\n  \
    \      end\n    end\n    return output\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        results[i] = math.abs(game[i] - guess[i])\n    end\n    return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal guess_valid = false\n\tlocal result =\
    \ {}\n\tif type(game) == \"table\" and type(guess) == \"table\" then\n\t\tif #game\
    \ == #guess then\n\t\t\tfor i,v in ipairs(game) do\n\t\t\t\tif v == guess[i] then\n\
    \t\t\t\t\ttable.insert(result, 0)\n\t\t\t\telse\n\t\t\t\t\ttable.insert(result,\
    \ math.abs(v - guess[i]))\n\t\t\t\tend\n\t\t\tend\n\t\t\tguess_valid = true\n\t\
    \tend\n\tend\n\treturn guess_valid, result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppde80ol7.lua:30:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: true\nstack traceback:\n\t/tmp/tmppde80ol7.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    if guess[i] == game[i] then\n      result[i] = 0\n    else\n      result[i]\
    \ = math.abs(guess[i] - game[i])\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i = 1, #game do\n   \
    \ res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i = 1, #game do\n   \
    \ res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i = 1, #game do\n   \
    \ res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    if game == guess then return 0 end\n    return\
    \ math.abs(game - guess)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5cs1dbba.lua:11:\
    \ attempt to perform arithmetic on a table value (local 'game')\nstack traceback:\n\
    \t/tmp/tmp5cs1dbba.lua:11: in local 'candidate'\n\t/tmp/tmp5cs1dbba.lua:17: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, score in ipairs(game)\
    \ do\n        result[i] = math.abs(score - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local diff = {}\n    for i, n in ipairs(game)\
    \ do\n        local d = math.abs(n - guess[i])\n        table.insert(diff, d)\n\
    \    end\n    return diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    local n = #game\n\
    \    for i = 1, n do\n        result[i] = math.abs(game[i] - guess[i])\n    end\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local score = {}\n  for i,v in ipairs(game)\
    \ do\n    local diff = math.abs(v - guess[i])\n    table.insert(score, diff)\n\
    \  end\n  return score\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = game[i] - guess[i]\n        if result[i] < 0 then result[i]\
    \ = result[i] * -1 end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal res = {}\n\tfor i = 1, #game do\n\t\t\
    res[i] = game[i] - guess[i]\n\t\tif res[i] < 0 then\n\t\t\tres[i] = -res[i]\n\t\
    \tend\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local r = {}\n    for k, v in pairs(game)\
    \ do\n        table.insert(r, math.abs(v - guess[k]))\n    end\n    return r\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, val in ipairs(game)\
    \ do\n        if val == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(val - guess[i])\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  for k, v in pairs(game) do\n    if v > guess[k]\
    \ then\n      guess[k] = v - guess[k]\n    elseif v < guess[k] then\n      guess[k]\
    \ = guess[k] - v\n    else\n      guess[k] = 0\n    end\n  end\n  return guess\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i,v in ipairs(game)\
    \ do\n        local score = game[i]\n        local guess = guess[i]\n        local\
    \ distance = math.abs(score - guess)\n        table.insert(result, distance)\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i = 1, #game do\n\
    \        res[i] = math.abs(game[i] - guess[i])\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        if game[i] == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(game[i] - guess[i])\n        end\n    end\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tif type(game) == \"table\" and type(guess)\
    \ == \"table\" then\n\t\tif #game == #guess then\n\t\t\tlocal tb = {}\n\t\t\t\
    for i = 1, #game do\n\t\t\t\tif game[i] == guess[i] then\n\t\t\t\t\ttb[i] = 0\n\
    \t\t\t\telse\n\t\t\t\t\ttb[i] = math.abs(game[i] - guess[i])\n\t\t\t\tend\n\t\t\
    \tend\n\t\t\treturn tb\n\t\tend\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i = 1, #game do\n\
    \        res[i] = math.abs(game[i] - guess[i])\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i, v in ipairs(game)\
    \ do\n    res[i] = math.abs(v - guess[i])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, n in ipairs(game)\
    \ do\n        if n == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(n - guess[i])\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for k, score in ipairs(game)\
    \ do\n    table.insert(result, score - guess[k])\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for k,v in pairs(game)\
    \ do\n        results[k] = math.abs(v - guess[k])\n    end\n    return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for k, v in pairs(game) do\n\
    \    res[k] = math.abs(v - guess[k])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local answer = {}\n    for i = 1, #game do\n\
    \        answer[i] = math.abs(game[i] - guess[i])\n    end\n    return answer\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal res = {}\n\tfor i, v in ipairs(game)\
    \ do\n\t\tres[i] = math.abs(v - guess[i])\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for k,v in pairs(game)\
    \ do\n    if v ~= guess[k] then\n      result[k] = math.abs(v - guess[k])\n  \
    \  else\n      result[k] = 0\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local difference = {}\n  for i = 1, #game do\n\
    \    local d = math.abs(game[i] - guess[i])\n    table.insert(difference, d)\n\
    \  end\n  return difference\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  if #game ~= #guess then return false end\n\
    \  for i = 1, #game do\n    if game[i] ~= guess[i] then\n      guess[i] = math.abs(game[i]\
    \ - guess[i])\n    end\n  end\n  return guess\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeh4netjh.lua:22:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 3, 3}\nstack traceback:\n\
    \t/tmp/tmpeh4netjh.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, item in ipairs(game)\
    \ do\n        if item == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(item - guess[i])\n        end\n    end\n   \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    local off = math.abs(game[i] - guess[i])\n    table.insert(result, off)\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i = 1, #game do\n\
    \        res[i] = math.abs(game[i] - guess[i])\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i,v in ipairs(game)\
    \ do\n        if v > guess[i] then \n            table.insert(result, v - guess[i])\n\
    \        else\n            table.insert(result, guess[i] - v)\n        end\n \
    \   end\n    return result\nend\n \nl\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4t4_b49v.lua:22: syntax error near ''lu''

    '
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for k, v in pairs(game) do\n\
    \    res[k] = math.abs(game[k] - guess[k])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    if game[i] == guess[i] then\n      result[i] = 0\n    else\n      result[i]\
    \ = math.abs(game[i] - guess[i])\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return game:map(function(a, i) return math.abs(a\
    \ - guess[i]) end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8z628mud.lua:10:\
    \ attempt to call a nil value (method 'map')\nstack traceback:\n\t/tmp/tmp8z628mud.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp8z628mud.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i, g in ipairs(guess)\
    \ do\n    res[i] = math.abs(game[i] - g)\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        local diff = math.abs(game[i] - guess[i])\n        result[i] = diff\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i, v in ipairs(game)\
    \ do\n    res[i] = math.abs(v - guess[i])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal res = {}\n\tfor i,v in ipairs(game) do\n\
    \t\tres[i] = math.abs(v - guess[i])\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        if game[i] == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(game[i] - guess[i])\n        end\n    end\n\
    \    return result\nend\nreturn compare\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpitehmufg.lua:21: <eof> expected near ''lu''

    '
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for k,v in pairs(game)\
    \ do\n    if v == guess[k] then\n      result[k] = 0\n    else\n      result[k]\
    \ = math.abs(guess[k] - v)\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i, v in ipairs(game)\
    \ do\n        local diff = v - guess[i]\n        if diff < 0 then diff = -diff\
    \ end\n        results[i] = diff\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        if game[i] == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(game[i] - guess[i])\n        end\n    end\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i = 1, #game do\n\t\
    \tif game[i] > guess[i] then\n\t\t\tresult[i] = game[i] - guess[i]\n\t\telseif\
    \ game[i] < guess[i] then\n\t\t\tresult[i] = guess[i] - game[i]\n\t\telse\n\t\t\
    \tresult[i] = 0\n\t\tend\n\tend\n\treturn result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i, v in ipairs(game)\
    \ do\n    res[i] = math.abs(v - guess[i])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        if game[i] > guess[i] then\n            result[i] = game[i] - guess[i]\n\
    \        elseif game[i] < guess[i] then\n            result[i] = guess[i] - game[i]\n\
    \        else\n            result[i] = 0\n        end\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = math.abs(v - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local comparision = {}\n  for k,v in pairs(game)\
    \ do\n    table.insert(comparision, math.abs(v - guess[k]))\n  end\n  return comparision\n\
    end\nprint(unpack(compare({1, 2, 3}, {1, 2, 3}))) --> 0 0 0\nprint(unpack(compare({1,\
    \ 2, 3}, {2, 2, 3}))) --> 1 0 0\nprint(unpack(compare({1, 2, 3}, {3, 2, 1})))\
    \ --> 2 1 2\nprint(unpack(compare({7, 6, 5, 4, 3, 2, 1}, {7, 6, 5, 4, 3, 2, 1})))\
    \ --> 0 0 0 0 0 0 0\nprint(unpack(compare({7, 6, 5, 4, 3, 2, 1}, {6, 6, 5, 4,\
    \ 3, 2, 1}))) --> 1 0 0 0 0 0 0\nprint(unpack(compare({7, 6, 5, 4, 3, 2, 1}, {7,\
    \ 7, 5, 4, 3, 2, 1}))) --> 0 1 0 0 0 0 0\nprint(unpack(compare({7, 6, 5, 4, 3,\
    \ 2, 1}, {1, 1, 1, 1, 1, 1, 1}))) --> 6 5 4 3 2 1 0\nprint(unpack(compare({7,\
    \ 6, 5, 4, 3, 2, 1}, {7, 5, 3, 1, 2, 4, 6}))) --> 0 1 2 3 2 1 0\nprint(unpack(compare({10,\
    \ 20, 10, 40, 50, 60, 70}, {1, 2, 1, 4, 5, 6, 7}))) --> 9 18 9 36 45 54 63\nprint(unpack(compare({11,\
    \ 12, 13, 14, 15, 16, 17}, {1, 2, 3, 4, 5, 6, 7}))) --> 10 10 10 10 10 10 10\n\
    print(unpack(compare({1, 2, 3, 4, 5, 6, 7}, {11, 12, 13, 14, 15, 16, 17}))) -->\
    \ 10 10 10 10 10 10 10\nprint(unpack\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyflcptcg.lua:28: '')'' expected (to close ''('' at line 27)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, v in ipairs(game)\
    \ do\n        if v ~= guess[i] then\n            result[i] = math.abs(v - guess[i])\n\
    \        else\n            result[i] = 0\n        end\n    end\n    return result\n\
    end\ncompare({1,2,3}, {2,2,3}) -- {1,0,0}\ncompare({1,2,3}, {4,5,6}) -- {3,3,3}\n\
    compare({1,2,3}, {1,2,3}) -- {0,0,0}\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local diff = {}\n    for i, v in ipairs(game)\
    \ do\n        diff[i] = math.abs(v - guess[i])\n    end\n    return diff\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  for k, v in pairs(game) do\n    if v > guess[k]\
    \ then\n      guess[k] = v - guess[k]\n    elseif v < guess[k] then\n      guess[k]\
    \ = guess[k] - v\n    elseif v == guess[k] then\n      guess[k] = 0\n    end\n\
    \  end\n  return guess\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal res = {}\n\tlocal scores = game:split(',')\n\
    \tlocal guesses = guess:split(',')\n\tfor i,v in ipairs(scores) do\n\t\tres[i]\
    \ = math.abs(tonumber(v) - tonumber(guesses[i]))\n\tend\n\treturn table.concat(res,',')\n\
    end\nreturn compare\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplz09k6g6.lua:19: <eof> expected near ''lu''

    '
  stdout: ''
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local count = {}\n    for i = 1, #game do\n\
    \        local match = {}\n        table.insert(match, math.abs(game[i] - guess[i]))\n\
    \        table.insert(count, match)\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp215x96er.lua:22:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {{0}, {0}, {0}, {0}, {3}, {3}}\nstack\
    \ traceback:\n\t/tmp/tmp215x96er.lua:22: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local ans = {}\n    for i = 1, #game do\n\
    \        if game[i] > guess[i] then ans[i] = game[i] - guess[i] end\n        if\
    \ game[i] < guess[i] then ans[i] = guess[i] - game[i] end\n        if game[i]\
    \ == guess[i] then ans[i] = 0 end\n    end\n    return ans\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = math.abs(v - guess[i])\n  end\n  return result\nend\nprint(unpack(compare({1,2,3},\
    \ {1,2,3}))) --> 0 0 0\nprint(unpack(compare({1,2,3}, {3,2,1}))) --> 2 0 2\nprint(unpack(compare({1,2,3},\
    \ {0,2,1}))) --> 1 0 2\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpf2l4dhte.lua:16: attempt to call a nil value (global 'unpack')\n\
    stack traceback:\n\t/tmp/tmpf2l4dhte.lua:16: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local results = {}\n  for i = 1, #game do\n\
    \    results[i] = math.abs(game[i] - guess[i])\n  end\n  return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal res = {}\n\tfor i = 1, #game do\n\t\t\
    res[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for idx, g in ipairs(guess)\
    \ do\n        results[idx] = math.abs(game[idx] - g)\n    end\n    return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        local diff = math.abs(game[i] - guess[i])\n        table.insert(result,\
    \ diff)\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i = 1, #game do\n   \
    \ res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for k,v in pairs(game)\
    \ do\n        result[k] = math.abs(v - guess[k])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local diff = {}\n    for i,g in ipairs(guess)\
    \ do\n        diff[i] = math.abs(g - game[i])\n    end\n    return diff\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, v in ipairs(game)\
    \ do\n        if game[i] ~= guess[i] then\n            table.insert(result, math.abs(game[i]\
    \ - guess[i]))\n        else\n            table.insert(result, 0)\n        end\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    local diff = math.abs(game[i] - guess[i])\n    result[i] = diff\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, v in ipairs(game)\
    \ do\n        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for index, value in ipairs(game)\
    \ do\n    result[index] = math.abs(value - guess[index])\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = v - guess[i]\n    if result[i] < 0 then\n      result[i]\
    \ = -result[i]\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal res = {}\n\tfor i, v in ipairs(game)\
    \ do\n\t\tres[i] = math.abs(v - guess[i])\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = v < guess[i] and guess[i] - v or v - guess[i]\n  end\n \
    \ return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local ans = {}\n    for i,v in ipairs(game)\
    \ do\n        local diff = v - guess[i]\n        ans[i] = math.abs(diff)\n   \
    \ end\n    return ans\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i = 1, #game do\n\t\
    \tresult[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal diff = {}\n\tfor k, v in pairs(game)\
    \ do\n\t\tdiff[k] = math.abs(v - guess[k])\n\tend\n\treturn diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  if #game ~= #guess then\n    error('game and\
    \ guess lengths are not equal')\n  end\n  local result = {}\n  for i, v in ipairs(game)\
    \ do\n    if guess[i] ~= v then\n      table.insert(result, math.abs(guess[i]\
    \ - v))\n    else\n      table.insert(result, 0)\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i = 1, #game do\n\t\
    \tresult[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn result\nend\nassert(compare({1,\
    \ 2, 3}, {1, 2, 3}) == {0, 0, 0})\nassert(compare({1, 2, 3}, {2, 1, 3}) == {1,\
    \ 1, 0})\nassert(compare({1, 2, 3}, {3, 2, 1}) == {2, 0, 2})\nassert(compare({5,\
    \ 6, 7}, {3, 6, 10}) == {2, 0, 3})\nassert(compare({5, 9, 7}, {8, 6, 10}) == {3,\
    \ 3, 3})\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpujkvzncf.lua:16: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpujkvzncf.lua:16: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local distance = {}\n    for i = 1, #game\
    \ do\n        table.insert(distance, math.abs(game[i] - guess[i]))\n    end\n\
    \    return distance\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local ret = {}\n    for i,v in ipairs(game)\
    \ do\n        ret[i] = math.abs(v - guess[i])\n    end\n    return ret\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i, v in ipairs(game)\
    \ do\n        res[i] = math.abs(v - guess[i])\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local n = #game\n  local res = {}\n  for i\
    \ = 1, n do\n    res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  if game:len() == guess:len() then\n    local\
    \ a = {}\n    for i = 1, #game do\n      a[i] = math.abs(game[i] - guess[i])\n\
    \    end\n    return a\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa0f54q1j.lua:10:\
    \ attempt to call a nil value (method 'len')\nstack traceback:\n\t/tmp/tmpa0f54q1j.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpa0f54q1j.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    local diff = math.abs(game[i] - guess[i])\n    table.insert(result, diff)\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    if game[i] > guess[i] then\n      result[i] = game[i] - guess[i]\n    elseif\
    \ game[i] < guess[i] then\n      result[i] = guess[i] - game[i]\n    else\n  \
    \    result[i] = 0\n    end\n  end\n  return result\nend\nprint(table.concat(compare({7,2,4,6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1p1xgrt0.lua:23: ''}'' expected (to close ''{'' at line 22)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local diffs = {}\n  for i = 1, #game do\n \
    \   diffs[i] = math.abs(game[i] - guess[i])\n  end\n  return diffs\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local diff = {}\n    for i = 1, #game do\n\
    \        table.insert(diff, math.abs(game[i] - guess[i]))\n    end\n    return\
    \ diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    local i = 1\n    while\
    \ game[i] ~= nil and guess[i] ~= nil do\n        if game[i] == guess[i] then\n\
    \            result[i] = 0\n        else\n            result[i] = math.abs(game[i]\
    \ - guess[i])\n        end\n        i = i + 1\n    end\n    return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for index = 1, #game\
    \ do\n        local score = game[index]\n        local g = guess[index]\n    \
    \    if g == score then\n            result[index] = 0\n        else\n       \
    \     result[index] = math.abs(g - score)\n        end\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for k, v in pairs(game)\
    \ do\n        if guess[k] > v then\n            result[k] = guess[k] - v\n   \
    \     else\n            result[k] = v - guess[k]\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = math.abs(v - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i, g in ipairs(guess)\
    \ do\n        res[i] = math.abs(game[i] - g)\n    end\n    return res\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i,v in ipairs(game)\
    \ do\n        if guess[i] == v then\n            results[i] = 0\n        else\n\
    \            results[i] = math.abs(guess[i] - v)\n        end\n    end\n    return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local output = {}\n    for i = 1, #game do\n\
    \        local x = math.abs(game[i] - guess[i])\n        output[i] = x\n    end\n\
    \    return output\nend\nassert(compare({1, 2, 3}, {1, 2, 3}) == {0, 0, 0})\n\
    assert(compare({1, 2, 3}, {2, 1, 3}) == {1, 1, 0})\nassert(compare({1, 2, 3},\
    \ {3, 2, 1}) == {2, 0, 2})\nassert(compare({3, 2, 1}, {1, 2, 3}) == {2, 0, 2})\n\
    assert(compare({1, 5, 3, 1}, {1, 1, 1, 1}) == {0, 4, 2, 0})\nassert(compare({1,\
    \ 5, 3}, {1, 1, 1}) == {0, 4, 2})\nassert(compare({1, 5, 3}, {1, 1, 1, 1}) ==\
    \ {0, 4, 2, 0})\nassert(compare({1, 2, 3}, {1, 2, 3, 1}) == {0, 0, 0, 0})\nassert(compare({1,\
    \ 2, 3}, {1, 2, 3, 1, 3}) == {0, 0, 0, 0, 0})\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp_veb05z6.lua:17: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmp_veb05z6.lua:17: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for i, v in ipairs(game)\
    \ do\n    if v == guess[i] then\n      res[i] = 0\n    else\n      res[i] = math.abs(v\
    \ - guess[i])\n    end\n  end\n  return res\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local points = {}\n  for i = 1, #game do\n\
    \    if game[i] == guess[i] then\n      points[i] = 0\n    else\n      points[i]\
    \ = math.abs(game[i] - guess[i])\n    end\n  end\n  return points\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal diffs = {}\n\tfor i = 1, #game do\n\t\
    \tdiffs[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i, v in ipairs(game)\
    \ do\n    result[i] = math.abs(v - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i = 1, #game do\n\
    \        res[i] = math.abs(game[i] - guess[i])\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local _game = {}\n  local _guess = {}\n  for\
    \ i = 1, #game do\n    _game[i] = game[i]\n    _guess[i] = guess[i]\n  end\n \
    \ local result = {}\n  for i = 1, #_game do\n    result[i] = _game[i] == _guess[i]\
    \ and 0 or math.abs(_game[i] - _guess[i])\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local table = {}\n  for i,v in ipairs(game)\
    \ do\n    table[i] = math.abs(v - guess[i])\n  end\n  return table\nend\nreturn\
    \ compare\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpgd6fe79d.lua:17: <eof> expected near ''lu''

    '
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    --local result = {}\n    for i, _ in ipairs(game)\
    \ do\n        if guess[i] > game[i] then\n            guess[i] = guess[i] - game[i]\n\
    \        elseif guess[i] < game[i] then\n            guess[i] = game[i] - guess[i]\n\
    \        else\n            guess[i] = 0\n        end\n    end\n    return guess\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, v in ipairs(game)\
    \ do\n        if v == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(v - guess[i])\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i, v in ipairs(game)\
    \ do\n        res[i] = (v == guess[i]) and 0 or math.abs(v - guess[i])\n    end\n\
    \    return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local t = {}\n  for i = 1, #game do\n    if\
    \ game[i] == guess[i] then\n      t[i] = 0\n    else\n      t[i] = math.abs(game[i]\
    \ - guess[i])\n    end\n  end\n  return t\nend\nassert(compare({1,2,3}, {1,2,3})[1]\
    \ == 0)\nassert(compare({1,2,3}, {2,2,3})[1] == 1)\nassert(compare({1,2,3}, {3,2,1})[1]\
    \ == 2)\nassert(compare({1,2,3}, {1,2,1})[1] == 2)\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpw361boq7.lua:23: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpw361boq7.lua:23: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local res = {}\n    for i, v in ipairs(game)\
    \ do\n        if v == guess[i] then\n            res[i] = 0\n        else\n  \
    \          res[i] = math.abs(v - guess[i])\n        end\n    end\n    return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for k, v in pairs(game)\
    \ do\n    result[k] = v - guess[k]\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local results = {}\n  for i = 1, #game do\n\
    \    results[i] = math.abs(game[i] - guess[i])\n  end\n  return results\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        results[i] = game[i] - guess[i]\n        if results[i] < 0 then\
    \ results[i] = results[i] * -1 end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, j in ipairs(game)\
    \ do\n        if game[i] > guess[i] then\n            result[i] = game[i] - guess[i]\n\
    \        elseif game[i] < guess[i] then\n            result[i] = guess[i] - game[i]\n\
    \        else\n            result[i] = 0\n        end\n    end\n    return result\n\
    end\nprint(table.concat(compare({1, 2, 3}, {1, 2, 3}), \", \")) --> 0, 0, 0\n\
    print(table.concat(compare({1, 2, 3}, {2, 2, 3}), \", \")) --> 1, 0, 0\nprint(table.concat(compare({1,\
    \ 2, 3}, {3, 2, 1}), \", \")) --> 2, 0, 2\nprint(table.concat(compare({5, 9, 7},\
    \ {9, 5, 7}), \", \")) --> 4, 4, 0\nprint(table.concat(compare({5, 9, 7}, {9,\
    \ 7, 5}), \", \")) --> 4, 2, 2\nprint(table.concat(compare({5, 9, 7}, {5, 9, 7}),\
    \ \", \")) --> 0, 0, 0\nprint(table.concat(compare({1, 2, 3}, {3, 2, 1}), \",\
    \ \")) --> 2, 0, 2\nprint(table.concat(compare({1, 2, 3}, {1, 2, 1}), \", \"))\
    \ --> 0, 0, 2\nprint(table.concat(compare({1, 2, 3}, {1, 2, 3}), \", \")) -->\
    \ 0, 0, 0\nprint(table.concat(compare({1, 2, 3}, {1, 2, 2}), \", \")) --> 0, 0,\
    \ 1\nprint(table.concat(compare({2, 2, 3}, {1, 2, 2}), \", \")) --> 1, 0, 1\n\
    print(table.concat(compare({2, 2, 3}, {1, 2, 3}), \", \")) --> 1, 0, 0\nprint(\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpor_r8qkc.lua:35: '')'' expected (to close ''('' at line 34)
    near ''=''

    '
  stdout: ''
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local n = #game\n  local result = {}\n  for\
    \ i = 1, n do\n    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    local diff = math.abs(game[i] - guess[i])\n    result[i] = diff\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i = 1, #game do\n\t\
    \tresult[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local r = {}\n    for i,v in ipairs(game)\
    \ do\n        r[i] = math.abs(v - guess[i])\n    end\n    return r\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local res = {}\n  for k, v in pairs(game) do\n\
    \    res[k] = math.abs(v - guess[k])\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, v in ipairs(game)\
    \ do\n        if v == guess[i] then\n            result[i] = 0\n        else\n\
    \            result[i] = math.abs(v - guess[i])\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal res = {}\n\tfor i, score in ipairs(game)\
    \ do\n\t\tif score == guess[i] then\n\t\t\tres[i] = 0\n\t\telse\n\t\t\tres[i]\
    \ = math.abs(score - guess[i])\n\t\tend\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score = {}\n    for i = 1, #game do\n\
    \        local x = math.abs(game[i] - guess[i])\n        score[i] = x\n    end\n\
    \    return score\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local t = {}\n  for i = 1, #game do\n    t[i]\
    \ = math.abs(game[i] - guess[i])\n  end\n  return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i, v in ipairs(game)\
    \ do\n        result[i] = math.abs(v - guess[i])\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local new_array = {}\n  for i = 1, #game do\n\
    \    if game[i] == guess[i] then\n      new_array[i] = 0\n    else\n      new_array[i]\
    \ = math.abs(game[i] - guess[i])\n    end\n  end\n  return new_array\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal diffs = {}\n\tfor i = 1, #game do\n\t\
    \tdiffs[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal ret = {}\n\tfor k,v in pairs(game) do\n\
    \t\tret[k] = math.abs(v - guess[k])\n\tend\n\treturn ret\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  --[[\n  local out = {}\n  for i,v in ipairs(game)\
    \ do\n    if (game[i] == guess[i]) then\n      out[i] = 0\n    else\n      out[i]\
    \ = math.abs(game[i] - guess[i])\n    end\n  end\n  return out\n  --]]\n  return\
    \ {table.unpack(guess):map(function(x,i)\n    return x==game[i] and 0 or math.abs(x-game[i])\n\
    \  end)}\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyvuurx_.lua:21:\
    \ attempt to index a number value\nstack traceback:\n\t/tmp/tmppyvuurx_.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmppyvuurx_.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    result[i] = math.abs(v - guess[i])\n  end\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i, v in ipairs(game)\
    \ do\n    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    local n = math.abs(game[i] - guess[i])\n    table.insert(result, n)\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal scores = {}\n\tfor i = 1, #game do\n\t\
    \tlocal score = game[i] - guess[i]\n\t\tif score < 0 then\n\t\t\tscore = score\
    \ * -1\n\t\tend\n\t\ttable.insert(scores, score)\n\tend\n\treturn scores\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tfor i, _ in ipairs(game)\
    \ do\n\t\tresult[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823669

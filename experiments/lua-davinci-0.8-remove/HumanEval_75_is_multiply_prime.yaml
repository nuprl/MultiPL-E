name: HumanEval_75_is_multiply_prime
language: lua
prompt: "-- Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n-- and false otherwise.\n-- Knowing that (a) is less then\
  \ 100. \n-- Example:\n-- 30 = 2 * 3 * 5\nlocal function is_multiply_prime(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_multiply_prime\n\
  \    lu.assertEquals(candidate(5), false)\n    lu.assertEquals(candidate(30), true)\n\
  \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), false)\n\
  \    lu.assertEquals(candidate(125), true)\n    lu.assertEquals(candidate(105),\
  \ true)\n    lu.assertEquals(candidate(126), false)\n    lu.assertEquals(candidate(729),\
  \ false)\n    lu.assertEquals(candidate(891), false)\n    lu.assertEquals(candidate(1001),\
  \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local a = math.abs(a)\n  local p = 2\n  local max = a\n  while p\
    \ <= max do\n    if a % p == 0 then\n      a = a / p\n      max = a\n    else\n\
    \      p = p + 1\n    end\n  end\n  return a == 1\nend", "\t-- .....\nend", "\t\
    local function is_prime(n)\n\t\tfor i = 2, math.sqrt(n) do\n\t\t\tif n % i ==\
    \ 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\t\
    for i = 2, a/2 do\n\t\tif a % i == 0 and is_prime(i) then\n\t\t\tlocal j = a /\
    \ i\n\t\t\tif is_prime(j) then\n\t\t\t\tfor k = 2, j/2 do\n\t\t\t\t\tif j % k\
    \ == 0 and is_prime(k) then\n\t\t\t\t\t\tlocal l = j / k\n\t\t\t\t\t\tif is_prime(l)\
    \ then\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "\nend", "  local prime_table\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97}\n  local flag = true\n  local test = a\n  for k, v in ipairs(prime_table)\
    \ do\n    if flag then\n      if test % v == 0 then\n        test = test / v\n\
    \      else\n        flag = false\n      end\n    end\n  end\n  return flag\n\
    end", "\t-- TODO:\nend", "\t-- TODO\nend", "\t-- TODO\nend", "    local result\
    \ = false\n    if a > 100 then\n        return \"Number too large!\"\n    end\n\
    \    for i = 1, 100 do\n        for j = 1, 100 do\n            for k = 1, 100\
    \ do\n                if a == i * j * k then\n                    if is_prime(i)\
    \ and is_prime(j) and is_prime(k) then\n                        result = true\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return result\nend\nprint(is_multiply_prime(30))\nprint(is_multiply_prime(11))\n\
    print(is_multiply_prime(101))", "  --TODO: write code here\nend", "\tlocal function\
    \ is_prime(b)\n\t\tif b == 1 then\n\t\t\treturn false\n\t\tend\n\t\tif b == 2\
    \ then\n\t\t\treturn true\n\t\tend\n\t\tfor c = 2, b-1 do\n\t\t\tif b % c == 0\
    \ then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tif\
    \ a == 1 then\n\t\treturn false\n\tend\n\tif a == 2 then\n\t\treturn true\n\t\
    end\n\tfor b = 2, a-1 do\n\t\tif a % b == 0 then\n\t\t\tlocal d = a / b\n\t\t\t\
    for e = 2, d-1 do\n\t\t\t\tif d % e == 0 then\n\t\t\t\t\treturn false\n\t\t\t\t\
    end\n\t\t\tend\n\t\t\tif is_prime(b) and is_prime(d) then\n\t\t\t\treturn true\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "    local n = 2\n    local prime_factors\
    \ = {}\n    local found_3 = false\n    local found_1 = false\n    while a > 1\
    \ do\n        if a % n == 0 then\n            a = a / n\n            prime_factors[#prime_factors\
    \ + 1] = n\n            if not found_3 then\n                found_3 = true\n\
    \            elseif not found_1 then\n                found_1 = true\n       \
    \     else\n                return true\n            end\n        else\n     \
    \       n = n + 1\n        end\n    end\n    return false\nend", "\tfor i = 2,\
    \ 100 do\n\t\tfor j = 2, 100 do\n\t\t\tfor k = 2, 100 do\n\t\t\t\tif a == i *\
    \ j * k then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    return false\nend", "\tlocal function is_prime(a)\n\t\tfor i = 2, a-1 do\n\t\t\
    \tif a % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\
    \tend\n\tlocal i = 2\n\twhile i < a do\n\t\tif is_prime(i) and is_prime(a/i) then\n\
    \t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend\nprint(is_multiply_prime(21))",
  "\t-- body\nend", "\tprint(\"TODO\")\nend", end, "   local is_multiply_prime_ =\
    \ false\n   local arr = {\n      [0] = a\n   }\n   -- this function goes through\
    \ each digit and checks if it's prime number\n   for i=1, #tostring(a) do\n  \
    \    local p = tonumber(string.sub(tostring(a), i, i))\n      if p == 2 or p ==\
    \ 3 or p == 5 or p == 7 then\n         is_multiply_prime_ = true\n         break\n\
    \      end\n   end\n   -- this function checks if number(s) are multiplication\
    \ of other prime number\n   while a > 1 do\n      local i = 2\n      while a %\
    \ i ~= 0 do\n         i = i + 1\n      end\n      arr[#arr + 1] = i\n      a =\
    \ a / i\n   end\n   for i=1, #arr do\n      if arr[i] == 2 or arr[i] == 3 or arr[i]\
    \ == 5 or arr[i] == 7 then\n         is_multiply_prime_ = true\n      else\n \
    \        is_multiply_prime_ = false\n         break\n      end\n   end\n   return\
    \ is_multiply_prime_\nend", "\tlocal is_prime = true\n\tlocal b = 3\n\tfor i =\
    \ 2, a do\n\t\tfor j = 2, i do\n\t\t\tif i % j == 0 then\n\t\t\t\tis_prime = false\n\
    \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif is_prime and a % i == 0 then\n\t\t\t\
    if a / i > b then\n\t\t\t\tb = a / i\n\t\t\tend\n\t\tend\n\t\tis_prime = true\n\
    \tend\n\treturn b\nend", "  -- body\nend", "    local function is_prime(n)\n \
    \       for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n         \
    \       return false\n            end\n        end\n        return true\n    end",
  "\tfor i = 2, a - 1 do\n\t\tfor j = 2, a - 1 do\n\t\t\tfor k = 2, a - 1 do\n\t\t\
    \t\tif i * j * k == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn false\nend", "    return false\nend", "    if not is_prime(a)\
    \ then\n        local factors = get_prime_factors(a)\n        if #factors == 3\
    \ then\n            return true\n        end\n    end\n    return false\nend",
  "\tlocal c = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97}\n\tfor i=1,#c do\n\t\tfor j=1,#c do\n\t\t\tfor k=1,#c\
    \ do\n\t\t\t\tif c[i]*c[j]*c[k] == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn false\nend", end, "  \n  -- your code here\n\
    \  -- Tip: You can use the problem \"is_prime\"\nend", "    local result = false\n\
    \    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local prime = 1\n    local first =\
    \ 1\n    local second = 1\n    local third = 1\n    for i,v in ipairs(primes)\
    \ do\n        if (a % v == 0) then\n            prime = prime + 1\n          \
    \  if (prime == 2) then first = v end\n            if (prime == 3) then second\
    \ = v end\n            if (prime == 4) then third = v end\n        end\n    end\n\
    \    if (prime == 4) then result = true end\n    return result, first, second,\
    \ third\nend", "\tn = 3\n\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\
    \t\t\tif n % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn\
    \ true\n\tend\n\tfor i = 2, a do\n\t\tif a % i == 0 and is_prime(i) then\n\t\t\
    \tfor j = 2, a do\n\t\t\t\tif a % j == 0 and is_prime(j) and i ~= j then\n\t\t\
    \t\t\tfor k = 2, a do\n\t\t\t\t\t\tif a % k == 0 and is_prime(k) and k ~= i and\
    \ k ~= j then\n\t\t\t\t\t\t\tif (i * j * k) == a then\n\t\t\t\t\t\t\t\treturn\
    \ true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn false\nend", "\tlocal n = 1\n\tlocal mult = 1\n\t\
    while a > mult do\n\t\tn = n + 1\n\t\tlocal is_prime = true\n\t\tlocal i = 2\n\
    \t\twhile i < n do\n\t\t\tif n % i == 0 then\n\t\t\t\tis_prime = false\n\t\t\t\
    \tbreak\n\t\t\tend\n\t\t\ti = i + 1\n\t\tend\n\t\tif is_prime then\n\t\t\tmult\
    \ = mult * n\n\t\tend\n\tend\n\treturn mult == a\nend", "  -- TODO: Do the task!\n\
    end", "  -- define any variables you need here\n  -- write the body of your function\
    \ here\n  \n  local tab = {}\n  for i = 2, a do\n    if is_prime(i) then\n   \
    \   table.insert(tab, i)\n    end\n  end\n  \n  local b = a\n  local i = 1\n \
    \ local result = false\n  while i <= #tab do\n    if b % tab[i] == 0 then\n  \
    \    if is_multiply_prime(b / tab[i]) then\n        result = true\n        break\n\
    \      end\n      b = b / tab[i]\n      i = 1\n    else\n      i = i + 1\n   \
    \ end\n  end\n  \n  return result\nend", "\tlocal d = 2\n\tlocal counter = 0\n\
    \tlocal c = 0\n\twhile d <= a do\n\t\tif is_prime(d) then\n\t\t\tc = a % d\n\t\
    \t\tif c == 0 then\n\t\t\t\ta = a / d\n\t\t\t\tcounter = counter + 1\n\t\t\t\t\
    if a == 1 then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telse\n\t\t\t\td = d\
    \ + 1\n\t\t\tend\n\t\telse\n\t\t\td = d + 1\n\t\tend\n\tend\n\treturn false\n\
    end", "  if (a % 2 == 0) then a = a / 2 end\n  if (a % 3 == 0) then a = a / 3\
    \ end\n  if (a % 5 == 0) then a = a / 5 end\n  if (a == 1) then return true else\
    \ return false end\nend", "\tlocal i = 2\n\tlocal n = 0\n\t\n\twhile (i < a) do\n\
    \t\tif (a % i == 0) then\n\t\t\tif (is_prime(i)) then\n\t\t\t\tn = n + 1\n\t\t\
    \tend\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn n == 3\nend", "\nend", "\tfor i\
    \ = 2, a-1 do\n\t\tif a % i == 0 then\n\t\t\tfor j = 2, i-1 do\n\t\t\t\tif i %\
    \ j == 0 then\n\t\t\t\t\tfor k = 2, j-1 do\n\t\t\t\t\t\tif j % k == 0 then\n\t\
    \t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\
    end\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    return false\nend", "\tif a <= 1 then\n\t\treturn false\n\tend\n\tlocal count\
    \ = 0\n\tlocal num = 2\n\twhile a > 1 do\n\t\twhile a % num == 0 do\n\t\t\ta =\
    \ a / num\n\t\t\tcount = count + 1\n\t\tend\n\t\tnum = num + 1\n\tend\n\treturn\
    \ count == 3\nend", "\tfor i = 2, a-1 do\n\t\tif a % i == 0 then\n\t\t\tfor j\
    \ = 2, a-1 do\n\t\t\t\tif a % j == 0 then\n\t\t\t\t\tfor k = 2, a-1 do\n\t\t\t\
    \t\t\tif a % k == 0 then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\
    \treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "\nend", "    local num = a\n\
    \    local count = 0\n    local t = {}\n    local x = 0\n    while num ~= 1 do\n\
    \        local y = get_prime(x)\n        if num % y == 0 then\n            count\
    \ = count + 1\n            num = num / y\n            t[count] = y\n        else\n\
    \            x = x + 1\n        end\n    end\n    if count == 3 then\n       \
    \ return true, t\n    else\n        return false, t\n    end\nend", "\tlocal num\
    \ = a", "  --TODO: implement this function\n  end", "    return true\nend", "\t\
    for i = 2, a - 1 do\n\t\tif (a % i == 0) then\n\t\t\treturn is_multiply_prime(a\
    \ / i)\n\t\tend\n\tend\n\treturn a\nend", "    local k = a\n    local primes =\
    \ {}\n    local prime_cnt = 0\n    while k > 1 do\n        local found = false\n\
    \        for p, _ in pairs(primes) do\n            if k % p == 0 then\n      \
    \          primes[p] = primes[p] + 1\n                found = true\n         \
    \       break\n            end\n        end\n        if not found then\n     \
    \       primes[k] = 1\n            prime_cnt = prime_cnt + 1\n        end\n  \
    \      k = k / 2\n    end\n    local cnt = 0\n    for _, v in pairs(primes) do\n\
    \        if v >= 3 then\n            cnt = cnt + 1\n        end\n    end\n   \
    \ return cnt == 3\nend", "  if is_prime(a) then return false end\n  local b =\
    \ math.sqrt(a)", "\tlocal primes = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97 }\n\tlocal prime = 0\n\t\
    for i, v in ipairs(primes) do\n\t\tif a % v == 0 then\n\t\t\tprime = prime + 1\n\
    \t\tend\n\tend\n\treturn prime == 3\nend", "    -- YOUR CODE HERE\nend", "\tfor\
    \ i = 2, a/2 do\n\t\tif (a % i == 0) then\n\t\t\tfor j = 2, a/2 do\n\t\t\t\tif\
    \ (a % j == 0) then\n\t\t\t\t\tfor k = 2, a/2 do\n\t\t\t\t\t\tif (a % k == 0)\
    \ then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\
    \t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn false\nend\nprint(is_multiply_prime(30)) -- will print true\n\
    print(is_multiply_prime(50)) -- will print false", "    local function is_prime(x)\n\
    \        if x == 2 then\n            return true\n        end\n        for i =\
    \ 2, x - 1 do\n            if x % i == 0 then\n                return false\n\
    \            end\n        end\n        return true\n    end\n    if is_prime(a)\
    \ then\n        return false\n    end\n    for i = 1, a - 1 do\n        if a %\
    \ i == 0 then\n            if is_prime(i) then\n                if is_prime(a\
    \ / i) then\n                    return true\n                end\n          \
    \  end\n        end\n    end\n    return false\nend", "    local function is_prime(n)\n\
    \        for i = 2, n - 1 do\n            if n % i == 0 then\n               \
    \ return false\n            end\n        end\n        return true\n    end", "\t\
    if a < 6 then return false end\n\t\n\tif a % 2 == 0 then\n\t\tif a % 3 == 0 then\
    \ return true end\n\t\treturn false\n\tend\n\t\n\tif a % 3 == 0 then return false\
    \ end\n\t\n\tlocal i = 5\n\twhile (i * i) <= a do\n\t\tif a % i == 0 then\n\t\t\
    \tif a % (i + 2) == 0 then return true end\n\t\t\treturn false\n\t\tend\n\t\t\
    i = i + 6\n\tend\n\treturn true\nend", "\nend\n```", "\nend", "  if a <= 1 then\n\
    \    return false\n  end\n  local a1 = a - 1\n  while a1 > 1 do\n    if a % a1\
    \ == 0 then\n      local b = a / a1\n      if is_prime(b) then\n        local\
    \ b1 = b - 1\n        while b1 > 1 do\n          if b % b1 == 0 then\n       \
    \     local c = b / b1\n            if is_prime(c) then\n              if a1 *\
    \ b1 * c == a then\n                return true\n              end\n         \
    \   end\n          end\n          b1 = b1 - 1\n        end\n      end\n    end\n\
    \    a1 = a1 - 1\n  end\n  return false\nend", end, "    if a > 100 then return\
    \ false end\n    local mult = 1\n    for i = 2, a - 1 do\n        if a % i ==\
    \ 0 then\n            mult = mult * i\n        end\n    end\n    return mult ==\
    \ a\nend", "\nend", "  \n  local function is_prime(a)\n    if a == 2 then return\
    \ true end\n    for i = 2, a/2 do\n      if a % i == 0 then return false end\n\
    \    end\n    return true\n  end\n  \n  for i = 2, a/2 do\n    if is_prime(i)\
    \ and a % i == 0 then\n      for j = 2, a/2 do\n        if is_prime(j) and a %\
    \ j == 0 and i * j < a then\n          for k = 2, a/2 do\n            if is_prime(k)\
    \ and a % k == 0 and i * j * k == a then\n              return true\n        \
    \    end\n          end\n        end\n      end\n    end\n  end\n  return false\n\
    end", "    local array = {}\n    local c = 0\n    local prime = true\n    local\
    \ counter = 0\n    for i = 2, math.sqrt(a) do\n        if a % i == 0 then\n  \
    \          for j = 2, math.sqrt(i) do\n                if i % j == 0 then\n  \
    \                  prime = false\n                end\n            end\n     \
    \       if prime then\n                array[c] = i\n                c = c + 1\n\
    \            end\n            prime = true\n        end\n    end\n    for i =\
    \ 0, c do\n        if a % array[i] == 0 then\n            counter = counter +\
    \ 1\n        end\n    end\n    if counter == 3 then\n        return true\n   \
    \ else\n        return false\n    end\nend\nassert(is_multiply_prime(42) == false)\n\
    assert(is_multiply_prime(48) == false)\nassert(is_multiply_prime(28) == false)\n\
    assert(is_multiply_prime(30) == true)\nassert(is_multiply_prime(2 * 3 * 5) ==\
    \ true)\nassert(is_multiply_prime(3 * 5 * 7) == true)\nassert(is_multiply_prime(2\
    \ * 3 * 5 * 7) == false)\nassert(is_multiply_prime(11 * 13 * 17) == true)\nassert(is_multiply_prime(11\
    \ * 13 * 17 * 19) == false)\nprint(\"[OK] is_multiply_prime\")", "    local t\
    \ = {1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97}\n    for i = 1, #t do\n        for j = 1, #t do\n  \
    \          for k = 1, #t do\n                if t[i] * t[j] * t[k] == a then\n\
    \                    return true\n                end\n            end\n     \
    \   end\n    end\n    return false\nend", "  local v = a\n  local divisor = 2\n\
    \  local primes = {}\n  repeat\n    if (v % divisor == 0) then\n      table.insert(primes,\
    \ divisor)\n      v = v / divisor\n    else\n      divisor = divisor + 1\n   \
    \ end\n  until v == 1\n  return #primes == 3\nend", "\nend", "  -- your code here\n\
    \  local table_number = {}\n  local num = 2\n  for i = 1,a do\n    for j = 2,i\
    \ do\n      if i%j == 0 then\n        break\n      elseif i == j+1 then\n    \
    \    table.insert(table_number,i)\n      end\n    end\n  end\n  while true do\n\
    \    if a%num == 0 then\n      a = a/num\n      if a == 1 then\n        return\
    \ true\n      end\n    else\n      num = num + 1\n    end\n    if table_number[num]\
    \ == nil then\n      return false\n    end\n  end\nend", "\t-- body\nend", " \
    \ local max = math.floor(math.sqrt(a))\n  for i = 2, max do\n    if a % i == 0\
    \ then\n      if is_prime(i) and is_prime(a/i) then\n        print(a .. \" = \"\
    \ .. i .. \" * \" .. a/i .. \" * \" .. a/(a/i))\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  \n  if a == nil then\n      return false\n\
    \  end\n  if a < 0 then\n      return false\n  end\n  if a == 0 then\n      return\
    \ false\n  end\n  if a == 1 then\n      return false\n  end\n  if a == 2 then\n\
    \      return false\n  end\n  if a == 3 then\n      return false\n  end\n  if\
    \ a == 5 then\n      return false\n  end\n  if a == 7 then\n      return false\n\
    \  end\n  if a == 11 then\n      return false\n  end\n  if a == 13 then\n    \
    \  return false\n  end\n  if a == 17 then\n      return false\n  end\n  if a ==\
    \ 19 then\n      return false\n  end\n  if a == 23 then\n      return false\n\
    \  end\n  if a == 29 then\n      return false\n  end\n  if a == 31 then\n    \
    \  return false\n  end\n  if a == 37 then\n      return false\n  end\n  if a ==\
    \ 41 then\n      return false\n  end\n  if a == 43 then\n      return false\n\
    \  end\n  if a == 47 then\n      return false\n  end\n  if a == 53 then\n    \
    \  return false\n  end\n  if a == 59 then\n      return false\n  end\n  if a ==\
    \ 61 then\n      return false\n  end\n  if a == 67 then\n      return false\n\
    \  end\n  if a == 71 then\n      return false\n  end\n  if a == 73 then\n    \
    \  return false\n  end\n  if a == 79 then\n      return false\n  end\n  if a ==\
    \ 83 then\n      return false\n  end\n  if a == 89 then\n      return false\n\
    \  end\n  if a == 97 then\n      return false\n  end\n  \n  return true\nend",
  end, "    local function is_prime(a)\n        for i = 2, a - 1 do\n            if\
    \ a % i == 0 then\n                return false\n            end\n        end\n\
    \        return true\n    end", "\t\t-- your code here\nend", "\tlocal n = a\n\
    \tlocal i = 2\n\tlocal table = {}\n\twhile n ~= 1 do\n\t\tif n % i == 0 then\n\
    \t\t\ttable[#table + 1] = i\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\t\
    end\n\tend\n\tif #table == 3 then\n\t\treturn true\n\telse\n\t\treturn false\n\
    \tend\nend", "   if a == 0 then\n      return false\n   end\n   local primes =\
    \ {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97}\n   for _, v in ipairs(primes) do\n      if a % v == 0 then\n\
    \         return true\n      end\n   end\n   return false\nend", "\tlocal function\
    \ is_prime(number)\n\t\tfor n = 2, number - 1 do\n\t\t\tif number % n == 0 then\n\
    \t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tif is_prime(a)\
    \ then\n\t\treturn false\n\tend\n\tfor n = 2, a - 1 do\n\t\tif a % n == 0 then\n\
    \t\t\tif is_prime(n) then\n\t\t\t\tlocal r = a / n\n\t\t\t\tif is_prime(r) then\n\
    \t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\n\
    end", "    for i = 2, math.sqrt(a) do\n        if (a % i == 0) then\n        \
    \    for j = 2, math.sqrt(a/i) do\n                if ((a/i) % j == 0) then\n\
    \                    for k = 2, math.sqrt(a/(i*j)) do\n                      \
    \  if ((a/(i*j)) % k == 0) then\n                            return false\n  \
    \                      end\n                    end\n                    return\
    \ true\n                end\n            end\n        end\n    end\n    return\
    \ false\nend", "\tif a == 1 then return false end\n\tif a % 2 == 0 then\n\t\t\
    if a / 2 == 1 then return true end\n\t\treturn is_multiply_prime(a / 2)\n\tend\n\
    \tif a % 3 == 0 then\n\t\tif a / 3 == 1 then return true end\n\t\treturn is_multiply_prime(a\
    \ / 3)\n\tend\n\tif a % 5 == 0 then\n\t\tif a / 5 == 1 then return true end\n\t\
    \treturn is_multiply_prime(a / 5)\n\tend\n\tif a % 7 == 0 then\n\t\tif a / 7 ==\
    \ 1 then return true end\n\t\treturn is_multiply_prime(a / 7)\n\tend\n\tif a %\
    \ 11 == 0 then\n\t\tif a / 11 == 1 then return true end\n\t\treturn is_multiply_prime(a\
    \ / 11)\n\tend\n\tif a % 13 == 0 then\n\t\tif a / 13 == 1 then return true end\n\
    \t\treturn is_multiply_prime(a / 13)\n\tend\n\tif a % 17 == 0 then\n\t\tif a /\
    \ 17 == 1 then return true end\n\t\treturn is_multiply_prime(a / 17)\n\tend\n\t\
    if a % 19 == 0 then\n\t\tif a / 19 == 1 then return true end\n\t\treturn is_multiply_prime(a\
    \ / 19)\n\tend\n\tif a % 23 == 0 then\n\t\tif a / 23 == 1 then return true end\n\
    \t\treturn is_multiply_prime(a / 23)\n\tend\n\tif a % 29 == 0 then\n\t\tif a /\
    \ 29 == 1 then return true end\n\t\treturn is_multiply_prime(a / 29)\n\tend\n\t\
    if a % 31 == 0 then\n\t\tif a / 31 == 1 then return true end\n\t\treturn is_multiply_prime(a\
    \ / 31)\n\tend\n\tif a % 37 == 0 then\n\t\tif a / 37 == 1 then return true end\n\
    \t\treturn is_multiply_prime(a / 37)\n\tend\n\tif a % 41 == 0 then\n", "\tif a\
    \ == 1 then\n\t\treturn false\n\tend\n\tlocal primes = {3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal\
    \ i = 1\n\twhile i <= #primes do\n\t\tif a % primes[i] == 0 then\n\t\t\tif a ==\
    \ primes[i] then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\treturn is_multiply_prime(a\
    \ / primes[i])\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend", end, "  \
    \  if a == 2 * 3 * 5 then\n        return true\n    else\n        return false\n\
    \    end\nend", "    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local flag = false\n\
    \    for _,v in ipairs(primes) do\n        if a % v == 0 then\n            local\
    \ a = a / v\n            flag = true\n            for _,v2 in ipairs(primes) do\n\
    \                if a % v2 == 0 then\n                    a = a / v2\n       \
    \             flag = true\n                    for _,v3 in ipairs(primes) do\n\
    \                        if a % v3 == 0 then\n                            flag\
    \ = true\n                            break\n                        else\n  \
    \                          flag = false\n                        end\n       \
    \             end\n                    break\n                else\n         \
    \           flag = false\n                end\n            end\n            break\n\
    \        else\n            flag = false\n        end\n    end\n    return flag\n\
    end", "\nend", "\tfor i = 2, a do\n\t\tfor j = 2, a do\n\t\t\tfor k = 2, a do\n\
    \t\t\t\tif i*j*k == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn false\nend\nprint(\"is multiply prime: \" .. is_multiply_prime(30))",
  "   local function is_prime(a)\n\t\tif a == 1 then return false\n\t\telseif a ==\
    \ 2 then return true\n\t\telseif a % 2 == 0 then return false\n\t\telse\n\t\t\t\
    for i = 3, math.sqrt(a), 2 do\n\t\t\t\tif a % i == 0 then return false end\n\t\
    \t\tend\n\t\t\treturn true\n\t\tend\n\tend\n\tif a > 100 then return false end\n\
    \tif a % 2 == 0 then\n\t\tfor i = 3, math.sqrt(a), 2 do\n\t\t\tif a % i == 0 and\
    \ is_prime(i) then\n\t\t\t\tfor j = 3, math.sqrt(a), 2 do\n\t\t\t\t\tif (a / i)\
    \ % j == 0 and is_prime(j) then\n\t\t\t\t\t\tfor k = 3, math.sqrt(a), 2 do\n\t\
    \t\t\t\t\t\tif (a / i / j) % k == 0 and is_prime(k) then\n\t\t\t\t\t\t\t\treturn\
    \ true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn false\nend", "  local list_of_primes = find_all_primes(a)\n\
    \  for i = 1, #list_of_primes do\n    for j = 1, #list_of_primes do\n      for\
    \ k = 1, #list_of_primes do\n        if a == list_of_primes[i] * list_of_primes[j]\
    \ * list_of_primes[k] then\n          return true\n        end\n      end\n  \
    \  end\n  end\n  return false\nend", "\nend", "    local function is_prime(b)\n\
    \        local root = math.sqrt(b)\n        for i = 2, root do\n            if\
    \ b % i == 0 then\n                return false\n            end\n        end\n\
    \        return true\n    end", "    for n = 2, a - 1 do\n        for m = 2, a\
    \ - 1 do\n            for i = 2, a - 1 do\n                if a == n * m * i then\n\
    \                    return true\n                end\n            end\n     \
    \   end\n    end\n    return false\nend", end, "    for i = 2, a do\n        if\
    \ a % i == 0 then\n            for j = 2, a do\n                if a % j == 0\
    \ then\n                    for k = 2, a do\n                        if a % k\
    \ == 0 then\n                            if a == i * j * k then\n            \
    \                    return true\n                            end\n          \
    \              end\n                    end\n                end\n           \
    \ end\n        end\n    end\n    return false\nend", "\tif (a <= 3) then\n\t\t\
    return false\n\tend\n\tlocal i = 2\n\twhile (i <= math.sqrt(a)) do\n\t\tif (a\
    \ % i == 0) then\n\t\t\tif (not is_prime(i)) then\n\t\t\t\treturn false\n\t\t\t\
    end\n\t\t\tlocal j = i\n\t\t\twhile (j <= math.sqrt(a)) do\n\t\t\t\tif (a % j\
    \ == 0) then\n\t\t\t\t\tif (not is_prime(j)) then\n\t\t\t\t\t\treturn false\n\t\
    \t\t\t\tend\n\t\t\t\t\tif (not is_prime(a / i / j)) then\n\t\t\t\t\t\treturn false\n\
    \t\t\t\t\tend\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\t\tj = j + 1\n\t\t\tend\n\
    \t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend", "\tlocal function get_primes(n)\n\
    \t\tlocal is_prime = {}\n\t\tlocal primes = {}\n\t\t\n\t\tfor i = 2, n do\n\t\t\
    \tis_prime[i] = true\n\t\tend\n\t\t\n\t\tfor i = 2, n do\n\t\t\tif is_prime[i]\
    \ then\n\t\t\t\ttable.insert(primes, i)\n\t\t\t\t\n\t\t\t\tfor j = i * i, n, i\
    \ do\n\t\t\t\t\tis_prime[j] = false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t\n\t\
    \treturn primes\n\tend\n\t\n\tlocal function can_be_written_as_multiply_of_primes(a,\
    \ primes)\n\t\tlocal function dfs(current_sum, current_index)\n\t\t\tif current_sum\
    \ == a then\n\t\t\t\treturn true\n\t\t\tend\n\t\t\t\n\t\t\tif current_sum > a\
    \ then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t\n\t\t\tfor i = current_index,\
    \ #primes do\n\t\t\t\tif dfs(current_sum * primes[i], i + 1) then\n\t\t\t\t\t\
    return true\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\treturn false\n\t\tend\n\t\t\
    \n\t\treturn dfs(1, 1)\n\tend\n\t\n\tlocal primes = get_primes(a)\n\treturn can_be_written_as_multiply_of_primes(a,\
    \ primes)\nend", end, "  -- body\nend", "  if is_prime(a) then return false end\n\
    \  for i = 2, 10 do\n    if is_prime(i) and a % i == 0 then\n      for j = 2,\
    \ 10 do\n        if is_prime(j) and a % j == 0 and i ~= j then\n          for\
    \ k = 2, 10 do\n            if is_prime(k) and a % k == 0 and i ~= k and j ~=\
    \ k then\n              return true\n            end\n          end\n        end\n\
    \      end\n    end\n  end\n  return false\nend", "\tlocal primes = {2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97}\n\tlocal function is_a_prime(a)\n\t\tfor i = 1, #primes do\n\t\t\tif\
    \ a == primes[i] then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\
    \tend\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\tfor k = 1, #primes\
    \ do\n\t\t\t\tif a == primes[i] * primes[j] * primes[k] then\n\t\t\t\t\treturn\
    \ true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "    --\
    \ TODO\nend", "\tlocal function is_prime(n)\n\t\tfor i = 2, math.sqrt(n) do\n\t\
    \t\tif n % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\
    \tend\n\tif a < 6 then\n\t\treturn false\n\tend\n\tfor i = 2, a/2 do\n\t\tif a\
    \ % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a/i do\n\t\t\t\tif a % (i *\
    \ j) == 0 and is_prime(j) then\n\t\t\t\t\tfor k = 2, a/(i * j) do\n\t\t\t\t\t\t\
    if a % (i * j * k) == 0 and is_prime(k) then\n\t\t\t\t\t\t\treturn true\n\t\t\t\
    \t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\n\
    end", "\treturn true\nend", "\tlocal prime_numbers = {2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\t\
    for i = 1, #prime_numbers do\n\t\tfor j = 1, #prime_numbers do\n\t\t\tfor k =\
    \ 1, #prime_numbers do\n\t\t\t\tif prime_numbers[i] * prime_numbers[j] * prime_numbers[k]\
    \ == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    return false\nend", "    if a < 2 then\n        return false\n    end\n    for\
    \ i = 2, a - 1 do\n        if a % i == 0 then\n            return false\n    \
    \    end\n    end\n    return true\nend", '    local status = false', "    return\
    \ false\nend", "    local function is_prime(x)\n        local r\n        if (x\
    \ > 1) then\n            r = true\n            for i = 2, math.floor(math.sqrt(x))\
    \ do\n                if (x % i == 0) then\n                    r = false\n  \
    \                  break\n                end\n            end\n        else\n\
    \            r = false\n        end\n        return r\n    end\n    local function\
    \ is_mult_prime(a)\n        local r = false\n        for i = 2, a do\n       \
    \     for j = 2, a - i do\n                for k = 2, a - i - j do\n         \
    \           if (i * j * k == a) then\n                        r = is_prime(i)\
    \ and is_prime(j) and is_prime(k)\n                        break\n           \
    \         end\n                end\n            end\n        end\n        return\
    \ r\n    end\n    return is_mult_prime(a)\nend", "\tlocal is_prime = true\n\t\
    for i = 2, a-1 do\n\t\tis_prime = true\n\t\tfor j = 2, i-1 do\n\t\t\tif i % j\
    \ == 0 then\n\t\t\t\tis_prime = false\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\
    if is_prime and a % i == 0 then\n\t\t\ta = a / i\n\t\t\tis_prime = true\n\t\t\t\
    for j = 2, a-1 do\n\t\t\t\tif a % j == 0 then\n\t\t\t\t\tis_prime = false\n\t\t\
    \t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif is_prime then\n\t\t\t\treturn true\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "    local flag=false\n    for\
    \ i=2, a/2 do\n        if(a%i==0) then\n            for j=2, a/2 do\n        \
    \        if(a%j==0) then\n                    for k=2, a/2 do\n              \
    \          if(a%k==0) then\n                            if(i*j*k==a) then\n  \
    \                              flag=true\n                            end\n  \
    \                      end\n                    end\n                end\n   \
    \         end\n        end\n    end\n    return flag\nend", "  local primes =\
    \ {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97}\n  for i = 1, 24 do\n    for j = 1, 24 do\n      for k =\
    \ 1, 24 do\n        if a == primes[i] * primes[j] * primes[k] then\n         \
    \ return true\n        end\n      end\n    end\n  end\n  return false\nend", "\t\
    --TODO: Write the solution of this exercise.\n\t-- You can add more functions\
    \ or variables if you need it.\n\t-- This is just a hint.\n\t-- Example:\n\t--\
    \ local function is_prime(a)\n\t-- \treturn true -- or false\n\t-- end\n\t-- return\
    \ is_prime(1) and is_prime(2) and is_prime(5)\n\t--\n\t-- P.S. Don't delete this\
    \ function. We test the code and give you marks by calling this function.\nend",
  "    -- body\nend", "  --your code here\nend", "\tlocal is_prime = function(x)\n\
    \t\tif x == 1 then\n\t\t\treturn false\n\t\tend\n\t\tif x == 2 then\n\t\t\treturn\
    \ true\n\t\tend\n\t\tif x % 2 == 0 then\n\t\t\treturn false\n\t\tend\n\t\tlocal\
    \ s = math.sqrt(x)\n\t\tfor i = 3, s, 2 do\n\t\t\tif x % i == 0 then\n\t\t\t\t\
    return false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tlocal n = math.floor(math.sqrt(a))\n\
    \tlocal c = 0\n\tfor i = 1, n do\n\t\tif a % i == 0 then\n\t\t\tif is_prime(i)\
    \ then\n\t\t\t\tc = c + 1\n\t\t\tend\n\t\t\tif is_prime(a / i) then\n\t\t\t\t\
    c = c + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn c == 3\nend", "    for x = 2, a\
    \ do\n        for y = 2, a do\n            for z = 2, a do\n                if\
    \ a == x * y * z then\n                    if x > 2 and y > 2 and z > 2 then\n\
    \                        if not is_prime(x) or not is_prime(y) or not is_prime(z)\
    \ then\n                            return false\n                        end\n\
    \                    end\n                    return true\n                end\n\
    \            end\n        end\n    end\n    return false\nend", "\tlocal a = a\
    \ or 0\n\tlocal fact = primes_array_by_number(a)\n\tlocal temp = 0\n\tlocal count\
    \ = 0\n\tlocal mul = 1\n\tlocal res = false\n\tfor k,v in pairs(fact) do\n\t\t\
    temp = k * mul\n\t\tif temp == a then\n\t\t\tres = true\n\t\tend\n\t\tmul = temp\n\
    \tend\n\treturn res\nend", "    if a <= 2 then\n        return false\n    end\n\
    \    for i = 2, a / 2 do\n        if a % i == 0 then\n            if is_prime(i)\
    \ then\n                a = a / i\n                break\n            end\n  \
    \      end\n    end\n    for i = 2, a / 2 do\n        if a % i == 0 then\n   \
    \         if is_prime(i) then\n                a = a / i\n                break\n\
    \            end\n        end\n    end\n    if is_prime(a) then\n        return\
    \ true\n    end\n    return false\nend", "\treturn true -- example\nend", "\t\
    if a % 2 == 0 then\n\t\tif a % 3 == 0 then\n\t\t\tif a % 5 == 0 then\n\t\t\t\t\
    return true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nprint(is_multiply_prime(30))",
  "\nend", "    return a == 2 * 3 * 5\nend", "    local is_prime = true\n    local\
    \ counter = 2\n    if a <= 1 then\n        return false\n    end\n    while counter\
    \ < a do\n        if a % counter == 0 then\n            is_prime = false\n   \
    \         break\n        end\n        counter = counter + 1\n    end\n    return\
    \ is_prime\nend", "    local function is_prime(b)\n        for i = 2, b - 1 do\n\
    \            if b % i == 0 then\n                return false\n            end\n\
    \        end\n        return true\n    end", "    local function is_prime(x)\n\
    \        for i = 2, x - 1 do\n            if x % i == 0 then\n               \
    \ return false\n            end\n        end\n        return true\n    end", "\t\
    for i = 2, (a/2) do\n\t\tif (a % i == 0) then\n\t\t\tis_multiply_prime(a/i)\n\t\
    \tend\n\tend\nend", "    local n = prime_factor(a)\n    return #n == 3\nend",
  end, "\tif a == 1 then\n\t\treturn false\n\tend\n\tlocal result = true\n\tlocal\
    \ primes = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97 }\n\tfor i = 1, #primes do\n\t\tif a % primes[i]\
    \ == 0 then\n\t\t\tresult = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn result\n\
    end", "  local prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  local counter = 0\n  for\
    \ i = 1, #prime_numbers do\n    if a % prime_numbers[i] == 0 then\n      counter\
    \ = counter + 1\n    end\n  end\n  if counter == 3 then\n    return true\n  else\n\
    \    return false\n  end\nend", "    local primes = {2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    for\
    \ i = 1, #primes do\n        for j = 1, #primes do\n            for k = 1, #primes\
    \ do\n                if a == primes[i] * primes[j] * primes[k] then\n       \
    \             return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend", "  \nend", "\t--todo:\nend", "\tlocal n = a\
    \ / 3\n\t\n\tlocal is_primes = is_primes(a)\n\tfor i = 1, n, 1 do\n\t\tif a %\
    \ i == 0 then\n\t\t\tis_primes = is_primes(i)\n\t\tend\n\tend\n\treturn is_primes\n\
    end", "    local numbers = {}\n    for i = 2, a do\n        if a % i == 0 then\n\
    \            table.insert(numbers, i)\n        end\n    end\n    -- Checking to\
    \ see if any of the primes are duplicates\n    for i = 1, #numbers do\n      \
    \  for j = i+1, #numbers do\n            if numbers[i] == numbers[j] then\n  \
    \              return false\n            end\n        end\n    end\n    -- Checking\
    \ to see if there are 3 primes\n    if #numbers == 3 then\n        return true\n\
    \    end\n    return false\nend", "    local factors = {}\n    local count = 1\n\
    \    local i = 2\n    while i < 100 do\n        if a % i == 0 then\n         \
    \   factors[count] = i\n            count = count + 1\n        end\n        i\
    \ = i + 1\n    end\n    if count ~= 4 then\n        return false\n    end\n  \
    \  for i = 1, 3 do\n        local is_prime = true\n        for j = 2, factors[i]\
    \ do\n            if factors[i] % j == 0 then\n                is_prime = false\n\
    \                break\n            end\n        end\n        if not is_prime\
    \ then\n            return false\n        end\n    end\n    return true\nend",
  "\nend", "    -- Write your code here\nend", "  local isPrime = true\n  local divisor\
    \ = 2\n  while (divisor < a) do\n    if a % divisor == 0 then\n      isPrime =\
    \ false\n      local factor = a / divisor\n      local factor2 = factor\n    \
    \  while (factor2 < a) do\n        if factor % factor2 == 0 then\n          factor\
    \ = factor / factor2\n        end\n        factor2 = factor2 + 1\n      end\n\
    \      if (isPrime == false) then\n        factor2 = divisor\n        while (factor2\
    \ < a) do\n          if divisor % factor2 == 0 then\n            divisor = divisor\
    \ / factor2\n          end\n          factor2 = factor2 + 1\n        end\n   \
    \     if divisor == 1 and factor == 1 then\n          print(a .. \" = \" .. divisor\
    \ .. \" * \" .. factor .. \" * \" .. factor2)\n          return true\n       \
    \ end\n      end\n    end\n    divisor = divisor + 1\n  end\n  return false\n\
    end", "\treturn a == 1 or a == 2 or a == 3 or a == 5 or a == 7 or a == 11 or a\
    \ == 13 or a == 17 or a == 19 or a == 23 or a == 29 or a == 31 or a == 37 or a\
    \ == 41 or a == 43 or a == 47 or a == 53 or a == 59 or a == 61 or a == 67 or a\
    \ == 71 or a == 73 or a == 79 or a == 83 or a == 89 or a == 97\nend", "\tif a\
    \ == 1 then return false end\n\tif a == 2 then return true end\n\tlocal is_prime\
    \ = function(a)\n\t\tfor i = 2, math.floor(math.sqrt(a)) do\n\t\t\tif a % i ==\
    \ 0 then return false end\n\t\tend\n\t\treturn true\n\tend\n\tlocal primes = {\
    \ [1] = 2 }\n\tfor i = 3, a - 1 do\n\t\tif is_prime(i) then\n\t\t\ttable.insert(primes,\
    \ i)\n\t\tend\n\tend\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\
    \tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\
    \ return true end\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "    -- Write\
    \ your code here\n    local a = tonumber(a)\n    local primes = {2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97}\n    for i = 1, #primes do\n        for j = 1, #primes do\n            for\
    \ k = 1, #primes do\n                if primes[i] * primes[j] * primes[k] == a\
    \ then\n                    return true\n                end\n            end\n\
    \        end\n    end\n    return false\nend", "    local flag = false\n    for\
    \ i = 2, 100 do\n        for j = 2, 100 do\n            for k = 2, 100 do\n  \
    \              if i * j * k == a then\n                    flag = true\n     \
    \           end\n            end\n        end\n    end\n    return flag\nend",
  "\tlocal function is_prime(a)\n\t\tfor i = 2, math.floor(math.sqrt(a)) do\n\t\t\t\
    if a % i == 0 then return false end\n\t\tend\n\t\treturn true\n\tend\n\tfor i\
    \ = 2, math.floor(math.sqrt(a)) do\n\t\tif a % i == 0 and is_prime(i) and is_prime(a\
    \ / i) then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nprint(\"\
    ----- is_multiply_prime -----\")\nprint(is_multiply_prime(30))\nprint(is_multiply_prime(8))\n\
    print(is_multiply_prime(50))\nprint(is_multiply_prime(100))", "\tlocal function\
    \ is_prime(n)\n\t\tif n == 1 then\n\t\t\treturn false\n\t\tend\n\t\tif n == 2\
    \ then\n\t\t\treturn true\n\t\tend\n\t\tif n % 2 == 0 then\n\t\t\treturn false\n\
    \t\tend\n\t\tfor i = 3, math.sqrt(n), 2 do\n\t\t\tif n % i == 0 then\n\t\t\t\t\
    return false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\t\n\tlocal function\
    \ is_mult_prime(n)\n\t\tfor i = 1, 100 do\n\t\t\tif n % i == 0 and is_prime(i)\
    \ then\n\t\t\t\tn = n / i\n\t\t\t\ti = 1\n\t\t\tend\n\t\tend\n\t\tif n == 1 then\n\
    \t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\n\t\n\treturn\
    \ is_mult_prime(a)\nend", "  local list = list_primes(a)\n  local i = 1\n  while\
    \ list[i] do\n    if a % list[i] == 0 then\n      local b = a / list[i]\n    \
    \  local j = 1\n      while list[j] do\n        if b % list[j] == 0 then\n   \
    \       return true\n        end\n        j = j + 1\n      end\n    end\n    i\
    \ = i + 1\n  end\n  return false\nend", "    local index = 0;\n    for i = 1,\
    \ a do\n        if is_prime(i) and a % i == 0 then\n            index = index\
    \ + 1;\n        end\n    end\n    return index == 3\nend", "  -- Write your code\
    \ here\n  if math.floor(a) == a then\n    n = 0\n    while n < #PRIMES do\n  \
    \    if a % PRIMES[n] == 0 then\n        if math.floor(a / PRIMES[n]) == a / PRIMES[n]\
    \ then\n          return true\n        end\n      end\n      n = n + 1\n    end\n\
    \  end\n  return false\nend", "    -- write your code here\n    if a == 1 then\n\
    \        return false\n    end\n    for i = 2, a - 1 do\n        if a % i == 0\
    \ then\n            for j = 2, a / i - 1 do\n                if (a / i) % j ==\
    \ 0 then\n                    for k = 2, a / (i * j) - 1 do\n                \
    \        if (a / (i * j)) % k == 0 then\n                            return false\n\
    \                        end\n                    end\n                    return\
    \ true\n                end\n            end\n        end\n    end\n    return\
    \ true\nend", "\tlocal primes = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97 }\n\t\n\tfor i,v in ipairs(primes)\
    \ do\n\t\tif a % v == 0 then\n\t\t\tfor k,w in ipairs(primes) do\n\t\t\t\tif a\
    \ % w == 0 and a % (v * w) == 0 then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\
    \tend\n\t\tend\n\tend\n\t\n\treturn false\nend", "   if (a==1) then return false\
    \ end\n   local primes = {}\n   local i = 2\n   while (a ~= 1) do\n      if (a\
    \ % i == 0) then\n         table.insert(primes, i)\n         a = a / i\n     \
    \ else\n         i = i + 1\n      end\n   end\n   if (#primes == 3) then\n   \
    \   return true\n   else\n      return false\n   end\nend", "    -- Your code\
    \ here\n    return false\nend", "    if a < 3 then return false end\n    if a\
    \ == 3 then return true end\n    local max_divider = math.sqrt(a)\n    local i\
    \ = 2\n    while i <= max_divider do\n        if a % i == 0 then\n           \
    \ local divider = a / i\n            if is_prime(divider) and is_prime(i) then\n\
    \                return true\n            end\n        end\n        i = i + 1\n\
    \    end\n    return false\nend", end, "    if a == 1 then\n        return false\n\
    \    end\n    local b = 3\n    while a % 2 == 0 do\n        a = a / 2\n    end\n\
    \    while b < math.sqrt(a) do\n        while a % b == 0 do\n            a = a\
    \ / b\n        end\n        b = b + 2\n    end\n    return a > 2\nend", "   local\
    \ primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97}\n   for i = 1, #primes do\n      for j = 1, #primes\
    \ do\n         for k = 1, #primes do\n            if a == primes[i] * primes[j]\
    \ * primes[k] then\n               return true\n            end\n         end\n\
    \      end\n   end\n   return false\nend", "\tlocal multi = 1\n\tlocal x = 2\n\
    \twhile x < a do\n\t\tif a % x == 0 then\n\t\t\tmulti = multi * x\n\t\t\ta = a\
    \ / x\n\t\telse\n\t\t\tx = x + 1\n\t\tend\n\tend\n\tif a > 100 then return false\
    \ end\n\treturn true\nend", "   local primes = {}\n   local factors = {}\n   if\
    \ a < 2 then return false end\n   for i = 2, a-1 do\n      if not factors[i] then\n\
    \         primes[#primes+1] = i\n         for j = i + i, a, i do\n           \
    \ factors[j] = true\n         end\n      end\n   end\n   local f = 0\n   local\
    \ p = 0\n   while p < #primes and f < 3 do\n      if a % primes[p] == 0 then \n\
    \         f = f + 1\n         a = a / primes[p]\n      else\n         p = p +\
    \ 1\n      end\n   end\n   return f == 3 and a == 1\nend", "\treturn false\nend",
  "\nend", "\tlocal i,j,k,_a = 2,3,5,a\n\twhile _a%i==0 do _a=_a/i end\n\twhile _a%j==0\
    \ do _a=_a/j end\n\twhile _a%k==0 do _a=_a/k end\n\treturn _a==1\nend", "\tfor\
    \ i = 2, a do\n\t\tfor j = 2, a do\n\t\t\tfor k = 2, a do\n\t\t\t\tif i * j *\
    \ k == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn false\nend", "  local function is_prime(number)\n    if number <= 1 then\n\
    \      return false\n    end\n    for i = 2, number - 1 do\n      if number %\
    \ i == 0 then\n        return false\n      end\n    end\n    return true\n  end\n\
    \  for i = 2, a do\n    if a % i == 0 and is_prime(i) then\n      a = a / i\n\
    \      if a == 1 then\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\t\
    if a % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\
    \tend\n\tif a == 2 then\n\t\treturn true\n\tend\n\tif is_prime(a) then\n\t\treturn\
    \ false\n\tend\n\tlocal count = 0\n\tfor i = 2, a - 1 do\n\t\tif a % i == 0 then\n\
    \t\t\tif is_prime(i) then\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\
    \tif count == 3 then\n\t\treturn true\n\tend\n\treturn false\nend", "  if a <\
    \ 2 then\n    return false\n  end\n  local count = 0\n  local first, second, third\
    \ = nil, nil, nil\n  local i = 2\n  while i <= a do\n    if a % i == 0 then\n\
    \      if count == 0 then\n        first = i\n        count = count + 1\n    \
    \  elseif count == 1 then\n        second = i\n        count = count + 1\n   \
    \   elseif count == 2 then\n        third = i\n        count = count + 1\n   \
    \   end\n    end\n    i = i + 1\n  end\n  if count == 3 then\n    return true\n\
    \  else\n    return false\n  end\nend", "\tlocal p1 = 1\n\tlocal p2 = 1\n\tlocal\
    \ p3 = 1\n\tfor i = 1, 100 do\n\t\tif i % 2 ~= 0 and i % 3 ~= 0 and i % 5 ~= 0\
    \ and i % 7 ~= 0 and i % 11 ~= 0 and i % 13 ~= 0 and i % 17 ~= 0 and i % 19 ~=\
    \ 0 and i % 23 ~= 0 and i % 29 ~= 0 and i % 31 ~= 0 and i % 37 ~= 0 and i % 41\
    \ ~= 0 and i % 43 ~= 0 and i % 47 ~= 0 and i % 53 ~= 0 and i % 59 ~= 0 and i %\
    \ 61 ~= 0 and i % 67 ~= 0 and i % 71 ~= 0 and i % 73 ~= 0 and i % 79 ~= 0 and\
    \ i % 83 ~= 0 and i % 89 ~= 0 and i % 97 ~= 0 then\n\t\t\tif p1 ~= 1 then\n\t\t\
    \t\tp2 = i\n\t\t\t\tfor j = 1, 100 do\n\t\t\t\t\tif j % 2 ~= 0 and j % 3 ~= 0\
    \ and j % 5 ~= 0 and j % 7 ~= 0 and j % 11 ~= 0 and j % 13 ~= 0 and j % 17 ~=\
    \ 0 and j % 19 ~= 0 and j % 23 ~= 0 and j % 29 ~= 0 and j % 31 ~= 0 and j % 37\
    \ ~= 0 and j % 41 ~= 0 and j % 43 ~= 0 and j % 47 ~= 0 and j % 53 ~= 0 and j %\
    \ 59 ~= 0 and j % 61 ~= 0 and j % 67 ~= 0 and j % 71 ~= 0 and j % 73 ~= 0 and\
    \ j % 79 ~= 0 and j % 83 ~= 0 and j % 89 ~= 0 and j % 97 ~= 0 then\n\t\t\t\t\t\
    \tif p2 ~= 1 then\n\t\t\t\t\t\t\tp3 = j\n\t\t\t\t\t\t\tfor k = 1, 100 do\n\t\t\
    \t\t\t\t\t\tif k % 2 ~= 0 and k % 3 ~= 0 and k % 5 ~= 0 and k % 7 ~= 0 and k %\
    \ 11 ~= 0 and k % 13", "\tif a == 1 then\n\t\treturn false\n\tend\n\tif a == 2\
    \ then\n\t\treturn true\n\tend\n\tlocal function is_prime(n)\n\t\tfor i = 2, math.sqrt(n)\
    \ do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\t\
    return true\n\tend\n\tlocal function helper(n, b)\n\t\tif n == 1 then\n\t\t\t\
    return true\n\t\tend\n\t\tif n % b == 0 then\n\t\t\tif is_prime(b) then\n\t\t\t\
    \treturn helper(n / b, b)\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\
    \t\t\tb = b + 1\n\t\t\treturn helper(n, b)\n\t\tend\n\tend\n\treturn helper(a,\
    \ 2)\nend", "    if a <= 0 then\n        return false\n    end\n    local b =\
    \ 0\n    while a % 2 == 0 do\n        a = a / 2\n        b = b + 1\n    end\n\
    \    local primes = {3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    for k, v in ipairs(primes) do\n   \
    \     while a % v == 0 do\n            a = a / v\n            b = b + 1\n    \
    \    end\n    end\n    return a == 1 and b == 3\nend\nprint(is_multiply_prime(30))",
  "    if a < 2 then\n        return false\n    end\n    local i = 2\n    while i\
    \ < a do\n        if a % i == 0 then\n            local j = 2\n            while\
    \ j < i do\n                if i % j == 0 then\n                    break\n  \
    \              end\n                j = j + 1\n            end\n            if\
    \ j == i then\n                local k = 2\n                while k < a / i do\n\
    \                    if (a / i) % k == 0 then\n                        break\n\
    \                    end\n                    k = k + 1\n                end\n\
    \                if k == a / i then\n                    return true\n       \
    \         end\n            end\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local result = 0\n    local result_b = 0\n    for i = 1, 100\
    \ do\n        if i * i == a then\n            result = result + 1\n        end\n\
    \    end\n    if result == 1 then\n        for i = 1, 100 do\n            if i\
    \ * i * i == a then\n                result_b = result_b + 1\n            end\n\
    \        end\n        if result_b == 1 then\n            return true\n       \
    \ else\n            return false\n        end\n    else\n        return false\n\
    \    end\nend", "\tlocal prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\t\n\tlocal function\
    \ is_prime(number)\n\t\tfor _, prime in ipairs(prime_numbers) do\n\t\t\tif number\
    \ == prime then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\t\
    end\n\t\n\tlocal function is_multiply_prime_recursive(a, counter)\n\t\tif counter\
    \ == #prime_numbers then\n\t\t\treturn false\n\t\tend\n\t\tif a % prime_numbers[counter]\
    \ == 0 then\n\t\t\tif a / prime_numbers[counter] == 1 then\n\t\t\t\treturn true\n\
    \t\t\telse\n\t\t\t\treturn is_multiply_prime_recursive(a / prime_numbers[counter],\
    \ counter)\n\t\t\tend\n\t\telse\n\t\t\treturn is_multiply_prime_recursive(a, counter\
    \ + 1)\n\t\tend\n\tend\n\t\n\treturn is_multiply_prime_recursive(a, 1)\nend",
  "\t-- your code goes here \n\t\nend", "  -- your code here\n  return false\nend",
  "\tfor i = 2, 100 do\n\t\tfor j = 2, 100 do\n\t\t\tfor k = 2, 100 do\n\t\t\t\tif\
    \ (i*j*k == a) then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\
    end\n\treturn false\nend", "   for i = 2, a-1 do\n      for j = 2, a-1 do\n  \
    \       for k = 2, a-1 do\n            if i*j*k == a then\n               return\
    \ true\n            end\n         end\n      end\n   end\n   return false\nend",
  "  local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97}\n  local function is_prime(a)\n    for _, prime\
    \ in ipairs(primes) do\n      if prime == a then\n        return true\n      end\n\
    \    end\n    return false\n  end\n  for _, prime in ipairs(primes) do\n    if\
    \ a % prime == 0 then\n      local a_1 = a / prime\n      if is_prime(a_1) then\n\
    \        return true\n      end\n    end\n  end\n  return false\nend", "  local\
    \ test = false\n  local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  for i = 1, #primes do\n\
    \    for j = 1, #primes do\n      for k = 1, #primes do\n        if a == primes[i]\
    \ * primes[j] * primes[k] then\n          test = true\n        end\n      end\n\
    \    end\n  end\n  return test\nend", "    local ok, result = pcall(function()\n\
    \        local t = {}\n        local aa = a\n        for i = 2, a do\n       \
    \     if aa % i == 0 then\n                table.insert(t, i)\n              \
    \  aa = aa / i\n            end\n        end\n        return #t == 3 and t[1]\
    \ * t[2] * t[3] == a\n    end)\n    if ok then\n        return result\n    else\n\
    \        return false\n    end\nend", "  -- @TODO: [exercise-06] write your code\
    \ here\n  return false\nend", '  local prim, i = 1, 2', "    if a % 2 == 0 then\n\
    \        if a % 3 == 0 then\n            if a % 5 == 0 then\n                return\
    \ true\n            end\n        end\n    end\n    return false\nend", "    if\
    \ a == 0 then\n        return false\n    end\n    local function is_prime(p)\n\
    \        if p == 1 then\n            return false\n        end\n        for i\
    \ = 2, math.floor(math.sqrt(p)) do\n            if p % i == 0 then\n         \
    \       return false\n            end\n        end\n        return true\n    end\n\
    \    for i = 2, math.floor(math.sqrt(a)) do\n        if a % i == 0 then\n    \
    \        local p1 = i\n            local p2 = a / i\n            if is_prime(p1)\
    \ and is_prime(p2) then\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend", "\t\nend", "    local primes = {}\n \
    \   local num = 0\n    for i = 2, a do\n        local is_prime = true\n      \
    \  for j = 2, math.sqrt(i) do\n            if i % j == 0 then\n              \
    \  is_prime = false\n                break\n            end\n        end\n   \
    \     if is_prime then\n            primes[#primes + 1] = i\n        end\n   \
    \ end\n    for i = 1, #primes do\n        for j = 1, #primes do\n            for\
    \ k = 1, #primes do\n                if primes[i] * primes[j] * primes[k] == a\
    \ then\n                    num = num + 1\n                end\n            end\n\
    \        end\n    end\n    if num > 0 then\n        return true\n    else\n  \
    \      return false\n    end\nend", "    local r = true\n    for i = 2, math.floor(a\
    \ / 2) do\n        if a % i == 0 then\n            local b = a / i\n         \
    \   for j = 2, math.floor(b / 2) do\n                if b % j == 0 then\n    \
    \                local c = b / j\n                    for k = 2, math.floor(c\
    \ / 2) do\n                        if c % k == 0 then\n                      \
    \      r = false\n                            break\n                        end\n\
    \                    end\n                    if not r then\n                \
    \        break\n                    end\n                end\n            end\n\
    \            if not r then\n                break\n            end\n        end\n\
    \    end\n    return r\nend", "    local is_prime = function(n)\n        for i\
    \ = 2, n - 1 do\n            if n % i == 0 then\n                return false\n\
    \            end\n        end\n        return true\n    end", "    if a < 3 then\n\
    \        return false\n    end\n    for i = 2, math.sqrt(a) do\n        if a %\
    \ i == 0 then\n            return false\n        end\n    end\n    return true\n\
    end", "\tlocal counter = 0\n\tfor i = 2,a do\n\t\tif a % i == 0 then\n\t\t\tcounter\
    \ = counter + 1\n\t\tend\n\tend\n\t\n\treturn counter == 3 and true or false\n\
    end", "    if a < 6 then\n        return false\n    end\n    local factors = 0\n\
    \    local d = 2\n    while a > 1 do\n        while a % d == 0 do\n          \
    \  a = a / d\n            factors = factors + 1\n        end\n        d = d +\
    \ 1\n        if factors > 3 then\n            return false\n        end\n    end\n\
    \    if factors == 3 then\n        return true\n    else\n        return false\n\
    \    end\nend", "\t-- TODO\nend", "    if a > 100 then\n        return false\n\
    \    end\n    for i = 2, a do\n        if a % i == 0 then\n            if is_prime(i)\
    \ then\n                local a_divided_i = a / i\n                if is_prime(a_divided_i)\
    \ then\n                    return true\n                end\n            end\n\
    \        end\n    end\n    return false\nend", "\tif(a < 0) then\n\t\ta = -a\n\
    \tend\n\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal conditions = {}\n\tfor i,v\
    \ in ipairs(primes) do\n\t\tif(a % v == 0) then\n\t\t\ta = a / v\n\t\t\ttable.insert(conditions,\
    \ v)\n\t\tend\n\tend\n\treturn (a == 1) and (table.getn(conditions) == 3)\nend",
  "\t\nend", "\tlocal lim = math.floor(math.sqrt(a))\n\tlocal prime = true\n\tfor\
    \ i = 2, lim do\n\t\tif a % i == 0 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\t\
    end\n\tend\n\treturn prime\nend", "  local rest = a\n  local count = 0\n  while\
    \ rest % 2 == 0 do\n    rest = rest / 2\n    count = count + 1\n  end\n  while\
    \ rest % 3 == 0 do\n    rest = rest / 3\n    count = count + 1\n  end\n  while\
    \ rest % 5 == 0 do\n    rest = rest / 5\n    count = count + 1\n  end\n  if rest\
    \ == 1 and count == 3 then\n    return true\n  else\n    return false\n  end\n\
    end", end, "\tassert(type(a) == \"number\")\n\tlocal b = {}\n\tfor i = 2, a -\
    \ 1 do\n\t\tif a % i == 0 then\n\t\t\tb[#b + 1] = i\n\t\tend\n\tend\n\t\n\tfor\
    \ i = 1, #b do\n\t\tfor j = i + 1, #b do\n\t\t\tfor k = j + 1, #b do\n\t\t\t\t\
    if (b[i] * b[j] * b[k]) == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn false\nend", "\t-- TODO\nend", "\tfor i = 2,math.sqrt(a)\
    \ do\n\t\tif a % i == 0 then\n\t\t\tfor j = 2,math.sqrt(a / i) do\n\t\t\t\tif\
    \ (a / i) % j == 0 then\n\t\t\t\t\tfor k = 2,math.sqrt(a / i / j) do\n\t\t\t\t\
    \t\tif (a / i / j) % k == 0 then\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\tend\n\
    \t\t\t\t\tend\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn false\nend\nfor i = 2,100 do\n\tprint(i,is_multiply_prime(i))\nend",
  "    -- TODO: Add your code here\nend", "    -- print(\"a = \" .. a)\n    for i\
    \ = 2, a/2 do\n        -- print(\"\\ti = \" .. i)\n        if is_prime(i) then\n\
    \            -- print(\"\\ti is prime!\")\n            for j = 2, a/2 do\n   \
    \             -- print(\"\\t\\tj = \" .. j)\n                if is_prime(j) then\n\
    \                    -- print(\"\\t\\tj is prime!\")\n                    for\
    \ k = 2, a/2 do\n                        -- print(\"\\t\\t\\tk = \" .. k)\n  \
    \                      if is_prime(k) then\n                            -- print(\"\
    \\t\\t\\tk is prime!\")\n                            local result = i * j * k\n\
    \                            -- print(\"\\t\\t\\t result = \" .. result)\n   \
    \                         if result == a then\n                              \
    \  return true\n                            end\n                        end\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend", "  -- write code here\nend", "\t\n\t--variable\
    \ for store prime numbers\n\tlocal prime_numbers={}\n\tlocal i=2\n\t-- insert\
    \ 2 to the prime_numbers table\n\ttable.insert(prime_numbers,i)\n\t-- Create a\
    \ loop to get the rest of the prime numbers\n\trepeat \n\t\t-- variable that tells\
    \ if the number is prime or not\n\t\tlocal is_prime=true\n\t\t--set i to the next\
    \ number that was not checked yet\n\t\ti=i+1\n\t\t--loop to check if i is a prime\
    \ number\n\t\tfor j=1,#prime_numbers do\n\t\t\t-- if i divided by the prime number\
    \ and the reminder is 0\n\t\t\tif i%prime_numbers[j]==0 then\n\t\t\t\t--set is_prime\
    \ to false because i is not a prime number\n\t\t\t\tis_prime=false\n\t\t\t\t--break\
    \ the loop\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t-- if the number is prime\n\
    \t\tif is_prime then\n\t\t\t-- insert the prime number to the prime_numbers table\n\
    \t\t\ttable.insert(prime_numbers,i)\n\t\tend\t\n\tuntil #prime_numbers==50 or\
    \ i>=a\n\t\n\t-- loop to check if the number is multiply by 3 prime numbers\n\t\
    for i=1,#prime_numbers do\n\t\t-- if the number divided by the prime number and\
    \ the reminder is 0\n\t\tif a%prime_numbers[i]==0 then\n\t\t\t-- divide the number\
    \ by the prime number\n\t\t\ta=a/prime_numbers[i]\n\t\t\t-- loop to check if the\
    \ number is multiply by 3 prime numbers\n\t\t\tfor j=1,#prime_numbers do\n\t\t\
    \t\t-- if the number divided by the prime number and the reminder is 0\n\t\t\t\
    \tif a%prime_numbers[j]==0 then\n\t\t\t\t\t-- divide the number by the prime number\n\
    \t\t\t\t\ta=a/prime_numbers[j]\n\t\t\t\t\t-- loop to check if the number is multiply\
    \ by 3 prime numbers\n\t\t\t\t\tfor", "\tlocal function is_prime(a)\n\t\tfor i\
    \ = 2, math.sqrt(a) do\n\t\t\tif (a % i == 0) then return false end\n\t\tend\n\
    \t\treturn true\n\tend\n\tfor i = 2, math.sqrt(a) do\n\t\tif (a % i == 0) then\n\
    \t\t\tif is_prime(i) and is_prime(a / i) then\n\t\t\t\tif is_prime(a / i / i)\
    \ then return true end\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "\tn\
    \ = 100 \n\tnumber_found = 0\n\tfor p = 2, a, 1 do \n\t\tdivided = a % p\n\t\t\
    if divided == 0 then\n\t\t\tnumber_found = number_found + 1\n\t\tend\n\tend\n\t\
    if number_found == 3 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

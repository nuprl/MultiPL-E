name: HumanEval_17_parse_music
language: lua
prompt: "-- Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n-- Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n-- not last.\n-- Here is a legend:\n\
  -- 'o' - whole note, lasts four beats\n-- 'o|' - half note, lasts two beats\n--\
  \ '.|' - quater note, lasts one beat\nlocal function parse_music(music_string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = parse_music\n\
  \    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('o o o o'),\
  \ {4, 4, 4, 4})\n    lu.assertEquals(candidate('.| .| .| .|'), {1, 1, 1, 1})\n \
  \   lu.assertEquals(candidate('o| o| .| .| o o o o'), {2, 2, 1, 1, 4, 4, 4, 4})\n\
  \    lu.assertEquals(candidate('o| .| o| .| o o| o o|'), {2, 1, 2, 1, 4, 2, 4, 2})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local note_values = {['o'] = 4, ['o|'] = 2, ['.|'] = 1}\n    local\
    \ note_strings = {'o', 'o|', '.|'}\n    local len = string.len(music_string)\n\
    \    local result = {}\n    local current_note = ''\n    for i = 1, len do\n \
    \       local char = string.sub(music_string, i, i)\n        local next_char =\
    \ string.sub(music_string, i + 1, i + 1)\n        if next_char == '|' then\n \
    \           char = char .. next_char\n        end\n        if not table.indexof(note_strings,\
    \ char) then\n            table.insert(result, note_values[current_note])\n  \
    \          current_note = ''\n        else\n            current_note = char\n\
    \        end\n    end\n    return result\nend", "  return {}\nend", "    local\
    \ res = {}\n    for w in string.gmatch(music_string, \"%S+\") do\n        if w\
    \ == 'o' then\n            table.insert(res, 4)\n        elseif w == 'o|' then\n\
    \            table.insert(res, 2)\n        elseif w == '.|' then\n           \
    \ table.insert(res, 1)\n        end\n    end\n    return res\nend", "    local\
    \ music_string = music_string or \"||o|.|.\" --string.format(music_string or \"\
    ||o|.|.\")\n    local len = music_string:len()\n    local duration = 1\n    local\
    \ duration_list = {}\n    local current_char = \"\"\n    local char_types = {\
    \ \"o\", \"|\", \".\" }\n    local i = 1\n    while i <= len do\n        current_char\
    \ = music_string:sub(i, i)\n        if (current_char == \"o\") then\n        \
    \    duration = 4\n        elseif (current_char == \"|\") then\n            if\
    \ (i + 1 <= len) then\n                local next_char = music_string:sub(i +\
    \ 1, i + 1)\n                if (next_char == \"|\") then\n                  \
    \  duration = 4\n                    i = i + 1\n                else\n       \
    \             duration = 2\n                end\n            else\n          \
    \      duration = 2\n            end\n        elseif (current_char == \".\") then\n\
    \            duration = 1\n        end\n        table.insert(duration_list, duration)\n\
    \        i = i + 1\n    end\n    return duration_list\nend", "    local notes\
    \ = {}\n    for note in music_string:gmatch('o|o%||.%|') do\n        if note ==\
    \ 'o' then\n            table.insert(notes, 4)\n        elseif note == 'o|' then\n\
    \            table.insert(notes, 2)\n        elseif note == '.|' then\n      \
    \      table.insert(notes, 1)\n        end\n    end\n    return notes\nend", " \
    \ local beats_list = {}\n  for m in music_string:gmatch(\"[o.|]+\") do\n    table.insert(beats_list,\
    \ m:len())\n  end\n  return beats_list\nend", "    local notes = string.gmatch(music_string,\
    \ '%S+')\n    local array = {}\n    for note in notes do\n        if note == 'o'\
    \ then\n            table.insert(array, 4)\n        elseif note == 'o|' then\n\
    \            table.insert(array, 2)\n        elseif note == '.|' then\n      \
    \      table.insert(array, 1)\n        end\n    end\n    return array\nend", " \
    \ local notes = {}\n  local beats = {\n    o = 4,\n    o_ = 2,\n    _o = 2,\n\
    \    _o_ = 1,\n    __o = 1,\n    __o_ = 1,\n    ___o = 1,\n    ___o_ = 1,\n  \
    \  ____o = 1,\n    ____o_ = 1,\n    _____o = 1,\n    _____o_ = 1,\n    ______o\
    \ = 1,\n    ______o_ = 1,\n    _______o = 1,\n    _______o_ = 1,\n    ________o\
    \ = 1,\n    ________o_ = 1,\n    _________o = 1,\n    _________o_ = 1,\n    __________o\
    \ = 1,\n    __________o_ = 1,\n    ___________o = 1,\n    ___________o_ = 1,\n\
    \    ____________o = 1,\n    ____________o_ = 1,\n    _____________o = 1,\n  \
    \  _____________o_ = 1,\n    ______________o = 1,\n    ______________o_ = 1,\n\
    \    _______________o = 1,\n    _______________o_ = 1,\n    ________________o\
    \ = 1,\n    ________________o_ = 1,\n    _________________o = 1,\n    _________________o_\
    \ = 1,\n    __________________o = 1,\n    __________________o_ = 1,\n    ___________________o\
    \ = 1,\n    ___________________o_ = 1,\n    ____________________o = 1,\n    ____________________o_\
    \ = 1,\n    _____________________o = 1,\n    _____________________o_ = 1,\n  \
    \  ______________________o = 1,\n    ______________________o_ = 1,\n    _______________________o\
    \ = 1,\n    _______________________o_ = 1,\n    ________________________o = 1,\n\
    \    ________________________o_ = 1,\n    _________________________o = 1,\n  \
    \  _________________________o_ = 1,\n    __________________________o = 1,\n  \
    \  __________________________o_ = 1,\n    ___________________________o = 1,\n\
    \    ___________________________o_ = 1,\n   ", "    local notes = {}\n    for\
    \ i = 1, #music_string do\n        local note = string.sub(music_string, i, i)\n\
    \        if note == 'o' then\n            table.insert(notes, 4)\n        elseif\
    \ note == 'o' then\n            table.insert(notes, 2)\n        elseif note ==\
    \ '.' then\n            table.insert(notes, 1)\n        end\n    end\n    return\
    \ notes\nend", "  local duration_table = {}\n  -- parse whole notes first\n  for\
    \ duration in music_string:gmatch('o') do\n    table.insert(duration_table, 4)\n\
    \  end\n  -- parse half notes\n  for duration in music_string:gmatch('o|') do\n\
    \    table.insert(duration_table, 2)\n  end\n  -- parse quater notes\n  for duration\
    \ in music_string:gmatch('.|') do\n    table.insert(duration_table, 1)\n  end\n\
    \  return duration_table\nend", "    -- your code goes here\n    -- your answer\
    \ should be in a table, for example: {4, 2, 1, 1, 1, 4}\n    -- the answer for\
    \ this particular input is {4, 2, 1, 1, 1, 4}\n    -- so for the input \"o|.|.|o|o|\"\
    \ the function should return {4, 2, 1, 1, 1, 4}\n    local result = {}\n    local\
    \ temp = ''\n    local pattern = {\n        whole = 'o',\n        half = 'o|',\n\
    \        quater = '.|'\n    }\n    for i = 1, #music_string do\n        if string.sub(music_string,\
    \ i, i) == '|' then\n            table.insert(result, temp)\n            temp\
    \ = ''\n        else\n            temp = temp .. string.sub(music_string, i, i)\n\
    \        end\n    end\n    table.insert(result, temp)\n    local output = {}\n\
    \    for i = 1, #result do\n        if result[i] == pattern.whole then\n     \
    \       table.insert(output, 4)\n        elseif result[i] == pattern.half then\n\
    \            table.insert(output, 2)\n        elseif result[i] == pattern.quater\
    \ then\n            table.insert(output, 1)\n        end\n    end\n    return\
    \ output\nend", "  local result = {}\n  for note in music_string:gmatch(\"%S\"\
    ) do\n    if note == 'o' then\n      table.insert(result, 4)\n    elseif note\
    \ == 'o|' then\n      table.insert(result, 2)\n    elseif note == '.|' then\n\
    \      table.insert(result, 1)\n    end\n  end\n  return result\nend", "  local\
    \ res = {}\n  for char in music_string:gmatch(\".\") do\n    local beats = { [\"\
    o\"] = 4, [\"o|\"] = 2, [\".|\"] = 1 }\n    res[#res + 1] = beats[char]\n  end\n\
    \  return res\nend", "  local notes = {}\n  -- TODO\n  music_string:gsub(\".\"\
    , function(c)\n        if c == 'o' then\n          table.insert(notes, 4)\n  \
    \      elseif c == 'o|' then\n          table.insert(notes, 2)\n        elseif\
    \ c == '.|' then\n          table.insert(notes, 1)\n        end\n    end)\n  return\
    \ notes\nend", "    local beats = {}\n    local beat_index = 1\n    for match\
    \ in music_string:gmatch(\".\") do\n        local beats_number = 0\n        if\
    \ match == 'o' then\n            beats_number = 4\n        elseif match == 'o'\
    \ then\n            beats_number = 2\n        elseif match == '.' then\n     \
    \       beats_number = 1\n        end\n        if beats_number ~= 0 then\n   \
    \         beats[beat_index] = beats_number\n            beat_index = beat_index\
    \ + 1\n        end\n    end\n    return beats\nend", "    local i = 1\n    local\
    \ res = {}\n    while i <= #music_string do\n        if string.sub(music_string,\
    \ i, i) == 'o' then\n            res[#res + 1] = 4\n            i = i + 1\n  \
    \      elseif string.sub(music_string, i, i) == '.' then\n            res[#res\
    \ + 1] = 1\n            i = i + 1\n        elseif string.sub(music_string, i,\
    \ i + 1) == 'o|' then\n            res[#res + 1] = 2\n            i = i + 2\n\
    \        elseif string.sub(music_string, i, i + 1) == '.|' then\n            res[#res\
    \ + 1] = 1\n            i = i + 2\n        else\n            res[#res + 1] = 0\n\
    \            i = i + 1\n        end\n    end\n    return res\nend", "    local\
    \ output = {}\n    local duration = 1\n    local input = music_string\n    while\
    \ #input > 0 do\n        if string.sub(input, 1, 1) == 'o' then\n            duration\
    \ = 4\n            table.insert(output, duration)\n            input = string.sub(input,\
    \ 2)\n        elseif string.sub(input, 1, 2) == 'o|' then\n            duration\
    \ = 2\n            table.insert(output, duration)\n            input = string.sub(input,\
    \ 3)\n        elseif string.sub(input, 1, 2) == '.|' then\n            duration\
    \ = 1\n            table.insert(output, duration)\n            input = string.sub(input,\
    \ 3)\n        else\n            error(\"Invalid input!\")\n        end\n    end\n\
    \    return output\nend", "    local list_of_notes = {}\n    -- TODO: write this\
    \ function\n    \n    for note in string.gmatch(music_string, \"%S+\") do\n  \
    \      if note == \"o\" then\n            table.insert(list_of_notes, 4)\n   \
    \     elseif note == \"o|\" then\n            table.insert(list_of_notes, 2)\n\
    \        elseif note == \".|\" then\n            table.insert(list_of_notes, 1)\n\
    \        end\n    end\n    \n    return list_of_notes\nend", "    local notes\
    \ = {}\n    local last_index = 1\n    while last_index <= #music_string do\n \
    \       local cur_index = last_index\n        while cur_index <= #music_string\
    \ and music_string:sub(cur_index, cur_index) ~= '|' do\n            cur_index\
    \ = cur_index + 1\n        end\n        if cur_index > #music_string then\n  \
    \          error('Incorrect format')\n        end\n        local note = music_string:sub(last_index,\
    \ cur_index)\n        if note == 'o|' then\n            table.insert(notes, 2)\n\
    \        elseif note == '.|' then\n            table.insert(notes, 1)\n      \
    \  elseif note == 'o' then\n            table.insert(notes, 4)\n        else\n\
    \            error('Incorrect format')\n        end\n        last_index = cur_index\
    \ + 1\n    end\n    return notes\nend", "\tlocal fun={\n\t\t['o']=function() return\
    \ 4 end,\n\t\t['o|']=function() return 2 end,\n\t\t['.|']=function() return 1\
    \ end,\n\t}\n\tlocal rv={}\n\tfor x in music_string:gmatch(\"%S+\") do\n\t\ttable.insert(rv,fun[x]())\n\
    \tend\n\treturn rv\nend", "    -- your code goes here\n    local notes = {}\n\
    \    music_string:gsub(\"(%a)\", function(c) notes[#notes+1] = c end)\n    local\
    \ beats = {}\n    for i,note in ipairs(notes) do\n        if note == 'o' then\n\
    \            beats[i] = 4\n        elseif note == '|' then\n            beats[i]\
    \ = beats[i-1] / 2\n        elseif note == '.' then\n            beats[i] = 1\n\
    \        end\n    end\n    return beats\nend", "    local music_list = {}\n  \
    \  local half = 0\n    local whole = 0\n    local quater = 0\n    for i = 1, #music_string\
    \ do\n        local ch = music_string:sub(i, i)\n        if ch == 'o' then\n \
    \           whole = whole + 1\n        elseif ch == 'o' and ch == '|' then\n \
    \           half = half + 1\n        elseif ch == '.' and ch == '|' then\n   \
    \         quater = quater + 1\n        end\n    end\n    music_list[#music_list\
    \ + 1] = quater\n    music_list[#music_list + 1] = half\n    music_list[#music_list\
    \ + 1] = whole\n    return music_list\nend", "\tlocal list = {}\n\tmusic_string:gsub(\"\
    .\", function(i)\n\t\tif i == 'o' then\n\t\t\ttable.insert(list, 4)\n\t\telseif\
    \ i == 'o|' then\n\t\t\ttable.insert(list, 2)\n\t\telseif i == '.|' then\n\t\t\
    \ttable.insert(list, 1)\n\t\tend\n\tend)\n\treturn list\nend", "    local notes\
    \ = {}\n    for note in music_string:gmatch(\".\") do\n        if note == 'o'\
    \ then\n            table.insert(notes, 4)\n        elseif note == '.' then\n\
    \            table.insert(notes, 1)\n        end\n    end\n    return notes\n\
    end", "  local output = {}\n  local index = 1\n  for char in string.gmatch(music_string,\
    \ \"%S\") do\n    if char == 'o' then\n      output[index] = 4\n    elseif char\
    \ == 'o|' then\n      output[index] = 2\n    elseif char == '.|' then\n      output[index]\
    \ = 1\n    end\n    index = index + 1\n  end\n  return output\nend", "  local\
    \ beat_counts = {}\n  for note in music_string:gmatch('[o|.]') do\n    table.insert(beat_counts,\
    \ note_beat_counts[note])\n  end\n  return beat_counts\nend", "    local music_notes\
    \ = {}\n    local temp_table = {}\n    music_string = music_string:gsub(\"%s+\"\
    , \"\")\n    for i in string.gmatch(music_string, \"[^|]+\") do\n        table.insert(temp_table,\
    \ i)\n    end\n    for i,v in ipairs(temp_table) do\n        if v == \"o\" then\n\
    \            table.insert(music_notes, 4)\n        elseif v == \"o|\" then\n \
    \           table.insert(music_notes, 2)\n        elseif v == \".|\" then\n  \
    \          table.insert(music_notes, 1)\n        end\n    end\n    return music_notes\n\
    end", "  local beats = {}\n  local char_to_beat = {\n    ['o'] = 4,\n    ['|']\
    \ = 1,\n    ['.'] = 0\n  }\n  local last_char = ''\n  for char in music_string:gmatch('%w')\
    \ do\n    if last_char == '' or last_char == 'o' then\n      table.insert(beats,\
    \ char_to_beat[char])\n    else\n      beats[#beats] = beats[#beats] + char_to_beat[char]\n\
    \    end\n    last_char = char\n  end\n  return beats\nend", "    local result\
    \ = {}\n    for i=1,#music_string do\n        local c = music_string:sub(i,i)\n\
    \        if c == 'o' then\n            result[#result+1] = 4\n        elseif c\
    \ == '|' then\n            result[#result+1] = 2\n        elseif c == '.' then\n\
    \            result[#result+1] = 1\n        end\n    end\n    return result\n\
    end", "\tlocal result = {}\n\tfor note in music_string:gmatch(\".\") do\n\t\t\
    if note == 'o' then\n\t\t\ttable.insert(result, 4)\n\t\telseif note == 'o' then\n\
    \t\t\ttable.insert(result, 2)\n\t\telseif note == '.' then\n\t\t\ttable.insert(result,\
    \ 1)\n\t\tend\n\tend\n\treturn result\nend", "    local beats = { 4, 2, 1 }\n\
    \    local notes = { 'o', 'o|', '.|' }\n    local index = 1\n    local result\
    \ = {}\n    for note in string.gmatch(music_string, \"([^%s]+)\") do\n       \
    \ for i, beat in ipairs(beats) do\n            if note == notes[i] then\n    \
    \            result[index] = beat\n                index = index + 1\n       \
    \     end\n        end\n    end\n    return result\nend", "  return {}\nend",
  "    local beats = {}\n    local i = 1\n    while i <= #music_string do\n      \
    \  local c = music_string:sub(i, i)\n        local beat = 0\n        if c == 'o'\
    \ then\n            beat = 4\n            i = i + 1\n        elseif c == 'o' then\n\
    \            beat = 2\n            i = i + 2\n        elseif c == '.' then\n \
    \           beat = 1\n            i = i + 2\n        end\n        table.insert(beats,\
    \ beat)\n    end\n    return beats\nend", "    local beats = {}\n    local notes\
    \ = {}\n    for w in string.gmatch(music_string, \"%S+\") do\n        if w ==\
    \ 'o' then\n            table.insert(notes, 1)\n        elseif w == 'o|' then\n\
    \            table.insert(notes, 2)\n        elseif w == '.|' then\n         \
    \   table.insert(notes, 3)\n        end\n    end\n    return notes\nend", "  \
    \  local notes = {}\n    local half_note = 'o|'\n    local quater_note = '.|'\n\
    \    local whole_note = 'o'\n    for n in string.gmatch(music_string, half_note)\
    \ do\n        table.insert(notes, 2)\n    end\n    for n in string.gmatch(music_string,\
    \ quater_note) do\n        table.insert(notes, 1)\n    end\n    for n in string.gmatch(music_string,\
    \ whole_note) do\n        table.insert(notes, 4)\n    end\n    return notes\n\
    end", "  local beat_table = {}\n  local beat_list = {}\n  for beat in string.gmatch(music_string,\
    \ \".\") do\n    table.insert(beat_table, beat)\n  end\n  local beat_table_len\
    \ = #beat_table\n  local i = 1\n  while i <= beat_table_len do\n    if beat_table[i]\
    \ == 'o' then\n      table.insert(beat_list, 4)\n      i = i + 1\n    elseif beat_table[i]\
    \ == 'o' and beat_table[i + 1] == '|' then\n      table.insert(beat_list, 2)\n\
    \      i = i + 2\n    elseif beat_table[i] == '.' and beat_table[i + 1] == '|'\
    \ then\n      table.insert(beat_list, 1)\n      i = i + 2\n    end\n  end\n  return\
    \ beat_list\nend", "\tlocal temp = {}\n\tfor i in string.gmatch(music_string,\
    \ '.') do\n\t\ttable.insert(temp, i)\n\tend\n\t\n\tlocal output = {}\n\tfor i=1,#temp\
    \ do\n\t\tif temp[i] == 'o' then\n\t\t\ttable.insert(output, 4)\n\t\telseif temp[i]\
    \ == 'o' and temp[i+1] == '|' then\n\t\t\ttable.insert(output, 2)\n\t\telseif\
    \ temp[i] == '.' and temp[i+1] == '|' then\n\t\t\ttable.insert(output, 1)\n\t\t\
    end\n\tend\n\treturn output\nend", "\tlocal parsed_notes = {}\n\tfor notelen,\
    \ _ in music_string:gmatch('(o|o|.|)') do\n\t\tif notelen == 'o' then\n\t\t\t\
    table.insert(parsed_notes, 4)\n\t\telseif notelen == 'o|' then\n\t\t\ttable.insert(parsed_notes,\
    \ 2)\n\t\telseif notelen == '.|' then\n\t\t\ttable.insert(parsed_notes, 1)\n\t\
    \tend\n\tend\n\treturn parsed_notes\nend", "    local beats = {}\n    local notes\
    \ = string_split(music_string, ' ')\n    for _, note in ipairs(notes) do\n   \
    \     local beats_num = 0\n        for _, char in ipairs(note) do\n          \
    \  if char == 'o' then\n                beats_num = beats_num + 4\n          \
    \  elseif char == '.' then\n                beats_num = beats_num + 1\n      \
    \      end\n        end\n        table.insert(beats, beats_num)\n    end\n   \
    \ return beats\nend", "\t\n\tlocal beat_patterns = {\n\t\to  = 4,\n\t\to_ = 2,\n\
    \t\t_o = 2,\n\t\too = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\
    \t\too = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\
    \t\t_o = 2,\n\t\too = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\
    \t\t_o = 2,\n\t\t_o = 2,\n\t\too = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\to_ = 2,\n\
    \t\t_o = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\t\too = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\
    \t\to_ = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\t\too = 2,\n\t\to_ = 2,\n\
    \t\t_o = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\t\too = 2,\n\
    \t\to_ = 2,\n\t\t_o = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\
    \t\too = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\t_o = 2,\n\
    \t\t_o = 2,\n\t\too = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\t\to_ = 2,\n\t\t_o = 2,\n\
    \t\t_o = 2,\n\t\t_o =", "    local beats = {}\n    -- your code here\n    return\
    \ beats\nend", "\tlocal beats = {}\n\tlocal beat = 1\n\tfor i = 1, #music_string\
    \ do\n\t\tif music_string:sub(i, i) == 'o' then\n\t\t\ttable.insert(beats, 4)\n\
    \t\t\tbeat = beat + 4\n\t\telseif music_string:sub(i, i) == '.' then\n\t\t\ttable.insert(beats,\
    \ 1)\n\t\t\tbeat = beat + 1\n\t\telseif music_string:sub(i, i) == '|' then\n\t\
    \t\tbeat = beat + 1\n\t\tend\n\tend\n\treturn beats\nend", "    local music_string\
    \ = music_string\n    local result = {}\n    local i = 1\n    while i <= #music_string\
    \ do\n        local c = music_string:sub(i, i)\n        if c == 'o' then\n   \
    \         table.insert(result, 4)\n            i = i + 1\n        elseif c ==\
    \ 'o' and music_string:sub(i + 1, i + 1) == '|' then\n            table.insert(result,\
    \ 2)\n            i = i + 2\n        elseif c == '.' and music_string:sub(i +\
    \ 1, i + 1) == '|' then\n            table.insert(result, 1)\n            i =\
    \ i + 2\n        end\n    end\n    return result\nend", "    local notes = {}\n\
    \    local i = 1\n    while i <= #music_string do\n        local last_char = false\n\
    \        if music_string:sub(i, i + 1) == 'o|' then\n            table.insert(notes,\
    \ 2)\n            i = i + 2\n        elseif music_string:sub(i, i + 1) == '.|'\
    \ then\n            table.insert(notes, 1)\n            i = i + 2\n        elseif\
    \ music_string:sub(i, i) == 'o' then\n            table.insert(notes, 4)\n   \
    \         i = i + 1\n        elseif music_string:sub(i, i) == '|' then\n     \
    \       i = i + 1\n        else\n            -- A bad note!\n            print('Bad\
    \ note', music_string:sub(i, i))\n            i = i + 1\n        end\n    end\n\
    \    return notes\nend", "    local output = {}\n    for i in string.gmatch(music_string,\
    \ \"[o%|%.]+\") do\n        local len = 0\n        for j in string.gmatch(i, \"\
    o\") do\n            len = len + 4\n        end\n        for j in string.gmatch(i,\
    \ \"%|\") do\n            len = len + 2\n        end\n        for j in string.gmatch(i,\
    \ \"%.\") do\n            len = len + 1\n        end\n        table.insert(output,\
    \ len)\n    end\n    return output\nend", "  local beats = {}\n  for char in music_string:gmatch('.')\
    \ do\n    if char == 'o' then\n      table.insert(beats, 4)\n    elseif char ==\
    \ 'o' then\n      table.insert(beats, 2)\n    elseif char == 'o' then\n      table.insert(beats,\
    \ 1)\n    end\n  end\n  return beats\nend", "  \n  local beats = {4, 2, 1}\n \
    \ local characters = {'o', 'o|', '.|'}\n  local result = {}\n  \n  for i = 1,\
    \ #characters do\n    local v = characters[i]\n    local beat = beats[i]\n   \
    \ local k = 1\n    while true do\n      k = string.find(music_string, v, k)\n\
    \      if k == nil then break end\n      table.insert(result, beat)\n      k =\
    \ k + #v\n    end\n  end\n  \n  return result\nend", "    local res = {}\n   \
    \ for note in music_string:gmatch(\"[o.|]+\") do\n        table.insert(res, #note)\n\
    \    end\n    return res\nend", "    local list = {}\n    for i = 1, #music_string\
    \ do\n        if music_string:sub(i, i) == 'o' then\n            table.insert(list,\
    \ 4)\n        elseif music_string:sub(i, i) == '.' then\n            table.insert(list,\
    \ 1)\n        end\n    end\n    return list\nend", "  local duration = {o = 4,\
    \ ['o|'] = 2, ['.|'] = 1}\n  local result = {}\n  local i = 1\n  for note in music_string:gmatch(\"\
    (o|o|%.)|\") do\n    result[i] = duration[note]\n    i = i + 1\n  end\n  return\
    \ result\nend", "    local note_list = {}\n    local last_note = nil\n    for\
    \ note in string.gmatch(music_string, \"|?[%.o]\") do\n        local note_length\
    \ = 0\n        if note == 'o' then\n            note_length = 4\n        elseif\
    \ note == 'o|' then\n            note_length = 2\n        elseif note == '.|'\
    \ then\n            note_length = 1\n        end\n        table.insert(note_list,\
    \ note_length)\n    end\n    return note_list\nend", "    return 0\nend", "  \
    \  local keys = {\n        ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n\
    \    }\n    local duration = 0\n    local beats = {}\n    for key in string.gmatch(music_string,\
    \ '%a+') do\n        duration = duration + keys[key]\n        table.insert(beats,\
    \ duration)\n    end\n    return beats\nend", "  local arr = {}\n  local m1 =\
    \ string.gmatch(music_string, 'o|o')\n  local m2 = string.gmatch(music_string,\
    \ '%.[|]')\n  local m3 = string.gmatch(music_string, '||')\n  local ok, result,\
    \ last_index = pcall(string.find, music_string, '[a-z]+')\n  for result in m1\
    \ do\n    table.insert(arr, 4)\n  end\n  for result in m2 do\n    table.insert(arr,\
    \ 1)\n  end\n  for result in m3 do\n    table.insert(arr, 2)\n  end\n  if not\
    \ ok then\n    return arr\n  end\n  return arr\nend", "    local temp = music_string:gsub('o',\
    \ '4 ')\n    temp = temp:gsub('o|', '2 ')\n    temp = temp:gsub('.|', '1 ')\n\
    \    return temp\nend", "  error(\"Not implemented\")\nend", "  local durations\
    \ = {}\n  -- YOUR CODE HERE\n  local i = 1\n  while i <= string.len(music_string)\
    \ do\n    local c = string.sub(music_string, i, i)\n    if c == 'o' then\n   \
    \   table.insert(durations, 4)\n      i = i + 1\n    elseif c == 'o' then\n  \
    \    table.insert(durations, 2)\n      i = i + 2\n    elseif c == '.' then\n \
    \     table.insert(durations, 1)\n      i = i + 2\n    else\n      i = i + 1\n\
    \    end\n  end\n  return durations\nend", "  local notes = {'o', 'o|', '.|'}\n\
    \  local beats = {4, 2, 1}\n  local length = 0\n  local result = {}\n  for i=1,\
    \ #music_string do\n    local current_char = music_string:sub(i, i)\n    if current_char\
    \ == '\\n' then\n      result[#result + 1] = length\n      length = 0\n    else\n\
    \      local beat = beats[notes[current_char]]\n      if beat then\n        length\
    \ = length + beat\n      end\n    end\n  end\n  return result\nend", "    local\
    \ beats = { }\n    for w in music_string:gmatch(\"%S+\") do\n        if w == 'o'\
    \ then\n            table.insert(beats, 4)\n        elseif w == 'o|' then\n  \
    \          table.insert(beats, 2)\n        elseif w == '.|' then\n           \
    \ table.insert(beats, 1)\n        end\n    end\n    return beats\nend", "    local\
    \ notes = {}\n    local last = 1\n    for beat in string.gmatch(music_string,\
    \ '.') do\n        if beat == '.' then\n            table.insert(notes, 1)\n \
    \       elseif beat == 'o' then\n            table.insert(notes, 4)\n        elseif\
    \ beat == '|' then\n            table.insert(notes, last * 2)\n        end\n \
    \       last = notes[#notes]\n    end\n    return notes\nend", "    local result\
    \ = {}\n    for i = 1, #music_string do\n        if string.sub(music_string, i,\
    \ i) == 'o' then\n            table.insert(result, 4)\n        elseif string.sub(music_string,\
    \ i, i) == '.' then\n            table.insert(result, 1)\n        end\n    end\n\
    \    return result\nend", "\tlocal output = {}\n\tfor char in music_string:gmatch(\"\
    .\") do\n\t\tif char == 'o' then\n\t\t\ttable.insert(output, 4)\n\t\telseif char\
    \ == 'o' then\n\t\t\ttable.insert(output, 2)\n\t\telseif char == 'o' then\n\t\t\
    \ttable.insert(output, 1)\n\t\tend\n\tend\n\treturn output\nend", "  local beats\
    \ = {}\n  local tmp, res = music_string:gsub('%.', ' ')\n  if res ~= 0 then\n\
    \    local notes = tmp:split(' ')\n    for i, n in ipairs(notes) do\n      if\
    \ n == 'o' then\n        table.insert(beats, 4)\n      elseif n == 'o|' then\n\
    \        table.insert(beats, 2)\n      elseif n == '.|' then\n        table.insert(beats,\
    \ 1)\n      end\n    end\n  end\n  return beats\nend", "\tlocal beats = {4, 2,\
    \ 1}\n\tlocal notes = {}\n\tfor i = 1, #music_string do\n\t\tlocal char = music_string:sub(i,\
    \ i)\n\t\tif char == 'o' then\n\t\t\ttable.insert(notes, beats[1])\n\t\telseif\
    \ char == '.' then\n\t\t\ttable.insert(notes, beats[3])\n\t\telseif char == '|'\
    \ then\n\t\t\ttable.insert(notes, 0)\n\t\tend\n\tend\n\treturn notes\nend", " \
    \   local beats = {}\n    local count = 0\n    for note in string.gmatch(music_string,\
    \ \"%S+\") do\n        if note == \"o\" then\n            count = count + 4\n\
    \        elseif note == \"o|\" then\n            count = count + 2\n        elseif\
    \ note == \".|\" then\n            count = count + 1\n        end\n        table.insert(beats,\
    \ count)\n    end\n    return beats\nend", "  local beats = {}\n  local beat_pattern\
    \ = '[' .. string.char(127) .. '|.]'\n  for beat in string.gmatch(music_string,\
    \ beat_pattern) do\n    if beat == 'o' then\n      table.insert(beats, 4)\n  \
    \  elseif beat == 'o|' then\n      table.insert(beats, 2)\n    elseif beat ==\
    \ '.|' then\n      table.insert(beats, 1)\n    end\n  end\n  return beats\nend",
  "    -- TODO\n    -- Write your code here\nend", "\t-- your code here\n\tlocal list\
    \ = {}\n\tlocal list1 = {}\n\tfor i = 1,#music_string do\n\t\tif music_string:sub(i,i)\
    \ == 'o' then\n\t\t\tlist[i] = 'o'\n\t\telseif music_string:sub(i,i) == '|' then\n\
    \t\t\tlist[i] = '|'\n\t\telseif music_string:sub(i,i) == '.' then\n\t\t\tlist[i]\
    \ = '.'\n\t\tend\n\tend\n\tif list[1] == 'o' then\n\t\ttable.insert(list1,4)\n\
    \telseif list[1] == '.' then\n\t\ttable.insert(list1,1)\n\tend\n\tfor i = 2,#list\
    \ do\n\t\tif list[i] == 'o' then\n\t\t\ttable.insert(list1,4)\n\t\telseif list[i]\
    \ == '.' then\n\t\t\ttable.insert(list1,1)\n\t\tend\n\tend\n\treturn list1\nend",
  "  local beats = {}\n  local current_beat = 1\n  for i = 1, #music_string do\n \
    \   local char = music_string:sub(i, i)\n    if char == 'o' then\n      beats[current_beat]\
    \ = 4\n      current_beat = current_beat + 1\n    elseif char == 'o' then\n  \
    \    beats[current_beat] = 2\n      current_beat = current_beat + 1\n    elseif\
    \ char == 'o' then\n      beats[current_beat] = 1\n      current_beat = current_beat\
    \ + 1\n    end\n  end\n  return beats\nend", "  local beats = {}\n  for beat in\
    \ music_string:gmatch('.') do\n    if beat == 'o' then\n      table.insert(beats,\
    \ 4)\n    elseif beat == 'o' then\n      table.insert(beats, 2)\n    elseif beat\
    \ == '.' then\n      table.insert(beats, 1)\n    end\n  end\n  return beats\n\
    end", "\tlocal result = {}\n\tlocal i = 1\n\twhile i <= #music_string do\n\t\t\
    local char = music_string:sub(i, i)\n\t\tif char == 'o' then\n\t\t\ttable.insert(result,\
    \ 4)\n\t\t\ti = i + 1\n\t\telseif char == 'o' and music_string:sub(i + 1, i +\
    \ 1) == '|' then\n\t\t\ttable.insert(result, 2)\n\t\t\ti = i + 2\n\t\telseif char\
    \ == '.' and music_string:sub(i + 1, i + 1) == '|' then\n\t\t\ttable.insert(result,\
    \ 1)\n\t\t\ti = i + 2\n\t\telse\n\t\t\terror(\"Unrecognized character: \" .. char)\n\
    \t\tend\n\tend\n\treturn result\nend", "  local i = 1 -- current position in input\
    \ string (`music_string`)\n  local len = #music_string\n  local beats = {} --\
    \ contains output of this function (ints describing how many beats does each note\
    \ last)\n  local note\n  local note_len\n  local is_rest", "\tlocal notes = {}\n\
    \tfor note in music_string:gmatch('.') do\n\t\tif note == 'o' then\n\t\t\ttable.insert(notes,\
    \ 4)\n\t\telseif note == 'o' then\n\t\t\ttable.insert(notes, 2)\n\t\telseif note\
    \ == '.' then\n\t\t\ttable.insert(notes, 1)\n\t\tend\n\tend\n\treturn notes\n\
    end", "   local music_string = music_string:gsub(\"%s+\", \"\")\n   local beats\
    \ = {}\n   for i = 1, #music_string do\n      if (music_string:sub(i, i) == 'o')\
    \ then\n         table.insert(beats, 4)\n      elseif (music_string:sub(i, i)\
    \ == '|') then\n         table.insert(beats, 2)\n      elseif (music_string:sub(i,\
    \ i) == '.') then\n         table.insert(beats, 1)\n      end\n   end\n   return\
    \ beats\nend", "    local beats = {4, 2, 1}\n    local result = {}\n    for line\
    \ in music_string:gmatch(\"[^\\n]+\") do\n        for duration, notestring in\
    \ line:gmatch(\"([o%.])(|*)\") do\n            result[#result + 1] = beats[#notestring\
    \ + 1]\n        end\n    end\n    return result\nend", "    local duration = {\n\
    \        ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    local\
    \ result = {}\n    local notes = music_string:split(' ')\n    for _, note in ipairs(notes)\
    \ do\n        table.insert(result, duration[note])\n    end\n    return result\n\
    end", "    local result = {}\n    local start = 1\n    local length = string.len(music_string)\n\
    \    while start <= length do\n        local stop = start\n        while stop\
    \ <= length and string.sub(music_string, stop, stop) ~= '|' do\n            stop\
    \ = stop + 1\n        end\n        local note = string.sub(music_string, start,\
    \ stop - 1)\n        if note == 'o' then\n            table.insert(result, 4)\n\
    \        elseif note == 'o' then\n            table.insert(result, 2)\n      \
    \  elseif note == '.' then\n            table.insert(result, 1)\n        end\n\
    \        start = stop + 1\n    end\n    return result\nend", "  local  split_notes\
    \ = {}\n  local last = 1\n  local i = 1\n  while i <= #music_string do\n    if\
    \ music_string:find(\"o\", i) == i then\n      split_notes[#split_notes + 1] =\
    \ 4\n      i = i + 1\n    elseif music_string:find(\"o|\", i) == i then\n    \
    \  split_notes[#split_notes + 1] = 2\n      i = i + 2\n    elseif music_string:find(\"\
    .|\", i) == i then\n      split_notes[#split_notes + 1] = 1\n      i = i + 2\n\
    \    else\n      error(\"Invalid input\")\n    end\n  end\n  return split_notes\n\
    end", "\tlocal r = {}\n\tlocal i = 1\n\twhile i <= #music_string do\n\t\tlocal\
    \ char = music_string:sub(i, i)\n\t\tif char == 'o' then\n\t\t\tr[#r + 1] = 4\n\
    \t\t\ti = i + 1\n\t\telseif char == 'o' then\n\t\t\tr[#r + 1] = 2\n\t\t\ti = i\
    \ + 2\n\t\telseif char == '.' then\n\t\t\tr[#r + 1] = 1\n\t\t\ti = i + 2\n\t\t\
    else\n\t\t\terror(\"Unknown character '\" .. char .. \"' at position \" .. i)\n\
    \t\tend\n\tend\n\treturn r\nend", "    local music_array = {}\n    for i in string.gmatch(music_string,\
    \ \".\") do\n        if i == 'o' then\n            table.insert(music_array,4)\n\
    \        elseif i == 'o' then\n            table.insert(music_array,2)\n     \
    \   elseif i == 'o' then\n            table.insert(music_array,1)\n        end\n\
    \    end\n    return music_array\nend", "    local res = {}\n    local pos = 1\n\
    \    while pos <= string.len(music_string) do\n        if music_string:sub(pos,\
    \ pos) == 'o' then\n            table.insert(res, 4)\n            pos = pos +\
    \ 1\n        elseif music_string:sub(pos, pos + 1) == 'o|' then\n            table.insert(res,\
    \ 2)\n            pos = pos + 2\n        elseif music_string:sub(pos, pos + 1)\
    \ == '.|' then\n            table.insert(res, 1)\n            pos = pos + 2\n\
    \        else\n            error('Unexpected symbol at pos ' .. pos)\n       \
    \ end\n    end\n    return res\nend", "    local duration = {\n        ['o'] =\
    \ 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    local result = {}\n\
    \    for note in music_string:gmatch(\"%S+\") do\n        table.insert(result,\
    \ duration[note])\n    end\n    return result\nend", "  local music_string = string.gsub(music_string,\
    \ \"%s+\", \"\")\n  local beats = {}\n  local length = string.len(music_string)\n\
    \  local idx = 1\n  while idx <= length do\n    local char = string.sub(music_string,\
    \ idx, idx)\n    if char == 'o' then\n      table.insert(beats, 4)\n      idx\
    \ = idx + 1\n    elseif char == 'o' then\n      table.insert(beats, 2)\n     \
    \ idx = idx + 2\n    elseif char == '.' then\n      table.insert(beats, 1)\n \
    \     idx = idx + 2\n    end\n  end\n  return beats\nend", "  local bars = music_string:split('\\\
    n')\n  local result = {}\n  for _, bar in ipairs(bars) do\n    for note in bar:gmatch('.')\
    \ do\n      table.insert(result, ({o = 4, ['o|'] = 2, ['.|'] = 1})[note])\n  \
    \  end\n  end\n  return result\nend", "    local splitted = split(music_string,\
    \ '|')\n    local beats = {}\n    for _, symbol in ipairs(splitted) do\n     \
    \   if symbol == 'o' then\n            table.insert(beats, 4)\n        elseif\
    \ symbol == 'o' then\n            table.insert(beats, 2)\n        elseif symbol\
    \ == '.' then\n            table.insert(beats, 1)\n        end\n    end\n    return\
    \ beats\nend", "    local result = {}\n    for i = 1, string.len(music_string)\
    \ do\n        local char = string.sub(music_string, i, i)\n        if char ==\
    \ 'o' then\n            table.insert(result, 4)\n        elseif char == 'o' then\n\
    \            table.insert(result, 2)\n        elseif char == '.' then\n      \
    \      table.insert(result, 1)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    local beats = 0\n    local notes = music_string:split('\
    \ ')\n    for i = 1, #notes do\n        local note = notes[i]\n        local char\
    \ = note:sub(1, 1)\n        if char == 'o' then\n            beats = 4\n     \
    \   elseif char == '.' then\n            beats = 1\n        end\n        if note:sub(2,\
    \ 2) == '|' then\n            beats = beats / 2\n        end\n        table.insert(result,\
    \ beats)\n    end\n    return result\nend", "    local beats = {}\n    local duration_map\
    \ = {\n        ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n  \
    \  for match in string.gmatch(music_string, '%S+') do\n        table.insert(beats,\
    \ duration_map[match])\n    end\n    return beats\nend", "  -- Your implementation\
    \ goes here\n  local res = {}\n  for i = 1, #music_string do\n    if music_string:sub(i,\
    \ i) == 'o' then\n      table.insert(res, 4)\n    elseif music_string:sub(i, i)\
    \ == '.' then\n      table.insert(res, 1)\n    end\n  end\n  return res\nend",
  "    local result = {}\n    for w in string.gmatch(music_string, \".\") do\n   \
    \     if w == 'o' then\n            table.insert(result, 4)\n        elseif w\
    \ == 'o' or w == '|' then\n            table.insert(result, 2)\n        elseif\
    \ w == '.' or w == '|' then\n            table.insert(result, 1)\n        end\n\
    \    end\n    return result\nend", "  local notes = {}\n  for note in music_string:gmatch('.')\
    \ do\n    if note == 'o' then\n      table.insert(notes, 4)\n    elseif note ==\
    \ 'o' then\n      table.insert(notes, 2)\n    elseif note == '.' then\n      table.insert(notes,\
    \ 1)\n    end\n  end\n  return notes\nend", "  local result = {}\n  for token\
    \ in string.gmatch(music_string, '%S+') do\n    if token == 'o' then\n      table.insert(result,\
    \ 4)\n    elseif token == 'o|' then\n      table.insert(result, 2)\n    elseif\
    \ token == '.|' then\n      table.insert(result, 1)\n    end\n  end\n  return\
    \ result\nend", "    local result = {}\n    -- ...\n    return result\nend", " \
    \   local beats = {}\n    local beat = 0\n    for i = 1, string.len(music_string)\
    \ do\n        local c = string.sub(music_string, i, i)\n        if c == 'o' then\n\
    \            beat = 4\n        elseif c == 'o' then\n            beat = 2\n  \
    \      elseif c == 'o' then\n            beat = 1\n        elseif c == '|' then\n\
    \            table.insert(beats, beat)\n            beat = 0\n        end\n  \
    \  end\n    table.insert(beats, beat)\n    return beats\nend", "    local notes\
    \ = {}\n    local note_idx = 1\n    local current_note = {}\n    local note_index\
    \ = {}\n    for i = 1, #music_string do\n        if music_string:sub(i, i) ==\
    \ '.' then\n            if current_note[#current_note] == '.' then\n         \
    \       current_note[#current_note] = '..'\n            else\n               \
    \ current_note[#current_note] = '.'\n            end\n        elseif music_string:sub(i,\
    \ i) == 'o' then\n            if current_note[#current_note] == 'o' then\n   \
    \             current_note[#current_note] = 'oo'\n            else\n         \
    \       current_note[#current_note] = 'o'\n            end\n        elseif music_string:sub(i,\
    \ i) == '|' then\n            if current_note[#current_note] == '|' then\n   \
    \             current_note[#current_note] = '||'\n            else\n         \
    \       current_note[#current_note] = '|'\n            end\n        elseif music_string:sub(i,\
    \ i) == ' ' then\n            note_index[note_idx] = current_note\n          \
    \  note_idx = note_idx + 1\n            current_note = {}\n        end\n    end\n\
    \    note_index[note_idx] = current_note\n    note_idx = note_idx + 1\n    --\
    \ print(note_index)\n    for i = 1, #note_index do\n        for j = 1, #note_index[i]\
    \ do\n            if note_index[i][j] == 'oo' then\n                notes[#notes\
    \ + 1] = 4\n            elseif note_index[i][j] == 'o|' then\n               \
    \ notes[#notes + 1] = 2\n            elseif note_index[i][j] == '.|' then\n  \
    \              notes[#notes + 1] = 1\n            end\n        end\n    end\n\
    \    return notes\nend", "  local result = {}\n  for line in music_string:gmatch(\"\
    [^\\n]+\") do\n    for beat in line:gmatch(\"o\") do\n      table.insert(result,\
    \ 4)\n    end\n    for beat in line:gmatch(\"o|\") do\n      table.insert(result,\
    \ 2)\n    end\n    for beat in line:gmatch(\".|\") do\n      table.insert(result,\
    \ 1)\n    end\n  end\n  return result\nend", "\t-- write your code here\n\t--\
    \ return a table with list of integers, each int representing a number of beats\n\
    end", "    local parsed_music = {}\n    -- TODO: implement this function\n   \
    \ return parsed_music\nend", "  local result = {}\n  local dur = 0\n  local idx\
    \ = 1\n  while (idx < music_string:len()) do\n    local c = music_string:sub(idx,\
    \ idx)\n    if (c == 'o') then\n      dur = 4\n    elseif (c == '.') then\n  \
    \    dur = 1\n    else\n      error(\"Unknown character '\" .. c .. \"'\")\n \
    \   end\n    if (music_string:sub(idx + 1, idx + 1) == '|') then\n      dur =\
    \ dur / 2\n      idx = idx + 1\n    end\n    table.insert(result, dur)\n    idx\
    \ = idx + 1\n  end\n  return result\nend", "  error(\"Not implemented yet\")\n\
    end", "\tlocal ret = {}\n\tlocal char = {}\n\tlocal beat = 1\n\tlocal prev_beat\
    \ = 1\n\tfor c in music_string:gmatch(\".\") do\n\t\tif c == '.' then\n\t\t\t\
    char[beat] = (char[beat] or 0) + 1\n\t\telseif c == '|' then\n\t\t\tbeat = beat\
    \ + 1\n\t\telseif c == 'o' then\n\t\t\tif not char[beat] then\n\t\t\t\tchar[beat]\
    \ = 4\n\t\t\telse\n\t\t\t\tchar[beat] = char[beat] + 4\n\t\t\tend\n\t\tend\n\t\
    end\n\tfor beat, c in pairs(char) do\n\t\tif beat > prev_beat then\n\t\t\tfor\
    \ i = 1, beat - prev_beat do\n\t\t\t\ttable.insert(ret, 0)\n\t\t\tend\n\t\tend\n\
    \t\ttable.insert(ret, c)\n\t\tprev_beat = beat\n\tend\n\treturn ret\nend", " \
    \   local prev = \".\"\n    local len = 1\n    local acc = {}\n    for i = 1,\
    \ #music_string do\n        local next = music_string:sub(i, i)\n        if next\
    \ == '|' then\n            if prev == 'o' then\n                acc[#acc + 1]\
    \ = len * 4\n            elseif prev == '.' then\n                acc[#acc + 1]\
    \ = len\n            end\n            len = 1\n        else\n            len =\
    \ len + 1\n        end\n        prev = next\n    end\n    if prev == 'o' then\n\
    \        acc[#acc + 1] = len * 4\n    elseif prev == '.' then\n        acc[#acc\
    \ + 1] = len\n    end\n    return acc\nend", "\tlocal beats = {}\n\tlocal beat_count\
    \ = 0\n\tfor beat in string.gmatch(music_string, '[o.|]+') do\n\t\ttable.insert(beats,\
    \ beat_count)\n\t\tif beat == 'o' then\n\t\t\tbeat_count = beat_count + 4\n\t\t\
    elseif beat == 'o|' then\n\t\t\tbeat_count = beat_count + 2\n\t\telseif beat ==\
    \ '.|' then\n\t\t\tbeat_count = beat_count + 1\n\t\tend\n\tend\n\treturn beats\n\
    end", "    local res = {}\n    local beats = {\n        ['o'] = 4,\n        ['o|']\
    \ = 2,\n        ['.|'] = 1\n    }\n    music_string:gsub('[o|.]+', function(note)\n\
    \        if beats[note] then\n            table.insert(res, beats[note])\n   \
    \     end\n    end)\n    return res\nend", "    local music_list = {}\n    for\
    \ i = 1,#music_string do\n        local char = music_string:sub(i,i)\n       \
    \ if char == 'o' then table.insert(music_list,4)\n        elseif char == '.' then\
    \ table.insert(music_list,1)\n        elseif char == '|' then table.insert(music_list,-1)\n\
    \        end\n    end\n    return music_list\nend", "\tlocal notes = string_gmatch(music_string,\
    \ 'o|o|%.[|]')\n\tlocal beats = {}\n\tfor note in notes do\n\t\tbeats[#beats +\
    \ 1] = 1 + (string_find(note, '|') ~= nil and 2 or 0)\n\tend\n\treturn beats\n\
    end", "    local beats = { 1, 1, 2, 4 }\n    local ret = {}\n    local index =\
    \ 1\n    for i=1, #music_string do\n        local ch = music_string:sub(i, i)\n\
    \        if ch == 'o' or ch == '.' then\n            table.insert(ret, beats[index])\n\
    \            index = index + 1\n        elseif ch == '|' then\n            index\
    \ = 1\n        end\n    end\n    return ret\nend", "    local cursor = 1\n   \
    \ local output = {}\n    local beats = { o = 4, o_ = 2, _o = 2, _o_ = 1, o__ =\
    \ 1, __o = 1, __o_ = 0.5, _o__ = 0.5, o___ = 0.25, _o___ = 0.125, __o__ = 0.125,\
    \ o____ = 0.0625, _o____ = 0.03125, __o___ = 0.03125, o_____ = 0.015625, _o_____\
    \ = 0.0078125, __o____ = 0.0078125, o______ = 0.00390625, _o______ = 0.001953125,\
    \ __o_____ = 0.001953125, o_______ = 0.0009765625, _o_______ = 0.00048828125,\
    \ __o______ = 0.00048828125, o________ = 0.000244140625, _o________ = 0.0001220703125,\
    \ __o_______ = 0.0001220703125, o_________ = 0.00006103515625, _o_________ = 0.000030517578125,\
    \ __o________ = 0.000030517578125, o__________ = 0.0000152587890625, _o__________\
    \ = 0.00000762939453125, __o_________ = 0.00000762939453125, o___________ = 0.000003814697265625,\
    \ _o___________ = 0.0000019073486328125, __o__________ = 0.0000019073486328125,\
    \ o____________ = 0.00000095367431640625, _o____________ = 0.000000476837158203125,\
    \ __o___________ = 0.000000476837158203125, o_____________ = 0.0000002384185791015625,\
    \ _o_____________ = 0.00000011920928955078125, __o____________ = 0.00000011920928955078125,\
    \ o______________ = 0.000000059604644775390625, _o______________ = 0.0000000298023223876953125,\
    \ __o_____________ = 0.0000000298023223876953125, o_______________ = 0.000000",
  "\tlocal beats = {4, 2, 1}\n\tlocal values = {}\n\tlocal i = 1\n\tfor note in string.gmatch(music_string,\
    \ \"[%a|]\") do\n\t\tvalues[i] = beats[#note]\n\t\ti = i + 1\n\tend\n\treturn\
    \ values\nend", "    local beats = {}\n    for beat in music_string:gmatch(\"\
    [o.|]+\") do\n        local chars = {}\n        for char in beat:gmatch(\".\"\
    ) do\n            table.insert(chars, char)\n        end\n        table.insert(beats,\
    \ #chars)\n    end\n    return beats\nend", "\t-- TODO: implement this function\n\
    \tlocal res = {}\n\tlocal i = 1\n\twhile true do\n\t\tlocal char = string.sub(music_string,\
    \ i, i)\n\t\tlocal beats = 1\n\t\tif char == 'o' then\n\t\t\tbeats = 4\n\t\t\t\
    i = i + 1\n\t\telseif char == 'o' then\n\t\t\tbeats = 2\n\t\t\ti = i + 2\n\t\t\
    elseif char == '.' then\n\t\t\tbeats = 1\n\t\t\ti = i + 2\n\t\telse\n\t\t\treturn\
    \ res\n\t\tend\n\t\ttable.insert(res, beats)\n\tend\nend", "\tlocal music_table\
    \ = {}\n\tfor i in string.gmatch(music_string, \"o[|]?\") do\n\t\tif i == \"o\"\
    \ then\n\t\t\ttable.insert(music_table, 4)\n\t\telseif i == \"o|\" then\n\t\t\t\
    table.insert(music_table, 2)\n\t\tend\n\tend\n\treturn music_table\nend", "  \
    \  local result = {}\n    local length_of_note = {\n        o = 4,\n        ['o|']\
    \ = 2,\n        ['.|'] = 1\n    }\n    for i, note in ipairs(utils.split(music_string,\
    \ ' ')) do\n        result[i] = length_of_note[note]\n    end\n    return result\n\
    end", "   local beat_table = {}\n   local beat_count = 0\n   for i=1,#music_string\
    \ do\n      local c = music_string:sub(i,i)\n      if c == 'o' then\n        \
    \ beat_count = beat_count + 4\n      elseif c == 'o' then\n         beat_count\
    \ = beat_count + 2\n      elseif c == '.' then\n         beat_count = beat_count\
    \ + 1\n      elseif c == '|' then\n         beat_table[#beat_table+1] = beat_count\n\
    \         beat_count = 0\n      end\n   end\n   beat_table[#beat_table+1] = beat_count\n\
    \   return beat_table\nend", "  local beats = {4, 2, 1}\n  local music = {}\n\
    \  local b = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n \
    \ local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local\
    \ p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c\
    \ = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p =\
    \ 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n\
    \  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n \
    \ local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local\
    \ p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c\
    \ = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p =\
    \ 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n\
    \  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n \
    \ local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local\
    \ p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c\
    \ = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p =\
    \ 0\n  local c = 0\n  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n\
    \  local p = 0\n  local c = 0\n  local p = 0\n  local c = 0\n ", "    local music_table\
    \ = {}\n    local current_beat = 1\n    for i = 1, #music_string do\n        if\
    \ music_string:sub(i, i) == 'o' then\n            music_table[current_beat] =\
    \ 4\n            current_beat = current_beat + 1\n        elseif music_string:sub(i,\
    \ i) == 'o' and music_string:sub(i + 1, i + 1) == '|' then\n            music_table[current_beat]\
    \ = 2\n            current_beat = current_beat + 1\n            i = i + 1\n  \
    \      elseif music_string:sub(i, i) == '.' and music_string:sub(i + 1, i + 1)\
    \ == '|' then\n            music_table[current_beat] = 1\n            current_beat\
    \ = current_beat + 1\n            i = i + 1\n        end\n    end\n    return\
    \ music_table\nend", "    -- YOUR CODE HERE\n    local notes={'o','o|','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o','o','|','o','o','|','.','.','|','.','.','|','o",
  "  local notes = {}\n  for i=1,#music_string do\n    local symbol = music_string:sub(i,i)\n\
    \    if symbol == 'o' then\n      table.insert(notes, 4)\n    elseif symbol ==\
    \ '.' then\n      table.insert(notes, 1)\n    elseif symbol == '|' then\n    \
    \  table.insert(notes, 2)\n    end\n  end\n  return notes\nend", "    return {}\n\
    end", "    return {}\nend", "  return {}\nend", "    local notes = {\n       \
    \ ['o'] = 4,\n        ['o|'] = 2,\n        ['.|'] = 1\n    }\n    local results\
    \ = {}\n    for note in music_string:gmatch(\"[%.o|]+\") do\n        table.insert(results,\
    \ notes[note])\n    end\n    return results\nend", "  local output = {}\n  for\
    \ i in string.gmatch(music_string, '[^ ]+') do\n    local sum = 0\n    for j in\
    \ string.gmatch(i, '[^|]+') do\n      if j == 'o' then\n        sum = sum + 4\n\
    \      elseif j == '.' then\n        sum = sum + 1\n      end\n    end\n    table.insert(output,\
    \ sum)\n  end\n  return output\nend", "    -- ...\nend", "\tlocal t = {}\n\tfor\
    \ beat in music_string:gmatch('[o.|]+') do\n\t\ttable.insert(t, #beat)\n\tend\n\
    \treturn t\nend", "    -- Return a list of beats per notes:\n    return notes\n\
    end", "  local notes = {}\n  local note_lengths = {o = 4, 'o|' = 2, '.|' = 1}\n\
    \  local i = 1\n  while i <= string.len(music_string) do\n    local note = string.sub(music_string,\
    \ i, i + 1)\n    if note_lengths[note] then\n      table.insert(notes, note_lengths[note])\n\
    \      i = i + 2\n    else\n      table.insert(notes, note_lengths[string.sub(music_string,\
    \ i, i)])\n      i = i + 1\n    end\n  end\n  return notes\nend", "  local duration\
    \ = string.gmatch(music_string, \"o|o|.|\")\n  return duration\nend", "    --\
    \ parse music string and return array of numbers of beats each note lasts\n  \
    \  local beats = {1, 2, 4}\n    local current_beat\n    local parsed_music = {}\n\
    \    for i = 1, music_string:len() do\n        if music_string:sub(i, i) == 'o'\
    \ then\n            current_beat = beats[3]\n        elseif music_string:sub(i,\
    \ i) == '.' then\n            current_beat = beats[2]\n        elseif music_string:sub(i,\
    \ i) == '|' then\n            table.insert(parsed_music, current_beat)\n     \
    \   end\n    end\n    return parsed_music\nend", "\tlocal f = string.find\n\t\
    local notes = {\n\t\t[\"o\"] = 4,\n\t\t[\"o|\"] = 2,\n\t\t[\".|\"] = 1,\n\t}\n\
    \tlocal beats = {}\n\tlocal i = 1\n\tlocal n = 0\n\twhile n <= string.len(music_string)\
    \ do\n\t\tlocal note_found = false\n\t\tfor note, beat in pairs(notes) do\n\t\t\
    \tif f(music_string, note, n) == n then\n\t\t\t\ttable.insert(beats, beat)\n\t\
    \t\t\tn = n + string.len(note)\n\t\t\t\tnote_found = true\n\t\t\t\tbreak\n\t\t\
    \tend\n\t\tend\n\t\tif not note_found then\n\t\t\tn = n + 1\n\t\tend\n\tend\n\t\
    return beats\nend", "  local notes = {}\n  local beats = 0\n  for char in music_string:gmatch('.')\
    \ do\n    if char == 'o' then\n      beats = 4\n    elseif char == 'o' then\n\
    \      beats = 2\n    elseif char == '.' then\n      beats = 1\n    elseif char\
    \ == '|' then\n      table.insert(notes, beats)\n      beats = 0\n    end\n  end\n\
    \  return notes\nend", "    local music_chars = {}\n    local last_was_note =\
    \ false\n    local notes = {o = 4, s = 2, l = 1}\n    local beats = {}\n    for\
    \ char in music_string:gmatch(\".\") do\n        if notes[char] then\n       \
    \     if last_was_note then\n                local last_char = music_chars[#music_chars]\n\
    \                local last_note = notes[last_char]\n                local current_note\
    \ = notes[char]\n                if (last_note + current_note) <= 4 then\n   \
    \                 last_note = last_note + current_note\n                    beats[#beats]\
    \ = last_note\n                    music_chars[#music_chars] = music_chars[#music_chars]\
    \ .. char\n                else\n                    table.insert(beats, current_note)\n\
    \                    table.insert(music_chars, char)\n                end\n  \
    \          else\n                table.insert(beats, notes[char])\n          \
    \      table.insert(music_chars, char)\n            end\n            last_was_note\
    \ = true\n        else\n            last_was_note = false\n        end\n    end\n\
    \    return beats\nend", "   local result = {}\n   for i = 1, #music_string do\n\
    \      local current_char = music_string:sub(i, i)\n      if current_char == 'o'\
    \ then\n         result[#result + 1] = 4\n      elseif current_char == '|' then\n\
    \         result[#result + 1] = 2\n      elseif current_char == '.' then\n   \
    \      result[#result + 1] = 1\n      end\n   end\n   return result\nend", " \
    \ local beats = {}\n  local current_beat = 0\n  for char in music_string:gmatch(\"\
    .\") do\n    if char == 'o' then\n      current_beat = current_beat + 4\n    elseif\
    \ char == 'o' or char == '|' then\n      current_beat = current_beat + 2\n   \
    \ elseif char == '.' or char == '|' then\n      current_beat = current_beat +\
    \ 1\n    end\n    table.insert(beats, current_beat)\n  end\n  return beats\nend",
  "    local beats = {4,2,1}\n    local beats_count = 0\n    local result = {}\n \
    \   for i = 1, string.len(music_string) do\n        local c = string.sub(music_string,\
    \ i, i)\n        if c == 'o' then\n            table.insert(result, beats[1])\n\
    \            beats_count = beats_count + beats[1]\n        elseif c == 'o' and\
    \ string.sub(music_string, i+1, i+1) == '|' then\n            table.insert(result,\
    \ beats[2])\n            beats_count = beats_count + beats[2]\n        elseif\
    \ c == '.' and string.sub(music_string, i+1, i+1) == '|' then\n            table.insert(result,\
    \ beats[3])\n            beats_count = beats_count + beats[3]\n        end\n \
    \   end\n    if beats_count ~= 16 then\n        return nil\n    end\n    return\
    \ result\nend", "    local beats = {\n        [\"o\"] = 4,\n        [\"o|\"] =\
    \ 2,\n        [\".|\"] = 1\n    }\n    local result = {}\n    music_string:gsub(\"\
    .\", function(w)\n        local beat = beats[w]\n        if beat then\n      \
    \      table.insert(result, beat)\n        end\n    end)\n    return result\n\
    end", "    local result = {}\n    for beat in music_string:gmatch(\"[.o|]+\")\
    \ do\n        if beat == \"o\" then\n            table.insert(result, 4)\n   \
    \     elseif beat == \"o|\" then\n            table.insert(result, 2)\n      \
    \  elseif beat == \".|\" then\n            table.insert(result, 1)\n        end\n\
    \    end\n    return result\nend", "    local ret = {}\n    local last_value =\
    \ nil\n    for i = 1, #music_string do\n        local val = music_string:sub(i,\
    \ i)\n        if val == 'o' then\n            table.insert(ret, 4)\n        elseif\
    \ val == 'o' and last_value == '|' then\n            table.insert(ret, 2)\n  \
    \      elseif val == '.' and last_value == '|' then\n            table.insert(ret,\
    \ 1)\n        end\n        last_value = val\n    end\n    return ret\nend", " \
    \   local beats = {}\n    local beat = 0\n    for i = 1, #music_string do\n  \
    \      local char = music_string:sub(i, i)\n        if char == 'o' then\n    \
    \        beat = 4\n        elseif char == '|' then\n            table.insert(beats,\
    \ beat)\n            beat = 0\n        elseif char == '.' then\n            beat\
    \ = beat + 1\n        end\n    end\n    return beats\nend", "    local beats =\
    \ {0, 0, 0, 0}\n    local notes = {}\n    local current = 1\n    for note in music_string:gmatch(\"\
    %S+\") do\n        if note == 'o' then\n            for i = current, current +\
    \ 3 do\n                beats[i] = beats[i] + 1\n            end\n           \
    \ current = current + 4\n        elseif note == 'o|' then\n            for i =\
    \ current, current + 1 do\n                beats[i] = beats[i] + 1\n         \
    \   end\n            current = current + 2\n        elseif note == '.|' then\n\
    \            beats[current] = beats[current] + 1\n            current = current\
    \ + 1\n        end\n    end\n    return beats\nend", "  local last_index = 0\n\
    \  local result = {}\n  for i = 1, #music_string do\n    local ch = music_string:sub(i,\
    \ i)\n    if (ch == 'o') then\n      result[#result + 1] = 4\n    elseif (ch ==\
    \ '|') then\n      result[#result + 1] = 2\n    elseif (ch == '.') then\n    \
    \  result[#result + 1] = 1\n    end\n  end\n  return result\nend", "    local\
    \ beats = {}\n    for beat in music_string:gmatch(\"(o|%.[|]*)\") do\n       \
    \ table.insert(beats, beat:len())\n    end\n    return beats\nend", "    -- your\
    \ implementation here\n\tlocal result={}\n\tlocal str_temp=''\n\tlocal length=string.len(music_string)\n\
    \tlocal ch=''\n\tlocal counter=0\n\tlocal index=1\n\t\n\tfor i=1,length do\n\t\
    \tch=string.sub(music_string,i,i)\n\t\tif ch=='o' then\n\t\t\tif i<length then\n\
    \t\t\t\tif string.sub(music_string,i+1,i+1)=='|' then\n\t\t\t\t\tresult[index]=2\n\
    \t\t\t\t\tindex=index+1\n\t\t\t\t\ti=i+1\n\t\t\t\telse\n\t\t\t\t\tresult[index]=4\n\
    \t\t\t\t\tindex=index+1\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tresult[index]=4\n\t\t\
    \t\tindex=index+1\n\t\t\tend\n\t\telseif ch=='.' then\n\t\t\tif i<length then\n\
    \t\t\t\tif string.sub(music_string,i+1,i+1)=='|' then\n\t\t\t\t\tresult[index]=1\n\
    \t\t\t\t\tindex=index+1\n\t\t\t\t\ti=i+1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\
    end\n\t\n\treturn result\nend", "    local notes = {}\n    local note_str = \"\
    \"\n    for i = 1, #music_string do\n        local c = music_string:sub(i, i)\n\
    \        if c == \"o\" or c == \".\" then\n            note_str = note_str ..\
    \ c\n        elseif c == \"|\" then\n            table.insert(notes, tonumber(note_str))\n\
    \            note_str = \"\"\n        end\n    end\n    return notes\nend", " \
    \ local beats_string = music_string:gsub('o', '4'):gsub('o|', '2'):gsub('.|',\
    \ '1')\n  local beats = {}\n  for beat in beats_string:gmatch('%d') do\n    table.insert(beats,\
    \ tonumber(beat))\n  end\n  return beats\nend", "  local output = {}\n  for note\
    \ in music_string:gmatch(\".\") do\n    if note == 'o' then\n      table.insert(output,\
    \ 4)\n    elseif note == 'o' then\n      table.insert(output, 2)\n    elseif note\
    \ == '.' then\n      table.insert(output, 1)\n    end\n  end\n  return output\n\
    end", "    local result = {}\n    local notes = {o = 4, oo = 8, ooo = 12, oooo\
    \ = 16, ooooo = 20, oooooo = 24, ooooooo = 28, oooooooo = 32, oooooooo = 36, ooooooooo\
    \ = 40,\n                   'o|' = 2, 'oo|' = 4, 'ooo|' = 6, 'oooo|' = 8, 'ooooo|'\
    \ = 10, 'oooooo|' = 12, 'ooooooo|' = 14, 'oooooooo|' = 16, 'ooooooooo|' = 18,\
    \ 'oooooooooo|' = 20,\n                   '.|' = 1, '..|' = 2, '...|' = 3, '....|'\
    \ = 4, '.....|' = 5, '......|' = 6, '.......|' = 7, '........|' = 8, '.........|'\
    \ = 9, '..........|' = 10}\n    for i in string.gmatch(music_string, '%S+') do\n\
    \        result[#result + 1] = notes[i]\n    end\n    return result\nend", " \
    \   -- note: the bottom implementation is more complex, and may not be suitable\
    \ for a beginner.\n    --       I suggest that you implement the top one first,\
    \ and only then consider the bottom one.\n    local beats = {}\n    for note in\
    \ music_string:gmatch('[o.]') do\n        table.insert(beats, { ['o'] = 4, ['.']\
    \ = 1 }[note])\n    end\n    return beats\nend", "\tlocal result = {}\n\tfor note\
    \ in music_string:gmatch(\".\") do\n\t\tif note == 'o' then\n\t\t\ttable.insert(result,\
    \ 4)\n\t\telseif note == 'o' then\n\t\t\ttable.insert(result, 2)\n\t\telseif note\
    \ == '.' then\n\t\t\ttable.insert(result, 1)\n\t\tend\n\tend\n\treturn result\n\
    end", "    -- TODO: Implementation goes here.\n    -- Tips:\n    -- 1. You can\
    \ use ipairs() to iterate over all elements of a table.\n    -- 2. Use table.insert()\
    \ to add a new element to the end of a table.\n    -- 3. string.sub() lets you\
    \ access a part of a string.\n    -- 4. In Lua, 'x' == \"x\" is true\n    -- 5.\
    \ You can use tonumber() to convert a string to a number.\n    local out = {}\n\
    \    local n = 0\n    local music = {}\n    while n <= #music_string do\n    \
    \    local letter = string.sub(music_string, n, n)\n        if letter == 'o' then\n\
    \            table.insert(music, 4)\n        elseif letter == '.' then\n     \
    \       table.insert(music, 1)\n        elseif letter == '|' then\n          \
    \  table.insert(music, 2)\n        end\n        n = n + 1\n    end\n    for i,\
    \ note in ipairs(music) do\n        if i == 1 then\n            table.insert(out,\
    \ note)\n        else\n            if music[i - 1] == 1 then\n               \
    \ table.insert(out, note)\n            else\n                out[#out] = out[#out]\
    \ + note\n            end\n        end\n    end\n    return out\nend", "  return\
    \ nil\nend", "    local duration = {o = 4, ['o|'] = 2, ['.|'] = 1}\n    local\
    \ res = {}\n    for line in music_string:gmatch('([^\\n]+)') do\n        for note\
    \ in line:gmatch('([%a%.|]+)') do\n            table.insert(res, duration[note])\n\
    \        end\n    end\n    return res\nend", "    local beats = {}\n    local\
    \ note = \"o\"\n    local i = 1\n    local note_count = 0\n    for note in string.gmatch(music_string,\
    \ \".\") do\n        if note == \"o\" then\n            note_count = 4\n     \
    \   elseif note == \"|\" then\n            note_count = note_count / 2\n     \
    \   elseif note == \".\" then\n            note_count = 1\n        end\n     \
    \   beats[i] = note_count\n        i = i + 1\n    end\n    return beats\nend",
  "    local notes = {}\n    for note in music_string:gmatch(\".\") do\n        if\
    \ note == 'o' then\n            table.insert(notes, 4)\n        elseif note ==\
    \ 'o' then\n            table.insert(notes, 2)\n        elseif note == '.' then\n\
    \            table.insert(notes, 1)\n        end\n    end\n    return notes\n\
    end", "    local result = {}\n    local count = 1\n    local temp = \"\"\n   \
    \ for c in music_string:gmatch(\".\") do\n        if c == 'o' then\n         \
    \   result[count] = 4\n            count = count + 1\n        elseif c == '|'\
    \ then\n            if temp == \"o\" then\n                result[count - 1] =\
    \ 2\n            elseif temp == \".\" then\n                result[count - 1]\
    \ = 1\n            end\n            temp = \"\"\n        else\n            temp\
    \ = temp .. c\n        end\n    end\n    return result\nend", "   local beats\
    \ = {}\n   for _, char in ipairs(music_string:gmatch(\".\")) do\n      if char\
    \ == 'o' then\n         table.insert(beats, 4)\n      elseif char == 'o' or char\
    \ == '.' then\n         table.insert(beats, 2)\n      elseif char == '.' then\n\
    \         table.insert(beats, 1)\n      end\n   end\n   return beats\nend", " \
    \ -- Feel free to modify this function to help you implement the task.\n  -- Since\
    \ this is a simple module, and there are no fancy data structures or anything,\n\
    \  -- I think it's OK to just write the whole function in a monolithic style.",
  "  local notes = {}\n  for note in music_string:gmatch(\"[o.|]+\") do\n    if note\
    \ == \"o\" then\n      table.insert(notes, 4)\n    elseif note == \"o|\" then\n\
    \      table.insert(notes, 2)\n    elseif note == \".|\" then\n      table.insert(notes,\
    \ 1)\n    end\n  end\n  return notes\nend", "  local beats = {}\n  for beat in\
    \ music_string:gmatch(\".\") do\n    if beat == 'o' then\n      table.insert(beats,\
    \ 4)\n    elseif beat == 'o' then\n      table.insert(beats, 2)\n    elseif beat\
    \ == '.' then\n      table.insert(beats, 1)\n    end\n  end\n  return beats\n\
    end", "\t-- TODO: make this function actually parse the music_string and return\
    \ the beats in the song.\n\t-- Use luajit's string manipulation functions.\n\t\
    -- (Read about them here: http://luajit.org/ext_ffi_api.html#lua_CFunction)\n\t\
    -- (Specifically, read about lua_createtable here: http://luajit.org/ext_ffi_api.html#lua_createtable)\n\
    \t-- (Specifically, read about lua_setindex here: http://luajit.org/ext_ffi_api.html#lua_setindex)\n\
    \t-- (Specifically, read about lua_getindex here: http://luajit.org/ext_ffi_api.html#lua_getindex)\n\
    \t-- (Specifically, read about lua_gettop here: http://luajit.org/ext_ffi_api.html#lua_gettop)\n\
    \t-- (Specifically, read about lua_settop here: http://luajit.org/ext_ffi_api.html#lua_settop)\n\
    \t-- (Specifically, read about lua_pushlstring here: http://luajit.org/ext_ffi_api.html#lua_pushlstring)\n\
    \t-- (Specifically, read about lua_pcall here: http://luajit.org/ext_ffi_api.html#lua_pcall)\n\
    \t-- (Specifically, read about lua_isfunction here: http://luajit.org/ext_ffi_api.html#lua_isfunction)\n\
    \t-- (Specifically, read about lua_pushcfunction here: http://luajit.org/ext_ffi_api.html#lua_pushcfunction)\n\
    \t-- (Specifically, read about lua_tolstring here: http://luajit.org/ext_ffi_api.html#lua_tolstring)\n\
    \t-- (Specifically, read about lua_setfield here: http://luajit.org/ext_ffi_api.html#lua_setfield)\n\
    \t-- (Specifically, read about lua_getfield here: http://luajit.org/ext_ffi_api.html#lua_getfield)\n\
    \t-- (Specifically,", "  -- Your solution here\nend", "    local ret = {}\n  \
    \  local current_character = 1\n    while current_character <= #music_string do\n\
    \        if string.sub(music_string, current_character, current_character) ==\
    \ 'o' then\n            table.insert(ret, 4)\n            current_character =\
    \ current_character + 1\n        elseif string.sub(music_string, current_character,\
    \ current_character + 1) == 'o|' then\n            table.insert(ret, 2)\n    \
    \        current_character = current_character + 2\n        elseif string.sub(music_string,\
    \ current_character, current_character + 1) == '.|' then\n            table.insert(ret,\
    \ 1)\n            current_character = current_character + 2\n        else\n  \
    \          current_character = current_character + 1\n        end\n    end\n \
    \   return ret\nend", "    local output = {}\n    for value in string.gmatch(music_string,\
    \ \"%w+\") do\n        if value == \"o\" then\n            table.insert(output,\
    \ 4)\n        elseif value == \"o|\" then\n            table.insert(output, 2)\n\
    \        elseif value == \".|\" then\n            table.insert(output, 1)\n  \
    \      end\n    end\n    return output\nend", "    -- TODO: Implement this function.\n\
    \    -- Hint: music_string is a string, you can convert it to a table of chars\
    \ with string.gmatch()\n    -- Hint: You can use 'o' as a whole note, '|' for\
    \ one beat, '.' for a half beat, and '|.' for a quater beat.\n    -- Hint: One\
    \ beat is 1/4 of a whole note, half a beat is 1/8 of a whole note, and quater\
    \ is 1/16 of a whole note.\n    -- Hint: On how to create a list in lua, refer\
    \ to Lecture 01.\n    -- Hint: Remember to always sanitize your input, and never\
    \ trust user input. What happens if there is a character\n    --       in the\
    \ input that is not in the list above?\n    -- Hint: You can use string.match()\
    \ to check if a string contains a pattern.\n    -- Hint: Use Lua pattern matching\
    \ to your advantage: https://www.lua.org/pil/20.2.html\n    local music = {}\n\
    \    for token in string.gmatch(music_string, '.') do\n        if token == 'o'\
    \ then\n            table.insert(music, 4)\n        elseif token == '|' then\n\
    \            table.insert(music, 1)\n        elseif token == '.' then\n      \
    \      table.insert(music, 0.5)\n        elseif token == '|.' then\n         \
    \   table.insert(music, 0.25)\n        end\n    end\n    return music\nend", " \
    \ local output = {}\n  for s in music_string:gmatch('[o.|]+') do\n    local count\
    \ = (s:gsub('[^|]', ''))\n    if s:match('o') then\n      table.insert(output,\
    \ 4-count)\n    elseif s:match('.') then\n      table.insert(output, 1-count)\n\
    \    end\n  end\n  return output\nend", "    -- Your code goes here\n    local\
    \ result = {}\n    local i = 1\n    local length = string.len(music_string)\n\
    \    while i <= length do\n        if music_string:sub(i, i) == 'o' then\n   \
    \         table.insert(result, 4)\n            i = i + 1\n        elseif music_string:sub(i,\
    \ i) == '.' then\n            table.insert(result, 1)\n            i = i + 2\n\
    \        elseif music_string:sub(i, i) == 'o' then\n            table.insert(result,\
    \ 2)\n            i = i + 2\n        end\n    end\n    return result\nend", " \
    \   local notes = {}\n    for ch in music_string:gmatch('.') do\n        if ch\
    \ == 'o' then\n            table.insert(notes, 4)\n        elseif ch == 'o' then\n\
    \            table.insert(notes, 2)\n        elseif ch == '.' then\n         \
    \   table.insert(notes, 1)\n        end\n    end\n    return notes\nend", "\t\
    local beats = {}\n\tlocal notes = split(music_string, \" \")\n\tfor _, v in pairs(notes)\
    \ do\n\t\tif v == \"o\" then\n\t\t\ttable.insert(beats, 4)\n\t\telseif v == \"\
    o|\" then\n\t\t\ttable.insert(beats, 2)\n\t\telseif v == \".|\" then\n\t\t\ttable.insert(beats,\
    \ 1)\n\t\tend\n\tend\n\treturn beats\nend", "  -- Your code here\nend", "\tlocal\
    \ new_notes = {}\n\tlocal i = 1\n\tfor line in music_string:gmatch(\"[^\\r\\n]+\"\
    ) do\n\t\tnew_notes[i] = {}\n\t\tfor j = 1, #line do\n\t\t\tlocal char = line:sub(j,\
    \ j)\n\t\t\tif char == 'o' then\n\t\t\t\tnew_notes[i][j] = 4\n\t\t\telseif char\
    \ == 'o' then\n\t\t\t\tnew_notes[i][j] = 2\n\t\t\telseif char == 'o' then\n\t\t\
    \t\tnew_notes[i][j] = 1\n\t\t\tend\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn new_notes\n\
    end", "    local new_string = music_string:gsub('%|',' ')\n    new_string = new_string:gsub('o','4')\n\
    \    new_string = new_string:gsub('.','1')\n    local result = {}\n    for note\
    \ in new_string:gmatch('%S+') do\n        table.insert(result, note)\n    end\n\
    \    return result\nend", "    local res = {}\n    local i = 1\n    while i <=\
    \ #music_string do\n        local char = music_string:sub(i, i)\n        if char\
    \ == 'o' then\n            table.insert(res, 4)\n            i = i + 1\n     \
    \   elseif char == '.' then\n            table.insert(res, 1)\n            i =\
    \ i + 2\n        elseif char == 'o' then\n            table.insert(res, 2)\n \
    \           i = i + 2\n        else\n            i = i + 1\n        end\n    end\n\
    \    return res\nend", "  local result = {}\n  local music_notes = {}\n  -- replace\
    \ all 'o' with 'o|o|o|o|'\n  music_string = string.gsub(music_string, \"o\", \"\
    o|o|o|o|\")\n  -- replace all 'o|' with '1'\n  music_string = string.gsub(music_string,\
    \ \"o|\", \"1\")\n  -- replace all '.|' with '0'\n  music_string = string.gsub(music_string,\
    \ \"%.\", \"0\")\n  -- replace all white spaces with ','\n  music_string = string.gsub(music_string,\
    \ \" \", \",\")\n  -- split music_string by ','\n  for note in string.gmatch(music_string,\
    \ \"([^,]+)\") do\n    -- push each note to music_notes table\n    table.insert(music_notes,\
    \ note)\n  end\n  -- for each note from music_notes table\n  for i,note in ipairs(music_notes)\
    \ do\n    -- if the note is '1' or '0'\n    if note == \"1\" or note == \"0\"\
    \ then\n      -- push the number of beats to result table\n      table.insert(result,\
    \ tonumber(note))\n    -- if the note isn't '1' or '0'\n    else\n      -- push\
    \ error\n      table.insert(result, -1)\n    end\n  end\n  return result\nend",
  "  local beats = {}\n  for beat in music_string:gmatch(\"[o.|]+\") do\n    beats[#beats\
    \ + 1] = beat:len()\n  end\n  return beats\nend", "    local beats = {}\n    local\
    \ len = #music_string\n    local i = 1\n    local dot_count = 0\n    while i <=\
    \ len do\n        local char = music_string:sub(i, i)\n        if char == '.'\
    \ then\n            dot_count = dot_count + 1\n        elseif char == 'o' then\n\
    \            beats[#beats + 1] = 4 - dot_count\n            dot_count = 0\n  \
    \      elseif char == '|' then\n            beats[#beats + 1] = 2 - dot_count\n\
    \            dot_count = 0\n        end\n        i = i + 1\n    end\n    return\
    \ beats\nend", "    local beats = {}\n    for str in string.gmatch(music_string,\
    \ \"%S+\") do\n        table.insert(beats, string.len(str))\n    end\n    return\
    \ beats\nend", "\tlocal ret = {}\n\tlocal last_char = nil\n\tlocal cnt = 0\n\t\
    for i = 1, #music_string do\n\t\tlocal c = music_string:sub(i, i)\n\t\tif c ==\
    \ '|' then\n\t\t\tif last_char == 'o' then\n\t\t\t\tret[#ret + 1] = 4\n\t\t\t\
    elseif last_char == '.' then\n\t\t\t\tret[#ret + 1] = 1\n\t\t\tend\n\t\t\tlast_char\
    \ = nil\n\t\telseif c == 'o' or c == '.' then\n\t\t\tlast_char = c\n\t\tend\n\t\
    end\n\tif last_char == 'o' then\n\t\tret[#ret + 1] = 4\n\telseif last_char ==\
    \ '.' then\n\t\tret[#ret + 1] = 1\n\tend\n\treturn ret\nend", "    local beat_pattern\
    \ = \"%a%a*|\"\n    local beats = {}\n    local i = 1\n    local j = 1\n    for\
    \ beat in string.gmatch(music_string, beat_pattern) do\n        -- print(i ..\
    \ ' ' .. beat)\n        if beat == 'o|' then\n            beats[i] = 2\n     \
    \   elseif beat == 'o' then\n            beats[i] = 4\n        elseif beat ==\
    \ '.|' then\n            beats[i] = 1\n        end\n        i = i + 1\n    end\n\
    \    return beats\nend", "    local notes = {}\n    local note\n    local i =\
    \ 1\n    while i <= string.len(music_string) do\n        note = string.sub(music_string,\
    \ i, i)\n        if note == 'o' then\n            table.insert(notes, 4)\n   \
    \         i = i + 1\n        elseif note == 'o' then\n            table.insert(notes,\
    \ 2)\n            i = i + 2\n        elseif note == '.' then\n            table.insert(notes,\
    \ 1)\n            i = i + 2\n        else\n            i = i + 1\n        end\n\
    \    end\n    return notes\nend", "    -- your code here\n    --return {}\n  \
    \  --music_string = \"o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o|\
    \ |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| |\
    \ |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o|\
    \ |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o|\
    \ |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| |\
    \ |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o|\
    \ |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o|\
    \ |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| |\
    \ |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o| |o| |o|o| |o| |o| | |.| .| | |o|\
    \ |", "    local result = {}\n    for note in music_string:gmatch(\"o|o|%.[|]\"\
    ) do\n        if note == \"o\" then\n            table.insert(result, 4)\n   \
    \     elseif note == \"o|\" then\n            table.insert(result, 2)\n      \
    \  elseif note == \".|\" then\n            table.insert(result, 1)\n        end\n\
    \    end\n    return result\nend", "  local beats = {}\n  local len = #music_string\n\
    \  local i = 1\n  while (i <= len) do\n    local symb = music_string:sub(i, i)\n\
    \    if symb == 'o' then\n      beats[#beats + 1] = 4\n      i = i + 1\n    elseif\
    \ symb == 'o' then\n      beats[#beats + 1] = 2\n      i = i + 2\n    elseif symb\
    \ == '.' then\n      beats[#beats + 1] = 1\n      i = i + 2\n    else\n      error(\"\
    Invalid music string!\")\n    end\n  end\n  return beats\nend", "    local result\
    \ = {}\n    -- TODO: Implement this function\n    return result\nend", "\tlocal\
    \ o=\"o\"\n\tlocal half=\"o|\"\n\tlocal quarter=\".|\"\n\tlocal song_table={}\n\
    \tfor i=1, #music_string do\n\t\tlocal current_note=string.sub(music_string,i,i+2)\n\
    \t\tif current_note==o then\n\t\t\ttable.insert(song_table,4)\n\t\t\ti=i+2\n\t\
    \telseif current_note==half then\n\t\t\ttable.insert(song_table,2)\n\t\t\ti=i+2\n\
    \t\telseif current_note==quarter then\n\t\t\ttable.insert(song_table,1)\n\t\t\t\
    i=i+2\n\t\tend\n\tend\n\treturn song_table\nend", "\t-- Your implementation goes\
    \ here.\n\t--\n\t-- The return value should be table of integers.\n\t--\n\t--\
    \ You may find the following string functions useful:\n\t-- string.sub(s, i, j)\
    \ extracts substring of s from index i to index j (both included)\n\t-- string.find(s,\
    \ pattern, init, plain) searches for pattern in s from index init.\n\t--    If\
    \ plain is true, it will not use patterns. \n\t-- string.len(s) returns length\
    \ of s\n\t\n\t-- loop through the string and create a table containing the string\
    \ of notes seperated by \"|\"\n\t\n\tlocal counter = 1;\n\tlocal notes = {}\n\t\
    \n\tfor i = 1, string.len(music_string) do\n\t\tif (string.sub(music_string, i,\
    \ i) == \"|\") then\n\t\t\tcounter = counter + 1;\n\t\tend\n\tend\n\t\n\tlocal\
    \ character = 1;\n\tfor x = 1, counter do\n\t\tnotes[x] = \"\";\n\t\twhile (string.sub(music_string,\
    \ character, character) ~= \"|\") do\n\t\t\tnotes[x] = notes[x] .. string.sub(music_string,\
    \ character, character);\n\t\t\tcharacter = character + 1;\n\t\tend\n\t\tcharacter\
    \ = character + 1;\n\tend\n\t\n\t-- convert the table of notes into a table of\
    \ note lengths\n\t\n\tlocal lengths = {}\n\tfor x = 1, #notes do\n\t\tif (notes[x]\
    \ == \"o\") then\n\t\t\tlengths[x] = 4;\n\t\telseif (notes[x] == \"o.\") then\n\
    \t\t\tlengths[x] = 2;\n\t\telseif (notes[x] == \".|\") then\n\t\t\tlengths[x]\
    \ = 1;\n\t\tend\n\tend\n\t\n\treturn lengths;\nend", "    -- your code here\n\
    \    local result = {}\n    for i in string.gmatch(music_string, '.') do\n   \
    \     if i == 'o' then\n            table.insert(result, 4)\n        elseif i\
    \ == 'o' then\n            table.insert(result, 2)\n        elseif i == '.' then\n\
    \            table.insert(result, 1)\n        end\n    end\n    return result\n\
    end", "\tlocal result = {}\n\tlocal t = {}\n\tfor char in string.gmatch(music_string,\
    \ \".\") do\n\t\ttable.insert(t, char)\n\tend\n\tfor i = 1, #t do\n\t\tif t[i]\
    \ == 'o' then\n\t\t\ttable.insert(result, 4)\n\t\telseif t[i] == 'o' and t[i +\
    \ 1] == '|' then\n\t\t\ttable.insert(result, 2)\n\t\telseif t[i] == '.' and t[i\
    \ + 1] == '|' then\n\t\t\ttable.insert(result, 1)\n\t\tend\n\tend\n\treturn result\n\
    end", "  local notes = {}\n  local i = 1\n  while i <= #music_string do\n    local\
    \ note = music_string:sub(i, i)\n    if note == 'o' then\n      table.insert(notes,\
    \ 4)\n      i = i + 1\n    elseif note == 'o' then\n      table.insert(notes,\
    \ 2)\n      i = i + 2\n    elseif note == '.' then\n      table.insert(notes,\
    \ 1)\n      i = i + 2\n    else\n      error('invalid note character: ' .. note)\n\
    \    end\n  end\n  return notes\nend", "   -- Your implementation goes here\n\
    end", "  --TODO: parse the music string and return a list of integers corresponding\
    \ to notes' beats\n  local beats = {}\n  local strings = {}\n  local i = 1\n \
    \ local j = 1\n  for s in string.gmatch(music_string, \"%S+\") do\n    strings[i]\
    \ = s\n    i = i + 1\n  end\n  for i = 1, #strings do\n    local s = strings[i]\n\
    \    local n = string.len(s)\n    if n == 1 then\n      beats[j] = 4\n      j\
    \ = j + 1\n    elseif n == 2 then\n      if s[2] == '|' then\n        beats[j]\
    \ = 2\n        j = j + 1\n      else\n        beats[j] = 1\n        j = j + 1\n\
    \      end\n    elseif n == 3 then\n      if s[2] == '|' then\n        beats[j]\
    \ = 1\n        j = j + 1\n      end\n    end\n  end\n  return beats\nend", "\t\
    local music_list = {}\n\tfor i in string.gmatch(music_string, '.') do\n\t\tlocal\
    \ duration = 0\n\t\tif i == 'o' then\n\t\t\tduration = 4\n\t\telseif i == 'o'\
    \ then\n\t\t\tduration = 2\n\t\telseif i == '.' then\n\t\t\tduration = 1\n\t\t\
    end\n\t\tmusic_list[#music_list + 1] = duration\n\tend\n\treturn music_list\n\
    end", "  local notes = {}\n  for note in music_string:gmatch(\"%S+\") do\n   \
    \ local duration = note:match(\"%S$\")\n    local beat = 1\n    if duration ==\
    \ \"o\" then\n      beat = 4\n    elseif duration == \"o|\" then\n      beat =\
    \ 2\n    end\n    table.insert(notes, beat)\n  end\n  return notes\nend", "  \
    \  local beats = {}\n    local i = 1\n    local c = string.sub(music_string, i,\
    \ i)\n    while i <= string.len(music_string) do\n        if c == 'o' then\n \
    \           beats[#beats + 1] = 4\n            i = i + 1\n        elseif c ==\
    \ 'o' and string.sub(music_string, i + 1, i + 1) == '|' then\n            beats[#beats\
    \ + 1] = 2\n            i = i + 2\n        elseif c == '.' and string.sub(music_string,\
    \ i + 1, i + 1) == '|' then\n            beats[#beats + 1] = 1\n            i\
    \ = i + 2\n        else\n            i = i + 1\n        end\n        c = string.sub(music_string,\
    \ i, i)\n    end\n    return beats\nend", "\t-- Return list of note lengths.\n\
    \t-- Write your code below.\n\tlocal notes = {}\n\tfor note in string.gmatch(music_string,\
    \ \".\") do\n\t\tif note == 'o' then\n\t\t\ttable.insert(notes, 4)\n\t\telseif\
    \ note == 'o' or note == '|' then\n\t\t\ttable.insert(notes, 2)\n\t\telseif note\
    \ == '.' or note == '|' then\n\t\t\ttable.insert(notes, 1)\n\t\tend\n\tend\n\t\
    return notes\nend", "    local beats = {}\n    for c in music_string:gmatch(\"\
    .\") do\n        if c == 'o' then\n            table.insert(beats, 4)\n      \
    \  elseif c == 'o' then\n            table.insert(beats, 2)\n        elseif c\
    \ == '.' then\n            table.insert(beats, 1)\n        end\n    end\n    return\
    \ beats\nend", "\tlocal r = {}\n\t\n\tlocal d = {\n\t\t['o'] = 4,\n\t\t['o|']\
    \ = 2,\n\t\t['.|'] = 1,\n\t}\n\t\n\tfor i in music_string:gmatch('.') do\n\t\t\
    if d[i] then\n\t\t\ttable.insert(r, d[i])\n\t\tend\n\tend\n\t\n\treturn r\nend",
  "    local notes = {'o', 'o|', '.|'}\n    local durations = {4, 2, 1}\n    local\
    \ result = {}\n    for note in music_string:gmatch('%S+') do\n        for i, n\
    \ in ipairs(notes) do\n            if note == n then\n                table.insert(result,\
    \ durations[i])\n            end\n        end\n    end\n    return result\nend",
  "    -- Your code goes here\nend", "    local beats = {}\n    for note in music_string:gmatch(\"\
    [o|.][|.]?\") do\n        if note == \"o\" then\n            table.insert(beats,\
    \ 4)\n        elseif note == \"o|\" then\n            table.insert(beats, 2)\n\
    \        elseif note == \".|\" then\n            table.insert(beats, 1)\n    \
    \    end\n    end\n    return beats\nend", "    local music_list = {}\n    local\
    \ table = {}\n    local i = 1\n    local j = 1\n    while i <= #music_string do\n\
    \        if music_string:sub(i, i) == 'o' then\n            table[j] = 4\n   \
    \         i = i + 2\n            j = j + 1\n        elseif music_string:sub(i,\
    \ i + 1) == 'o|' then\n            table[j] = 2\n            i = i + 3\n     \
    \       j = j + 1\n        elseif music_string:sub(i, i + 1) == '.|' then\n  \
    \          table[j] = 1\n            i = i + 3\n            j = j + 1\n      \
    \  end\n    end\n    for i = 1, #table do\n        music_list[i] = table[i]\n\
    \    end\n    return music_list\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_23_strlen
language: lua
prompt: "-- Return length of given string\nlocal function strlen(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = strlen\n\
  \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'), 1)\n\
  \    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\treturn string.len(string)\nend", "  return string.len(string)\nend",
  "\tlocal i = 1\n\twhile string[i] do\n\t\ti = i + 1\n\tend\n\treturn i - 1\nend",
  "    -- Use Lua string library\n    return #string\nend", "    return #string\n\
    end", "    return #string\nend", "    return select(2, string:gsub('()', ''))\n\
    end", "\tlocal _, length = string:gsub('[^\\128-\\193]', '')\n\treturn length\n\
    end", "\treturn string.gmatch(string, \"()\")() - 1\nend", "  local _, length\
    \ = string.gsub(string, \"(.)\", \"%1\")\n  return length\nend", "    local length\
    \ = 0\n    for i = 1, #string do\n        length = length + 1\n    end\n    return\
    \ length\nend", "\treturn string.len(string)\nend", "  if string == nil then\n\
    \    return 0\n  else\n    return string.len(string)\n  end\nend", "\tlocal len\
    \ = 0\n\tfor i = 1, #string do\n\t\tlen = len + string.byte(string, i)\n\tend\n\
    \treturn len\nend", "    return string.len(string)\nend", "\tlocal _, count =\
    \ string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn count\nend", "\treturn string.len(string)\n\
    end", "\treturn string.len(string)\nend", "  local i = 1\n  local length = 0\n\
    \  while i <= #string do\n    local c = string:sub(i, i)\n    if c >= \"\\248\"\
    \ then\n      i = i + 3\n    elseif c >= \"\\128\" then\n      i = i + 2\n   \
    \ else\n      i = i + 1\n    end\n    length = length + 1\n  end\n  return length\n\
    end", "    local i = 1\n    while string[i] do\n        i = i + 1\n    end\n \
    \   return i - 1\nend", "\tlocal i = 1\n\twhile string.sub(string, i, i) ~= \"\
    \" do\n\t\ti = i + 1\n\tend\n\treturn i - 1\nend", "\tlocal i = 1\n\twhile string[i]\
    \ do\n\t\ti = i + 1\n\tend\n\treturn i - 1\nend", "  local _, count = string:gsub(\"\
    [^\\128-\\193]\", \"\")\n  return count\nend", "\treturn string.len(string)\n\
    end", "  return string.len(string)\nend", "\tlocal _, count = string:gsub(\"[^\\\
    128-\\193]\", \"\")\n\treturn count\nend", "  return string.len(string)\nend",
  "    return string.len(string)\nend", "\treturn string.len(string)\nend", "\treturn\
    \ s.pack(string):len()\nend", "\treturn string.len(string)\nend", "    return\
    \ #string\nend", "  local counter = 0\n  for i = 1, string.len(string) do\n  \
    \  counter = counter + 1\n  end\n  return counter\nend", "\tlocal pattern = '()'\
    \ .. string\n\tlocal count = 0\n\tstring:gsub(pattern, function(capture)\n\t\t\
    count = count + 1\n\tend)\n\treturn count\nend", "  if string == nil then\n  \
    \  return 0\n  else\n    return string.len(string)\n  end\nend", "  if string\
    \ == nil then\n    return 0\n  else\n    return string.len(string)\n  end\nend",
  "    local _, length = string.gsub(string, \"%S+\", \"\")\n    return length\nend",
  "\tlocal _, count = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn count\nend",
  "  return string.len(string)\nend", "    local _, length = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return length\nend", "  return string.len(string)\nend", " \
    \   local bytes = string.gfind(string, \"([%z\\1-\\127\\194-\\244][\\128-\\191]*)\"\
    )\n    local length = 0\n    for byte in bytes do\n        length = length + 1\n\
    \    end\n    return length\nend", "  return string.len(string)\nend", "\tlocal\
    \ _, length = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn length\nend", "\t\
    local _, count = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn count\nend",
  "  local _, count = string:gsub(\"[^\\128-\\193]\", \"\")\n  return count\nend",
  "  return #string\nend", "\tif not string then return 0 end\n\treturn string.len(string)\n\
    end", "  local i = 1\n  local len = 0\n  while (string[i]) do\n    i = i + 1\n\
    \    len = len + 1\n  end\n  return len\nend", "  return string.len(string)\n\
    end", "  return string.len(string)\nend", "    local i = 1\n    while string[i]\
    \ do\n        i = i + 1\n    end\n    return i - 1\nend", "\treturn (string.format(\"\
    %q\", string):len() - 2)\nend", "    return string.len(string)\nend", "    local\
    \ _, length = string.gsub(string, \"[^\\128-\\193]\", \"\")\n    return length\n\
    end", "\tlocal i = 1\n\twhile string.sub(string, i, i) ~= \"\" do\n\t\ti = i +\
    \ 1\n\tend\n\treturn i - 1\nend", "\tlocal data = string.data\n\tif not data then\
    \ return 0 end\n\treturn data.length\nend", "    local i = 1\n    while string[i]\
    \ do\n        i = i + 1\n    end\n    return i - 1\nend", "\tlocal _, count =\
    \ string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn count\nend", "  local len =\
    \ 0\n  while string[len+1] do\n    len = len + 1\n  end\n  return len\nend", "\t\
    local _, length = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn length\nend",
  "  return string.len(string)\nend", "    return string.len(string)\nend", "\tlocal\
    \ _, count = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn count\nend", "\t\
    local _, count = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn count\nend",
  "  return #string\nend", "  -- From: http://stackoverflow.com/questions/1426954/split-string-in-lua\n\
    \  local _, count = string:gsub(\"[^\\128-\\193]\", \"\")\n  return count\nend",
  "\treturn string.len(string);\nend", "\tlocal i = 1\n\twhile string.sub(string,\
    \ i, i) ~= \"\" do\n\t\ti = i + 1\n\tend\n\treturn i - 1\nend", "    return #string\n\
    end", "\treturn #string\nend", "\tlocal count = 0\n\tfor i = 1, string.len(string)\
    \ do\n\t\tcount = count + 1\n\tend\n\treturn count\nend", "    return string.len(string)\n\
    end", "\treturn #string\nend", "    local i = 1\n    while string.sub(string,\
    \ i, i) ~= \"\" do\n        i = i + 1\n    end\n    return i - 1\nend", "\treturn\
    \ #string\nend", "\treturn string.len(string)\nend", "    local _, length = string.gsub(string,\
    \ \"([^\\128-\\193])\", \"\")\n    return length\nend", "\tlocal length = 0\n\t\
    for i = 1, #string do\n\t\tif string:sub(i, i) ~= \"\\n\" then\n\t\t\tlength =\
    \ length + 1\n\t\tend\n\tend\n\treturn length\nend", "  return #string\nend",
  "\treturn string.len(string)\nend", "    local len = 0\n    for _ in string:gmatch(\"\
    [^\\128-\\193]\") do\n        len = len + 1\n    end\n    return len\nend", " \
    \   local i = 1\n    local last_index = 1\n    while true do\n        last_index\
    \ = string.find(string, \"\\0\", i)\n        if last_index == nil then break end\n\
    \        i = last_index + 1\n    end\n    return last_index - 1\nend", "    return\
    \ #(string:gsub(\"[^\\128-\\193]\", \"\"))\nend", "\tlocal pos = 0\n\tlocal size\
    \ = 0\n\twhile (pos < string:len()) do\n\t\tsize = size + 1\n\t\tpos = pos + 1\n\
    \t\tpos = pos + skipUTF8Char(string, pos)\n\tend\n\treturn size\nend", "    local\
    \ length = 0\n    for _ in string:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\"\
    ) do\n        length = length + 1\n    end\n    return length\nend", "    local\
    \ _, length = string.gsub(string, \"[^\\128-\\193]\", \"\")\n    return length\n\
    end", "  if string then\n    return #string\n  end\n  return 0\nend", "\treturn\
    \ string.len(string)\nend", "    local count = 0\n    for _ in string:gmatch(\"\
    [%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n        count = count + 1\n    end\n\
    \    return count\nend", "\tif string ~= nil then\n\t\tlocal _, length = string:gsub(\"\
    [^\\128-\\193]\", \"\")\n\t\treturn length\n\tend\n\treturn 0\nend", "\treturn\
    \ select(2, string.gsub(string, \"%z\", \"\"))\nend", "\tlocal len = 0\n\tfor\
    \ i = 1, #string do\n\t\tlen = len + 1\n\tend\n\treturn len\nend", "\tlocal i\
    \ = 1\n\twhile string.sub(string, i, i) ~= '' do\n\t\ti = i + 1\n\tend\n\treturn\
    \ i - 1\nend", "  return #string\nend", "    local _, length = string.gsub(string,\
    \ \"[^\\128-\\193]\", \"\")\n    return length\nend", "\tlocal _, length = string:gsub(\"\
    [^\\128-\\193]\", \"\")\n\treturn length\nend", "    local i = 1\n    local byte\
    \ = string:byte(i)\n    while byte ~= nil do\n        i = i + 1\n        byte\
    \ = string:byte(i)\n    end\n    return i - 1\nend", "    local _, length = string.gsub(string,\
    \ \"(.)\", \"%1\")\n    return length\nend", "  local _, count = string:gsub(\"\
    [^\\128-\\193]\", \"\")\n  return count\nend", "\tlocal _, count = string:gsub(\"\
    [^\\128-\\193]\", \"\")\n\treturn count\nend", "    local _, count = string:gsub(\"\
    [^\\128-\\193]\", \"\")\n    return count\nend", "\treturn #string\nend", "  \
    \  local _, length = string:gsub(\"[^\\128-\\193]\", \"\")\n    return length\n\
    end", "\treturn string.len(string)\nend", "  local i = 1\n  while string[i] do\n\
    \    i = i + 1\n  end\n  return i - 1\nend", "    return #string\nend", "\tlocal\
    \ i = 1\n\twhile _G.string.sub(string, i, i) do\n\t\ti = i + 1\n\tend\n\treturn\
    \ i - 1\nend", "    -- return length of string\n    return string.len(string)\n\
    end", "\tlocal i = 1\n\twhile _G.string.sub(string, i, i) do\n\t\ti = i + 1\n\t\
    end\n\treturn i - 1\nend", "    local _, length = string.gsub(string, \"[^\\128-\\\
    193]\", \"\")\n    return length\nend", "\tlocal len = 0\n\tfor i = 1, #string\
    \ do\n\t\tlen = len + 1\n\tend\n\treturn len\nend", "    return string.len(string)\n\
    end", "    return string.len(string)\nend", "    return #string\nend", "    local\
    \ _, length = string.gsub(string, \"[^\\128-\\193]\", \"\")\n    return length\n\
    end", "  return #string\nend", "\tlocal size = 0\n\tfor _ in string:gmatch(\"\
    ([%z\\1-\\127\\194-\\244][\\128-\\191]*)\") do\n\t\tsize = size + 1\n\tend\n\t\
    return size\nend", "\treturn select(2, string.gsub(string, \"%z\", \"\"))\nend",
  "    local _, length = string.gsub(string, \"[^\\128-\\193]\", \"\")\n    return\
    \ length\nend", "  return (string.gfind(string, '([%z\\1-\\127\\194-\\244][\\\
    128-\\191]*)'))()\nend", "\treturn #(string:gsub(\"[^\\128-\\193]\", \"\"))\n\
    end", "\treturn #string\nend", "\treturn #string\nend", "  local position = 1\n\
    \  local length = 0\n  while position <= #string do\n    local char = string:sub(position,\
    \ position)\n    if (char ~= \"\\r\") then\n      length = length + 1\n    end\n\
    \    position = position + 1\n  end\n  return length\nend", "\treturn string.len(string);\n\
    end", "\treturn #string\nend", "    local _, _, length = string.find(string, \"\
    (.*)()$\")\n    return length\nend", "\treturn #string\nend", "    local _, count\
    \ = string:gsub(\"[^\\128-\\193]\", \"\")\n    return count\nend", "  return string.len(string)\n\
    end", "  if type(string) ~= \"string\" then\n    return false\n  end\n  return\
    \ string.len(string)\nend", "\tlocal _,count = string:gsub(\"[^\\128-\\193]\"\
    ,\"\")\n\treturn count\nend", "    return string.len(string)\nend", "    local\
    \ _, length = string.gsub(string, \"[^\\128-\\193]\", \"\")\n    return length\n\
    end", "    return #string\nend", "\treturn #string\nend", "\tlocal len = 0\n\t\
    for i = 1, string.len(string) do\n\t\tlen = len + 1\n\tend\n\treturn len\nend",
  "\tlocal pos = 1\n\tlocal length = 0\n\twhile pos <= string.len(string) do\n\t\t\
    length = length + 1\n\t\tpos = pos + 1\n\tend\n\treturn length\nend", "    return\
    \ #string\nend", "\tlocal i = 1\n\twhile string[i] do\n\t\ti = i + 1\n\tend\n\t\
    return i - 1\nend", "  local count = 0\n  for _ in string:gmatch(\"[%z\\1-\\127\\\
    194-\\244][\\128-\\191]*\") do\n    count = count + 1\n  end\n  return count\n\
    end", "  local _, length = string.gsub(string, \"[^\\128-\\193]\", \"\")\n  return\
    \ length\nend", "  local i = 1\n  while string[i] do\n    i = i + 1\n  end\n \
    \ return i - 1\nend", "    local _, count = string:gsub(\"[^\\128-\\193]\", \"\
    \")\n    return count\nend", "  local _, length = string.gsub(string, \"[^\\128-\\\
    193]\", \"\")\n  return length\nend", "\tif string == nil then\n\t\treturn 0\n\
    \tend\n\tlocal _, len = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn len\n\
    end", "\treturn string.len(string)\nend", "    local i = 1\n    while string.sub(string,\
    \ i, i) do\n        i = i + 1\n    end\n    return i - 1\nend", "\treturn string.len(string)\n\
    end", "\treturn #(string:gsub(\"[^\\128-\\193]\", \"\"))\nend", "\tlocal _, length\
    \ = string:gsub(\"[^\\128-\\193]\", \"\")\n\treturn length\nend", "\tlocal _,count\
    \ = string:gsub(\"[^\\128-\\193]\",\"\")\n\treturn count\nend", "    local b,\
    \ e = string:find(\"[^\\128-\\193]\")\n    if b then\n        local offset = utf8charbytes(string,\
    \ b)\n        while e do\n            b = e + 1\n            offset = offset +\
    \ 1\n            e = string:find(\"[^\\128-\\193]\", b)\n        end\n       \
    \ return offset\n    end\n    return #string\nend", "\treturn string.len(string)\n\
    end", "\treturn string.len(string)\nend", "\tlocal counter = 0\n\tfor i in string:gmatch('[%z\\\
    1-\\127\\194-\\244][\\128-\\191]*') do\n\t\tcounter = counter + 1\n\tend\n\treturn\
    \ counter\nend", "    local pos = 0\n    local bytes = string.len(string)\n  \
    \  local length = 0", "    return string.len(string)\nend", "\t--return string.len(string)\n\
    \treturn #string\nend", "    return string.len(string)\nend", "    return string.len(string)\n\
    end", "\treturn strlen_t[strbyte(string, 1)](string)\nend", "\treturn string.len(string)\n\
    end", "\tif not string then return 0 end\n\treturn string.len(string)\nend", "\t\
    return #string\nend", "    return string.len(string)\nend", "\tlocal _, length\
    \ = string:gsub('[^\\128-\\193]', '')\n\treturn length\nend", "\treturn string.len(string)\n\
    end", "  -- Check if given value is really a string\n  if type(string) ~= \"string\"\
    \ then\n    error(\"Argument must be of type string.\", 2)\n  end", "    return\
    \ string.len(string)\nend", "\treturn string.len(string)\nend", "\treturn string.len(string)\n\
    end", "  local len = 0\n  for i = 1, #string do\n    len = len + string.byte(string,\
    \ i) <= 127 and 1 or 2\n  end\n  return len\nend", "  local i = 1\n  local c =\
    \ string:sub(i, i)\n  while c ~= '' do\n    i = i + 1\n    c = string:sub(i, i)\n\
    \  end\n  return i - 1\nend", "    local len = string.len(string)\n    return\
    \ len\nend", "\treturn string.len(string)\nend", "\treturn(string.len(string))\n\
    end", "\treturn string.len(string)\nend", "\tlocal len = 0\n\tlocal i = 1\n\t\
    while string[i] do\n\t\tlen = len + 1\n\t\ti = i + 1\n\tend\n\treturn len\nend",
  "  return string.len(string)\nend", "\treturn string.len(string)\nend", "    local\
    \ i = 1\n    while string.sub(string, i, i) do\n        i = i + 1\n    end\n \
    \   return i - 1\nend", "\tlocal _, length = string:gsub(\"[^\\128-\\193]\", \"\
    \")\n\treturn length\nend", "    return string.len(string)\nend", "\treturn #string\n\
    end", "\treturn string.len(string)\nend", "  local i = 1\n  local length = 0\n\
    \  while string[i] do\n    length = length + 1\n    i = i + 1\n  end\n  return\
    \ length\nend", "    local bytes, length = string:len(), 0\n    while bytes >\
    \ 0 do\n        length = length + 1\n        local charByte = string:byte(length)\n\
    \        bytes = bytes - 1\n        if charByte > 240 then\n            bytes\
    \ = bytes - 4\n        elseif charByte > 225 then\n            bytes = bytes -\
    \ 3\n        elseif charByte > 192 then\n            bytes = bytes - 2\n     \
    \   end\n    end\n    return length\nend", "\treturn #string\nend", "    if type(string)\
    \ ~= \"string\" then\n        return #string\n    end\n    return #string\nend",
  "    return select(2, strfind(string, \"[%z\\1-\\127\\194-\\244][\\128-\\191]*\"\
    ))\nend", "\treturn string.len(string)\nend", "\tlocal i = 1\n\twhile string[i]\
    \ do\n\t\ti = i + 1\n\tend\n\treturn i - 1\nend", "\treturn string.len(string)\n\
    end", "\treturn string.len(string)\nend", "\tlocal length = 0\n\tfor i = 1, string.len(string)\
    \ do\n\t\tlength = length + 1\n\tend\n\treturn length\nend", "    local i = 1\n\
    \    while string.char(string:byte(i)) ~= \"\\0\" do\n        i = i + 1\n    end\n\
    \    return i - 1\nend", "\tlocal _, length = string:gsub(\"[^\\128-\\193]\",\
    \ \"\")\n\treturn length\nend", "\treturn #string\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

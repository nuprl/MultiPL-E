language: lua
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local a, b = math.abs(a), math.abs(b)\n  if\
    \ b == 0 then return a end\n  return greatest_common_divisor(b, a % b)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    local temp = a % b\n \
    \   a = b\n    b = temp\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a > b then\n        a, b = b, a\n    end\n\
    \    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif a == 0 then\n\t\treturn b\n\telseif b ==\
    \ 0 then\n\t\treturn a\n\telse\n\t\treturn greatest_common_divisor(b, a % b)\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a < b then\n        a, b = b, a\n    end\n\
    \    while a % b ~= 0 do\n        a, b = b, a % b\n    end\n    return b\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local r = a % b\n    return greatest_common_divisor(b,\
    \ r)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local r = a % b\n    if r == 0 then\n   \
    \     return b\n    else\n        return greatest_common_divisor(b, r)\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local t\n    while b ~= 0 do\n        t =\
    \ b\n        b = a % b\n        a = t\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif a < b then\n\t\ta, b = b, a\n\tend\n\twhile\
    \ b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal c = a % b\n\twhile c ~= 0 do\n\t\ta =\
    \ b\n\t\tb = c\n\t\tc = a % b\n\tend\n\treturn b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- Euclidean algorithm; reorder the numbers\
    \ if b is larger than a\n    if b > a then\n        a, b = b, a\n    end\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqvh72xrw.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\t-- If b is zero, return a\n\tif b == 0 then\n\
    \t\treturn a\n\tend\n\t-- Return greatest common divisor of b and a modulo b\n\
    \treturn greatest_common_divisor(b, a % b)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local r\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpiv3g6_0j.lua:14: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    a = math.abs(a)\n    b = math.abs(b)\n  \
    \  if a < b then\n        a, b = b, a\n    end\n    while b ~= 0 do\n        a,\
    \ b = b, a % b\n    end\n    return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n\
    \  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local a, b = math.abs(a), math.abs(b)\n \
    \   local r = a % b\n    while r ~= 0 do\n        a, b = b, r\n        r = a %\
    \ b\n    end\n    return b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n\
    \  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif a == 0 then\n\t\treturn b\n\telseif b ==\
    \ 0 then\n\t\treturn a\n\telse\n\t\tlocal c = a % b\n\t\treturn greatest_common_divisor(b,\
    \ c)\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local temp\n    if a < b then\n        temp\
    \ = a\n        a = b\n        b = temp\n    end\n    while b ~= 0 do\n       \
    \ temp = a % b\n        a = b\n        b = temp\n    end\n    return a\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while (b ~= 0) do\n    local t = b\n    b =\
    \ a % b\n    a = t\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif a < b then\n\t\ta, b = b, a\n\tend\n\t\n\
    \twhile b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\t\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif a < b then\n\t\treturn greatest_common_divisor(b,\
    \ a)\n\tend\n\tif b == 0 then\n\t\treturn a\n\tend\n\treturn greatest_common_divisor(b,\
    \ a % b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal r\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4pt_m5z7.lua:14: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local r\n  while b ~= 0 do\n    r = a % b\n\
    \    a = b\n    b = r\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        local r = a % b\n        return\
    \ greatest_common_divisor(b, r)\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local t\n    while b ~= 0 do\n        t =\
    \ a % b\n        a = b\n        b = t\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local t\n  if a < b then\n    t = a\n    a\
    \ = b\n    b = t\n  end\n  local r = a % b\n  if r == 0 then\n    return b\n \
    \ else\n    return greatest_common_divisor(b, r)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        local temp = a %\
    \ b\n        a = b\n        b = temp\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    local temp = a % b\n \
    \   a = b\n    b = temp\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal a, b = math.abs(a), math.abs(b)\n\twhile\
    \ b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal aux = a\n\ta = math.max(a, b)\n\tb =\
    \ math.min(aux, b)\n\tlocal u0 = 1\n\tlocal u1 = 0\n\tlocal v0 = 0\n\tlocal v1\
    \ = 1\n\tlocal w0 = 0\n\tlocal w1 = 0\n\twhile b ~= 0 do\n\t\tlocal q = math.floor(a\
    \ / b)\n\t\tlocal aux = a\n\t\ta = b\n\t\tb = aux - q * b\n\t\tw0 = u0 - q * v0\n\
    \t\tw1 = u1 - q * v1\n\t\tu0 = v0\n\t\tu1 = v1\n\t\tv0 = w0\n\t\tv1 = w1\n\tend\n\
    \treturn a, u0, u1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while a ~= 0 do\n        a, b = b % a, a\n\
    \    end\n    return b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- Euclidean algorithm\n    -- First, adjust\
    \ the smaller number so it does not equal zero.\n    -- Then, repeatedly apply\
    \ the formula gcd(a, b) = gcd(b, a mod b)\n    -- until b equals zero. The value\
    \ of a at that point is the greatest\n    -- common divisor.\n    if b == 0 then\n\
    \        return a\n    else\n        return greatest_common_divisor(b, a % b)\n\
    \    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local c\n    while b ~= 0 do\n        c =\
    \ a % b\n        a = b\n        b = c\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a < b then\n    a, b = b, a\n  end\n  while\
    \ b ~= 0 do\n    a, b = b, a % b\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local a, b = math.abs(a), math.abs(b)\n  if\
    \ a == 0 then return b end\n  if b == 0 then return a end\n  while a ~= b do\n\
    \    if a > b then a = a - b else b = b - a end\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- Ensure that a > b\n  if a < b then\n   \
    \ a, b = b, a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp5os9i8pj.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\twhile b ~= 0 do\n\t\tlocal r = a % b\n\t\t\
    a = b\n\t\tb = r\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\ta = math.abs(a)\n\tb = math.abs(b)\n\tif a\
    \ < b then\n\t\ta, b = b, a\n\tend\n\tif b == 0 then\n\t\treturn a\n\telse\n\t\
    \treturn greatest_common_divisor(b, a % b)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal r = math.fmod(a, b)\n\twhile r ~= 0 do\n\
    \t\ta = b\n\t\tb = r\n\t\tr = math.fmod(a, b)\n\tend\n\treturn b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local c\n    while b ~= 0 do\n        c =\
    \ a % b\n        a = b\n        b = c\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local t\n    while b ~= 0 do\n        t =\
    \ a % b\n        a = b\n        b = t\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- a, b are positive integers\n    -- Euclid's\
    \ algorithm to find greatest common divisor\n    while a > 0 and b > 0 do\n  \
    \      if a > b then\n            a = a % b\n        else\n            b = b %\
    \ a\n        end\n    end\n    return math.max(a, b)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal r = a % b\n\twhile r ~= 0 do\n\t\ta =\
    \ b\n\t\tb = r\n\t\tr = a % b\n\tend\n\treturn b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\t-- Use Euclid's algorithm to find the greatest\
    \ common divisor\n\t-- This is the same as the gcd function in cl-gmp\n\twhile\
    \ b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\twhile b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\
    \treturn a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local div = (a % b)\n    if div == 0 then\n\
    \        return b\n    else\n        return greatest_common_divisor(b, div)\n\
    \    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    a = abs(a)\n    b = abs(b)\n    while b ~=\
    \ 0 do\n        local mod = a % b\n        a = b\n        b = mod\n    end\n \
    \   return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp30dlcrjg.lua:3:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp30dlcrjg.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmp30dlcrjg.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local x = a\n    local y = b\n    while y\
    \ ~= 0 do\n        local r = x % y\n        x = y\n        y = r\n    end\n  \
    \  return x\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- Ensure a > b\n  if a < b then\n    a, b\
    \ = b, a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpkn9nifzu.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\t-- Swap a and b so that a <= b\n\tif a > b\
    \ then\n\t\ta, b = b, a\n\tend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3r8skt1j.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        local c = b\n  \
    \      b = a % b\n        a = c\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal n = 1\n\twhile n <= a and n <= b do\n\
    \t\tif a % n == 0 and b % n == 0 then\n\t\t\tgcd = n\n\t\tend\n\t\tn = n + 1\n\
    \tend\n\treturn gcd\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\twhile b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\
    \treturn a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  return b == 0 and a or greatest_common_divisor(b,\
    \ a % b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local max_mult = math.min(a, b)\n  for i =\
    \ max_mult, 1, -1 do\n    if (a % i == 0) and (b % i == 0) then\n      return\
    \ i\n    end\n  end\n  return 1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local aa = math.abs(a)\n    local bb = math.abs(b)\n\
    \    while bb ~= 0 do\n        local aaa = aa\n        aa = bb\n        bb = aaa\
    \ % bb\n    end\n    return aa\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\t-- Ensure that a is the bigger of the two numbers\n\
    \tif a < b then\n\t\ta, b = b, a\n\tend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpwbhg9kbv.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a < b then\n        a, b = b, a\n    end\n\
    \    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local r = a % b\n  while r ~= 0 do\n    a =\
    \ b\n    b = r\n    r = a % b\n  end\n  return b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif a < b then\n\t\treturn greatest_common_divisor(b,\
    \ a)\n\tend\n\tif b == 0 then\n\t\treturn a\n\tend\n\treturn greatest_common_divisor(b,\
    \ a % b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if (a == 0) then\n        return b\n    elseif\
    \ (b == 0) then\n        return a\n    else\n        local aux\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpgubbdu74.lua:19: ''end'' expected (to close ''if'' at line
    3) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\twhile b ~= 0 do\n\t\tlocal temp = a % b\n\t\
    \ta = b\n\t\tb = temp\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- Make: a <= b\n    if a > b then\n    \
    \    a, b = b, a\n    end\n    -- Returns: gcd(a, b)\n    while a ~= 0 do\n  \
    \      a, b = b % a, a\n    end\n    return b\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a < b then a, b = b, a end\n    if b ==\
    \ 0 then return a end\n    return greatest_common_divisor(b, a % b)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    a = math.abs(a)\n    b = math.abs(b)\n  \
    \  if a == 0 or b == 0 then\n        return 0\n    end\n    while b ~= 0 do\n\
    \        a, b = b, a % b\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n\
    \  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local modulo\n  -- Use Euclid's algorithm to\
    \ find the GCD.\n  repeat\n    modulo = a % b\n    a = b\n    b = modulo\n  until\
    \ b == 0\n  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a % b == 0 then\n    return b\n  else\n\
    \    return greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    a = abs(a)\n    b = abs(b)\n    while a ~=\
    \ 0 do\n        a, b = b % a, a\n    end\n    return b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjuw7ql6k.lua:3:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpjuw7ql6k.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpjuw7ql6k.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local a, b = math.max(a, b), math.min(a, b)\n\
    \  while a % b ~= 0 do\n    a, b = b, a % b\n  end\n  return b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  return a == 0 and b or greatest_common_divisor(b\
    \ % a, a)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local a, b = math.abs(a), math.abs(b)\n \
    \   local r = a % b\n    while r ~= 0 do\n        a, b = b, r\n        r = a %\
    \ b\n    end\n    return b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If a is zero, then the gcd(a, b) is b\n\
    \  if a == 0 then\n    return b\n  end\n  -- If b is zero, then the gcd(a, b)\
    \ is a\n  if b == 0 then\n    return a\n  end\n  -- The gcd(a, b) is the same\
    \ as the gcd(b, a%b)\n  return greatest_common_divisor(b, a % b)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\ta = math.abs(a)\n\tb = math.abs(b)\n\t\n\t\
    local _a = a\n\tlocal _b = b\n\t\n\tlocal r = _a % _b\n\t\n\twhile r ~= 0 do\n\
    \t\t_a = _b\n\t\t_b = r\n\t\tr = _a % _b\n\tend\n\t\n\treturn _b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal t\n\twhile b ~= 0 do\n\t\tt = b\n\t\t\
    b = a % b\n\t\ta = t\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n\
    \  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local temp\n  while b ~= 0 do\n    temp = a\
    \ % b\n    a = b\n    b = temp\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\twhile b ~= 0 do\n\t\tlocal c = b\n\t\tb = a\
    \ % b\n\t\ta = c\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local t\n    while b ~= 0 do\n        t =\
    \ b\n        b = a % b\n        a = t\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif not (a > 0 and b > 0) then\n\t\terror('greatest_common_divisor\
    \ expects both inputs to be > 0', 2)\n\tend\n\tif b > a then\n\t\ta, b = b, a\n\
    \tend\n\twhile b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a < b then\n        a, b = b, a\n    end\n\
    \    local r = a % b\n    if r == 0 then\n        return b\n    else\n       \
    \ return greatest_common_divisor(b, r)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal t\n\twhile b ~= 0 do\n\t\tt = b\n\t\t\
    b = a % b\n\t\ta = t\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        local temp = a %\
    \ b\n        a = b\n        b = temp\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\t-- Check if a is greater than b\n\tif a > b\
    \ then\n\t\t-- If a is greater than b then swap them\n\t\ta, b = b, a\n\tend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7fp9sc_e.lua:18: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal c\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzco16x_m.lua:14: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- Make `a` always the largest number\n \
    \   if a < b then\n        a, b = b, a\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpkats92s0.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n\
    \  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while a ~= 0 do\n        if a < b then\n\
    \            a, b = b, a\n        end\n        a = a % b\n    end\n    return\
    \ b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- set a to absolute value of a\n    a =\
    \ math.abs(a)\n    -- set b to absolute value of b\n    b = math.abs(b)\n    --\
    \ while b does not equal 0\n    while b ~= 0 do\n        -- set a to b\n     \
    \   a, b = b, a % b\n    end\n    -- return a\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local big, small = math.max(a, b), math.min(a,\
    \ b)\n  local remainder = big % small\n  if remainder == 0 then\n    return small\n\
    \  else\n    return greatest_common_divisor(small, remainder)\n  end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal result = 1\n\tlocal a_abs = math.abs(a)\n\
    \tlocal b_abs = math.abs(b)\n\tlocal min_val = math.min(a_abs, b_abs)\n\tlocal\
    \ max_val = math.max(a_abs, b_abs)\n\tfor i = 2, min_val do\n\t\tlocal i_frac\
    \ = max_val / i\n\t\tif i_frac == math.floor(i_frac) then\n\t\t\tresult = i\n\t\
    \tend\n\tend\n\treturn result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3sjg1q9x.lua:23:\
    \ expected: 12, actual: 48\nstack traceback:\n\t/tmp/tmp3sjg1q9x.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local a, b = math.abs(a), math.abs(b)\n  if\
    \ a < b then\n    a, b = b, a\n  end\n  while b ~= 0 do\n    a, b = b, a % b\n\
    \  end\n  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local temp\n    if a < b then\n        temp\
    \ = a\n        a = b\n        b = temp\n    end\n    while b ~= 0 do\n       \
    \ temp = a % b\n        a = b\n        b = temp\n    end\n    return a\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- GCD is associative, so it does not matter\
    \ if b > a or not.\n    if b > a then\n        return greatest_common_divisor(b,\
    \ a)\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpn7orbogo.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local temp\n  while b ~= 0 do\n    temp = a\
    \ % b\n    a = b\n    b = temp\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal r = 1\n\twhile r ~= 0 do\n\t\tr = a %\
    \ b\n\t\ta = b\n\t\tb = r\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    local tmp = a % b\n  \
    \  a = b\n    b = tmp\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a < b then a, b = b, a end\n  if b == 0\
    \ then return a end\n  return greatest_common_divisor(b, a % b)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- TODO: Implement this function\n  return\
    \ 42\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbgrq6dbz.lua:10:\
    \ expected: 1, actual: 42\nstack traceback:\n\t/tmp/tmpbgrq6dbz.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        if a > b then\n           \
    \ return greatest_common_divisor(a % b, b)\n        else\n            return greatest_common_divisor(a,\
    \ b % a)\n        end\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\ta = abs(a)\n\tb = abs(b)\n\tlocal r = a % b\n\
    \twhile r ~= 0 do\n\t\ta = b\n\t\tb = r\n\t\tr = a % b\n\tend\n\treturn b\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpalbd_sj_.lua:3:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpalbd_sj_.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpalbd_sj_.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        local c = b\n  \
    \      b = a % b\n        a = c\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\t-- Make sure a > b\n\tif a < b then\n\t\ta,\
    \ b = b, a\n\tend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpgy4lyxmr.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal r\n\twhile b ~= 0 do\n\t\tr = a % b\n\
    \t\ta = b\n\t\tb = r\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local quotient = math.floor(a / b)\n    local\
    \ remainder = a % b\n    if remainder == 0 then\n        return b\n    else\n\
    \        return greatest_common_divisor(b, remainder)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal n = a\n\tlocal m = b\n\tlocal x = n\n\
    \tlocal y = m\n\tlocal r = x % y\n\twhile r ~= 0 do\n\t\tx = y\n\t\ty = r\n\t\t\
    r = x % y\n\tend\n\treturn y\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local r\n  while b ~= 0 do\n    r = a % b\n\
    \    a = b\n    b = r\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  a = abs(a)\n  b = abs(b)\n  local c\n  while\
    \ b > 0 do\n    c = a % b\n    a = b\n    b = c\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplb1kz9su.lua:3:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmplb1kz9su.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmplb1kz9su.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        local d = b\n  \
    \      b = a % b\n        a = d\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\ta = math.abs(a)\n\tb = math.abs(b)\n\t\n\t\
    while b ~= 0 do\n\t\tlocal tmp = b\n\t\tb = a % b\n\t\ta = tmp\n\tend\n\t\n\t\
    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal tmp\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpg_ln3o37.lua:14: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local r = a % b\n    if r == 0 then\n   \
    \     return b\n    else\n        return greatest_common_divisor(b, r)\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local r\n  if a < b then\n    a, b = b, a\n\
    \  end\n  while true do\n    r = a % b\n    if r == 0 then\n      return b\n \
    \   end\n    a, b = b, r\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a < b then\n        return greatest_common_divisor(b,\
    \ a)\n    end\n    if b == 0 then\n        return a\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    local tmp = a % b\n  \
    \  a = b\n    b = tmp\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        local r = a % b\n        if\
    \ r == 0 then\n            return b\n        else\n            return greatest_common_divisor(b,\
    \ r)\n        end\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\treturn b == 0 and a or greatest_common_divisor(b,\
    \ a % b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n\
    \  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a < b then\n        a, b = b, a\n    end\n\
    \    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local r = a % b\n    if r == 0 then\n   \
    \     return b\n    else\n        return greatest_common_divisor(b, r)\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local r = a % b\n    while r ~= 0 do\n  \
    \      a = b\n        b = r\n        r = a % b\n    end\n    return b\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local r\n    while b ~= 0 do\n        r =\
    \ a % b\n        a = b\n        b = r\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\ta = math.abs(a)\n\tb = math.abs(b)\n\twhile\
    \ b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n\
    \  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif a == 0 then\n\t\treturn b\n\telseif b ==\
    \ 0 then\n\t\treturn a\n\telse\n\t\treturn greatest_common_divisor(b, a % b)\n\
    \tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local x, y = a, b\n    while y ~= 0 do\n\
    \        x, y = y, x % y\n    end\n    return x\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal tmp\n\twhile b ~= 0 do\n\t\ttmp = a %\
    \ b\n\t\ta = b\n\t\tb = tmp\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif a < b then\n\t\treturn greatest_common_divisor(b,\
    \ a)\n\tend\n\tif b == 0 then\n\t\treturn a\n\tend\n\treturn greatest_common_divisor(b,\
    \ a % b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a < b then\n    return greatest_common_divisor(b,\
    \ a)\n  end\n  if b == 0 then\n    return a\n  end\n  return greatest_common_divisor(b,\
    \ a % b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal temp\n\twhile b ~= 0 do\n\t\ttemp = a\
    \ % b\n\t\ta = b\n\t\tb = temp\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  --print(\"greatest_common_divisor: \" .. a\
    \ .. \" \" .. b)\n  local r = b % a\n  if r == 0 then\n    return a\n  else\n\
    \    return greatest_common_divisor(r, a)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal temp\n\twhile b ~= 0 do\n\t\ttemp = a\
    \ % b\n\t\ta = b\n\t\tb = temp\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal t\n\tif a < b then\n\t\tt = a\n\t\ta\
    \ = b\n\t\tb = t\n\tend\n\twhile b ~= 0 do\n\t\tt = a % b\n\t\ta = b\n\t\tb =\
    \ t\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- Our method is to find the maximum power\
    \ of 2 that divides a and b.\n    -- We must assume that a > 0 and b > 0.\n  \
    \  --\n    -- Get greatest power of 2 that divides a\n    local aa = a\n    local\
    \ ap = 0\n    while aa % 2 == 0 do\n        aa = aa / 2\n        ap = ap + 1\n\
    \    end\n    -- Get greatest power of 2 that divides b\n    local bb = b\n  \
    \  local bp = 0\n    while bb % 2 == 0 do\n        bb = bb / 2\n        bp = bp\
    \ + 1\n    end\n    -- Find greatest power of 2 that divides both a and b\n  \
    \  local p = ap\n    if ap > bp then\n        p = bp\n    end\n    -- Return gcd.\n\
    \    return 2^p\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwwvy_xv5.lua:33:\
    \ expected: 5, actual: 1.0\nstack traceback:\n\t/tmp/tmpwwvy_xv5.lua:33: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local r\n  while b ~= 0 do\n    r = a % b\n\
    \    a = b\n    b = r\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    local r = a % b\n    a\
    \ = b\n    b = r\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local a, b = math.abs(a), math.abs(b)\n \
    \   if a < b then\n        a, b = b, a\n    end\n    while b ~= 0 do\n       \
    \ a, b = b, a % b\n    end\n    return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local min = math.min(a, b)\n  local max = math.max(a,\
    \ b)\n  local rem = max % min\n  if rem == 0 then\n    return min\n  else\n  \
    \  return greatest_common_divisor(min, rem)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local a, b = math.abs(a), math.abs(b)\n  if\
    \ b > a then a, b = b, a end\n  while b > 0 do\n    a, b = b, a % b\n  end\n \
    \ return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  while b ~= 0 do\n    local c = a % b\n    a\
    \ = b\n    b = c\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local d = b\n  while a % d ~= 0 do\n    d =\
    \ d - 1\n  end\n  return d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa55f6poy.lua:13:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmpa55f6poy.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- Check if this divisor is negative.\n \
    \   local is_negative = a < 0 or b < 0\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp86u4v10z.lua:15: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local remainder\n    while b ~= 0 do\n  \
    \      remainder = a % b\n        a = b\n        b = remainder\n    end\n    return\
    \ a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local a = abs(a)\n  local b = abs(b)\n  if\
    \ a == 0 then\n    return b\n  elseif b == 0 then\n    return a\n  else\n    local\
    \ r = a % b\n    return greatest_common_divisor(b, r)\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfd4bbqmv.lua:3:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpfd4bbqmv.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpfd4bbqmv.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local r = a % b\n    if r == 0 then\n   \
    \     return b\n    else\n        return greatest_common_divisor(b, r)\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    -- Make \"a\" always the greatest number\n\
    \    if a < b then\n        a, b = b, a\n    end\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpigxj9oll.lua:17: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tlocal r\n\tif a < b then\n\t\ta, b = b, a\n\
    \tend\n\twhile true do\n\t\tr = a % b\n\t\tif r == 0 then\n\t\t\treturn b\n\t\t\
    end\n\t\ta, b = b, r\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        if a >= b then\n          \
    \  return greatest_common_divisor(a % b, b)\n        else\n            return\
    \ greatest_common_divisor(a, b % a)\n        end\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local r\n  while b ~= 0 do\n    r = a % b\n\
    \    a = b\n    b = r\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while a ~= 0 do\n        a, b = b % a, a\n\
    \    end\n    return b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local c\n    while b ~= 0 do\n        c =\
    \ a % b\n        a = b\n        b = c\n    end\n    return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    while b ~= 0 do\n        a, b = b, a % b\n\
    \    end\n    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local c\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqpi8oqvo.lua:14: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    local c = a % b\n    while c ~= 0 do\n  \
    \      a = b\n        b = c\n        c = a % b\n    end\n    return b\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local c\n  while b ~= 0 do\n    c = a % b\n\
    \    a = b\n    b = c\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823630

name: HumanEval_122_add_elements
language: lua
prompt: "-- Given a non-empty array of integers arr and an integer k, return\n-- the\
  \ sum of the elements with at most two digits from the first k elements of arr.\n\
  -- Example:\nlocal function add_elements(arr, k)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = add_elements\n\
  \    lu.assertEquals(candidate({1, -2, -3, 41, 57, 76, 87, 88, 99}, 3), -4)\n  \
  \  lu.assertEquals(candidate({111, 121, 3, 4000, 5, 6}, 2), 0)\n    lu.assertEquals(candidate({11,\
  \ 21, 3, 90, 5, 6, 7, 8, 9}, 4), 125)\n    lu.assertEquals(candidate({111, 21, 3,\
  \ 4000, 5, 6, 7, 8, 9}, 4), 24)\n    lu.assertEquals(candidate({1}, 1), 1)\nend\n\
  \nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  for i = 1, k do\n    if #tostring(arr[i]) <= 2 then\n\
    \      sum = sum + arr[i]\n    end\n  end\n  return sum\nend", "    local sum\
    \ = 0\n    for i=1,k do\n        local n = arr[i]\n        if n < 100 then\n \
    \           sum = sum + n\n        end\n    end\n    return sum\nend", "    k\
    \ = k or math.huge\n    local res = 0\n    for i = 1, math.min(#arr, k) do\n \
    \       local v = arr[i]\n        if v < 100 then\n            res = res + v\n\
    \        end\n    end\n    return res\nend", "  local result = 0\n  for i = 1,\
    \ k do\n    local a = arr[i]\n    if a > 99 then\n      a = 99\n    end\n    result\
    \ = result + a\n  end\n  return result\nend", "  local sum = 0\n  for i = 1, k\
    \ do\n    local num = arr[i]\n    if num < 100 then\n      sum = sum + num\n \
    \   end\n  end\n  return sum\nend", "  -- your code here\n  local res = 0\n  for\
    \ i = 1, k do\n    if arr[i] < 100 then\n      res = res + arr[i]\n    end\n \
    \ end\n  return res\nend", "  local sum = 0\n  for i = 1, k do\n    local v =\
    \ arr[i]\n    if v < 100 then\n      sum = sum + v\n    end\n  end\n  return sum\n\
    end", "  local sum = 0\n  for i = 1, k do\n    if arr[i] < 100 then\n      sum\
    \ = sum + arr[i]\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for\
    \ i = 1, math.min(k, #arr) do\n    if arr[i] > 99 then\n      sum = sum + 99\n\
    \    else\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend", "\tlocal\
    \ sum = 0\n\t-- loop through the first k elements in the given array\n\tfor i\
    \ = 1, k do\n\t\t-- if the current element has more than 2 digits, then\n\t\t\
    -- we need to remove the extra digits from the left\n\t\t-- (in the first iteration,\
    \ i = 1, so the array starts from 1)\n\t\tif string.len(arr[i]) > 2 then\n\t\t\
    \t-- loop through all the digits in the current element\n\t\t\tfor j = 1, string.len(arr[i])\
    \ do\n\t\t\t\t-- if the current position is greater than 2,\n\t\t\t\t-- remove\
    \ the leftmost digit\n\t\t\t\tif j > 2 then\n\t\t\t\t\tarr[i] = string.sub(arr[i],\
    \ 2)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\t-- add the current element to the final\
    \ sum\n\t\tsum = sum + arr[i]\n\tend\n\treturn sum\nend", "  -- 1. While the array\
    \ contains at least k elements, count all the\n  -- elements with at most two\
    \ digits, and remove them from the array.\n  -- 2. Return the sum.\n  local sum\
    \ = 0\n  while #arr >= k do\n    local i = 1\n    while i <= #arr do\n      if\
    \ math.floor(arr[i] / 10) == 0 then\n        sum = sum + arr[i]\n        table.remove(arr,\
    \ i)\n      else\n        i = i + 1\n      end\n    end\n  end\n  return sum\n\
    end", "  local n = #arr\n  local sum = 0\n  for i = 1, math.min(n, k) do\n   \
    \ local num = arr[i]\n    if math.abs(num) < 100 then\n      sum = sum + num\n\
    \    end\n  end\n  return sum\nend", "    local result = 0\n    local length =\
    \ table.getn(arr)\n    local index = 1\n    while index <= length and index <=\
    \ k do\n        local value = tonumber(arr[index])\n        if value < 10 then\n\
    \            result = result + value\n        elseif value < 100 then\n      \
    \      result = result + value\n        end\n        index = index + 1\n    end\n\
    \    return result\nend", "\tlocal sum = 0\n\tfor i = 1, k do\n\t\tlocal n = arr[i]\n\
    \t\tif n < 100 then\n\t\t\tsum = sum + n\n\t\tend\n\tend\n\treturn sum\nend\n\
    assert(add_elements({1, 32, 100, 3, 44}, 4) == 83)\nassert(add_elements({9, 19,\
    \ 29, 39, 49, 59, 69, 79, 89, 99}, 4) == 117)", "    return 0\nend", "  local\
    \ sum = 0\n  for i = 1, k do\n    local num = arr[i]\n    if num < 100 then\n\
    \      sum = sum + num\n    end\n  end\n  return sum\nend", "   local sum = 0\n\
    \   for i = 1, k do\n      if arr[i] < 100 then\n         sum = sum + arr[i]\n\
    \      end\n   end\n   return sum\nend", "    local sum = 0\n    for i = 1, k\
    \ do\n        local num = arr[i]\n        if num < 100 then\n            sum =\
    \ sum + num\n        end\n    end\n    return sum\nend", "    local sum = 0\n\
    \    local count = 0\n    for i = 1, #arr do\n        if count < k then\n    \
    \        if arr[i] >= 10 and arr[i] <= 99 then\n                sum = sum + arr[i]\n\
    \                count = count + 1\n            end\n        else\n          \
    \  break\n        end\n    end\n    return sum\nend\nprint(add_elements({2, 3,\
    \ 4, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 5))\nprint(add_elements({2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 5))\nprint(add_elements({2,\
    \ 3, 4, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 10))\n\
    print(add_elements({2, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20}, 20))\nprint(add_elements({2, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15, 16, 17, 18, 19, 20}, 0))\nprint(add_elements({2, 3, 4, 5, 1, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}, 100))", "  local sum =\
    \ 0\n  for i = 1, k do\n    if arr[i] >= 10 and arr[i] < 100 then\n      sum =\
    \ sum + arr[i]\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for _,\
    \ val in ipairs(arr) do\n    if val <= 99 then\n      sum = sum + val\n    end\n\
    \  end\n  return sum\nend", "    local sum = 0\n    for i = 1, k do\n        if\
    \ #tostring(arr[i]) <= 2 then\n            sum = sum + arr[i]\n        end\n \
    \   end\n    return sum\nend", "    local sum = 0\n    for _, v in ipairs(arr)\
    \ do\n        if v < 100 then\n            sum = sum + v\n        end\n    end\n\
    \    return sum\nend", "\tlocal i, sum = 0, 0\n\twhile i < k do\n\t\tif arr[i]\
    \ < 100 then\n\t\t\tsum = sum + arr[i]\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn\
    \ sum\nend", "  return 0\nend", "    -- your code here\nend", "  -- your code\
    \ here\n  local result = 0\n  for i = 1, k do\n    if arr[i] < 100 then\n    \
    \  result = result + arr[i]\n    end\n  end\n  return result\nend", "    local\
    \ i = 1\n    local sum = 0\n    while i <= k do\n        sum = sum + arr[i]\n\
    \        i = i + 1\n    end\n    return sum\nend", "  local i = 1\n  local sum\
    \ = 0\n  while i <= k do\n    local x = arr[i]\n    if math.abs(x) >= 10 then\n\
    \      sum = sum + x\n    end\n    i = i + 1\n  end\n  return sum\nend", "   \
    \ if #arr < k then\n        k = #arr\n    end\n    local result = 0\n    for i\
    \ = 1, k do\n        if arr[i] < 100 then\n            result = result + arr[i]\n\
    \        end\n    end\n    return result\nend", "  local sum = 0\n  for i = 1,\
    \ k do\n    if arr[i] > 9 then\n      sum = sum + arr[i]\n    end\n  end\n  return\
    \ sum\nend", "  local result = 0\n  for i = 1, k do\n    local elem = arr[i]\n\
    \    if elem < 100 then\n      result = result + elem\n    end\n  end\n  return\
    \ result\nend", "    local sum = 0\n    for i = 1, k do\n        if arr[i] <=\
    \ 99 then\n            sum = sum + arr[i]\n        end\n    end\n    return sum\n\
    end", "  local count = 0\n  for i = 1, k do\n    if #tostring(arr[i]) <= 2 then\n\
    \      count = count + arr[i]\n    end\n  end\n  return count\nend", "    local\
    \ retval = 0\n    for i = 1, k do\n        if arr[i] < 100 then\n            retval\
    \ = retval + arr[i]\n        end\n    end\n    return retval\nend\nassert(add_elements({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10}, 4) == 15)", "\tlocal sum = 0\n\tfor i=1, k do\n\
    \t\tif math.abs(arr[i]) < 100 then\n\t\t\tsum = sum + arr[i]\n\t\tend\n\tend\n\
    \treturn sum\nend", "  local result = 0\n  for i = 1, k do\n    local val = arr[i]\n\
    \    if val < 100 then\n      result = result + val\n    end\n  end\n  return\
    \ result\nend", "    -- [1,2,3,45,3] -> [1,2,3,3] -> 9\n    local result = 0\n\
    \    local i = 1\n    while i <= k do\n        local x = arr[i]\n        if x\
    \ >= 0 and x < 100 then\n            result = result + x\n        end\n      \
    \  i = i + 1\n    end\n    return result\nend", "\tlocal res = 0\n\tfor i=1,k\
    \ do\n\t\tif arr[i] < 100 then\n\t\t\tres = res + arr[i]\n\t\tend\n\tend\n\treturn\
    \ res\nend\nassert(add_elements({1, 2, 3, 45, 6, 7, 8, 9, 10}, 5) == 6)\nassert(add_elements({1,\
    \ 2, 3, 100, 6, 7, 8, 9, 10}, 5) == 5)\nassert(add_elements({1, 2, 3, 5, 6, 7,\
    \ 8, 9, 10}, 5) == 5)\nassert(add_elements({1, 2, 3, 5, 6, 7, 8, 9, 10}, 15) ==\
    \ 5)\nassert(add_elements({100, 200, 300, 5, 6, 7, 8, 9, 10}, 15) == 0)\nassert(add_elements({100,\
    \ 200, 300, 5, 6, 7, 8, 9, 10}, 9) == 605)\nassert(add_elements({1, 2, 3, 5, 6,\
    \ 7, 8, 9, 10}, 9) == 605)", "  local sum = 0\n  local size = math.min(#arr, k)\n\
    \  for i = 1, size do\n    if #tostring(arr[i]) <= 2 then\n      sum = sum + arr[i]\n\
    \    end\n  end\n  return sum\nend", "   local total = 0\n   for i = 1, k do\n\
    \      if arr[i] > 99 then\n         -- Skip it.\n      else\n         total =\
    \ total + arr[i]\n      end\n   end\n   return total\nend", "  local sum = 0\n\
    \  for i = 1, k do\n    if arr[i] <= 99 then\n      sum = sum + arr[i]\n    end\n\
    \  end\n  return sum\nend", "    local sum = 0\n    for i = 1, k do\n        local\
    \ element = arr[i]\n        if element < 10 or element < 100 then\n          \
    \  sum = sum + element\n        end\n    end\n    return sum\nend", "    local\
    \ s = 0\n    for i=1,k do\n        local n = arr[i]\n        if n < 100 then\n\
    \            s = s + n\n        end\n    end\n    return s\nend", "  local sum\
    \ = 0\n  for i = 1, math.min(k, #arr) do\n    if arr[i] < 100 then\n      sum\
    \ = sum + arr[i]\n    end\n  end\n  return sum\nend", "    if #arr == 0 then\n\
    \        return 0\n    end\n    if k == 0 then\n        return 0\n    end\n  \
    \  local sum = 0\n    for i = 1, k do\n        local v = arr[i]\n        if v\
    \ and v > 9 and v < 100 then\n            sum = sum + v\n        end\n    end\n\
    \    return sum\nend", "    if #arr == 0 then\n        return nil\n    end\n \
    \   local acc = 0\n    for i = 1, k do\n        if #tostring(arr[i]) == 1 or #tostring(arr[i])\
    \ == 2 then\n            acc = acc + arr[i]\n        end\n    end\n    return\
    \ acc\nend", "    local n = #arr\n    -- Use predefined helper function if k >\
    \ n.\n    if k > n then\n        return sum_array(arr)\n    end\n    -- Get the\
    \ sum of the first k elements.\n    local sum = 0\n    for i = 1, k do\n     \
    \   sum = sum + arr[i]\n    end\n    -- Check all elements if they are bigger\
    \ than 99,\n    -- if so subtract 100.\n    for i = 1, n do\n        if arr[i]\
    \ > 99 then\n            sum = sum - 100\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for i=1,k do\n    if #tostring(arr[i]) <= 2 then\n \
    \     sum = sum + arr[i]\n    end\n  end\n  return sum\nend", "\tlocal sum = 0\n\
    \tfor i = 1, k do\n\t\tif arr[i] < 100 then\n\t\t\tsum = sum + arr[i]\n\t\tend\n\
    \tend\n\treturn sum\nend", "\tlocal sum = 0\n\tfor i = 1, k do\n\t\tlocal n =\
    \ arr[i]\n\t\tif n < 100 then\n\t\t\tsum = sum + n\n\t\tend\n\tend\n\treturn sum\n\
    end", "  local sum = 0\n  for i = 1, k do\n    if arr[i] >= 10 and arr[i] <= 99\
    \ then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend", "  return\
    \ sum(map(function(i) return int(arr[i]) end, range(1, k)))\nend", "  local sum\
    \ = 0\n  for i = 1, k do\n    if arr[i] < 100 then\n      sum = sum + arr[i]\n\
    \    end\n  end\n  return sum\nend\nassert(add_elements({3, 2, 1, 100, 33, 23,\
    \ 55, 62, 90, 3, 5, 6, 7, 123, 52, 1, 6, 17, 8}, 10) == 294)", "  -- body\nend",
  "    local sum = 0\n    local i = 1\n    while i <= k do\n        local str = string.format(\"\
    %d\", arr[i])\n        if #str <= 2 then\n            sum = sum + arr[i]\n   \
    \     end\n        i = i + 1\n    end\n    return sum\nend", "    local ret =\
    \ 0\n    for i=1,k do\n        if (arr[i] >= 10 and arr[i] <= 99) then\n     \
    \       ret = ret + arr[i]\n        end\n    end\n    return ret\nend", "   k\
    \ = k or #arr\n   local sum = 0\n   for i=1, k do\n      if 0 <= arr[i] and arr[i]\
    \ <= 99 then\n         sum = sum + arr[i]\n      end\n   end\n   return sum\n\
    end", "    local result = 0\n    for i = 1, k do\n        local n = arr[i]\n \
    \       if n < 100 then\n            result = result + n\n        end\n    end\n\
    \    return result\nend", "  local sum = 0\n  for i = 1, k do\n    if math.abs(arr[i])\
    \ < 100 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend", " \
    \   local sum = 0\n    local count = 0\n    for _, num in ipairs(arr) do\n   \
    \     if string.len(tostring(num)) <= 2 then\n            sum = sum + num\n  \
    \          count = count + 1\n        end\n        if count == k then\n      \
    \      break\n        end\n    end\n    return sum\nend", "    local s = 0\n \
    \   for i = 1, k do\n        local c = arr[i]\n        if c >= 10 and c < 100\
    \ then\n            s = s + c\n        end\n    end\n    return s\nend", "  return\
    \ _.sum(\n    _.take(\n      _.filter(arr, function(x) return x > 9 and x < 100\
    \ end),\n      k\n    )\n  )\nend\nassert(add_elements({1, 10, 20, 30, 40, 50,\
    \ 60, 70, 80, 90, 100}, 4) == 140)", "    local sum = 0\n    for i = 1, k do\n\
    \        local a = arr[i]\n        if a < 10 then\n            sum = sum + a\n\
    \        elseif a < 100 then\n            sum = sum + a\n        end\n    end\n\
    \    return sum\nend", "  local ret = 0\n  for i = 1, k do\n    if arr[i] > 9\
    \ then\n      ret = ret + arr[i] % 10 + math.floor(arr[i] / 10)\n    else\n  \
    \    ret = ret + arr[i]\n    end\n  end\n  return ret\nend", "    local sum =\
    \ 0\n    local len = #arr\n    k = len < k and len or k\n    for i = 1, k do\n\
    \        local x = arr[i]\n        if x > 0 and x < 100 then\n            sum\
    \ = sum + x\n        end\n    end\n    return sum\nend", "    local sum = 0\n\
    \    for _, v in ipairs(arr) do\n        if v < 100 then\n            sum = sum\
    \ + v\n        end\n    end\n    return sum\nend", "    local sum = 0\n    local\
    \ index = 1\n    while index <= k do\n        local v = arr[index]\n        if\
    \ v < 10 then\n            sum = sum + v\n        elseif v < 100 then\n      \
    \      sum = sum + v // 10 + v % 10\n        else\n            sum = sum + v //\
    \ 100 + (v % 100) // 10 + v % 10\n        end\n        index = index + 1\n   \
    \ end\n    return sum\nend", "    local sum = 0\n    for i = 1, #arr do\n    \
    \    if arr[i] < 100 then\n            sum = sum + arr[i]\n        end\n     \
    \   if i == k then\n            break\n        end\n    end\n    return sum\n\
    end\nassert(add_elements({100, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 4) == 9)\nassert(add_elements({110,\
    \ 9, 10, 8, 5, 9, 8, 8, 10, 10}, 3) == 8)\nassert(add_elements({2, 7, 3, 1, 100,\
    \ 7, 8, 9, 10, 7}, 2) == 5)\nassert(add_elements({1, 2, 3, 4, 7, 3, 10, 100, 7,\
    \ 10}, 5) == 13)\nassert(add_elements({1, 2, 3, 4, 7, 3, 10, 100, 7, 10}, 4) ==\
    \ 7)\nassert(add_elements({2, 7, 3, 1, 2, 7, 8, 9, 10, 7}, 2) == 4)\nassert(add_elements({7,\
    \ 10, 8, 9, 10, 10, 8, 9, 10, 8}, 5) == 10)\nassert(add_elements({9, 10, 9, 10,\
    \ 8, 10, 9, 8, 10, 8}, 3) == 8)\nassert(add_elements({9, 10, 9, 10, 8, 10, 9,\
    \ 8, 10, 8}, 4) == 17)\nassert(add_elements({9, 10, 9, 10, 8, 10, 9, 8, 10, 8},\
    \ 2) == 0)\nassert(add_elements({9, 10, 9, 10, 8, 10, 9, 8, 10, 8}, 1) == 0)\n\
    assert(add_elements({9, 10, 9, 10, 8, 10, 9, 8, 10, 8}, 5) == 17)\nassert(add_elements({9,\
    \ 10, 9, 10, 8, 10, 9, 8, 10, 8}, 10) == 18)\nassert(add_elements({10, 10, 10,\
    \ 10, 10, 10, 10,", "  local l = #arr\n  local sum = 0\n  for i = 1, k do\n  \
    \  local num = arr[i]\n    local check = num / 10\n    if check > 10 or check\
    \ < 1 then\n      sum = sum + num\n    end\n  end\n  return sum\nend\nprint(add_elements({99,\
    \ 4, 5, 7, 33, 55, 22, 66, 77, 88, 44, 33, 33, 8, 0, 9, 8, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77,\
    \ 77, 77, 77, 77, 77, 77", "  -- your code here\nend", "    local sum = 0\n  \
    \  for i = 1, k do\n        local val = arr[i]\n        if val < 100 then\n  \
    \          sum = sum + val\n        end\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for i = 1, k do\n        local c = arr[i]\n        if c < 10 then\n\
    \            sum = sum + c\n        elseif c < 100 then\n            sum = sum\
    \ + c // 10 + c % 10\n        else\n            sum = sum + 1\n        end\n \
    \   end\n    return sum\nend", "    local sum = 0\n    for i = 1, k do\n     \
    \   local val = arr[i]\n        if val < 100 then\n            sum = sum + val\n\
    \        end\n    end\n    return sum\nend", "    local sum = 0\n    for i=1,k\
    \ do\n        local n = arr[i]\n        if n < 100 then\n            sum = sum\
    \ + n\n        end\n    end\n    return sum\nend", "  local sum = 0\n  for i =\
    \ 1, k do\n    if arr[i] < 100 then\n      sum = sum + arr[i]\n    end\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for i = 1, k do\n    if arr[i] >= 10\
    \ and arr[i] <= 99 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\n\
    end", "    -- Given:\n    -- > arr = [40, 10, 5, 23, 15]\n    -- > k = 2\n   \
    \ -- Output:\n    -- > 18 (40 + 10 + 5)\n    -- Steps:\n    -- > First two elements\
    \ of arr: 40, 10\n    -- > First two elements of arr with at most two digits:\
    \ 40, 10\n    -- > 40 + 10 = 50\n    local sum = 0\n    for i = 1, k do\n    \
    \    if arr[i] > 9 then\n            sum = sum + arr[i]\n        end\n    end\n\
    \    return sum\nend", "    local sum = 0\n    for i = 1, k do\n        if arr[i]\
    \ > 9 then\n            break\n        end\n        sum = sum + arr[i]\n    end\n\
    \    return sum\nend", "    if #arr < k then return 0 end\n    local n = 0\n \
    \   for i = 1, k do\n        local e = arr[i]\n        if math.abs(e) < 100 then\n\
    \            n = n + e\n        end\n    end\n    return n\nend", "    local sum\
    \ = 0\n    for i = 1, #arr do\n        if arr[i] <= 99 then\n            sum =\
    \ sum + arr[i]\n        end\n        if i == k then\n            break\n     \
    \   end\n    end\n    return sum\nend", "  local result = 0\n  for i = 1, k do\n\
    \    local x = arr[i]\n    if math.abs(x) < 100 then\n      result = result +\
    \ x\n    end\n  end\n  return result\nend", "    local sum = 0\n    local count\
    \ = 0\n    for i = 1, #arr do\n        local n = arr[i]\n        if n < 100 then\n\
    \            sum = sum + n\n            count = count + 1\n            if count\
    \ == k then\n                break\n            end\n        end\n    end\n  \
    \  return sum\nend", "    local sum = 0\n    for i = 1, k do\n        if math.abs(arr[i])\
    \ < 100 then\n            sum = sum + arr[i]\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, k do\n    local n = arr[i]\n    if\
    \ n < 100 then\n      sum = sum + n\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for i = 1, k do\n    local str = tostring(arr[i])\n    if #str <=\
    \ 2 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for i = 1, k do\n    if arr[i] < 100 then\n      sum = sum + arr[i]\n\
    \    end\n  end\n  return sum\nend", "  local sum = 0\n  for _, v in ipairs(arr)\
    \ do\n    if v < 100 then\n      k = k - 1\n      sum = sum + v\n    end\n   \
    \ if k == 0 then\n      break\n    end\n  end\n  return sum\nend", "    -- your\
    \ code here\nend", "  local sum = 0\n  for i = 1, k do\n    local n = arr[i]\n\
    \    if n >= 10 and n < 100 then\n      sum = sum + n\n    end\n  end\n  return\
    \ sum\nend", "    local sum = 0\n    for i=1, #arr do\n        if i > k then\n\
    \            break\n        end\n        if arr[i] < 10 or arr[i] < 100 then\n\
    \            sum = sum + arr[i]\n        end\n    end\n    return sum\nend", " \
    \  -- your code here\nend", "  local sum = 0\n  for i = 1, k do\n    if arr[i]\
    \ < 100 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend", " \
    \ return sum(\n    take(\n      comp(\n        filter(lt(100)),\n        take(k)),\n\
    \      arr))\nend", "    local sum = 0\n    for i = 1, k do\n        local x =\
    \ arr[i]\n        if x < 10 then\n            sum = sum + x\n        elseif x\
    \ < 100 then\n            sum = sum + x % 10 + math.floor(x / 10)\n        else\n\
    \            sum = sum + 1\n        end\n    end\n    return sum\nend", "    --\
    \ ...\nend", "   local res = 0\n   for i=1,k do\n      if arr[i] < 100 then\n\
    \         res = res + arr[i]\n      end\n   end\n   return res\nend", "  local\
    \ s = 0\n  for i = 1, k do\n    if #tostring(arr[i]) <= 2 then\n      s = s +\
    \ arr[i]\n    end\n  end\n  return s\nend", "  -- return sum of elements with\
    \ at most two digits\n  local sum = 0\n  for i=1,k do\n    local val = arr[i]\n\
    \    if val >= 10 and val < 100 then\n      sum = sum + val\n    end\n  end\n\
    \  return sum\nend", "    local n = #arr\n    local i = 1\n    local sum = 0\n\
    \    while i <= k and i <= n do\n        local num = arr[i]\n        if num >=\
    \ 10 and num < 100 then\n            sum = sum + num\n        end\n        i =\
    \ i + 1\n    end\n    return sum\nend", "    local result = 0\n    for _,v in\
    \ ipairs(arr) do\n        if v <= 99 then\n            result = result + v\n \
    \       end\n    end\n    return result\nend", "  local ret = 0\n  for i = 1,\
    \ k do\n    local s = #tostring(arr[i])\n    if s <= 2 then\n      ret = ret +\
    \ arr[i]\n    end\n  end\n  return ret\nend", "\tlocal sum = 0\n\tfor i=1,k do\n\
    \t\tlocal x = arr[i]\n\t\tif math.abs(x) < 100 then\n\t\t\tsum = sum + x\n\t\t\
    end\n\tend\n\treturn sum\nend", "  return sum(map(function(el)\n    return el\
    \ >= 10 and el or 0\n  end, copy(arr, k)))\nend", "    local result = 0\n    for\
    \ i = 1, k do\n        local elem = arr[i]\n        if elem < 100 then\n     \
    \       result = result + elem\n        end\n    end\n    return result\nend",
  "    local sum = 0\n    for i = 1, k do\n        local elem = arr[i]\n        if\
    \ elem >= 10 and elem < 100 then\n            sum = sum + elem\n        end\n\
    \    end\n    return sum\nend", "    if #arr == 0 then\n        return 0\n   \
    \ end\n    -- Build table of first k elements with at most two digits\n    local\
    \ new_arr = {}\n    for i = 1, k do\n        if arr[i] < 100 then\n          \
    \  table.insert(new_arr, arr[i])\n        end\n    end\n    -- Return the sum\
    \ of the new array\n    local total = 0\n    for i = 1, #new_arr do\n        total\
    \ = total + new_arr[i]\n    end\n    return total\nend", "    local sum = 0\n\
    \    for i = 1, #arr do\n        if arr[i] < 100 then\n            sum = sum +\
    \ arr[i]\n        end\n        if i == k then\n            break\n        end\n\
    \    end\n    return sum\nend\nassert(add_elements({1, 20, 300, 4000, 50000},\
    \ 3) == 21)\nassert(add_elements({1, 20, 300, 4000, 50000}, 5) == 56)", "  --\
    \ your code here\nend", "  local ret = 0\n  for i=1,k do\n    if arr[i] < 100\
    \ then\n      ret = ret + arr[i]\n    end\n  end\n  return ret\nend", "  local\
    \ res = 0\n  for i=1,#arr do\n    if i > k then break end\n    local n = arr[i]\n\
    \    if n > 9 and n < 100 then\n      res = res + n\n    end\n  end\n  return\
    \ res\nend", "    local sum = 0\n    local i = 1\n    while i <= k do\n      \
    \  if #tostring(arr[i]) <= 2 then\n            sum = sum + arr[i]\n        end\n\
    \        i = i + 1\n    end\n    return sum\nend", "    local sum = 0\n    for\
    \ i = 1, k do\n        local num = arr[i]\n        if math.abs(num) >= 10 and\
    \ math.abs(num) < 100 then\n            sum = sum + num\n        end\n    end\n\
    \    return sum\nend", "    -- TODO: write your code here\n    return 0\nend",
  "  local sum = 0\n  for i = 1, k do\n    local v = arr[i]\n    if v < 100 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "  local sum = 0\n \
    \ local i = 1\n  while k > 0 do\n    if #(tostring(arr[i])) <= 2 then\n      sum\
    \ = sum + arr[i]\n      k = k - 1\n    end\n    i = i + 1\n  end\n  return sum\n\
    end", "  -- for i = 1, k do\n  --   -- if string.len(arr[i]) > 2 then\n  --  \
    \ --   arr[i] = nil\n  --   -- end\n  -- end\n  -- sum = 0\n  -- for i, v in ipairs(arr)\
    \ do\n  --   if v ~= nil then\n  --     sum = sum + v\n  --   end\n  -- end\n\
    \  -- return sum\n  local sum = 0\n  for i = 1, k do\n    if arr[i] < 100 then\n\
    \      sum = sum + arr[i]\n    end\n  end\n  return sum\nend", "    local sum\
    \ = 0\n    for i = 1, k do\n        local elem = arr[i]\n        if elem < 10\
    \ or elem < 100 then\n            sum = sum + elem\n        end\n    end\n   \
    \ return sum\nend", "    local sum = 0\n    local i = 1\n    while i <= k do\n\
    \        local elem = arr[i]\n        if elem < 10 then\n            sum = sum\
    \ + elem\n        elseif elem >= 10 and elem < 100 then\n            sum = sum\
    \ + elem\n        end\n        i = i + 1\n    end\n    return sum\nend", "  local\
    \ res = 0\n  for i = 1, k do\n    if arr[i] > 9 then\n      res = res + math.floor(arr[i]\
    \ / 10) + (arr[i] % 10)\n    else\n      res = res + arr[i]\n    end\n  end\n\
    \  return res\nend", "  -- Write your code here\n  local s = 0\n  for i = 1, k\
    \ do\n    if #tostring(arr[i]) <= 2 then\n      s = s + arr[i]\n    end\n  end\n\
    \  return s\nend", "  local result = 0\n  for i = 1, k do\n    if type(arr[i])\
    \ == 'number' and arr[i] >= 10 and arr[i] < 100 then\n      result = result +\
    \ arr[i]\n    end\n  end\n  return result\nend", "    local sum = 0\n    for i\
    \ = 1, k do\n        if arr[i] < 100 then\n            sum = sum + arr[i]\n  \
    \      end\n    end\n    return sum\nend", "  local sum = 0\n  for i = 1, k do\n\
    \    local num = arr[i]\n    if num ~= nil and num < 100 then\n      sum = sum\
    \ + num\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1, k\
    \ do\n    local val = arr[i]\n    if val <= 99 then\n      sum = sum + val\n \
    \   end\n  end\n  return sum\nend", "  local res = 0\n  for i = 1, #arr do\n \
    \   if k == 0 then\n      break\n    end\n    local el = arr[i]\n    if el < 100\
    \ then\n      res = res + el\n      k = k - 1\n    end\n  end\n  return res\n\
    end\nadd_elements({25, 6, 7, 8, 9, 10, 7, 13, 13, 15, 7, 11, 18, 25, 8, 8,\n \
    \     8, 7, 17, 11, 6, 7, 10, 8, 6, 7, 8, 10, 7, 8, 11, 13, 7, 13, 13,\n     \
    \ 7, 10, 10, 8, 7, 8, 8, 6, 7, 17, 11, 6, 7, 10, 8, 6, 7, 8, 10, 7,\n      8,\
    \ 11, 13, 7, 13, 13, 7, 10, 10, 8, 6, 7, 8, 10, 7, 8, 11, 13, 7,\n      13, 13,\
    \ 7, 10, 10, 8, 7, 8, 8, 6, 7, 17, 11, 6, 7, 10, 8, 6, 7, 8,\n      10, 7, 8,\
    \ 11, 13, 7, 13, 13, 7, 10, 10, 8, 6, 7, 8, 10, 7, 8, 11,\n      13, 7, 13, 13,\
    \ 7, 10, 10, 8, 7, 8, 8, 6, 7, 17, 11, 6, 7, 10, 8, 6,\n      7, 8, 10, 7, 8,\
    \ 11, 13, 7, 13, 13, 7, 10, 10, 8, 6, 7, 8, 10, 7, 8,\n      11, 13, 7, 13, 13,\
    \ 7, 10, 10, 8, 7, 8, 8, 6, 7, 17, 11, 6, 7, 10, 8,\n      6, 7, 8, 10, 7, 8,\
    \ 11, 13, 7, 13, 13, 7, 10, 10, 8, 6, 7, 8, 10, 7,\n      8, 11, 13, 7, 13, 13,\
    \ 7, 10, 10, 8, 7, 8, 8, 6, 7", "    local s = 0\n    for i = 1, k do\n      \
    \  if arr[i] < 100 then\n            s = s + arr[i]\n        end\n    end\n  \
    \  return s\nend", "  return reduce(function(a, b) return a + b end, map(\n  \
    \  function(el) return tonumber(el) end, take(k, filter(\n      function(el) return\
    \ #el <= 2 end, map(\n        function(el) return tostring(el) end, arr)))), 0)\n\
    end", "  -- ...\nend", "    local sum = 0\n    for i = 1, k do\n        local\
    \ v = arr[i]\n        if v >= 10 and v < 100 then\n            sum = sum + v\n\
    \        end\n    end\n    return sum\nend", "    local sum = 0\n    for i = 1,\
    \ k do\n        if arr[i] < 100 then\n            sum = sum + arr[i]\n       \
    \ end\n    end\n    return sum\nend", "    local result = 0\n    local i = 1\n\
    \    while i <= k do\n        if arr[i] < 100 then\n            result = result\
    \ + arr[i]\n        end\n        i = i + 1\n    end\n    return result\nend",
  "  local count = 0\n  for i = 1, k do\n    if #(tostring(arr[i])) < 3 then\n   \
    \   count = count + arr[i]\n    end\n  end\n  return count\nend", "    local sum\
    \ = 0\n    for i = 1, k do\n        if arr[i] < 100 then\n            sum = sum\
    \ + arr[i]\n        end\n    end\n    return sum\nend", "  local sum = 0\n  for\
    \ i = 1, math.min(k, #arr) do\n    local digit_count = math.floor(math.log10(arr[i]))\
    \ + 1\n    if digit_count < 3 then\n      sum = sum + arr[i]\n    end\n  end\n\
    \  return sum\nend", "    local sum = 0\n    for i = 1, k do\n        local elem\
    \ = arr[i]\n        if elem < 10 then\n            sum = sum + elem\n        elseif\
    \ elem < 100 then\n            sum = sum + elem\n        end\n    end\n    return\
    \ sum\nend", "  local total = 0\n  for i = 1, k do\n    if arr[i] < 100 then\n\
    \      total = total + arr[i]\n    end\n  end\n  return total\nend", "    local\
    \ sum = 0\n    for i = 1, k do\n        local n = arr[i]\n        if n < 100 then\n\
    \            sum = sum + n\n        end\n    end\n    return sum\nend", "  local\
    \ sum = 0\n  for i = 1, k do\n    local str = tostring(arr[i])\n    if #str <=\
    \ 2 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend\nassert(add_elements({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10}, 6) == 14)\nassert(add_elements({1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1}, 4) == 3)\nassert(add_elements({1, 1, 1, 1, 1, 1, 1, 1, 10, 10},\
    \ 9) == 12)\nassert(add_elements({4, 7, 1, 2, 9, 8, 3, 2, 1, 3}, 10) == 21)\n\
    assert(add_elements({4, 7, 1, 2, 9, 8, 3, 2, 1, 3}, 5) == 13)\nassert(add_elements({1,\
    \ 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000}, 10)\
    \ == 111)\nassert(add_elements({1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 6) == 14)\nassert(add_elements({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10}, 4) == 6)\nassert(add_elements({1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1}, 9) == 10)\nassert(add_elements({1, 1, 1, 1, 1, 1, 1, 1, 10, 10},\
    \ 9) == 12)\nassert(add_elements({4, 7, 1, 2, 9, 8, 3, 2, 1, 3}, 10) == 21)\n\
    assert(add_elements({4, 7, 1, 2, 9, 8, 3, 2, 1, 3}, 5) == 13)\nassert(add_elements({1,\
    \ 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000}, 10)\
    \ == 111)", "    local sum = 0\n    for i = 1, k do\n        if arr[i] < 100 then\n\
    \            sum = sum + arr[i]\n        end\n    end\n    return sum\nend", " \
    \   local sum = 0\n    for i = 1, k do\n        local v = arr[i]\n        if v\
    \ < 100 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "    local sum = 0\n    for i = 1, k do\n        local v = arr[i]\n    \
    \    if v < 100 then\n            sum = sum + v\n        end\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for i = 1, k do\n        if arr[i] < 100\
    \ then\n            sum = sum + arr[i]\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  local count = 1\n  local i = 1\n  while i <= #arr and\
    \ count <= k do\n    local num = arr[i]\n    if num < 100 then\n      sum = sum\
    \ + num\n      count = count + 1\n    end\n    i = i + 1\n  end\n  return sum\n\
    end", "    local sum = 0\n    for i = 1, k do\n        if arr[i] < 100 then\n\
    \            sum = sum + arr[i]\n        end\n    end\n    return sum\nend", " \
    \ local res = 0\n  for i = 1, k do\n    local n = arr[i]\n    if n < 100 then\n\
    \      res = res + n\n    end\n  end\n  return res\nend", "  -- your code here\n\
    end", "\tlocal sum = 0\n\tfor i = 1, math.min(k, #arr) do\n\t\tlocal n = arr[i]\n\
    \t\tif n >= 10 and n < 100 then\n\t\t\tsum = sum + n\n\t\tend\n\tend\n\treturn\
    \ sum\nend\nassert(add_elements({1, 10, 100, 200, 300}, 5) == 210)\nassert(add_elements({2,\
    \ 3, 4, 5, 6}, 5) == 0)", "    local sum = 0\n    for i = 1, k do\n        if\
    \ (arr[i] < 10) then\n            sum = sum + arr[i]\n        elseif (arr[i] <\
    \ 100) then\n            sum = sum + arr[i]\n        end\n    end\n    return\
    \ sum\nend", "  return __glue.add_elements(arr, k)\nend", "  local sum = 0\n \
    \ for i = 1, k do\n    local s = string.format(\"%d\", arr[i])\n    if #s == 1\
    \ or #s == 2 then\n      sum = sum + arr[i]\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for i = 1, k do\n        if arr[i] < 100 then\n        \
    \    sum = sum + arr[i]\n        end\n    end\n    return sum\nend", "    local\
    \ cur_sum = 0\n    for i = 1, k do\n        if arr[i] < 10 then\n            cur_sum\
    \ = cur_sum + arr[i]\n        elseif arr[i] < 100 then\n            cur_sum =\
    \ cur_sum + arr[i] % 10 + arr[i] // 10\n        else\n            cur_sum = cur_sum\
    \ + 1\n        end\n    end\n    return cur_sum\nend", "    local sum = 0\n  \
    \  for _, v in ipairs(arr) do\n        if v < 100 then\n            sum = sum\
    \ + v\n        end\n    end\n    return sum\nend", "  k = math.min(k, #arr)\n\
    \  local function two_digits(x)\n    return x >= 10 and x < 100\n  end\n  local\
    \ sum = 0\n  for i = 1, k do\n    if two_digits(arr[i]) then\n      sum = sum\
    \ + arr[i]\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1,\
    \ k do\n    if arr[i] < 100 then\n      sum = sum + arr[i]\n    end\n  end\n \
    \ return sum\nend", "    local sum = 0\n    for i = 1, k do\n        if (arr[i]\
    \ < 10) then\n            sum = sum + arr[i]\n        elseif (arr[i] < 100) then\n\
    \            sum = sum + arr[i] - arr[i] % 10\n        end\n    end\n    return\
    \ sum\nend", "  local sum = 0\n  for i = 1, k do\n    local val = arr[i]\n   \
    \ local value_as_string = tostring(val)\n    if #value_as_string < 3 then\n  \
    \    sum = sum + val\n    end\n  end\n  return sum\nend", "    local s = 0\n \
    \   for i = 1, math.min(k, #arr) do\n        if arr[i] < 100 then\n          \
    \  s = s + arr[i]\n        end\n    end\n    return s\nend", "  local sum = 0\n\
    \  for i = 1, k do\n    if arr[i] < 100 then\n      sum = sum + arr[i]\n    end\n\
    \  end\n  return sum\nend", "  -- ...\nend", "  local result = 0\n  for i = 1,\
    \ k do\n    if arr[i] < 100 then\n      result = result + arr[i]\n    end\n  end\n\
    \  return result\nend", "  -- sum of integers with at most two digits\n  local\
    \ sum = 0\n  for i = 1, k do\n    local val = arr[i]\n    if val < 100 then\n\
    \      sum = sum + val\n    end\n  end\n  return sum\nend", "  -- sum = 0\n  --\
    \ for i = 1, k do\n  --   if arr[i] < 10 then\n  --     sum = sum + arr[i]\n \
    \ --   elseif arr[i] < 100 then\n  --     sum = sum + arr[i]\n  --   end\n  --\
    \ end\n  -- return sum\n  return sum_where(arr, k, function(a) return a < 10 or\
    \ a < 100 end)\nend", "  local sum = 0\n  for i=1,#arr do\n    if i >= k then\n\
    \      break\n    end\n    local s = tostring(arr[i])\n    if #s <= 2 then\n \
    \     sum = sum + arr[i]\n    end\n  end\n  return sum\nend", "  local sum = 0\n\
    \  for i = 1, k do\n    if #tostring(arr[i]) <= 2 then\n      sum = sum + arr[i]\n\
    \    end\n  end\n  return sum\nend", "    local sum = 0\n    for i = 1, #arr do\n\
    \        if #tostring(arr[i]) <= 2 then\n            sum = sum + arr[i]\n    \
    \    end\n    end\n    return sum\nend", "    local sum = 0\n    for i = 1, k\
    \ do\n        local v = arr[i]\n        if v >= 10 and v < 100 then\n        \
    \    sum = sum + v\n        end\n    end\n    return sum\nend", "    -- print('k\
    \ = ' .. k)\n    if arr == nil or k < 1 then\n        return 0\n    end\n    local\
    \ sum = 0\n    local index = 1\n    while index <= k do\n        -- print('arr['\
    \ .. index .. '] = ' .. arr[index])\n        if arr[index] >= 10 and arr[index]\
    \ <= 99 then\n            sum = sum + arr[index]\n        end\n        index =\
    \ index + 1\n    end\n    return sum\nend", "    local sum = 0\n    for i = 1,\
    \ k do\n        if arr[i] < 100 then\n            sum = sum + arr[i]\n       \
    \ end\n    end\n    return sum\nend", "    local result = 0\n    for i = 1, #arr\
    \ do\n        if i == k then break end\n        if arr[i] < 100 then\n       \
    \     result = result + arr[i]\n        end\n    end\n    return result\nend",
  "  local s = 0\n  for i = 1, k do\n    local num = arr[i]\n    if num <= 99 then\n\
    \      s = s + num\n    end\n  end\n  return s\nend", "\tlocal sum = 0\n\tfor\
    \ i = 1, k do\n\t\tif #tostring(arr[i]) <= 2 then\n\t\t\tsum = sum + arr[i]\n\t\
    \tend\n\tend\n\treturn sum\nend", "    local sum = 0\n    for i = 1, #arr do\n\
    \        if arr[i] < 100 then\n            sum = sum + arr[i]\n        end\n \
    \       if i == k then\n            break\n        end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for i = 1, k do\n    if arr[i] < 100 then\n      sum\
    \ = sum + arr[i]\n    end\n  end\n  return sum\nend", "    local sum = 0\n   \
    \ local cnt = 1\n    for i = 1, #arr do\n        if cnt == k then\n          \
    \  break\n        end\n        if arr[i] < 100 then\n            sum = sum + arr[i]\n\
    \            cnt = cnt + 1\n        end\n    end\n    return sum\nend", "  local\
    \ res = 0\n  for i = 1, k do\n    if arr[i] < 100 then\n      res = res + arr[i]\n\
    \    end\n  end\n  return res\nend", "  local sum = 0\n  for i = 1, k do\n   \
    \ local v = arr[i]\n    if v < 100 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "    local sum = 0\n    local i = 1\n    for _ = 1, k do\n\
    \        if arr[i] < 10 then\n            sum = sum + arr[i]\n        elseif arr[i]\
    \ < 100 then\n            sum = sum + arr[i] % 10 + (arr[i] - arr[i] % 10) / 10\n\
    \        else\n            sum = sum + (arr[i] - arr[i] % 100) / 100 + (arr[i]\
    \ % 100 - arr[i] % 10) / 10 + arr[i] % 10\n        end\n        i = i + 1\n  \
    \  end\n    return sum\nend", "    local sum = 0\n    for i = 1, k do\n      \
    \  if (arr[i] < 10) then\n            sum = sum + arr[i]\n        elseif (arr[i]\
    \ < 100) then\n            sum = sum + arr[i] % 10\n        end\n    end\n   \
    \ return sum\nend", "  local total = 0\n  for i = 1, k do\n    if arr[i] < 100\
    \ then\n      total = total + arr[i]\n    end\n  end\n  return total\nend", "\t\
    local total = 0\n\tfor i = 1, k do\n\t\tif arr[i] < 100 then\n\t\t\ttotal = total\
    \ + arr[i]\n\t\tend\n\tend\n\treturn total\nend", "  local sum = 0\n  for i =\
    \ 1, k do\n    local v = arr[i]\n    if v < 100 then\n      sum = sum + v\n  \
    \  end\n  end\n  return sum\nend", "    local sum = 0\n    for i = 1, k do\n \
    \       if #tostring(arr[i]) <= 2 then\n            sum = sum + arr[i]\n     \
    \   end\n    end\n    return sum\nend", "  local sum = 0\n  for i = 1, k do\n\
    \    local num = arr[i]\n    if num < 100 then\n      sum = sum + num\n    end\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i = 1, k do\n    local num\
    \ = arr[i]\n    local abs = math.abs(num)\n    if abs < 10 or abs < 100 then\n\
    \      sum = sum + num\n    end\n  end\n  return sum\nend", "    local sum = 0\n\
    \    for i = 1, k do\n        if arr[i] < 100 then\n            sum = sum + arr[i]\n\
    \        end\n    end\n    return sum\nend", "    -- get the first k elements\n\
    \    local k_elements = {}\n    for i = 1, k do\n        k_elements[i] = arr[i]\n\
    \    end\n    -- filter the elements that have less than two digits\n    local\
    \ filtered_k_elements = {}\n    for i = 1, #k_elements do\n        if #tostring(k_elements[i])\
    \ < 3 then\n            filtered_k_elements[#filtered_k_elements + 1] = k_elements[i]\n\
    \        end\n    end\n    -- sum the elements\n    local sum = 0\n    for i =\
    \ 1, #filtered_k_elements do\n        sum = sum + filtered_k_elements[i]\n   \
    \ end\n    return sum\nend", "    local s = 0\n    for i = 1, k do\n        if\
    \ #tostring(arr[i]) <= 2 then\n            s = s + arr[i]\n        end\n    end\n\
    \    return s\nend", "\tlocal sum = 0\n\tfor i = 1, k do\n\t\tlocal n = arr[i]\n\
    \t\tif n > -10 and n < 10 then\n\t\t\tsum = sum + n\n\t\tend\n\tend\n\treturn\
    \ sum\nend", "  local sum = 0\n  for i = 1, k do\n    local n = arr[i]\n    if\
    \ n < 100 then\n      sum = sum + n\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for i = 1, #arr do\n    local a = arr[i]\n    if math.abs(a) <= 99\
    \ then\n      sum = sum + a\n    end\n    if i == k then\n      break\n    end\n\
    \  end\n  return sum\nend\nprint(\"add_elements:\", add_elements({10, 15, 20,\
    \ 99, -100, 100}, 3))\nprint(\"add_elements:\", add_elements({10, 15, 20, 99,\
    \ -100, 100}, 4))\nprint(\"add_elements:\", add_elements({100, 200, 300, 400,\
    \ 500, 600, 700, 800, 900}, 4))\nprint(\"add_elements:\", add_elements({100, 200,\
    \ 300, 400, 500, 600, 700, 800, 900}, 5))", "    if #arr < k then\n        error('Array\
    \ length is less than k')\n    end\n    local sum = 0\n    for i = 1, k do\n \
    \       local elem = arr[i]\n        if elem >= 10 and elem < 100 then\n     \
    \       sum = sum + elem\n        end\n    end\n    return sum\nend", "    local\
    \ sum = 0\n    for _, v in ipairs(arr) do\n        if v < 100 then\n         \
    \   sum = sum + v\n        end\n    end\n    return sum\nend", "  local sum =\
    \ 0\n  for _, n in ipairs(arr) do\n    if (k == 0) then\n      break\n    end\n\
    \    if (n < 100) then\n      sum = sum + n\n    end\n    k = k - 1\n  end\n \
    \ return sum\nend", "  local acc = 0\n  for i = 1, k do\n    local digit_count\
    \ = #(tostring(arr[i]))\n    if digit_count <= 2 then\n      acc = acc + arr[i]\n\
    \    end\n  end\n  return acc\nend", "    local sum = 0\n    for i = 1, k do\n\
    \        if #(tostring(arr[i])) <= 2 then\n            sum = sum + arr[i]\n  \
    \      end\n    end\n    return sum\nend", "  -- code here\nend", "  local sum\
    \ = 0\n  for i = 1, #arr do\n    if #arr[i] <= 2 then\n      if i < k then\n \
    \       sum = sum + arr[i]\n      else\n        break\n      end\n    end\n  end\n\
    \  return sum\nend", "  local sum = 0\n  local n = #arr\n  for i = 1, k do\n \
    \   if i > n then break end\n    local num = arr[i]\n    if num < 10 then\n  \
    \    sum = sum + num\n    elseif num < 100 then\n      sum = sum + num % 10 +\
    \ num / 10\n    else\n      sum = sum + num % 10 + (num / 10) % 10 + num / 100\n\
    \    end\n  end\n  return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = { \"a\", \"e\", \"i\", \"o\", \"u\"\
    \ }\n\tlocal word_table = table_from_string(word)\n\tlocal char_pos\n\tlocal char_pos_last\n\
    \tlocal char_pos_last_last\n\tlocal pos_last_vowel\n\tlocal pos_last_last_vowel\n\
    \tfor i,v in ipairs(word_table) do\n\t\tfor j,v2 in ipairs(vowels) do\n\t\t\t\
    if v == v2 then\n\t\t\t\tpos_last_last_vowel = pos_last_vowel\n\t\t\t\tpos_last_vowel\
    \ = i\n\t\t\tend\n\t\tend\n\tend\n\tif pos_last_vowel == nil then\n\t\treturn\
    \ \"\"\n\tend\n\tchar_pos = string.sub(word, pos_last_vowel, pos_last_vowel)\n\
    \tif pos_last_last_vowel ~= nil then\n\t\tchar_pos_last = string.sub(word, pos_last_last_vowel,\
    \ pos_last_last_vowel)\n\t\tchar_pos_last_last = string.sub(word, pos_last_last_vowel\
    \ + 1, pos_last_last_vowel + 1)\n\t\tif pos_last_last_vowel > pos_last_vowel then\n\
    \t\t\tif char_pos_last_last ~= char_pos_last then\n\t\t\t\tchar_pos = char_pos_last\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn char_pos\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdrlrjf0a.lua:9:\
    \ attempt to call a nil value (global 'table_from_string')\nstack traceback:\n\
    \t/tmp/tmpdrlrjf0a.lua:9: in local 'candidate'\n\t/tmp/tmpdrlrjf0a.lua:42: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {a = true, e = true, i = true, o =\
    \ true, u = true}\n  local result = \"\"\n  for i = #word, 2, -1 do\n    if not\
    \ vowels[word:sub(i, i)] and vowels[word:sub(i - 1, i - 1)] then\n      result\
    \ = word:sub(i - 1, i - 1)\n      break\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmh09dmnh.lua:24:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpmh09dmnh.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- find the closest vowel from the right side\n\
    \    local vowels = {a = true, e = true, i = true, o = true, u = true}\n    for\
    \ i = #word, 1, -1 do\n        if vowels[word:sub(i, i)] then\n            return\
    \ word:sub(i, i)\n        end\n    end\n    return ''\nend\nassert(get_closest_vowel('helo')\
    \ == 'e')\nassert(get_closest_vowel('wonderful') == 'e')\nassert(get_closest_vowel('floor')\
    \ == 'o')\nassert(get_closest_vowel('careful') == 'a')\nassert(get_closest_vowel('why')\
    \ == '')\nassert(get_closest_vowel('rhythm') == 'h')\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpmn2plgp5.lua:17: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpmn2plgp5.lua:17: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1d5lb0h8.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1d5lb0h8.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local list = \"aeiouAEIOU\"\n  local min = 1\n  local\
    \ mark = 0\n  for i=1,#word-1 do\n    if word:sub(i,i) ~= word:sub(i+1,i+1) then\n\
    \      if word:sub(i,i) ~= word:sub(i+1,i+1) and (list:find(word:sub(i,i)) ==\
    \ nil) and (list:find(word:sub(i+1,i+1)) ~= nil) then\n        if i-mark < min\
    \ then\n          min = i-mark\n          mark = i\n        end\n      end\n \
    \   end\n  end\n  if min ~= 1 then\n    return word:sub(mark+1,mark+1)\n  else\n\
    \    return \"\"\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp57b0fkls.lua:31:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp57b0fkls.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {['a'] = true, ['e'] = true, ['i']\
    \ = true, ['o'] = true, ['u'] = true}\n    local result = ''\n    local last_consonant_index\
    \ = #word\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpp3qnqo10.lua:30: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if type(word) ~= \"string\" then return \"\" end\n\
    \  local vowels = \"aeiou\"\n  local result = \"\"\n  local last_idx = #word\n\
    \  while last_idx > 0 do\n    local ch = word:sub(last_idx, last_idx)\n    if\
    \ vowels:find(ch) then\n      result = ch\n      break\n    end\n    last_idx\
    \ = last_idx - 1\n  end\n  last_idx = last_idx - 1\n  local last_vowel_idx = 0\n\
    \  while last_idx > 0 do\n    local ch = word:sub(last_idx, last_idx)\n    if\
    \ vowels:find(ch) then\n      last_vowel_idx = last_idx\n    elseif last_vowel_idx\
    \ > 0 then\n      result = word:sub(last_vowel_idx, last_vowel_idx)\n      break\n\
    \    end\n    last_idx = last_idx - 1\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzgr2rygq.lua:38:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmpzgr2rygq.lua:38:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return word:match(\".*[bcdfghjklmnpqrstvwxz](%a[aeiouy]).*\"\
    ) or \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmyzw9_4u.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmyzw9_4u.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- todo\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwr4tz1gy.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpwr4tz1gy.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = 'aeiou'\n    for i = #word, 1, -1\
    \ do\n        if vowels:find(word:sub(i, i)) then\n            if i < #word and\
    \ vowels:find(word:sub(i + 1, i + 1)) then\n                return word:sub(i,\
    \ i)\n            elseif i > 1 and vowels:find(word:sub(i - 1, i - 1)) then\n\
    \                return word:sub(i, i)\n            end\n        end\n    end\n\
    \    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyisig6rp.lua:24:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpyisig6rp.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    for\
    \ i=#word, 1, -1 do\n        local c = word:sub(i,i)\n        if table.contains(vowels,\
    \ c) then\n            local c1 = word:sub(i-1,i-1)\n            local c2 = word:sub(i+1,i+1)\n\
    \            if not table.contains(vowels, c1) and not table.contains(vowels,\
    \ c2) then\n                return c\n            end\n        end\n    end\n\
    \    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoypa000r.lua:11:\
    \ attempt to call a nil value (field 'contains')\nstack traceback:\n\t/tmp/tmpoypa000r.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpoypa000r.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  for i=#word, 1, -1 do\n    if word:sub(i,i):match(\"\
    [aeiouAEIOU]\") then\n      if word:sub(i-1,i-1):match(\"[^aeiouAEIOU]\") and\n\
    \         word:sub(i+1,i+1):match(\"[^aeiouAEIOU]\") then\n        return word:sub(i,i)\n\
    \      end\n    end\n  end\n  return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return (word:gsub('([^aeiouy]+)([aeiouy])([^aeiouy]+)',\
    \ '%2'))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_ysl6otd.lua:14:\
    \ expected: \"u\"\nactual: \"you\"\nstack traceback:\n\t/tmp/tmp_ysl6otd.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\treturn word:gsub('[^aeiou]+([aeiou]?)[^aeiou]+$',\
    \ '%1')\nend\nassert(get_closest_vowel('amazing') == 'a')\nassert(get_closest_vowel('devilish')\
    \ == 'i')\nassert(get_closest_vowel('dog') == '')\nassert(get_closest_vowel('a')\
    \ == '')\nassert(get_closest_vowel('zaba') == 'a')\nassert(get_closest_vowel('zyx')\
    \ == '')\nassert(get_closest_vowel('ad') == 'a')\nassert(get_closest_vowel('happy')\
    \ == 'a')\nassert(get_closest_vowel('e') == '')\nassert(get_closest_vowel('closed')\
    \ == 'o')\nassert(get_closest_vowel('decoherence') == 'e')\nassert(get_closest_vowel('eccentricity')\
    \ == 'e')\nassert(get_closest_vowel('ie') == '')\nassert(get_closest_vowel('xxyyzz')\
    \ == '')\nassert(get_closest_vowel('y') == '')\nassert(get_closest_vowel('zzzzz')\
    \ == '')\nassert(get_closest_vowel('zzz') == '')\nassert(get_closest_vowel('zzza')\
    \ == 'a')\nassert(get_closest_vowel('zz') == '')\nassert(get_closest_vowel('zzzazzz')\
    \ == 'a')\nassert(get_closest_vowel('zzzazz') == 'a')\nassert(get_closest_vowel('zzzazzazzz')\
    \ == 'a')\nassert(get_closest_vowel('zzzazzazz') == 'a')\nassert(get_closest_vowel('zzzazzazzazzz')\
    \ == 'a\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpylxex6oy.lua:33: unfinished string near ''''a''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local _tbl = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ _tbl_is_vowel = {}\n    for k, v in pairs(_tbl) do _tbl_is_vowel[v] = true end\n\
    \    local get_next_vowel = function(s, idx)\n        while idx > 0 do\n     \
    \       if _tbl_is_vowel[s:sub(idx, idx)] then\n                return s:sub(idx,\
    \ idx)\n            end\n            idx = idx - 1\n        end\n        return\
    \ ''\n    end\n    for i = #word, 2, -1 do\n        if _tbl_is_vowel[word:sub(i,\
    \ i)] == nil and\n            _tbl_is_vowel[word:sub(i - 1, i - 1)] == nil and\n\
    \            get_next_vowel(word, i - 2) ~= '' then\n            return get_next_vowel(word,\
    \ i - 2)\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn4czyo2i.lua:35:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpn4czyo2i.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local index = word:reverse():find(\"[^aeiou].[aeiou]\"\
    )\n  return index and word:sub(#word - index + 2, #word - index + 2) or \"\"\n\
    end\nassert(get_closest_vowel(\"cad\") == \"a\")\nassert(get_closest_vowel(\"\
    meow\") == \"e\")\nassert(get_closest_vowel(\"hi\") == \"\")\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp3x9akocf.lua:11: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmp3x9akocf.lua:11: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqme21mj4.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpqme21mj4.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    for i = #word, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if is_consonant(c) then\n            local j = i + 1\n         \
    \   while j <= #word do\n                local k = word:sub(j, j)\n          \
    \      if is_vowel(k) then\n                    return k\n                end\n\
    \                j = j + 1\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nassert(get_closest_vowel(\"tst\") == \"\")\nassert(get_closest_vowel(\"\
    counter\") == \"u\")\nassert(get_closest_vowel(\"counters\") == \"e\")\nassert(get_closest_vowel(\"\
    resonate\") == \"a\")\nassert(get_closest_vowel(\"lymphatic\") == \"a\")\nassert(get_closest_vowel(\"\
    squeak\") == \"e\")\nassert(get_closest_vowel(\"squeaky\") == \"e\")\nassert(get_closest_vowel(\"\
    peach\") == \"e\")\nassert(get_closest_vowel(\"brass\") == \"a\")\nassert(get_closest_vowel(\"\
    windy\") == \"i\")\nassert(get_closest_vowel(\"rhododendron\") == \"e\")\nassert(get_closest_vowel(\"\
    I\") == \"\")\nassert(get_closest_vowel(\"O\") == \"\")\nassert(get_closest_vowel(\"\
    U\") == \"\")\nassert(get_closest_vowel(\"A\") == \"\")\nassert(get_closest_vowel(\"\
    E\") == \"\")\nassert(get_closest_vowel(\"I\") == \"\")\nassert(get_closest_vowel(\"\
    O\") == \"\")\nassert(get_closest_vowel(\"U\") == \"\")\nassert(get_closest_vowel(\"\
    a\") == \"\")\nassert(get_closest_vowel(\"e\") == \"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpfjns6jkx.lua:43: unfinished string near ''"''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local nvowels = 0\n  local vowels_indexes = {}\n\
    \  local best_distance = #word\n  local result\n  for i = 1, #word do\n    local\
    \ v = word:sub(i, i)\n    if is_vowel(v) then\n      vowels_indexes[i] = true\n\
    \      nvowels = nvowels + 1\n    end\n  end\n  if nvowels > 0 then\n    for i\
    \ = 1, #word do\n      local v = word:sub(i, i)\n      if not is_vowel(v) then\n\
    \        local start_index = i + 1\n        local end_index = #word\n        for\
    \ j = start_index, end_index do\n          if vowels_indexes[j] then\n       \
    \     local distance = j - i\n            if distance < best_distance then\n \
    \             best_distance = distance\n              result = word:sub(j, j)\n\
    \            end\n          end\n        end\n      end\n    end\n  end\n  return\
    \ result or \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgze6cp6e.lua:14:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpgze6cp6e.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpgze6cp6e.lua:43: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- you code here\nend\nassert(get_closest_vowel(\"\
    example\") == \"p\")\nassert(get_closest_vowel(\"hello\") == \"\")\nassert(get_closest_vowel(\"\
    odd\") == \"o\")\nassert(get_closest_vowel(\"letter\") == \"e\")\nassert(get_closest_vowel(\"\
    echo\") == \"o\")\nassert(get_closest_vowel(\"elephant\") == \"e\")\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp68aslhed.lua:10: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmp68aslhed.lua:10: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    for i=#word,1,-1 do\n        local l = word:sub(i,i)\n\
    \        if l:match('[aeiouAEIOU]') then\n            for j=i-1,1,-1 do\n    \
    \            local p = word:sub(j,j)\n                if p:match('[^aeiouAEIOU]')\
    \ then\n                    return l\n                end\n            end\n \
    \       end\n    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5r8c1_fj.lua:29:\
    \ expected: \"\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp5r8c1_fj.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return word:match(\"^.*[bcdfghjklmnpqrstvwxyz]([aeiou])[bcdfghjklmnpqrstvwxyz]\"\
    ) or \"\"\nend\nprint(get_closest_vowel(\"cat\")) -- \"a\"\nprint(get_closest_vowel(\"\
    words\")) -- \"o\"\nprint(get_closest_vowel(\"world\")) -- \"o\"\nprint(get_closest_vowel(\"\
    hello\")) -- \"e\"\nprint(get_closest_vowel(\"worldhello\")) -- \"o\"\nprint(get_closest_vowel(\"\
    worldhelloworld\")) -- \"o\"\nprint(get_closest_vowel(\"worldhellohello\")) --\
    \ \"e\"\nprint(get_closest_vowel(\"worldhelloworldhello\")) -- \"e\"\nprint(get_closest_vowel(\"\
    worldheLLohelloworld\")) -- \"e\"\nprint(get_closest_vowel(\"worlDhellohelo\"\
    )) -- \"e\"\nprint(get_closest_vowel(\"worldhellohelloworld\")) -- \"e\"\nprint(get_closest_vowel(\"\
    worldhellohelloworldhello\")) -- \"e\"\nprint(get_closest_vowel(\"worldhellohellohello\"\
    )) -- \"e\"\nprint(get_closest_vowel(\"worldhellohelloworldhellohello\")) -- \"\
    e\"\nprint(get_closest_vowel(\"worldhellohellohelloworldhellohello\")) -- \"e\"\
    \nprint(get_closest_vowel(\"worldhellohellohelloworldhellohellohello\")) -- \"\
    e\"\nprint(get_closest_vowel(\"worldhellohellohelloworldhellohellohellohello\"\
    )) -- \"e\"\nprint(get_closest_vowel(\"worldhellohellohelloworldhellohellohellohellohello\"\
    )) -- \"e\"\nprint(get_closest_vowel(\"\")) -- \"\"\nprint(get_closest_vowel(\"\
    h\")) -- \"\"\nprint(get_closest_vowel\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppqf0qngh.lua:31: '')'' expected (to close ''('' at line 30)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal f, c, i, t, s\n\tfor _, c in ipairs(word:reverse())\
    \ do\n\t\tif not f and c:match'[aeiou]' then\n\t\t\ts = c\n\t\telseif not f and\
    \ c:match'[^aeiou]' then\n\t\t\tf = true\n\t\telseif f and c:match'[aeiou]' then\n\
    \t\t\treturn c\n\t\telseif f and c:match'[^aeiou]' then\n\t\t\treturn s\n\t\t\
    end\n\tend\n\treturn ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphwz0dqjz.lua:26:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmphwz0dqjz.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tword = word:reverse()\n\tlocal prev = nil\n\tlocal\
    \ vowel = nil\n\tfor i=1,#word do\n\t\tlocal w = word:sub(i,i)\n\t\tif(not prev)\
    \ then\n\t\t\tif(w:find(\"[aeiou]\")) then\n\t\t\t\tprev = w\n\t\t\tend\n\t\t\
    else\n\t\t\tif(w:find(\"[aeiou]\")) then\n\t\t\t\tvowel = w\n\t\t\t\tbreak\n\t\
    \t\telse\n\t\t\t\tif(prev:find(\"[aeiou]\")) then\n\t\t\t\t\tvowel = prev\n\t\t\
    \t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tprev = w\n\t\tend\n\tend\n\treturn\
    \ vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppr7dmqgw.lua:38:\
    \ expected: \"\"\nactual: \"e\"\nstack traceback:\n\t/tmp/tmppr7dmqgw.lua:38:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if not word then return \"\" end\n    local word,\
    \ last_consonant, last_vowel = word:lower(), nil, nil\n    for i = #word, 1, -1\
    \ do\n        local x = word:sub(i, i)\n        if not last_consonant and x ~=\
    \ \"a\" and x ~= \"e\" and x ~= \"i\" and x ~= \"o\" and x ~= \"u\" then\n   \
    \         last_consonant = i\n        elseif last_consonant and (x == \"a\" or\
    \ x == \"e\" or x == \"i\" or x == \"o\" or x == \"u\") then\n            last_vowel\
    \ = i\n            break\n        end\n    end\n    return last_vowel and word:sub(last_vowel,\
    \ last_vowel) or \"\"\nend\nassert(get_closest_vowel(\"name\") == \"a\")\nassert(get_closest_vowel(\"\
    california\") == \"i\")\nassert(get_closest_vowel(\"mama\") == \"a\")\nassert(get_closest_vowel(\"\
    lase\") == \"e\")\nassert(get_closest_vowel(\"rase\") == \"a\")\nassert(get_closest_vowel(\"\
    abcde\") == \"\")\nassert(get_closest_vowel(\"aeiou\") == \"\")\nassert(get_closest_vowel(\"\
    bcd\") == \"\")\nassert(get_closest_vowel(\"\") == \"\")\nassert(get_closest_vowel(nil)\
    \ == \"\")\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp1acilqjx.lua:22: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmp1acilqjx.lua:22: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnkz3vsqz.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpnkz3vsqz.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\tlocal\
    \ consonants = {'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'}\n\tlocal right_most_vowel = ''\n\t\n\
    \tfor i = #word, 1, -1 do\n\t\tif table.index_of(vowels, word:sub(i, i)) then\n\
    \t\t\tlocal left_consonant = word:sub(i - 1, i - 1)\n\t\t\tlocal right_consonant\
    \ = word:sub(i + 1, i + 1)\n\t\t\tif table.index_of(consonants, left_consonant)\
    \ and table.index_of(consonants, right_consonant) then\n\t\t\t\tright_most_vowel\
    \ = word:sub(i, i)\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn right_most_vowel\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk8t9lus5.lua:13:\
    \ attempt to call a nil value (field 'index_of')\nstack traceback:\n\t/tmp/tmpk8t9lus5.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpk8t9lus5.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- 1) find the position of the last consonant\n\
    \    -- (since we start from the right side, it is actually the 1st\n    --  consonant\
    \ from the right side)\n    local pos = 1\n    while not word:sub(pos, pos):match(\"\
    [^aeiou]\") do\n        pos = pos + 1\n    end\n    -- 2) find the closest vowel\
    \ to the right side of the last consonant\n    local closest_pos = #word + 1\n\
    \    while not word:sub(pos, pos):match(\"[aeiou]\") do\n        if word:sub(pos,\
    \ pos):match(\"[aeiou]\") then\n            -- save the position of the closest\
    \ vowel found so far\n            closest_pos = pos\n        end\n        pos\
    \ = pos + 1\n    end\n    -- 3) return the vowel found\n    if closest_pos > #word\
    \ then\n        return \"\"\n    else\n        return word:sub(closest_pos, closest_pos)\n\
    \    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzgyw39ll.lua:35:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzgyw39ll.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- TODO: Write your code here\n    return \"\"\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphypiz9zy.lua:15:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmphypiz9zy.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5235ci0e.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5235ci0e.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local m = string.match(word, \".*[^aeiouAEIOU]([aeiouAEIOU])[^aeiouAEIOU].*\"\
    )\n    return m or \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ vowels_table = {}\n  local last_char = string.sub(word, string.len(word))\n\
    \  if table.indexOf(vowels, last_char) ~= -1 then return \"\" end\n  local prev_char\
    \ = \"\"\n  for i = 1, string.len(word) do\n    local char = string.sub(word,\
    \ i, i)\n    if table.indexOf(vowels, char) ~= -1 then\n      if prev_char ~=\
    \ \"\" and table.indexOf(vowels, prev_char) == -1 then\n        table.insert(vowels_table,\
    \ char)\n      end\n    end\n    prev_char = char\n  end\n  return vowels_table[#vowels_table]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps29whc_f.lua:11:\
    \ attempt to call a nil value (field 'indexOf')\nstack traceback:\n\t/tmp/tmps29whc_f.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmps29whc_f.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- regex\n\tlocal regex = '[^aeiou]*([aeiou]).*'\n\
    \tlocal start, _, x = word:reverse():find(regex)\n\treturn x or ''\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2w9cd1sv.lua:19:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp2w9cd1sv.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ index = string.len(word)\n  local last_vowel = -1\n  while index > 0 do\n  \
    \  local char = string.sub(word, index, index)\n    if is_vowel(char) then\n \
    \     last_vowel = index\n    elseif last_vowel ~= -1 then\n      return string.sub(word,\
    \ last_vowel, last_vowel)\n    end\n    index = index - 1\n  end\n  return \"\"\
    \nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate =\
    \ get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp53lo0jrw.lua:13:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmp53lo0jrw.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp53lo0jrw.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  return \"\";\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgd3m4578.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpgd3m4578.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\tlocal\
    \ is_vowel = function(c)\n\t\tfor _, vowel in ipairs(vowels) do\n\t\t\tif c ==\
    \ vowel then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\n\
    \t\n\tlocal closest = \"\"\n\tfor i = 1, #word - 1 do\n\t\tif is_vowel(word:sub(i,\
    \ i)) then\n\t\t\tif not is_vowel(word:sub(i + 1, i + 1)) then\n\t\t\t\tclosest\
    \ = word:sub(i, i)\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\treturn closest\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqvraod__.lua:33:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmpqvraod__.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ last_consonant_index = 0\n  local last_vowel_index = 0\n  for i = 1, #word do\n\
    \    local char = word:sub(i, i)\n    local is_consonant = true\n    for _,vowel\
    \ in ipairs(vowels) do\n      if char == vowel then\n        is_consonant = false\n\
    \        last_vowel_index = i\n        break\n      end\n    end\n    if is_consonant\
    \ then\n      last_consonant_index = i\n    end\n    if last_consonant_index >\
    \ 0 and last_vowel_index > 0 then\n      if last_consonant_index < last_vowel_index\
    \ then\n        return word:sub(last_vowel_index, last_vowel_index)\n      end\n\
    \    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph8jtzfky.lua:36:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmph8jtzfky.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local i = word:len()\n    while i > 0 do\n    \
    \    local c = word:sub(i, i)\n        if 'aeiou'.find(c, 1, true) then\n    \
    \        local p = word:sub(i + 1, i + 1)\n            if 'aeiou'.find(p, 1, true)\
    \ then\n                i = i - 1\n            else\n                return c\n\
    \            end\n        else\n            i = i - 1\n        end\n    end\n\
    \    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpk6lnjnnz.lua:11: ''then'' expected near ''.''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Using for loop, indexing is faster than string.sub\n\
    \tfor i= #word, 1, -1 do\n\t\tlocal char = word:sub(i, i)\n\t\t-- print(char)\n\
    \t\tif char == 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u'\
    \ then\n\t\t\tif i > 1 and word:sub(i-1, i-1) ~= 'a' and word:sub(i-1, i-1) ~=\
    \ 'e' and word:sub(i-1, i-1) ~= 'i' and word:sub(i-1, i-1) ~= 'o' and word:sub(i-1,\
    \ i-1) ~= 'u' then\n\t\t\t\treturn char\n\t\t\tend\n\t\tend\n\tend\n\treturn \"\
    \"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprvtjsa13.lua:28:\
    \ expected: \"\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmprvtjsa13.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnkz3vsqz.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpnkz3vsqz.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ len = #word\n    for i = len, 2, -1 do\n        local c = word:sub(i, i)\n \
    \       if is_in_array(vowels, c) then\n            local prev = word:sub(i -\
    \ 1, i - 1)\n            local next = word:sub(i + 1, i + 1)\n            if not\
    \ is_in_array(vowels, prev) and\n                not is_in_array(vowels, next)\
    \ then\n                return c\n            end\n        end\n    end\n    return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3q_pat8f.lua:12:\
    \ attempt to call a nil value (global 'is_in_array')\nstack traceback:\n\t/tmp/tmp3q_pat8f.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmp3q_pat8f.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  word = word:lower()\n  local current, distance =\
    \ '', 0\n  for i = 1, #word do\n    local char = word:sub(i, i)\n    if char ==\
    \ 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u' then\n     \
    \ local lower_bound = i\n      for j = i - 1, 1, -1 do\n        local char2 =\
    \ word:sub(j, j)\n        if char2 ~= 'a' and char2 ~= 'e' and char2 ~= 'i' and\
    \ char2 ~= 'o' and char2 ~= 'u' then\n          lower_bound = j\n          break\n\
    \        end\n      end\n      local upper_bound = i\n      for j = i + 1, #word\
    \ do\n        local char2 = word:sub(j, j)\n        if char2 ~= 'a' and char2\
    \ ~= 'e' and char2 ~= 'i' and char2 ~= 'o' and char2 ~= 'u' then\n          upper_bound\
    \ = j\n          break\n        end\n      end\n      local new_distance = upper_bound\
    \ - lower_bound\n      if new_distance > distance then\n        current = char\n\
    \        distance = new_distance\n      end\n    end\n  end\n  return current\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl9gp8692.lua:42:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmpl9gp8692.lua:42:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tfor i = #word, 1, -1 do\n\t\tlocal ch = word:sub(i,\
    \ i)\n\t\tif 'aeiou'.find(ch, 1, true) then\n\t\t\treturn i\n\t\tend\n\tend\n\t\
    return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpz71wt88p.lua:10: ''then'' expected near ''.''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  for i=#word,1,-1 do\n    if (not word:find(\"[aeiouAEIOU]\"\
    , i)) and word:find(\"[aeiouAEIOU]\", i-1) then\n      return word:sub(i-1,i)\n\
    \    end\n  end\n  return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbd4mo0vy.lua:19:\
    \ expected: \"u\"\nactual: \"ur\"\nstack traceback:\n\t/tmp/tmpbd4mo0vy.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- body\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz4qusbts.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpz4qusbts.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if not word then return '' end\n  --[[\n  local from_last_index,\
    \ from_index =\n    word:find('[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ][aeiouAEIOU]')\n\
    \  return not from_last_index and '' or\n    word:sub(from_last_index + 1, from_index)\n\
    \  --]]\n  local prev_char, next_char = '', ''\n  for char in word:gmatch('.')\
    \ do\n    if char:match('[aeiouAEIOU]') then\n      if prev_char:match('[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]')\
    \ and\n        next_char:match('[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]')\
    \ then\n        return char\n      end\n    end\n    prev_char = char\n  end\n\
    \  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdx5c42z8.lua:31:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpdx5c42z8.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = \"AEIOUaeiou\"\n\t\n\t-- If the word\
    \ starts with a vowel, return the first vowel.\n\tif vowels:match(word:sub(1,1))\
    \ then\n\t\treturn word:sub(1,1)\n\tend\n\t\n\t-- If the word ends with a vowel,\
    \ return the last vowel.\n\tif vowels:match(word:sub(-1,-1)) then\n\t\treturn\
    \ word:sub(-1,-1)\n\tend\n\t\n\t-- Loop through word in reverse, skipping first\
    \ and last char.\n\tfor i=word:len()-1,2,-1 do\n\t\t-- If a vowel is found, search\
    \ for the next consonant.\n\t\tif vowels:match(word:sub(i,i)) then\n\t\t\tfor\
    \ k=i+1,word:len() do\n\t\t\t\t-- If a consonant is found, return the vowel.\n\
    \t\t\t\tif not vowels:match(word:sub(k,k)) then\n\t\t\t\t\treturn word:sub(i,i)\n\
    \t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- No match found, return empty\
    \ string.\n\treturn \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1tsvwbt5.lua:42:\
    \ expected: \"\"\nactual: \"e\"\nstack traceback:\n\t/tmp/tmp1tsvwbt5.lua:42:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels, cv = {\"a\", \"e\", \"i\", \"o\"\
    , \"u\"}, \"\"\n    for i = #word, 1, -1 do\n        for j = 1, #vowels do\n \
    \           if word:sub(i, i) == vowels[j] then\n                cv = word:sub(i,\
    \ i)\n                break\n            end\n        end\n        if word:sub(i,\
    \ i) ~= cv and cv ~= \"\" then\n            return cv\n        end\n    end\n\
    \    return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp000rv5id.lua:30:\
    \ expected: \"\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp000rv5id.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    word = word:lower()\n    local vowel = \"\"\n \
    \   local l = #word\n    if word:sub(l, l) == \"a\" then\n        return word:sub(l,\
    \ l)\n    end\n    for i = l - 1, 1, -1 do\n        local n = word:sub(i, i)\n\
    \        if n == \"a\" or n == \"e\" or n == \"i\" or n == \"o\" or n == \"u\"\
    \ then\n            local a = word:sub(i - 1, i - 1)\n            local b = word:sub(i\
    \ + 1, i + 1)\n            if a ~= \"a\" and a ~= \"e\" and a ~= \"i\" and a ~=\
    \ \"o\" and a ~= \"u\" and\n               b ~= \"a\" and b ~= \"e\" and b ~=\
    \ \"i\" and b ~= \"o\" and b ~= \"u\" then\n                vowel = word:sub(i,\
    \ i)\n                break\n            end\n        end\n    end\n    return\
    \ vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpluir2980.lua:36:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpluir2980.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    for i = #word, 1, -1 do\n        local current_letter\
    \ = word:sub(i, i)\n        if is_vowel(current_letter) then\n            if i\
    \ == 1 then\n                return ''\n            else\n                local\
    \ prev_letter = word:sub(i - 1, i - 1)\n                if is_vowel(prev_letter)\
    \ then\n                    return ''\n                else\n                \
    \    return current_letter\n                end\n            end\n        end\n\
    \    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7d4moids.lua:10:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmp7d4moids.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp7d4moids.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\n    local lastChar = string.sub(word,\
    \ string.len(word))\n    local secondLastChar = string.sub(word, string.len(word)\
    \ - 1, string.len(word) - 1)\n    local vowel = \"\"\n    if (secondLastChar ~=\
    \ 'a' and secondLastChar ~= 'e' and secondLastChar ~= 'i' and secondLastChar ~=\
    \ 'o' and secondLastChar ~= 'u') and\n        (lastChar == 'a' or lastChar ==\
    \ 'e' or lastChar == 'i' or lastChar == 'o' or lastChar == 'u') then\n       \
    \ return lastChar\n    else\n        if (string.len(word) > 2) then\n        \
    \    return get_closest_vowel(string.sub(word, 1, string.len(word) - 1))\n   \
    \     else\n            return \"\"\n        end\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp35b77yuc.lua:31:\
    \ expected: \"\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp35b77yuc.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return word:gsub('([^aeiou]*[aeiou])(.*)', '%1')\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpleuserx9.lua:14:\
    \ expected: \"u\"\nactual: \"yo\"\nstack traceback:\n\t/tmp/tmpleuserx9.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- TODO: Please fill the code here.\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcvs7n1dr.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpcvs7n1dr.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here...\n    return \"\"\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp49f0bi5y.lua:15:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp49f0bi5y.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\n  print(word)\n  return \"\"\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "yogurt\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt7qaizwl.lua:16:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpt7qaizwl.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal consonants = 'bcdfghjklmnpqrstvwxyz'\n\tlocal\
    \ vowels = 'aeiou'\n\tlocal consonant_start, vowel_start, vowel_end, next_consonant_start\n\
    \t-- Find the last consonant\n\tconsonant_start = word:reverse():find(consonants)\n\
    \tif not consonant_start then\n\t\treturn ''\n\tend\n\t-- Find the first vowel\
    \ before the last consonant\n\tvowel_start = word:reverse():sub(consonant_start):find(vowels)\n\
    \tif not vowel_start then\n\t\treturn ''\n\tend\n\t-- Find the first consonant\
    \ after the last consonant\n\tnext_consonant_start = word:reverse():sub(consonant_start):sub(vowel_start):find(consonants)\n\
    \tif not next_consonant_start then\n\t\treturn ''\n\tend\n\t-- Find the last vowel\
    \ after the first consonant\n\tvowel_end = word:reverse():sub(consonant_start):sub(vowel_start):sub(next_consonant_start):find(vowels)\n\
    \tif not vowel_end then\n\t\treturn ''\n\tend\n\treturn word:reverse():sub(consonant_start):sub(vowel_start):sub(next_consonant_start):sub(vowel_end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbcy4al08.lua:37:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpbcy4al08.lua:37:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"aeiou\"\n    for i = #word, 2,\
    \ -1 do\n        local c = word:sub(i, i)\n        if not vowels:find(c) then\n\
    \            local prev = word:sub(i - 1, i - 1)\n            if vowels:find(prev)\
    \ then\n                return prev\n            end\n        end\n    end\n \
    \   return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4qfnpcmi.lua:26:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp4qfnpcmi.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local function is_consonant(char)\n    return not\
    \ char:match('[aeiouAEIOU]')\n  end\n  for i = #word, 1, -1 do\n    if is_consonant(word:sub(i\
    \ - 1, i - 1)) and is_consonant(word:sub(i, i)) then\n      return word:sub(i,\
    \ i)\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3r2642nm.lua:22:\
    \ expected: \"u\"\nactual: \"t\"\nstack traceback:\n\t/tmp/tmp3r2642nm.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ _vowels = {}\n  for index,value in ipairs(vowels) do\n    _vowels[value] = index\n\
    \  end\n  for index = word:len(), 1, -1 do\n    local current = word:sub(index,\
    \ index)\n    if _vowels[current] then\n      return current\n    end\n  end\n\
    \  return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5d6wtcy0.lua:27:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp5d6wtcy0.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local i = word:len() - 1\n    while i > 0 do\n\
    \        local char = word:sub(i, i)\n        if (char == 'a' or char == 'e' or\
    \ char == 'i' or char == 'o' or char == 'u') then\n            if word:sub(i -\
    \ 1, i - 1) ~= 'a' and word:sub(i - 1, i - 1) ~= 'e' and word:sub(i - 1, i - 1)\
    \ ~= 'i' and word:sub(i - 1, i - 1) ~= 'o' and word:sub(i - 1, i - 1) ~= 'u' then\n\
    \                if word:sub(i + 1, i + 1) ~= 'a' and word:sub(i + 1, i + 1) ~=\
    \ 'e' and word:sub(i + 1, i + 1) ~= 'i' and word:sub(i + 1, i + 1) ~= 'o' and\
    \ word:sub(i + 1, i + 1) ~= 'u' then\n                    return char\n      \
    \          end\n            end\n        end\n        i = i - 1\n    end\n   \
    \ return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjkc4_m9t.lua:29:\
    \ expected: \"\"\nactual: \"e\"\nstack traceback:\n\t/tmp/tmpjkc4_m9t.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local pos = -1\n    for i = #word, 1, -1 do\n \
    \       if string.find(word, \"[aeiou]\", i, true) then\n            pos = i\n\
    \            break\n        end\n    end\n    return pos == -1 and \"\" or string.sub(word,\
    \ pos, pos)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_nmh3k10.lua:21:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp_nmh3k10.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if not word or word == \"\" then return \"\" end\n\
    \    local consonants = \"bcdfghjklmnpqrstvwxyz\"\n    local vowels = \"aeiou\"\
    \n    for i = #word, 1, -1 do\n        if string.find(consonants, word:sub(i,\
    \ i)) then\n            for j = i - 1, 1, -1 do\n                if string.find(vowels,\
    \ word:sub(j, j)) then\n                    return word:sub(j, j)\n          \
    \      end\n            end\n        end\n    end\n    return \"\"\nend\nassert(get_closest_vowel(\"\
    Xkcd\") == \"e\")\nassert(get_closest_vowel(\"xkcd\") == \"u\")\nassert(get_closest_vowel(\"\
    \") == \"\")\nassert(get_closest_vowel(\"manchesterunited\") == \"e\")\nassert(get_closest_vowel(\"\
    Manchesterunited\") == \"e\")\nassert(get_closest_vowel(\"Amanchesterunited\"\
    ) == \"\")\nassert(get_closest_vowel(\"iZq\") == \"i\")\nassert(get_closest_vowel(\"\
    ikZq\") == \"i\")\nassert(get_closest_vowel(\"AkZq\") == \"a\")\nassert(get_closest_vowel(\"\
    AAkZq\") == \"a\")\nassert(get_closest_vowel(\"AksZq\") == \"\")\nassert(get_closest_vowel(\"\
    AkdZq\") == \"a\")\nassert(get_closest_vowel(\"AlZq\") == \"a\")\nassert(get_closest_vowel(\"\
    AlpZq\") == \"a\")\nassert(get_closest_vowel(\"AlpZt\") == \"\")\nassert(get_closest_vowel(\"\
    AlpuZt\") == \"u\")\nassert(get_closest_vowel(\"AwzZt\") == \"a\")\nassert(get_closest_vowel(\"\
    \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptvbthb00.lua:39: unfinished string near ''"''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local v = {'a', 'e', 'i', 'o', 'u'}\n  local word\
    \ = word:lower()\n  for i = #word, 1, -1 do\n    if word:sub(i, i) == 'a' or word:sub(i,\
    \ i) == 'e' or word:sub(i, i) == 'i' or word:sub(i, i) == 'o' or word:sub(i, i)\
    \ == 'u' then\n      if i > 1 and i < #word then\n        if word:sub(i-1, i-1)\
    \ ~= 'a' and word:sub(i-1, i-1) ~= 'e' and word:sub(i-1, i-1) ~= 'i' and word:sub(i-1,\
    \ i-1) ~= 'o' and word:sub(i-1, i-1) ~= 'u' and word:sub(i+1, i+1) ~= 'a' and\
    \ word:sub(i+1, i+1) ~= 'e' and word:sub(i+1, i+1) ~= 'i' and word:sub(i+1, i+1)\
    \ ~= 'o' and word:sub(i+1, i+1) ~= 'u' then\n          return word:sub(i, i)\n\
    \        end\n      end\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local prev = nil\n  local current = nil\n  local\
    \ closest = nil\n  local idx = 0\n  local distance = 0\n  local min_distance =\
    \ 0\n  local vowels = 'aeiouAEIOU'\n  for k, v in utf8.codes(word) do\n    current\
    \ = utf8.char(v)\n    if (vowels:find(current)) then\n      if (prev == nil) then\n\
    \        prev = current\n        idx = k\n        distance = 0\n      else\n \
    \       distance = k - idx\n        if (closest == nil) then\n          closest\
    \ = current\n          min_distance = distance\n        else\n          if (distance\
    \ < min_distance) then\n            closest = current\n            min_distance\
    \ = distance\n          end\n        end\n        prev = current\n        idx\
    \ = k\n      end\n    end\n  end\n  return closest or ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp08b3bnyd.lua:45:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp08b3bnyd.lua:45:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local last_vowel = ''\n  local last_consonant = ''\n\
    \  local len = string.len(word)\n  for i = len, 1, -1 do\n    local char = string.sub(word,\
    \ i, i)\n    local is_vowel = is_vowel(char)\n    if is_vowel and last_consonant\
    \ ~= '' then\n      return char\n    elseif is_vowel then\n      last_vowel =\
    \ char\n    else\n      last_consonant = char\n    end\n  end\n  return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpujrmdfkf.lua:13:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpujrmdfkf.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpujrmdfkf.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5235ci0e.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5235ci0e.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nprint(get_closest_vowel(\"\
    hardesttest\")) -- \"e\"\nprint(get_closest_vowel(\"developer\")) -- \"e\"\nprint(get_closest_vowel(\"\
    hmm..\")) -- \"\"\nprint(get_closest_vowel(\"grrrrgh!\")) -- \"i\"\nprint(get_closest_vowel(\"\
    goooo\")) -- \"o\"\nprint(get_closest_vowel(\"aaaaa\")) -- \"\"\nprint(get_closest_vowel(\"\
    bcd\")) -- \"\"\nprint(get_closest_vowel(\"aeiou\")) -- \"\"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\n\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzu20wdrz.lua:22:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpzu20wdrz.lua:22: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ is_vowel = function(char)\n        for i,v in ipairs(vowels) do\n          \
    \  if v == char then\n                return true\n            end\n        end\n\
    \        return false\n    end\n    local chars = {}\n    for c in word:gmatch(\"\
    .\") do\n        table.insert(chars, c)\n    end\n    for i = #chars, 2, -1 do\n\
    \        if not is_vowel(chars[i]) and is_vowel(chars[i-1]) then\n           \
    \ return chars[i-1]\n        end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpam5c90ma.lua:34:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpam5c90ma.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- body\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz4qusbts.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpz4qusbts.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t\n\tlocal last_vowel = ''\n\tlocal first_vowel =\
    \ ''\n\t\n\tfor i=1, #word do\n\t\tlocal current_char = word:sub(i,i)\n\t\t\n\t\
    \tif current_char == 'a' or current_char == 'e' or current_char == 'i' or current_char\
    \ == 'o' or current_char == 'u' then\n\t\t\tlast_vowel = current_char\n\t\t\t\
    if first_vowel == '' then\n\t\t\t\tfirst_vowel = current_char\n\t\t\tend\n\t\t\
    elseif last_vowel ~= '' then\n\t\t\treturn last_vowel\n\t\tend\n\tend\n\t\n\t\
    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbvgpeuc7.lua:31:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmpbvgpeuc7.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local word = word or ''\n    if not word or word\
    \ == '' then return '' end\n    local vowel_list = 'aioue'\n    local word_len\
    \ = word:len()\n    local last_cons_idx = -1\n    local first_vowel_idx = -1\n\
    \    local closest_idx = -1\n    for i = 1, word_len do\n        local c = word:sub(i,\
    \ i)\n        if not vowel_list:find(c) then\n            if first_vowel_idx ~=\
    \ -1 then\n                last_cons_idx = i\n            end\n        else\n\
    \            if first_vowel_idx == -1 then\n                first_vowel_idx =\
    \ i\n            end\n            if last_cons_idx ~= -1 then\n              \
    \  if (i - last_cons_idx) < (closest_idx - last_cons_idx) then\n             \
    \       closest_idx = i\n                end\n            end\n        end\n \
    \   end\n    if closest_idx == -1 then return '' end\n    return word:sub(closest_idx,\
    \ closest_idx)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplk6nso0_.lua:39:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmplk6nso0_.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    word = word:reverse()\n    local vowels = \"aeiou\"\
    \n    local last_vowel = \"\"\n    for i=1,#word do\n        if vowels:find(word:sub(i,i))\
    \ then\n            last_vowel = word:sub(i,i)\n        else\n            break\n\
    \        end\n    end\n    if last_vowel == \"\" then\n        return \"\"\n \
    \   end\n    local r = last_vowel\n    local vowel_pos = 0\n    for i=1,#word\
    \ do\n        if word:sub(i,i) == last_vowel then\n            vowel_pos = i\n\
    \            break\n        end\n    end\n    for i=vowel_pos,#word do\n     \
    \   if vowels:find(word:sub(i,i)) then\n            r = word:sub(i,i)\n      \
    \  else\n            return r\n        end\n    end\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzzn7bif2.lua:42:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzzn7bif2.lua:42:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n  for i = 1, #word - 1 do\n    if (not vowels[word:sub(i, i)] and vowels[word:sub(i\
    \ + 1, i + 1)]) then\n      return word:sub(i + 1, i + 1)\n    end\n  end\n  return\
    \ \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp46vwaecs.lua:20:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp46vwaecs.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"aeiou\"\n    local previous_vowel\
    \ = nil\n    for i = 1, #word do\n        local ch = word:sub(i, i)\n        if\
    \ vowels:find(ch) then\n            previous_vowel = i\n        elseif previous_vowel\
    \ then\n            if vowels:find(word:sub(i - 1, i - 1)) then\n            \
    \    return word:sub(previous_vowel, previous_vowel)\n            end\n      \
    \  end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf9hnyrz7.lua:26:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmpf9hnyrz7.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- put your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2s_q4bga.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp2s_q4bga.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local last_vowel = nil\n    local last_consonant\
    \ = nil\n    for i = 1, #word do\n        local c = word:sub(i, i)\n        if\
    \ is_vowel(c) then\n            last_vowel = c\n        else\n            last_consonant\
    \ = c\n        end\n        if last_vowel and last_consonant then\n          \
    \  return last_vowel\n        end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdy304vxu.lua:12:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpdy304vxu.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpdy304vxu.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = 'aeiou'\n\tlocal closest = ''\n\t\
    local closest_i = #word\n\tfor i = #word - 1, 1, -1 do\n\t\tlocal char = word:sub(i,\
    \ i)\n\t\tif vowels:find(char) and vowels:find(word:sub(i + 1, i + 1)) == nil\
    \ then\n\t\t\tclosest = char\n\t\t\tclosest_i = i\n\t\t\tbreak\n\t\tend\n\tend\n\
    \tfor i = closest_i - 1, 1, -1 do\n\t\tlocal char = word:sub(i, i)\n\t\tif vowels:find(char)\
    \ then\n\t\t\tclosest = char\n\t\t\tbreak\n\t\tend\n\tend\n\treturn closest\n\
    end\nassert(get_closest_vowel('tbe') == 'e')\nassert(get_closest_vowel('basqe')\
    \ == 'a')\nassert(get_closest_vowel('sopq') == '')\nassert(get_closest_vowel('sqae')\
    \ == 'a')\nassert(get_closest_vowel('qwerty') == 'e')\nassert(get_closest_vowel('aep')\
    \ == 'e')\nassert(get_closest_vowel('ae') == 'a')\nassert(get_closest_vowel('pe')\
    \ == 'e')\nassert(get_closest_vowel('a') == '')\nassert(get_closest_vowel('e')\
    \ == '')\nassert(get_closest_vowel('s') == '')\nassert(get_closest_vowel('l')\
    \ == '')\nassert(get_closest_vowel('hh') == '')\nassert(get_closest_vowel('ha')\
    \ == 'a')\nassert(get_closest_vowel('rtye') == 'e')\nassert(get_closest_vowel('lqp')\
    \ == '')\nassert(get_closest_vowel('l\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp78vp2wg0.lua:44: unfinished string near ''''l''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- insert your code here\n    return nil\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgpt0qnqn.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpgpt0qnqn.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n  local len = string.len(word)\n  local i = len\n  while i > 1 do\n    if not\
    \ table.has_value(vowels, string.sub(word, i, i)) then\n      if table.has_value(vowels,\
    \ string.sub(word, i - 1, i - 1)) then\n        return string.sub(word, i - 1,\
    \ i - 1)\n      end\n    end\n    i = i - 1\n  end\n  return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi77mqmr0.lua:12:\
    \ attempt to call a nil value (field 'has_value')\nstack traceback:\n\t/tmp/tmpi77mqmr0.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpi77mqmr0.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local consonants = 'bcdfghjklmnpqrstvwxyz'\n  for\
    \ i = #word, 1, -1 do\n    if consonants:find(word:sub(i, i)) then\n      for\
    \ j = i, #word do\n        if consonants:find(word:sub(j, j)) then\n         \
    \ return word:sub(i + 1, j - 1)\n        end\n      end\n    end\n  end\n  return\
    \ ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9xoqcrxr.lua:24:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp9xoqcrxr.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal i = 1\n\tlocal vowel = nil\n\twhile i <= #word\
    \ do\n\t\tlocal c = word:sub(i, i)\n\t\tif c == 'a' or c == 'e' or c == 'i' or\
    \ c == 'o' or c == 'u' then\n\t\t\tvowel = c\n\t\telse\n\t\t\tif vowel then\n\t\
    \t\t\treturn vowel\n\t\t\tend\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_66aeo09.lua:27:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmp_66aeo09.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return nil\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9k273djs.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp9k273djs.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here...\n  local vowel = 'aoeiu'\n \
    \ local result = ''\n  local distance = 100\n  local rword = string.reverse(word)\n\
    \  for i = 1, #rword do\n    if vowel:find(rword:sub(i,i)) then\n      for j =\
    \ i + 1, #rword do\n        if vowel:find(rword:sub(j,j)) then\n          if j\
    \ - i < distance then\n            distance = j - i\n            result = rword:sub(i,i)\n\
    \          end\n          break\n        end\n      end\n    end\n  end\n  return\
    \ string.reverse(result)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpur4dkys0.lua:33:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpur4dkys0.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowel_pos = nil\n  local prev_c, next_c = 0,\
    \ 0\n  for pos, c in utf8.codes(word) do\n    if 'aeiouAEIOU' :find(c, 1, true)\
    \ then\n      prev_c = utf8.codepoint(utf8.offset(word, pos-1))\n      next_c\
    \ = utf8.codepoint(utf8.offset(word, pos+1))\n      if not('aeiouAEIOU' :find(prev_c,\
    \ 1, true) or\n             'aeiouAEIOU' :find(next_c, 1, true)) then\n      \
    \  return utf8.char(c)\n      end\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpe1iaq2e2.lua:11: ''then'' expected near '':''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ word_len = word:len()\n    local found_vowel = nil\n    for i = word_len, 1,\
    \ -1 do\n        local curr_letter = word:sub(i, i)\n        for j = 1, #vowels\
    \ do\n            if curr_letter == vowels[j] then\n                found_vowel\
    \ = curr_letter\n                break\n            end\n        end\n       \
    \ if found_vowel then\n            break\n        end\n    end\n    if found_vowel\
    \ then\n        return found_vowel\n    else\n        return \"\"\n    end\nend\n\
    assert(get_closest_vowel(\"hello\") == \"e\")\nassert(get_closest_vowel(\"goodbye\"\
    ) == \"o\")\nassert(get_closest_vowel(\"your\") == \"o\")\nassert(get_closest_vowel(\"\
    day\") == \"a\")\nassert(get_closest_vowel(\"hard\") == \"a\")\nassert(get_closest_vowel(\"\
    soft\") == \"o\")\nassert(get_closest_vowel(\"the\") == \"e\")\nassert(get_closest_vowel(\"\
    kalokagathia\") == \"a\")\nassert(get_closest_vowel(\"package\") == \"a\")\nassert(get_closest_vowel(\"\
    abcde\") == \"\")\nassert(get_closest_vowel(\"bcdef\") == \"\")\nassert(get_closest_vowel(\"\
    e\") == \"\")\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp8xzqaw7s.lua:29: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmp8xzqaw7s.lua:29: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n  for i = #word, 2, -1 do\n    if table.contains(vowels, word:sub(i, i)) and\
    \ not table.contains(vowels, word:sub(i - 1, i - 1)) then\n      return word:sub(i,\
    \ i)\n    end\n  end\n  return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyuym8ppr.lua:10:\
    \ attempt to call a nil value (field 'contains')\nstack traceback:\n\t/tmp/tmpyuym8ppr.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpyuym8ppr.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- TODO\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptteekyae.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmptteekyae.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinqvre4i.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpinqvre4i.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local word_tbl = {}\n  for c in word:gmatch(\".\"\
    ) do word_tbl[#word_tbl+1] = c end\n  local c1 = false\n  local c2 = false\n \
    \ local v = \"\"\n  for k,v in ipairs(word_tbl) do\n    if c1 == false and c2\
    \ == false then\n      c1 = v:match(\"[^aeiou]\")\n    elseif c1 and c2 == false\
    \ then\n      c2 = v:match(\"[^aeiou]\")\n    elseif c1 and c2 then\n      return\
    \ v\n    end\n  end\n  return \"\"\nend\nprint(assert(get_closest_vowel(\"aaaabbc\"\
    ) == \"\"))\nprint(assert(get_closest_vowel(\"aaaabbcde\") == \"e\"))\nprint(assert(get_closest_vowel(\"\
    aaaabbcdeff\") == \"e\"))\nprint(assert(get_closest_vowel(\"aaaabbcdegg\") ==\
    \ \"e\"))\nprint(assert(get_closest_vowel(\"aaaabbcdegghh\") == \"e\"))\nprint(assert(get_closest_vowel(\"\
    aaaabbcdegghhii\") == \"i\"))\nprint(assert(get_closest_vowel(\"bbaaaccddff\"\
    ) == \"a\"))\nprint(assert(get_closest_vowel(\"bbaaaccdd\") == \"a\"))\nprint(assert(get_closest_vowel(\"\
    bbaaaccdd\") == \"a\"))\nprint(assert(get_closest_vowel(\"bbaaaccdde\") == \"\
    e\"))\nprint(assert(get_closest_vowel(\"bbaaaccdde\") == \"e\"))\nprint(assert(get_closest_vowel(\"\
    bbaaaccddegghh\") == \"e\"))\nprint(assert(get_closest_vowel(\"bbaaaccddegghhii\"\
    ) == \"i\"))\nprint(assert(get_closest_vowel(\"bbaaaccddeggh\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp00u0bmi_.lua:37: unfinished string near ''"bbaaaccddeggh''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- to be implemented\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx_kxdt4i.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpx_kxdt4i.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\tlocal\
    \ right_consonants = word:reverse():gsub('[aeiou]', '')\n\tlocal right_vowels\
    \ = word:reverse():gsub('[^aeiou]', '')\n\tlocal found_vowel = ''\n\tfor i = 1,\
    \ #right_consonants do\n\t\tlocal index = #right_vowels - i + 1\n\t\tif index\
    \ < 1 then break end\n\t\tif table.contains(vowels, right_vowels:sub(index, index))\
    \ then\n\t\t\tfound_vowel = right_vowels:sub(index, index)\n\t\t\tbreak\n\t\t\
    end\n\tend\n\treturn found_vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpam4eoj7_.lua:15:\
    \ attempt to call a nil value (field 'contains')\nstack traceback:\n\t/tmp/tmpam4eoj7_.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpam4eoj7_.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  return word\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7spyth_g.lua:14:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmp7spyth_g.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t--your code here\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp71ddnzbk.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp71ddnzbk.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local len = #word\n    for i = len, 2, -1 do\n\
    \        local c = word:sub(i, i)\n        if c:find(\"[aeiou]\") then\n     \
    \       local prev_c = word:sub(i - 1, i - 1)\n            if prev_c:find(\"[^aeiou]\"\
    ) then\n                return c\n            end\n        end\n    end\n    return\
    \ \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppj9ly99t.lua:28:\
    \ expected: \"\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmppj9ly99t.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    for i=#word,1,-1 do\n        if word:sub(i,i):match('[^aeiouAEIOU]')\
    \ then\n            for j=i-1,1,-1 do\n                if word:sub(j,j):match('[aeiouAEIOU]')\
    \ then\n                    return word:sub(j,j)\n                end\n      \
    \      end\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5pa8xvfv.lua:25:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp5pa8xvfv.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local prev_vowel = \"\"\n  local next_vowel = \"\"\
    \n  local prev_char = \"\"\n  local next_char = \"\"\n  local next_consonant =\
    \ \"\"\n  local next_consonant_position = 0\n  local next_consonant_position =\
    \ 0\n  local position = 0\n  local vowel_pos = 0\n  local char = \"\"\n  local\
    \ prev_is_vowel = false\n  local next_is_vowel = false\n  for c in word:gmatch\"\
    .\" do\n    char = c\n    if char == \"a\" or char == \"e\" or char == \"i\" or\
    \ char == \"o\" or char == \"u\" then\n      if prev_char == \"\" then\n     \
    \   prev_vowel = char\n        prev_is_vowel = true\n      elseif prev_char ~=\
    \ \"\" and next_char == \"\" then\n        next_vowel = char\n        next_is_vowel\
    \ = true\n      end\n    else\n      if prev_char == \"\" then\n        prev_char\
    \ = char\n      elseif prev_char ~= \"\" and next_char == \"\" then\n        next_char\
    \ = char\n      end\n    end\n    if prev_is_vowel and next_is_vowel then\n  \
    \    break\n    end\n    if prev_char ~= \"\" and next_char ~= \"\" then\n   \
    \   prev_char = next_char\n      next_char = \"\"\n    end\n  end\n  for i=0,\
    \ #word - 1 do\n    char = word:sub(i, i)\n    if char ~= \"a\" and char ~= \"\
    e\" and char ~= \"i\" and char ~= \"o\" and char ~= \"u\" then\n      next_consonant\
    \ = char\n      next_consonant_position = i\n      break\n    end\n  end\n  for\
    \ i=#word, 0, -1 do\n    char = word:sub(i, i)\n    if char ~= \"a\" and char\
    \ ~= \"e\" and char ~= \"i\" and char ~= \"o\" and char ~= \"u\" then\n      prev_consonant\
    \ = char\n      prev_\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp29awpevf.lua:58: syntax error near ''lu''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5235ci0e.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5235ci0e.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnkz3vsqz.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpnkz3vsqz.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    for\
    \ i=#word, 1, -1 do\n        if vowels[word:sub(i,i)] then\n            for j=i,\
    \ 1, -1 do\n                if not vowels[word:sub(j,j)] then\n              \
    \      return word:sub(i,i)\n                end\n            end\n        end\n\
    \    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu95dp6cl.lua:24:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu95dp6cl.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjrdbqbjn.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpjrdbqbjn.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- TODO: implement this function here\n    return\
    \ nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp195t36sy.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp195t36sy.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- take a word, split it into characters\n    local\
    \ chars = {}\n    for char in word:gmatch('.') do\n        chars[#chars + 1] =\
    \ char\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7ed20af6.lua:32: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tif not word or word == \"\" then\n\t\treturn \"\"\
    \n\tend\n\tlocal vowels = {a = true, e = true, i = true, o = true, u = true}\n\
    \tfor i = #word, 1, -1 do\n\t\tif vowels[word:sub(i, i)] then\n\t\t\tlocal letters_before\
    \ = word:sub(1, i - 1)\n\t\t\tif #letters_before > 0 then\n\t\t\t\tlocal letter_before\
    \ = letters_before:sub(-1, -1)\n\t\t\t\tif not vowels[letter_before] then\n\t\t\
    \t\t\tlocal letters_after = word:sub(i + 1)\n\t\t\t\t\tif #letters_after > 0 then\n\
    \t\t\t\t\t\tlocal letter_after = letters_after:sub(1, 1)\n\t\t\t\t\t\tif not vowels[letter_after]\
    \ then\n\t\t\t\t\t\t\treturn word:sub(i, i)\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\
    \t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  return word:gsub(\"[^aeiou]+([aeiou])[^aeiou]+\"\
    , \"%1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_nteentd.lua:14:\
    \ expected: \"u\"\nactual: \"ourt\"\nstack traceback:\n\t/tmp/tmp_nteentd.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- return the vowel closest to the right\n\t\n\t\
    for i=#word,1,-1 do\n\t\tif word:sub(i,i):match(\"[AEIOUaeiou]\") then\n\t\t\t\
    -- return the vowel closest to the right\n\t\t\treturn word:sub(i,i)\n\t\tend\n\
    \tend\n\treturn \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps8jzjs4w.lua:24:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmps8jzjs4w.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return nil\n    end\n\
    \    if word == \"\" then\n        return \"\"\n    end\n    local word_size =\
    \ word:len()\n    if word_size < 3 then\n        return \"\"\n    end\n    local\
    \ vowels = { a = true, e = true, i = true, o = true, u = true }\n    local consonants\
    \ = { b = true, c = true, d = true, f = true, g = true, h = true, j = true,\n\
    \        k = true, l = true, m = true, n = true, p = true, q = true, r = true,\
    \ s = true, t = true,\n        v = true, w = true, x = true, y = true, z = true\
    \ }\n    local result = \"\"\n    local vowel_position = 0\n    local consonant_position\
    \ = 0\n    for i = word_size, 1, -1 do\n        local c = word:sub(i, i)\n   \
    \     if vowels[c] then\n            vowel_position = i\n            break\n \
    \       end\n    end\n    if vowel_position == 0 then\n        return \"\"\n \
    \   end\n    for i = vowel_position - 1, 1, -1 do\n        local c = word:sub(i,\
    \ i)\n        if consonants[c] then\n            consonant_position = i\n    \
    \        break\n        end\n    end\n    if consonant_position == 0 then\n  \
    \      return \"\"\n    end\n    result = word:sub(vowel_position, vowel_position)\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp52ty62y2.lua:56:\
    \ expected: \"\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp52ty62y2.lua:56:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local function is_vowel(char)\n        return string.find(char,\
    \ '[aeiouAEIOU]')\n    end\n    local last_consonant = 0\n    for i = 1, #word\
    \ do\n        if not is_vowel(word:sub(i, i)) then\n            last_consonant\
    \ = i\n        elseif last_consonant > 0 then\n            return word:sub(last_consonant\
    \ + 1, i)\n        end\n    end\n    return ''\nend\nassert(get_closest_vowel('engine')\
    \ == 'e')\nassert(get_closest_vowel('enginE') == 'E')\nassert(get_closest_vowel('serendipity')\
    \ == 'i')\nassert(get_closest_vowel('synthesized') == 'e')\nassert(get_closest_vowel('async')\
    \ == '')\nassert(get_closest_vowel('overzealous') == 'e')\nassert(get_closest_vowel('cyclops')\
    \ == 'o')\nassert(get_closest_vowel('sink') == 'i')\nassert(get_closest_vowel('sitting')\
    \ == 'i')\nassert(get_closest_vowel('try') == 'y')\nassert(get_closest_vowel('settle')\
    \ == 'e')\nassert(get_closest_vowel('zombie') == 'o')\nassert(get_closest_vowel('rhythm')\
    \ == 'y')\nassert(get_closest_vowel('a') == '')\nassert(get_closest_vowel('z')\
    \ == '')\nassert(get_closest_vowel('bbb') == '')\nassert(get_closest_vowel('bee')\
    \ == 'e')\nassert(get_closest_vowel('aba') == 'a')\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpu4d9xp6c.lua:21: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpu4d9xp6c.lua:21: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- body\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz4qusbts.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpz4qusbts.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  return word:gsub(\"^[^aeiou]*([aeiou].*[^aeiou])[^aeiou]*$\"\
    , \"%1\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpah0c05ud.lua:14:\
    \ expected: \"u\"\nactual: \"ogurt\"\nstack traceback:\n\t/tmp/tmpah0c05ud.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal consonants, vowels = {}, {}\n\tfor i=1, string.len(word)\
    \ do\n\t\tif 'aeiou'.find(word:sub(i,i)) then\n\t\t\tvowels[#vowels+1] = i\n\t\
    \telse\n\t\t\tconsonants[#consonants+1] = i\n\t\tend\n\tend\n\tif #vowels == 0\
    \ or #consonants == 0 then return '' end\n\tfor i=#consonants,1,-1 do\n\t\tfor\
    \ j=1,#vowels do\n\t\t\tif vowels[j] > consonants[i] then\n\t\t\t\treturn word:sub(vowels[j],vowels[j])\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpnsyxu7jr.lua:10: ''then'' expected near ''.''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = \"aeiou\"\n  for i = #word - 1, 2,\
    \ -1 do\n    if vowels:find(word:sub(i, i), 1, true) then\n      if vowels:find(word:sub(i\
    \ - 1, i - 1), 1, true) == nil and vowels:find(word:sub(i + 1, i + 1), 1, true)\
    \ == nil then\n        return word:sub(i, i)\n      end\n    end\n  end\n  return\
    \ \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyht718de.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpyht718de.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nprint(get_closest_vowel(\"\
    kzmqhqdvwz\"))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplcye6pr4.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmplcye6pr4.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tif word == nil then return \"\" end\n\tif string.len(word)\
    \ == 0 then return \"\" end\n\tif string.len(word) == 1 then return \"\" end\n\
    \tif string.len(word) == 2 then return \"\" end\n\t\n\tlocal w = string.gsub(word,\
    \ \"%s+\", \"\")\n\tlocal w = string.gsub(w, \"%s\", \"\")\n\t\n\t-- print(\"\
    w: \" .. w)\n\t\n\tlocal is_vowel = function(c)\n\t\tlocal v = string.find(\"\
    aeiouAEIOU\", c)\n\t\tif v ~= nil then return true end\n\t\treturn false\n\tend\n\
    \t\n\tlocal is_consonant = function(c)\n\t\tlocal v = string.find(\"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    , c)\n\t\tif v ~= nil then return true end\n\t\treturn false\n\tend\n\t\n\tlocal\
    \ is_c_before_v = function(str)\n\t\t-- print(\"str: \" .. str)\n\t\tlocal c =\
    \ string.sub(str, 1, 1)\n\t\tlocal v = string.sub(str, 2, 2)\n\t\t-- print(\"\
    c: \" .. c)\n\t\t-- print(\"v: \" .. v)\n\t\tif is_consonant(c) == true and is_vowel(v)\
    \ == true then return true end\n\t\treturn false\n\tend\n\t\n\tlocal is_v_after_c\
    \ = function(str)\n\t\t-- print(\"str: \" .. str)\n\t\tlocal v = string.sub(str,\
    \ -1, -1)\n\t\tlocal c = string.sub(str, -2, -2)\n\t\t-- print(\"v: \" .. v)\n\
    \t\t-- print(\"c: \" .. c)\n\t\tif is_vowel(v) == true and is_consonant(c) ==\
    \ true then return true end\n\t\treturn false\n\tend\n\t\n\tlocal num_chars =\
    \ string.len(w)\n\tlocal v_start = 0\n\tlocal v_end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpj9301z71.lua:72: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  word = word:gsub('[%l%d]', '')\n  for i = word:len(),\
    \ 2, -1 do\n    if word:sub(i, i):match('[aeiou]') then\n      return word:sub(i,\
    \ i)\n    end\n  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkp5mao1d.lua:20:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpkp5mao1d.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal last\n\tlocal vowels = {'a', 'e', 'i', 'o',\
    \ 'u'}\n\tfor i = #word, 1, -1 do\n\t\tif not vowels[word:sub(i, i)] then\n\t\t\
    \tlast = i\n\t\t\tbreak\n\t\tend\n\tend\n\tif not last then return '' end\n\t\
    for i = last - 1, 1, -1 do\n\t\tif vowels[word:sub(i, i)] then\n\t\t\treturn word:sub(i,\
    \ i)\n\t\tend\n\tend\n\treturn ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpupir0qvy.lua:28:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpupir0qvy.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- body\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp69v0t14g.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp69v0t14g.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"aeiou\"\n    for i = #word, 1,\
    \ -1 do\n        local ch = word:sub(i, i)\n        if vowels:find(ch) and not\
    \ vowels:find(word:sub(i-1, i-1)) and not vowels:find(word:sub(i+1, i+1)) then\n\
    \            return ch\n        end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local last_vowel = word:reverse():find('[aeiou]')\n\
    \    if last_vowel then\n        return word:sub(#word-last_vowel+1, #word-last_vowel+1)\n\
    \    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp75734hix.lua:20:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp75734hix.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    word = word:lower()\n    local found = false\n\
    \    local idx = word:len()\n    while idx > 0 do\n        local c = word:sub(idx,\
    \ idx)\n        if \"aeiou\".find(c, 1, true) then\n            found = true\n\
    \            break\n        end\n        idx = idx - 1\n    end\n    if not found\
    \ then\n        return \"\"\n    end\n    local result = \"\"\n    if idx < word:len()\
    \ and idx > 1 then\n        result = word:sub(idx, idx)\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbk51lv91.lua:13: ''then'' expected near ''.''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal last_consonant = ''\n\tlocal first_vowel =\
    \ ''\n\tlocal closest_vowel = ''\n\tlocal search_i = 1\n\tlocal search_end = string.len(word)\n\
    \twhile search_i <= search_end do\n\t\tlocal letter = string.sub(word, search_i,\
    \ search_i)\n\t\tif is_vowel(letter) then\n\t\t\tif last_consonant == '' then\n\
    \t\t\t\tfirst_vowel = letter\n\t\t\telse\n\t\t\t\tif closest_vowel == '' then\n\
    \t\t\t\t\tclosest_vowel = letter\n\t\t\t\telse\n\t\t\t\t\t-- if closest_vowel\
    \ is closer to last_consonant\n\t\t\t\t\tif search_i - last_consonant_i < last_consonant_i\
    \ - closest_vowel_i then\n\t\t\t\t\t\tclosest_vowel = letter\n\t\t\t\t\tend\n\t\
    \t\t\tend\n\t\t\tend\n\t\telse\n\t\t\tlast_consonant = letter\n\t\t\tlast_consonant_i\
    \ = search_i\n\t\tend\n\t\tsearch_i = search_i + 1\n\tend\n\tif last_consonant\
    \ == '' then\n\t\treturn first_vowel\n\telse\n\t\treturn closest_vowel\n\tend\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplde89wuc.lua:15:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmplde89wuc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmplde89wuc.lua:44: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowel = \"\"\n    local cons = {\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    if string.find(word, \"[AEIOUaeiou]\") then\n \
    \       for i = 1, string.len(word) do\n            if string.find(word, cons[i])\
    \ then\n                vowel = cons[i]\n                return vowel\n      \
    \      end\n        end\n    else\n        return vowel\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2zvmtpih.lua:25:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmp2zvmtpih.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- print(word)\n  local first_consonant_index = 0\n\
    \  for i = #word, 1, -1 do\n    if not is_vowel(word:sub(i, i)) then\n      first_consonant_index\
    \ = i\n      break\n    end\n  end\n  local last_consonant_index = 0\n  for i\
    \ = 1, #word do\n    if not is_vowel(word:sub(i, i)) then\n      last_consonant_index\
    \ = i\n      break\n    end\n  end\n  -- print(\"first: \" .. first_consonant_index)\n\
    \  -- print(\"last: \" .. last_consonant_index)\n  local closest_vowel_index =\
    \ math.huge\n  local closest_vowel = \"\"\n  local closest_vowel_distance = math.huge\n\
    \  for i = first_consonant_index, last_consonant_index do\n    if is_vowel(word:sub(i,\
    \ i)) then\n      local distance = math.abs(first_consonant_index - i)\n     \
    \ if distance < closest_vowel_distance then\n        closest_vowel_distance =\
    \ distance\n        closest_vowel_index = i\n        closest_vowel = word:sub(i,\
    \ i)\n      end\n    end\n  end\n  -- print(\"closest_vowel_index: \" .. closest_vowel_index)\n\
    \  -- print(\"closest_vowel: \" .. closest_vowel)\n  return closest_vowel\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr7kjy_cv.lua:11:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpr7kjy_cv.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpr7kjy_cv.lua:46: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local res = ''\n  local found = false\n  local i\
    \ = 1\n  while not found and i <= #word do\n    if (i == 1 or word:sub(i - 1,\
    \ i - 1):match('[^aeiou]')) and word:sub(i, i):match('[aeiou]') and (i == #word\
    \ or word:sub(i + 1, i + 1):match('[^aeiou]')) then\n      res = word:sub(i, i)\n\
    \      found = true\n    end\n    i = i + 1\n  end\n  return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9wqa4y6i.lua:24:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmp9wqa4y6i.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    for i=#word, 1, -1 do\n        local c = word:sub(i,i)\n\
    \        if 'aeiou' :find(c) then return c end\n    end\n    return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpo38if0vk.lua:10: ''then'' expected near '':''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    --TODO: implement\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsazt5q5m.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpsazt5q5m.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Write your code here\n  return \"\"\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm9qsklay.lua:15:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpm9qsklay.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\tlocal\
    \ prev_char = ''\n\tlocal vowel = ''\n\tlocal result = ''\n\tlocal first_vowel\
    \ = 0\n\tlocal last_consonant = 0\n\tfor i=1,#word do\n\t\tlocal ch = word:sub(i,i)\n\
    \t\tif table.has_value(vowels, ch) then\n\t\t\tfirst_vowel = i\n\t\t\tbreak\n\t\
    \tend\n\tend\n\tfor i=#word,1,-1 do\n\t\tlocal ch = word:sub(i,i)\n\t\tif table.has_value(vowels,\
    \ ch) then\n\t\t\tlast_consonant = i\n\t\t\tbreak\n\t\tend\n\tend\n\tif last_consonant\
    \ < first_vowel then\n\t\treturn ''\n\tend\n\tfor i=last_consonant-1,first_vowel,-1\
    \ do\n\t\tlocal ch = word:sub(i,i)\n\t\tif table.has_value(vowels, ch) then\n\t\
    \t\tvowel = ch\n\t\t\tbreak\n\t\tend\n\tend\n\tif vowel ~= '' then\n\t\tresult\
    \ = vowel\n\tend\n\treturn result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdcqvgasl.lua:16:\
    \ attempt to call a nil value (field 'has_value')\nstack traceback:\n\t/tmp/tmpdcqvgasl.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpdcqvgasl.lua:47: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- write your solution here\n    return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbupyci2x.lua:15:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpbupyci2x.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- TODO: Implement your solution here\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp25opj5fg.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp25opj5fg.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnkz3vsqz.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpnkz3vsqz.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnkz3vsqz.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpnkz3vsqz.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local head = string.match(word, \"^%l*\")\n   \
    \ local tail = string.match(word, \"%l*$\")\n    local middle = string.sub(word,\
    \ #head + 1, #word - #tail)\n    local len = #middle\n    if len == 0 then return\
    \ \"\" end\n    for i = len, 1, -1 do\n        local ch = string.sub(middle, i,\
    \ i)\n        if ch == \"a\" or ch == \"e\" or ch == \"i\" or ch == \"o\" or ch\
    \ == \"u\" then\n            local prev = string.sub(middle, i - 1, i - 1)\n \
    \           local next = string.sub(middle, i + 1, i + 1)\n            if (prev\
    \ ~= \"a\" and prev ~= \"e\" and prev ~= \"i\" and prev ~= \"o\" and prev ~= \"\
    u\") and\n               (next ~= \"a\" and next ~= \"e\" and next ~= \"i\" and\
    \ next ~= \"o\" and next ~= \"u\") then\n                return ch\n         \
    \   end\n        end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb38f_ypt.lua:30:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpb38f_ypt.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqme21mj4.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpqme21mj4.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local function find_vowel_from_right(pos)\n    local\
    \ vowel_tbl = {a = true, e = true, i = true, o = true, u = true}\n    for i =\
    \ pos, 1, -1 do\n      if vowel_tbl[word:sub(i, i)] then\n        return i\n \
    \     end\n    end\n    return nil\n  end\n  local function find_consonant_from_right(pos)\n\
    \    local vowel_tbl = {a = true, e = true, i = true, o = true, u = true}\n  \
    \  for i = pos, 1, -1 do\n      if not vowel_tbl[word:sub(i, i)] then\n      \
    \  return i\n      end\n    end\n    return nil\n  end\n  local j = find_consonant_from_right(#word)\n\
    \  if not j then return '' end\n  for i = #word, 1, -1 do\n    if i >= j then\n\
    \      local vow = find_vowel_from_right(i)\n      if vow and vow < j then\n \
    \       return word:sub(vow, vow)\n      end\n    end\n  end\n  return ''\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzw3ezutk.lua:44:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpzw3ezutk.lua:44:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if type(word) ~= \"string\" then\n        return\
    \ \"\"\n    end\n    local vowel_regex = \"[aeiou]\"\n    local last_consonant\
    \ = 0\n    local last_vowel = 0\n    local current_char = 1\n    while current_char\
    \ <= #word do\n        local char = word:sub(current_char, current_char)\n   \
    \     if string.match(char, vowel_regex) then\n            if current_char > 1\
    \ and last_consonant > 0 then\n                return char\n            end\n\
    \            last_vowel = current_char\n        else\n            last_consonant\
    \ = current_char\n        end\n        current_char = current_char + 1\n    end\n\
    \    if last_consonant > 0 and last_vowel > 0 then\n        return word:sub(last_vowel,\
    \ last_vowel)\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyjz7548i.lua:36:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmpyjz7548i.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowel = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ res = ''\n    local i = string.len(word)\n    while i > 0 do\n        local\
    \ ch = string.sub(word, i, i)\n        if table.contains(vowel, ch) then\n   \
    \         res = ch\n            break\n        end\n        i = i - 1\n    end\n\
    \    return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpffmdzdvq.lua:13:\
    \ attempt to call a nil value (field 'contains')\nstack traceback:\n\t/tmp/tmpffmdzdvq.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpffmdzdvq.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {['a'] = true, ['e'] = true, ['i']\
    \ = true, ['o'] = true, ['u'] = true}\n    local i = #word - 1\n    local last_consonant\
    \ = i\n    local res = ''\n    while i > 0 do\n        if vowels[word:sub(i, i)]\
    \ then\n            if last_consonant - i == 1 then\n                res = word:sub(i,\
    \ i)\n                break\n            end\n        else\n            last_consonant\
    \ = i\n        end\n        i = i - 1\n    end\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprairswhj.lua:31:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmprairswhj.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local i, j = #word, #word\n    while i >= 1 do\n\
    \        if is_vowel(word:sub(i, i)) then\n            break\n        end\n  \
    \      i = i - 1\n    end\n    while j >= 1 do\n        if is_vowel(word:sub(j,\
    \ j)) then\n            if i >= 1 and j < i then\n                return word:sub(j,\
    \ j)\n            end\n            i = j\n        end\n        j = j - 1\n   \
    \ end\n    return \"\"\nend\nassert(get_closest_vowel(\"shuffles\") == \"u\")\n\
    assert(get_closest_vowel(\"dragoon\") == \"o\")\nassert(get_closest_vowel(\"dragoon\"\
    ) == \"o\")\nassert(get_closest_vowel(\"\";) == \"\")\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4a_r8h8d.lua:29: '')'' expected near '';''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local word_len = word:len()\n    local l, r = word_len,\
    \ word_len\n    while l > 0 do\n        while r > 0 and not table.indexof(vowels,\
    \ word:sub(r, r)) do\n            r = r - 1\n        end\n        if r > 0 and\
    \ table.indexof(vowels, word:sub(r, r)) then\n            break\n        end\n\
    \        r = word_len\n        l = l - 1\n    end\n    if r > 0 and table.indexof(vowels,\
    \ word:sub(r, r)) then\n        return word:sub(r, r)\n    end\n    return \"\"\
    \nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate =\
    \ get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_ttd17vy.lua:11:\
    \ attempt to call a nil value (field 'indexof')\nstack traceback:\n\t/tmp/tmp_ttd17vy.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp_ttd17vy.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local prev_is_consonant = false\n    local len\
    \ = string.len(word)\n    for i = len, 1, -1 do\n        local ch = string.sub(word,\
    \ i, i)\n        if prev_is_consonant and is_vowel(ch) then\n            return\
    \ ch\n        end\n        prev_is_consonant = not is_vowel(ch)\n    end\n   \
    \ return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw1ycx2qo.lua:15:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpw1ycx2qo.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpw1ycx2qo.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {['a'] = true, ['e'] = true, ['i']\
    \ = true, ['o'] = true, ['u'] = true}\n\tlocal vowel = ''\n\tlocal distance =\
    \ math.huge\n\tfor i = #word, 1, -1 do\n\t\tif vowels[word:sub(i, i)] then\n\t\
    \t\tif distance > #word - i then\n\t\t\t\tdistance = #word - i\n\t\t\t\tvowel\
    \ = word:sub(i, i)\n\t\t\tend\n\t\tend\n\tend\n\treturn vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqucswzo9.lua:27:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpqucswzo9.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- TODO: Implement\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_qlgwl9.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpt_qlgwl9.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ i, c\n    local prev_letter, curr_letter, next_letter\n    for i = #word, 1,\
    \ -1 do\n        curr_letter = word:sub(i, i)\n        next_letter = word:sub(i\
    \ + 1, i + 1)\n        if contains(vowels, curr_letter) then\n            if prev_letter\
    \ and contains(vowels, prev_letter) then\n                goto continue\n    \
    \        end\n            if not contains(vowels, next_letter) then\n        \
    \        return curr_letter\n            end\n        end\n        prev_letter\
    \ = curr_letter\n        ::continue::\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo1ul7hpu.lua:14:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpo1ul7hpu.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpo1ul7hpu.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local idx = #word\n    while idx > 1 do\n     \
    \   if not word:sub(idx, idx):match('[aeiou]') then\n            if word:sub(idx\
    \ - 1, idx - 1):match('[aeiou]') then\n                return word:sub(idx - 1,\
    \ idx - 1)\n            end\n        end\n        idx = idx - 1\n    end\n   \
    \ return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4kpmby5j.lua:25:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp4kpmby5j.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    word = word:match(\"^%s*(.-)%s*$\") -- trim whitespace\n\
    \    if not word:match(\"^[a-zA-Z]*$\") then\n        error(\"[get_closest_vowel]\
    \ must contain English letter only.\")\n    end\n    local vowels = {\"a\", \"\
    e\", \"i\", \"o\", \"u\"}\n    local last_consonant_idx = nil\n    local vowel_idx\
    \ = nil\n    for i = #word, 1, -1 do\n        local char = word:sub(i, i)\n  \
    \      if table.contains(vowels, char) then\n            vowel_idx = i\n     \
    \   else\n            if vowel_idx ~= nil then\n                return word:sub(vowel_idx,\
    \ vowel_idx)\n            end\n            last_consonant_idx = i\n        end\n\
    \    end\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1rhsvls7.lua:17:\
    \ attempt to call a nil value (field 'contains')\nstack traceback:\n\t/tmp/tmp1rhsvls7.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmp1rhsvls7.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return word\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwes0quf2.lua:14:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpwes0quf2.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels, cons = {'a', 'e', 'i', 'o', 'u'}, {}\n\
    \tword:gsub('%a', function(char) table.insert(char:find(vowels) and vowels or\
    \ cons, char) end)\n\tif #vowels > 0 and #cons > 0 then\n\t\tfor i = 1, #cons\
    \ - 1 do\n\t\t\tif cons[i] and cons[i + 1] then\n\t\t\t\tfor j = 1, #vowels do\n\
    \t\t\t\t\treturn vowels[j]\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn ''\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo69lwh9h.lua:9:\
    \ bad argument #1 to 'find' (string expected, got table)\nstack traceback:\n\t\
    /tmp/tmpo69lwh9h.lua:9: in function </tmp/tmpo69lwh9h.lua:9>\n\t[C]: in function\
    \ 'string.gsub'\n\t/tmp/tmpo69lwh9h.lua:9: in local 'candidate'\n\t/tmp/tmpo69lwh9h.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nassert(get_closest_vowel('c') == '')\nassert(get_closest_vowel('cc')\
    \ == '')\nassert(get_closest_vowel('fo') == '')\nassert(get_closest_vowel('fofo')\
    \ == '')\nassert(get_closest_vowel('a') == '')\nassert(get_closest_vowel('fa')\
    \ == '')\nassert(get_closest_vowel('ba') == '')\nassert(get_closest_vowel('xo')\
    \ == 'o')\nassert(get_closest_vowel('poya') == 'o')\nassert(get_closest_vowel('kiyo')\
    \ == 'i')\nassert(get_closest_vowel('yoyo') == 'o')\nassert(get_closest_vowel('yoy')\
    \ == 'o')\nassert(get_closest_vowel('yoyoy') == 'o')\nassert(get_closest_vowel('yoyoyoy')\
    \ == 'o')\nassert(get_closest_vowel('yoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoy\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmph9qhxgtx.lua:23: unfinished string near ''''yoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoy''

    '
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5235ci0e.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5235ci0e.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowel = { 'a', 'e', 'i', 'o', 'u' }\n  local\
    \ res = {}\n  for i = #word, 1, -1 do\n    for j = 1, #vowel do\n      if word:sub(i,\
    \ i) == vowel[j] then\n        res[#res + 1] = word:sub(i, i)\n      end\n   \
    \ end\n  end\n  if #res == 0 then\n    return ''\n  else\n    return res[1]\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpav4xr2vx.lua:29:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpav4xr2vx.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local not_vowels = {\"B\", \"C\", \"D\", \"F\"\
    , \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\"\
    , \"T\", \"V\", \"W\", \"X\", \"Y\", \"Z\"}\n    local vowels = {\"A\", \"E\"\
    , \"I\", \"O\", \"U\"}\n    local reverse_word = word:reverse()\n    for i = 2,\
    \ #reverse_word - 1 do\n        local j = reverse_word:find(not_vowels, i)\n \
    \       if j ~= nil then\n            for k = j + 1, #reverse_word do\n      \
    \          if reverse_word:find(vowels, k) then\n                    return reverse_word:sub(k,\
    \ k)\n                end\n            end\n        end\n    end\n    return \"\
    \"\nend\nassert(get_closest_vowel(\"sam\") == \"A\")\nassert(get_closest_vowel(\"\
    dapper\") == \"\")\nassert(get_closest_vowel(\"weird\") == \"E\")\nassert(get_closest_vowel(\"\
    six\") == \"I\")\nassert(get_closest_vowel(\"w\") == \"\")\nassert(get_closest_vowel(\"\
    that\") == \"\")\nassert(get_closest_vowel(\"bead\") == \"E\")\nassert(get_closest_vowel(\"\
    h\") == \"\")\nassert(get_closest_vowel(\"cereal\") == \"E\")\nassert(get_closest_vowel(\"\
    bla\") == \"A\")\nassert(get_closest_vowel(\"house\") == \"O\")\nassert(get_closest_vowel(\"\
    cook\") == \"O\")\nassert(get_closest_vowel(\"bat\") == \"A\")\nassert(get_closest_vowel(\"\
    salon\") == \"O\")\nassert(get_closest_vowel(\"k\") == \"\")\nassert(get_closest_vowel(\"\
    just\") == \"U\")\n\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp5j0pqmrq.lua:12: bad argument #1 to 'find' (string expected,\
    \ got table)\nstack traceback:\n\t[C]: in function 'string.find'\n\t/tmp/tmp5j0pqmrq.lua:12:\
    \ in local 'get_closest_vowel'\n\t/tmp/tmp5j0pqmrq.lua:23: in main chunk\n\t[C]:\
    \ in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- code goes here\n    return word\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpycx2c8xc.lua:15:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpycx2c8xc.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowel = word:gsub(\"[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]*[aeiouAEIOU]\"\
    , \"\")\n  vowel = vowel:gsub(\"[aeiouAEIOU]*[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]\"\
    , \"\")\n  return vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph6o39cl_.lua:16:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmph6o39cl_.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = \"aeiou\"\n  local word_len = word:len()\n\
    \  for i = word_len, 1, -1 do\n    if vowels:find(word:sub(i, i)) then\n     \
    \ local prev_letter = word:sub(i - 1, i - 1)\n      local next_letter = word:sub(i\
    \ + 1, i + 1)\n      if prev_letter and next_letter and not (vowels:find(prev_letter)\
    \ or vowels:find(next_letter)) then\n        return word:sub(i, i)\n      end\n\
    \    end\n  end\n  return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = 'aeiou'\n    local consonants =\
    \ 'bcdfghjklmnpqrstvwxyz'\n    local prev = 'a'\n    local closest = ''\n    for\
    \ i = #word, 1, -1 do\n        local c = word:sub(i, i)\n        if vowels:find(c)\
    \ then\n            if prev ~= 'a' and prev ~= 'e' then\n                return\
    \ c\n            end\n            closest = c\n        elseif consonants:find(c)\
    \ then\n            prev = c\n        end\n    end\n    return closest\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpglxhm0k3.lua:31:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpglxhm0k3.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- find a vowel between two consonants\n  local function\
    \ find_two_consonants(s)\n    if #s < 3 then return nil end\n    local prev =\
    \ s:sub(1, 1)\n    for i = 2, #s - 1 do\n      local c = s:sub(i, i)\n      local\
    \ next = s:sub(i + 1, i + 1)\n      if is_vowel(c) and not is_vowel(prev) and\
    \ not is_vowel(next) then\n        return i\n      end\n      prev = c\n    end\n\
    \    return nil\n  end\n  -- search right to left\n  for i = #word, 1, -1 do\n\
    \    local c = word:sub(i, i)\n    if is_vowel(c) then\n      local offset = find_two_consonants(word:sub(i,\
    \ -1))\n      if offset then return word:sub(i + offset, i + offset) end\n   \
    \ end\n  end\n  return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpni2zlmfr.lua:25:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpni2zlmfr.lua:25:\
    \ in local 'candidate'\n\t/tmp/tmpni2zlmfr.lua:36: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if #word == 0 then return \"\" end\n    for i =\
    \ #word, 1, -1 do\n        if not is_consonant(word:sub(i, i)) then\n        \
    \    return word:sub(i, i)\n        end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfsr6ew88.lua:10:\
    \ attempt to call a nil value (global 'is_consonant')\nstack traceback:\n\t/tmp/tmpfsr6ew88.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpfsr6ew88.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code goes here\nend\nassert(get_closest_vowel(\"\
    davidor\") == \"i\")\nassert(get_closest_vowel(\"abcd\") == \"\")\nassert(get_closest_vowel(\"\
    helloyou\") == \"o\")\nassert(get_closest_vowel(\"qwerty\") == \"e\")\nassert(get_closest_vowel(\"\
    youlove\") == \"o\")\nassert(get_closest_vowel(\"\") == \"\")\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmppc173e3e.lua:10: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmppc173e3e.lua:10: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local closest = ''\n    local idx\n    for i=1,\
    \ #word do\n        if word:sub(i,i):match('[aeiouAEIOU]') then\n            closest\
    \ = word:sub(i,i)\n            idx = i\n            break\n        end\n    end\n\
    \    for i=idx, #word do\n        if word:sub(i,i):match('[^aeiouAEIOU]') then\n\
    \            if i < #word and word:sub(i+1,i+1):match('[aeiouAEIOU]') then\n \
    \               closest = word:sub(i+1,i+1)\n            end\n            break\n\
    \        end\n    end\n    return closest\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjc_159aw.lua:33:\
    \ expected: \"\"\nactual: \"e\"\nstack traceback:\n\t/tmp/tmpjc_159aw.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\treturn ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0h9qkwn3.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0h9qkwn3.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    for i = #word, 1, -1 do\n        local char = word:sub(i,\
    \ i)\n        if is_vowel(char) then\n            local char_prev = word:sub(i\
    \ - 1, i - 1)\n            local char_next = word:sub(i + 1, i + 1)\n        \
    \    if not is_vowel(char_prev) and not is_vowel(char_next) then\n           \
    \     return char\n            end\n        end\n    end\n    return \"\"\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf2ijnk3_.lua:10:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpf2ijnk3_.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpf2ijnk3_.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local consonants = {'b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'}\n    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u'}\n    local find_letter = function(s, letter)\n\
    \        for i = #s, 1, -1 do\n            if s[i] == letter then\n          \
    \      return i\n            end\n        end\n        return nil\n    end\n \
    \   for i = #word, 1, -1 do\n        local char = word[i]\n        if find_letter(consonants,\
    \ char) then\n            for j = i-1, 1, -1 do\n                local candidate\
    \ = word[j]\n                if find_letter(vowels, candidate) then\n        \
    \            return candidate\n                end\n            end\n        end\n\
    \    end\n    return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpobj1mq1k.lua:35:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpobj1mq1k.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- body\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsxkg8fy6.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpsxkg8fy6.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal idx = word:find(\"[^aeiou]*[aeiou][^aeiou]*$\"\
    )\n\treturn idx and word:sub(idx, idx) or \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpidlg608i.lua:15:\
    \ expected: \"u\"\nactual: \"g\"\nstack traceback:\n\t/tmp/tmpidlg608i.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if not word then return end\n  if not word:match('%a')\
    \ then return end\n  local vowels = \"aeiouAEIOU\"\n  local result = \"\"\n  local\
    \ m = #word\n  for i = #word, 2, -1 do\n    local char = word:sub(i, i)\n    if\
    \ not vowels:find(char) then\n      m = i\n    else\n      local left = word:sub(i-1,\
    \ i-1)\n      if not vowels:find(left) then\n        result = char\n        break\n\
    \      end\n    end\n  end\n  return result\nend\nassert(get_closest_vowel(\"\
    two\") == \"\")\nassert(get_closest_vowel(\"ceiling\") == \"e\")\nassert(get_closest_vowel(\"\
    shelf\") == \"e\")\nassert(get_closest_vowel(\"BEAUTIFUL\") == \"A\")\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpvl2jtaz7.lua:27: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpvl2jtaz7.lua:27: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- Get a list of [consonant, vowel, consonant]\n\
    \    local pattern = \"(%a)[aeiouy](%a)\"\n    local result = {}\n    for consonant,\
    \ vowel, consonant in word:lower():gmatch(pattern) do\n        table.insert(result,\
    \ {vowel, #consonant + #vowel + 1})\n    end\n    -- Find the closest vowel to\
    \ the right.\n    local closest_vowel, closest_index = \"\", 0\n    for _, t in\
    \ ipairs(result) do\n        local vowel, index = t[1], t[2]\n        if closest_index\
    \ == 0 or closest_index > index then\n            closest_vowel, closest_index\
    \ = vowel, index\n        end\n    end\n    return closest_vowel\nend\nassert(get_closest_vowel(\"\
    hello\") == \"e\")\nassert(get_closest_vowel(\"hey\") == \"e\")\nassert(get_closest_vowel(\"\
    sad\") == \"a\")\nassert(get_closest_vowel(\"feel\") == \"e\")\nassert(get_closest_vowel(\"\
    complain\") == \"a\")\nassert(get_closest_vowel(\"\") == \"\")\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpm9hzauf0.lua:12: attempt to get length of a nil value (local\
    \ 'consonant')\nstack traceback:\n\t/tmp/tmpm9hzauf0.lua:12: in local 'get_closest_vowel'\n\
    \t/tmp/tmpm9hzauf0.lua:24: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local\
    \ is_vowel = function(letter)\n    for i, v in ipairs(vowels) do\n      if v ==\
    \ letter then return true end\n    end\n    return false\n  end\n  local is_consonant\
    \ = function(letter)\n    return not is_vowel(letter)\n  end\n  local result =\
    \ ''\n  local right_counter = 0\n  local right_vowel_counter = 0\n  for i = #word,\
    \ 1, -1 do\n    local letter = word:sub(i, i)\n    if is_consonant(letter) then\n\
    \      right_counter = right_counter + 1\n    elseif is_vowel(letter) then\n \
    \     right_vowel_counter = right_vowel_counter + 1\n      if right_counter >\
    \ 1 then\n        result = letter\n        break\n      end\n    end\n  end\n\
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqk5xdzgj.lua:41:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmpqk5xdzgj.lua:41:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- get the last character\n    local w = word:sub(-1)\n\
    \    -- if the last character is a vowel, return it\n    if (w == 'a' or w ==\
    \ 'e' or w == 'i' or w == 'o' or w == 'u') then\n        return w\n    end\n \
    \   -- otherwise, check if there are any vowels in the string, and\n    -- if\
    \ so, return the last vowel\n    if word:find('a') or word:find('e') or word:find('i')\
    \ or word:find('o') or word:find('u') then\n        return word:match('[aeiou].*'):sub(-1)\n\
    \    end\n    -- otherwise, return an empty string\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx8g0wfa9.lua:26:\
    \ expected: \"u\"\nactual: \"t\"\nstack traceback:\n\t/tmp/tmpx8g0wfa9.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"aeiou\"\n    local last_vowel_pos\
    \ = word:find(vowels)\n    if last_vowel_pos == 1 then\n        last_vowel_pos\
    \ = 0\n    end\n    while last_vowel_pos do\n        local second_last_consonant_pos\
    \ = last_vowel_pos - 1\n        while second_last_consonant_pos >= 1 and vowels:find(word:sub(second_last_consonant_pos,\
    \ second_last_consonant_pos)) do\n            second_last_consonant_pos = second_last_consonant_pos\
    \ - 1\n        end\n        if second_last_consonant_pos >= 1 then\n         \
    \   return word:sub(last_vowel_pos, last_vowel_pos)\n        end\n        last_vowel_pos\
    \ = word:find(vowels, last_vowel_pos + 1)\n    end\n    return \"\"\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2l4huzk4.lua:29:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp2l4huzk4.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  for i=#word, 2, -1 do\n    if (not word:find(word:sub(i,i),1,true))\
    \ and word:find(word:sub(i-1,i-1),1,true) then\n      return word:sub(i,i)\n \
    \   end\n  end\n  return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2w_33esp.lua:19:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp2w_33esp.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return word\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwes0quf2.lua:14:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpwes0quf2.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n  local found = {}\n  for i = 1, word:len() do\n    if word:sub(i, i) == \"\
    a\" or word:sub(i, i) == \"e\" or word:sub(i, i) == \"i\" or word:sub(i, i) ==\
    \ \"o\" or word:sub(i, i) == \"u\" then\n      found[i] = word:sub(i, i)\n   \
    \ end\n  end\n  local first_found, last_found = 0, 0\n  for i = 1, #found do\n\
    \    if found[i] ~= nil then\n      first_found = i\n      break\n    end\n  end\n\
    \  for i = 1, #found do\n    if found[i] ~= nil then\n      last_found = i\n \
    \   end\n  end\n  if first_found == last_found then\n    return \"\"\n  end\n\
    \  local closest_vowel = \"a\"\n  for i = 1, #found do\n    if found[i] ~= nil\
    \ then\n      if (last_found - i) < (last_found - closest_vowel) then\n      \
    \  closest_vowel = i\n      end\n    end\n  end\n  return found[closest_vowel]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkr82z1gf.lua:44:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpkr82z1gf.lua:44:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal function is_vowel(x)\n\t\treturn x == 'a' or\
    \ x == 'e' or x == 'i' or x == 'o' or x == 'u'\n\tend\n\tlocal function get_closest_vowel_at(word,\
    \ index)\n\t\tlocal len = #word\n\t\tif index > len then return word end\n\t\t\
    if index == len then return nil end\n\t\tif not is_vowel(word:sub(index, index))\
    \ then\n\t\t\treturn get_closest_vowel_at(word, index + 1)\n\t\tend\n\t\tif index\
    \ == 1 then return word:sub(index, index) end\n\t\tif not is_vowel(word:sub(index\
    \ - 1, index - 1)) then\n\t\t\treturn word:sub(index, index)\n\t\tend\n\t\treturn\
    \ get_closest_vowel_at(word, index + 1)\n\tend\n\treturn get_closest_vowel_at(word,\
    \ 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkj94glw3.lua:30:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmpkj94glw3.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local result = \"\"\n    local lword = string.lower(word)\n\
    \    for i = #lword - 1, 1, -1 do\n        if lword:sub(i, i) == \"a\" or lword:sub(i,\
    \ i) == \"e\" or\n            lword:sub(i, i) == \"i\" or lword:sub(i, i) == \"\
    o\" or lword:sub(i, i) == \"u\" then\n            if lword:sub(i + 1, i + 1) ~=\
    \ \"a\" and lword:sub(i + 1, i + 1) ~= \"e\" and\n                lword:sub(i\
    \ + 1, i + 1) ~= \"i\" and lword:sub(i + 1, i + 1) ~= \"o\" and\n            \
    \    lword:sub(i + 1, i + 1) ~= \"u\" then\n                result = word:sub(i,\
    \ i)\n                break\n            end\n        end\n    end\n    return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp52h99bmc.lua:29:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp52h99bmc.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local len = #word\n    local v = {a = true, e =\
    \ true, i = true, o = true, u = true}\n    for i = len, 2, -1 do\n        if v[word:sub(i,\
    \ i)] then\n            if not v[word:sub(i - 1, i - 1)] then\n              \
    \  return word:sub(i, i)\n            end\n        end\n    end\n    return \"\
    \"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7j5nw57t.lua:27:\
    \ expected: \"\"\nactual: \"i\"\nstack traceback:\n\t/tmp/tmp7j5nw57t.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {[\"a\"] = true, [\"e\"] = true, [\"\
    i\"] = true, [\"o\"] = true, [\"u\"] = true}\n  -- use a reverse iterator\n  for\
    \ i = #word, 1, -1 do\n    if vowels[word:sub(i, i)] then\n      for j = i - 1,\
    \ 1, -1 do\n        if vowels[word:sub(j, j)] then\n          return word:sub(j\
    \ + 1, i)\n        end\n      end\n    end\n  end\n  return \"\"\nend\nprint(get_closest_vowel(\"\
    generator\"))    --> [\"e\", \"i\"]\nprint(get_closest_vowel(\"rvqvjr\"))    \
    \   --> []\nprint(get_closest_vowel(\"ratsliveonnoevilstar\")) --> [\"a\", \"\
    a\", \"a\", \"a\", \"e\", \"i\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"\
    o\", \"o\", \"o\", \"u\"]\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "to\n\nlsta\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvu6wlqx3.lua:28:\
    \ expected: \"u\"\nactual: \"gu\"\nstack traceback:\n\t/tmp/tmpvu6wlqx3.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Get the right index of the consonant.\n  local\
    \ right_consonant_index = word:match(\".*[^aeiouAEIOU]\")\n  -- Get the vowel\
    \ index between the consonants.\n  local closest_vowel_index = word:sub(right_consonant_index\
    \ + 1):match(\"[aeiouAEIOU]\")\n  -- Return empty string or the vowel.\n  return\
    \ closest_vowel_index and word:sub(right_consonant_index + closest_vowel_index,\
    \ right_consonant_index + closest_vowel_index) or \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp00cmhla6.lua:11:\
    \ attempt to add a 'string' with a 'number'\nstack traceback:\n\t/tmp/tmp00cmhla6.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmp00cmhla6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local closest_vowel = string.gsub(word, \"[^aeiou]+([aeiou])[^aeiou]+\"\
    , \"%1\")\n    return closest_vowel\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk4bvoyqu.lua:15:\
    \ expected: \"u\"\nactual: \"ourt\"\nstack traceback:\n\t/tmp/tmpk4bvoyqu.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {a = true, e = true, i = true, o =\
    \ true, u = true}\n  local found = false\n  local result = \"\"\n  for i = word:len(),\
    \ 1, -1 do\n    local char = word:sub(i, i)\n    if not found and vowels[char]\
    \ then\n      found = true\n      result = char\n    elseif found and not vowels[char]\
    \ then\n      break\n    end\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp97ro8hot.lua:28:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmp97ro8hot.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 0
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local v, d, s = \"aeiou\", {}, string.reverse(word)\n\
    \    for i = 2, #s do\n        for c in v:gmatch(\".\") do\n            if c ==\
    \ s:sub(i, i) and v:find(s:sub(i - 1, i - 1)) == nil and v:find(s:sub(i + 1, i\
    \ + 1)) == nil then\n                d[#d + 1] = i\n            end\n        end\n\
    \    end\n    return #d > 0 and s:sub(d[1], d[1]) or \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local letter = word:match('[^aeiouAEIOU]+([aeiouAEIOU])[^aeiouAEIOU]+$')\n\
    \  return letter or ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwpirm_eb.lua:25:\
    \ expected: \"i\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpwpirm_eb.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local position = 0\n    local first = ''\n    local\
    \ second = ''\n    local vowel = ''\n    local current_position = 0\n    local\
    \ pattern = '[^aeiou]'\n    for c in word:gmatch('.') do\n        local is_vowel\
    \ = string.match(c, pattern)\n        if is_vowel then\n            first = second\n\
    \            second = c\n            current_position = current_position + 1\n\
    \        else\n            if first == '' then\n                position = current_position\n\
    \                vowel = c\n            else\n                if position > current_position\
    \ then\n                    position = current_position\n                    vowel\
    \ = c\n                end\n            end\n        end\n    end\n    return\
    \ vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptuz6ypr_.lua:38:\
    \ expected: \"u\"\nactual: \"o\"\nstack traceback:\n\t/tmp/tmptuz6ypr_.lua:38:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823651
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- body\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsxkg8fy6.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpsxkg8fy6.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\n    --return \"e\"\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpops3f3h1.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpops3f3h1.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowel = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ idx = #word\n    local found = false\n    while idx > 1 do\n        local ch\
    \ = word:sub(idx, idx)\n        if vowel[ch] then\n            local ch_prev =\
    \ word:sub(idx - 1, idx - 1)\n            if not vowel[ch_prev] then\n       \
    \         found = true\n                break\n            end\n        end\n\
    \        idx = idx - 1\n    end\n    if found then\n        return word:sub(idx,\
    \ idx)\n    else\n        return ''\n    end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpls55w9dr.lua:32:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpls55w9dr.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if #word < 3 then return \"\" end\n    for i =\
    \ #word - 1, 1, -1 do\n        if is_vowel(word:sub(i, i)) then\n            if\
    \ not is_vowel(word:sub(i - 1, i - 1)) and not is_vowel(word:sub(i + 1, i + 1))\
    \ then\n                return word:sub(i, i)\n            end\n        end\n\
    \    end\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp55akbfup.lua:10:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmp55akbfup.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp55akbfup.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823651
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- valid word check\n    if not word then return\
    \ \"\" end\n    -- filter valid characters check\n    word = word:gsub(\"[^A-Za-z]\"\
    , \"\")\n    if word == \"\" then return \"\" end\n    -- find valid indices of\
    \ the consonants\n    local consonants = {}\n    local count = 0\n    for i =\
    \ 1, #word do\n        local c = word:sub(i, i)\n        if c ~= \"a\" and c ~=\
    \ \"e\" and c ~= \"i\" and c ~= \"o\" and c ~= \"u\" then\n            count =\
    \ count + 1\n            consonants[count] = i\n        end\n    end\n    -- filter\
    \ valid indices check\n    if count < 2 then return \"\" end\n    -- find closest\
    \ vowel\n    local min = consonants[count] - consonants[count - 1]\n    local\
    \ closest_idx = consonants[count - 1]\n    for i = count - 1, 2, -1 do\n     \
    \   local temp = consonants[i] - consonants[i - 1]\n        if temp < min then\n\
    \            min = temp\n            closest_idx = consonants[i - 1]\n       \
    \ end\n    end\n    return word:sub(closest_idx, closest_idx)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpibksjh8j.lua:41:\
    \ expected: \"u\"\nactual: \"r\"\nstack traceback:\n\t/tmp/tmpibksjh8j.lua:41:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823651
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- YOUR CODE HERE\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph1ghqyqq.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmph1ghqyqq.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal chars = {}\n\tfor i = 1, #word do\n\t\tchars[i]\
    \ = word:sub(i, i)\n\tend\n\tlocal found = false\n\tfor i = #chars, 1, -1 do\n\
    \t\tif not is_vowel(chars[i]) then\n\t\t\tif is_vowel(chars[i + 1]) then\n\t\t\
    \t\treturn chars[i + 1]\n\t\t\tend\n\t\telse\n\t\t\tfound = true\n\t\tend\n\t\
    end\n\tif not found then\n\t\treturn ''\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnvja7d_e.lua:14:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpnvja7d_e.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpnvja7d_e.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- body\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz4qusbts.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpz4qusbts.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqme21mj4.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpqme21mj4.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650

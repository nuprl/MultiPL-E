name: HumanEval_55_fib
language: lua
prompt: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
  \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
  \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
  \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if n < 2 then\n        return n\n    else\n        return fib(n\
    \ - 2) + fib(n - 1)\n    end\nend", "    if n < 2 then\n        return n\n   \
    \ else\n        return fib(n - 2) + fib(n - 1)\n    end\nend", "\tlocal a, b =\
    \ 0, 1\n\tfor i = 1, n - 1 do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend", " \
    \ local f = 0 -- current Fibonacci number\n  local g = 1 -- next Fibonacci number",
  "    return fib_cache[n] or fib_recur(n)\nend", "  if n < 2 then\n    return n\n\
    \  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend", "  return n == 0 and\
    \ 0 or n == 1 and 1 or fib(n - 1) + fib(n - 2)\nend", "  if n < 2 then\n    return\
    \ n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 1\n    else\n      \
    \  return fib(n - 1) + fib(n - 2)\n    end\nend", "    assert(n >= 0, \"Fibonacci\
    \ numbers are only defined for non-negative values.\")\n    return fibs[n]\nend",
  "    local a, b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n =\
    \ n - 1\n    end\n    return a\nend", "  if n < 2 then\n    return n\n  else\n\
    \    return fib(n - 2) + fib(n - 1)\n  end\nend", "    local a, b = 0, 1\n   \
    \ for i = 1, n do\n        a, b = b, a + b\n    end\n    return a\nend", "\tif\
    \ n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\t\
    return fib(n - 1) + fib(n - 2)\n\tend\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "    if n < 2 then\n        return n\n   \
    \ else\n        return fib(n - 2) + fib(n - 1)\n    end\nend", "    if n < 2 then\n\
    \        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\n\
    end", "  if n <= 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  local a, b = 0, 1\n  local i = 1\n  while i <= n do\n    a, b\
    \ = b, a + b\n    i = i + 1\n  end\n  return a\nend", "\tlocal a, b = 0, 1\n\t\
    for i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend", "\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend", "    local _0, _1 = 0, 1\n    for i = 2, n do\n \
    \       _0, _1 = _1, _0 + _1\n    end\n    return _1\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 1\n    else\n      \
    \  return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n < 0 then return nil\
    \ end\n  if n < 2 then return n end\n  return fib(n-1) + fib(n-2)\nend", "  if\
    \ n < 2 then\n    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\n\
    end", "  if n < 2 then\n    return n\n  else\n    return fib(n - 2) + fib(n -\
    \ 1)\n  end\nend", "\treturn (n > 2) and (fib(n-1) + fib(n-2)) or 1\nend", " \
    \   return (n <= 2) and 1 or fib(n - 1) + fib(n - 2)\nend", "    if n <= 2 then\n\
    \        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\n\
    end", "    local fibo = {0, 1}\n    for i = 3, n + 1 do\n        fibo[i] = fibo[i\
    \ - 1] + fibo[i - 2]\n    end\n    return fibo[n + 1]\nend", "  if n < 2 then\n\
    \    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend", "    return\
    \ (n < 2) and n or fib(n - 1) + fib(n - 2)\nend", "  if n < 2 then\n    return\
    \ n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend", "    local a, b\
    \ = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n = n - 1\n   \
    \ end\n    return a\nend", "  if n <= 1 then\n    return n\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "    return (n <= 2) and 1 or fib(n -\
    \ 1) + fib(n - 2)\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if\
    \ n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "    local a, b = 0, 1\n    for i = 1,\
    \ n do\n        a, b = b, a + b\n    end\n    return a\nend", "  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "\tif\
    \ n < 2 then\n\t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\n\
    end", "    local cur, nxt = 0, 1\n    for i = 1, n do\n        cur, nxt = nxt,\
    \ cur + nxt\n    end\n    return cur\nend", "    if n <= 1 then\n        return\
    \ n\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "    if\
    \ n < 0 then\n        return nil\n    elseif n < 2 then\n        return n\n  \
    \  else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  if n <=\
    \ 2 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "\t\
    if n < 2 then\n\t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\n\
    end", "  if n < 0 then\n    return fib(-n)\n  elseif n == 0 then\n    return 0\n\
    \  elseif n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n\
    \  end\nend", "  local fib_table = {1, 1}\n  for i = 3, n do\n    fib_table[i]\
    \ = fib_table[i - 1] + fib_table[i - 2]\n  end\n  return fib_table[n]\nend", " \
    \   local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n    end\n\
    \    return a\nend", "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a\
    \ + b\n  end\n  return a\nend", "  if n == 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "  if n < 1 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n   \
    \ return fib(n - 1) + fib(n - 2)\n  end\nend", "    assert(n >= 0, \"n must be\
    \ >= 0\")\n    return fibs[n]\nend", "    if n == 0 then\n        return 0\n \
    \   elseif n == 1 then\n        return 1\n    else\n        return fib(n - 1)\
    \ + fib(n - 2)\n    end\nend", "  if n <= 1 then\n    return n\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "  if n <= 1 then\n    return n\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "    local a, b = 0, 1\n   \
    \ for i = 1, n do\n        a, b = b, a + b\n    end\n    return a\nend", "\tlocal\
    \ a, b = 0, 1\n\tfor i = 2, n do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend",
  "\tif n < 2 then\n\t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\n\
    end", "\tif n <= 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\
    \tend\nend", "    if n < 2 then\n        return n\n    else\n        return fib(n\
    \ - 2) + fib(n - 1)\n    end\nend", "  if n < 2 then\n    return n\n  else\n \
    \   return fib(n - 2) + fib(n - 1)\n  end\nend", "  if n < 2 then\n    return\
    \ n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend", "\tlocal a, b =\
    \ 0, 1\n\tfor i = 1, n - 1 do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend", " \
    \   if n < 2 then\n        return n\n    else\n        return fib(n - 2) + fib(n\
    \ - 1)\n    end\nend", "    if n <= 2 then\n        return 1\n    else\n     \
    \   return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n < 0 then\n    error(\"\
    negative argument\")\n  end\n  local a, b = 0, 1\n  for i = 1, n do\n    a, b\
    \ = b, a + b\n  end\n  return a\nend", "  if (n < 2) then\n    return n\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "\tif n < 2 then\n\t\treturn\
    \ n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend", "  if fibs[n] ==\
    \ nil then\n    fibs[n] = fib(n-1) + fib(n-2)\n  end\n  return fibs[n]\nend",
  "\tif n < 1 then\n\t\treturn nil\n\telseif n == 1 then\n\t\treturn 0\n\telseif n\
    \ == 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\n\
    end", "    return n < 2 and n or fib(n - 1) + fib(n - 2)\nend", "  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "\tif n <=\
    \ 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", "\t\
    return n<2 and n or fib(n-1)+fib(n-2)\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 1\n    else\n        return fib(n\
    \ - 1) + fib(n - 2)\n    end\nend", "\tlocal a, b = 0, 1\n\tfor i = 1, n do\n\t\
    \ta, b = b, a + b\n\tend\n\treturn a\nend", "    if n < 2 then\n        return\
    \ n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend", "  if n\
    \ < 2 then\n    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\n\
    end", "    if n < 0 then\n        return nil\n    elseif n == 0 then\n       \
    \ return 0\n    elseif n == 1 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "    if n < 2 then\n        return n\n\
    \    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend", "  local prev\
    \ = 0\n  local cur = 1\n  for i = 1, n do\n    local sum = prev + cur\n    prev\
    \ = cur\n    cur = sum\n  end\n  return cur\nend", "    local x, y = 0, 1\n  \
    \  while n > 0 do\n        x, y = y, x + y\n        n = n - 1\n    end\n    return\
    \ x\nend", "  local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n\
    \  return a\nend", "    local i = 2\n    local a, b = 1, 1\n    while i < n do\n\
    \        a, b = b, a + b\n        i = i + 1\n    end\n    return b\nend", "  if\
    \ n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif\
    \ n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\n\
    end", "    local f0, f1 = 0, 1\n    for i = 1, n do\n        f0, f1 = f1, f0 +\
    \ f1\n    end\n    return f0\nend", "\treturn (n<2) and n or fib(n-1)+fib(n-2)\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n\
    \ == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "    local prev, curr = 0, 1\n    for\
    \ i = 1, n do\n        prev, curr = curr, prev + curr\n    end\n    return curr\n\
    end", "    return (((1+math.sqrt(5))/2)^n - ((1-math.sqrt(5))/2)^n)/math.sqrt(5)\n\
    end", "  local last = 0\n  local current = 1\n  for i = 1, n do\n    last, current\
    \ = current, last + current\n  end\n  return current\nend", "\tif n == 0 then\n\
    \t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1)\
    \ + fib(n - 2)\n\tend\nend", "    if n == 0 then\n        return 0\n    elseif\
    \ n == 1 then\n        return 1\n    else\n        return fib(n - 1) + fib(n -\
    \ 2)\n    end\nend", "  if n == 0 then\n    return 0\n  elseif n == 1 then\n \
    \   return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n\
    \ < 2 then\n    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\n\
    end", "\tif n < 0 then return nil end\n\tif n == 0 then return 0 end\n\tif n ==\
    \ 1 then return 1 end\n\treturn fib(n-1) + fib(n-2)\nend", "    if n < 0 then\n\
    \        return 0\n    elseif n == 0 then\n        return 1\n    else\n      \
    \  return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n == 0 then\n\t\treturn\
    \ 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n\
    \ - 2)\n\tend\nend", "  if n < 0 then return error(\"Negative argument\") end\n\
    \  if n == 0 then return 0 end\n  if n == 1 then return 1 end\n  local x, y =\
    \ 0, 1\n  for i = 2, n do\n    x, y = y, x + y\n  end\n  return y\nend", "\tlocal\
    \ prev, curr = 0, 1\n\tfor i = 2, n do\n\t\tprev, curr = curr, prev + curr\n\t\
    end\n\treturn curr\nend", "    if n == 0 then\n        return 0\n    elseif n\
    \ == 1 then\n        return 1\n    else\n        return fib(n - 1) + fib(n - 2)\n\
    \    end\nend", "\tlocal f1, f2 = 0, 1\n\tfor i = 1, n do\n\t\tf1, f2 = f2, f1\
    \ + f2\n\tend\n\treturn f1\nend", "\tif n < 2 then\n\t\treturn n\n\telse\n\t\t\
    return fib(n - 1) + fib(n - 2)\n\tend\nend", "  if n == 0 then\n    return 0\n\
    \  elseif n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n\
    \  end\nend", "    if n < 2 then\n        return n\n    else\n        return fib(n\
    \ - 2) + fib(n - 1)\n    end\nend", "    return n < 2 and n or fib(n - 1) + fib(n\
    \ - 2)\nend", "\tassert(n > 0, \"Argument n needs to be > 0\")\n\tlocal a, b =\
    \ 0, 1\n\tfor i = 1, n - 1 do\n\t\ta, b = b, a + b\n\tend\n\treturn b\nend", "\t\
    local v1, v2, v3\n\tv1, v2 = 0, 1\n\tfor i = 3, n do\n\t\tv3 = v1 + v2\n\t\tv1\
    \ = v2\n\t\tv2 = v3\n\tend\n\treturn v2\nend", "\tif n < 2 then\n\t\treturn n\n\
    \telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend", "  local n1, n2 = 0,\
    \ 1\n  for i = 2, n do\n    n1, n2 = n2, n1 + n2\n  end\n  return n2\nend", " \
    \ if n < 2 then\n    return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\n\
    end", "  if n < 2 then\n    return n\n  else\n    return fib(n - 2) + fib(n -\
    \ 1)\n  end\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\t\
    return 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend", "  assert(n\
    \ >= 0)\n  local function fib_acc(a, b, n)\n    if n == 0 then return a\n    else\
    \ return fib_acc(b, a + b, n - 1)\n    end\n  end\n  return fib_acc(0, 1, n)\n\
    end", "\tlocal a, b = 0, 1\n\twhile n > 0 do\n\t\ta, b = b, a + b\n\t\tn = n -\
    \ 1\n\tend\n\treturn a\nend", "\tlocal f0, f1 = 0, 1\n\tfor i = 2, n do\n\t\t\
    f0, f1 = f1, f0 + f1\n\tend\n\treturn f1\nend", "  if n < 2 then\n    return n\n\
    \  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend", "    return ((n * PHI)\
    \ - (1 - PHI) ^ n) / math.sqrt(5)\nend", "  assert(n >= 0)\n  local a, b = 0,\
    \ 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", "    return\
    \ (n<2) and n or fib(n-1)+fib(n-2)\nend", "  if n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "    local a, b = 0, 1\n    for i = 1, n do\n        a, b = b, a + b\n \
    \   end\n    return a\nend", "    return ((math.sqrt(5) + 1) / 2) ^ n / math.sqrt(5)\
    \ + 0.5\nend", "\tif n < 2 then\n\t\treturn n\n\telse\n\t\treturn fib(n - 1) +\
    \ fib(n - 2)\n\tend\nend", "  local a, b = 0, 1\n  for i = 1, n do\n    a, b =\
    \ b, a + b\n  end\n  return a\nend", "  if n < 2 then\n    return n\n  else\n\
    \    return fib(n - 2) + fib(n - 1)\n  end\nend", "    if n == 0 then\n      \
    \  return 0\n    elseif n == 1 then\n        return 1\n    else\n        return\
    \ fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n == 0 then\n\t\treturn 0\n\t\
    elseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\
    \tend\nend", "  local a, b = 0, 1\n  for i = 2, n do\n    a, b = b, a + b\n  end\n\
    \  return b\nend", "    local a, b = 0, 1\n    for i = 1, n do\n        a, b =\
    \ b, a + b\n    end\n    return a\nend", "  local p, q = 0, 1\n  for i = 1, n\
    \ do\n    p, q = q, p + q\n  end\n  return p\nend", "    local f = 0\n    local\
    \ g = 1\n    for i = 0, n-1 do\n        g = g + f\n        f = g - f\n    end\n\
    \    return f\nend", "    if n < 2 then\n        return n\n    else\n        return\
    \ fib(n - 2) + fib(n - 1)\n    end\nend", "  if n <= 2 then\n    return 1\n  else\n\
    \    return fib(n-1) + fib(n-2)\n  end\nend", "    if n < 2 then\n        return\
    \ n\n    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend", "\tif n\
    \ == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn\
    \ fib(n - 1) + fib(n - 2)\n\tend\nend", "  if n < 2 then\n    return n\n  else\n\
    \    return fib(n - 2) + fib(n - 1)\n  end\nend", "  if n == 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n\
    \ - 2)\n  end\nend", "    if n < 2 then\n        return n\n    else\n        return\
    \ fib(n - 2) + fib(n - 1)\n    end\nend", "    local a, b = 0, 1\n    for i =\
    \ 1, n do\n        a, b = b, a + b\n    end\n    return a\nend", "    local prev,\
    \ curr = 0, 1\n    for i = 1, n do\n        prev, curr = curr, prev + curr\n \
    \   end\n    return curr\nend", "  if n == 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "    local a, b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n        n =\
    \ n - 1\n    end\n    return a\nend", "  if n < 2 then\n    return n\n  else\n\
    \    return fib(n - 2) + fib(n - 1)\n  end\nend", "\tif not n then return end\n\
    \tlocal a, b = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\n\
    end", "\tlocal a, b = 0, 1\n\twhile n > 0 do\n\t\ta, b = b, a + b\n\t\tn = n -\
    \ 1\n\tend\n\treturn a\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1\
    \ then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend",
  "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn 1\n\telse\n\t\t\
    return fib(n - 1) + fib(n - 2)\n\tend\nend", "\tlocal t = { 0, 1 }\n\tfor i =\
    \ 3, n do\n\t\tt[i] = t[i - 1] + t[i - 2]\n\tend\n\treturn t[n]\nend", "    return\
    \ n < 2 and n or fib(n - 1) + fib(n - 2)\nend", "\tif n < 1 then\n\t\treturn 0\n\
    \telseif n == 1 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\
    \tend\nend", "    if n < 2 then\n        return n\n    else\n        return fib(n\
    \ - 2) + fib(n - 1)\n    end\nend", "  if fibs[n] then\n    return fibs[n]\n \
    \ end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 2 then\n    return 1\n\
    \  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  local f = {0, 1}\n  for\
    \ i = 3, n do\n    f[i] = f[i - 1] + f[i - 2]\n  end\n  return f[n]\nend", "\t\
    local a, b = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\n\
    end", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n        return\
    \ 1\n    else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "\treturn\
    \ (n < 2) and n or fib(n - 1) + fib(n - 2)\nend", "\tif (n == 0) then\n\t\treturn\
    \ 0\n\telseif (n == 1) then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n\
    \ - 2)\n\tend\nend", "    if n <= 1 then\n        return n\n    else\n       \
    \ return fib(n - 1) + fib(n - 2)\n    end\nend", "\tif n < 1 then\n\t\treturn\
    \ nil\n\telseif n <= 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n\
    \ - 2)\n\tend\nend", "\tif n <= 2 then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1)\
    \ + fib(n-2)\n\tend\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\
    \t\treturn 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend", "  if n\
    \ < 0 then\n    return nil\n  elseif n < 2 then\n    return n\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "  local m = n % 3\n  if m == 0 then return\
    \ 0 end\n  if m == 1 then return 1 end\n  return 2\nend", "  if n <= 2 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "\tif n <\
    \ 2 then\n\t\treturn n\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend",
  "    local p,q = 0,1\n    for i=1,n do\n        p,q = q,p+q\n    end\n    return\
    \ p\nend", "    local a, b = 0, 1\n    while n > 0 do\n        a, b = b, a + b\n\
    \        n = n - 1\n    end\n    return a\nend", "\tlocal a, b = 0, 1\n\tfor i\
    \ = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\nend", "  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  local a, b = 0, 1\n  while n > 0 do\n    a,\
    \ b = b, a + b\n    n = n - 1\n  end\n  return a\nend", "  if n < 2 then\n   \
    \ return n\n  else\n    return fib(n - 2) + fib(n - 1)\n  end\nend", "    if n\
    \ < 2 then\n        return n\n    else\n        return fib(n - 2) + fib(n - 1)\n\
    \    end\nend", "  if n < 2 then\n    return n\n  else\n    return fib(n - 2)\
    \ + fib(n - 1)\n  end\nend", "  return n == 0 and 0 or n == 1 and 1 or fib(n -\
    \ 1) + fib(n - 2)\nend", "  local a, b = 0, 1\n  for i = 2, n do\n    a, b = b,\
    \ a + b\n  end\n  return b\nend", "    if (n <= 1) then\n        return n\n  \
    \  else\n        return fib(n - 1) + fib(n - 2)\n    end\nend", "  if n == 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "    return (n < 2) and n or fib(n - 1) + fib(n\
    \ - 2)\nend", "\tif n == 0 then\n\t\treturn 0\n\telseif n == 1 then\n\t\treturn\
    \ 1\n\telse\n\t\treturn fib(n - 1) + fib(n - 2)\n\tend\nend", "    if n == 0 then\n\
    \        return 0\n    elseif n == 1 then\n        return 1\n    else\n      \
    \  return fib(n - 1) + fib(n - 2)\n    end\nend", "    local a, b = 0, 1\n   \
    \ for i = 2, n do\n        a, b = b, a + b\n    end\n    return b\nend", "  local\
    \ a, b = 0, 1\n  while n > 0 do\n    a, b = b, a + b\n    n = n - 1\n  end\n \
    \ return a\nend", "  return fibs[n]\nend", "    local a, b = 0, 1\n    while n\
    \ > 0 do\n        a, b = b, a + b\n        n = n - 1\n    end\n    return a\n\
    end", "    if n < 2 then\n        return n\n    else\n        return fib(n - 2)\
    \ + fib(n - 1)\n    end\nend", "\tif n <= 1 then\n\t\treturn n\n\telse\n\t\treturn\
    \ fib(n - 1) + fib(n - 2)\n\tend\nend", "    if n < 2 then\n        return n\n\
    \    else\n        return fib(n - 2) + fib(n - 1)\n    end\nend", "  local a,\
    \ b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\nend", "\t\
    local a, b = 0, 1\n\tfor i = 1, n do\n\t\ta, b = b, a + b\n\tend\n\treturn a\n\
    end", "  if n < 2 then\n    return n\n  else\n    return fib(n - 2) + fib(n -\
    \ 1)\n  end\nend", "\tif n < 2 then\n\t\treturn n\n\telse\n\t\treturn fib(n -\
    \ 1) + fib(n - 2)\n\tend\nend", "  local prev, curr = 0, 1\n  for i = 1, n do\n\
    \    prev, curr = curr, prev + curr\n  end\n  return curr\nend", "\tif n <= 2\
    \ then\n\t\treturn 1\n\telse\n\t\treturn fib(n-1) + fib(n-2)\n\tend\nend", " \
    \ local a, b = 0, 1\n  for i = 1, n do\n    a, b = b, a + b\n  end\n  return a\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"
